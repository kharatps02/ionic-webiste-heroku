webpackJsonp([0],{

/***/ 10:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoaderService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_toast__ = __webpack_require__(290);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_config__ = __webpack_require__(6);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var LoaderService = (function () {
    function LoaderService(loadingCtrl, platform, toast) {
        this.loadingCtrl = loadingCtrl;
        this.platform = platform;
        this.toast = toast;
        // console.log('Hello LoaderService Provider');
    }
    LoaderService.prototype.createLoader = function (message, duration) {
        if (duration === void 0) { duration = __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].LOADER_MESSAGE.DURATION; }
        this.loader = this.loadingCtrl.create({ content: message, duration: duration });
        this.loader.present();
    };
    LoaderService.prototype.dismissLoader = function () {
        if (this.loader) {
            this.loader.dismiss();
        }
    };
    LoaderService.prototype.showToaster = function (message, position) {
        if (this.platform.is('cordova')) {
            if (!position) {
                position = __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].TOASTER.POSITION_BOTTOM;
            }
            this.toast.show(message, __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].TOASTER.DURATION, position).subscribe(function (toast) {
                // console.log("Toast message", message);
            });
        }
    };
    return LoaderService;
}());
LoaderService = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* Injectable */])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["g" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Platform */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_toast__["a" /* Toast */]])
], LoaderService);

//# sourceMappingURL=loader-service.js.map

/***/ }),

/***/ 11:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnalyticsService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_analytics__ = __webpack_require__(301);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



// import { GoogleAnalytics } from 'ionic-native';
var AnalyticsService = (function () {
    function AnalyticsService(platform, ga) {
        this.platform = platform;
        this.ga = ga;
        this.isCordovaPlatform = false;
        // console.log('Hello AnalyticsService Provider');
        if (this.platform.is('cordova')) {
            this.isCordovaPlatform = true;
        }
    }
    AnalyticsService.prototype.startTracker = function (key) {
        // console.log('startTracker begin');
        this.ga.startTrackerWithId(key).then(function () {
            //console.log('Google analytics is ready now');
        });
    };
    AnalyticsService.prototype.addCustomDimension = function (userId) {
        if (this.ga && this.isCordovaPlatform) {
            // console.log("addCustomDimension", propertyManager);
            this.ga.addCustomDimension(1, userId).then(function () {
            }).catch(function (e) { return console.log('Error addCustomDimension GoogleAnalytics', e); });
        }
    };
    AnalyticsService.prototype.enableExceptionReporting = function (shouldEnable) {
        if (this.isCordovaPlatform) {
            this.ga.enableUncaughtExceptionReporting(shouldEnable);
        }
    };
    AnalyticsService.prototype.enableDebugMode = function () {
        if (this.isCordovaPlatform) {
            this.ga.debugMode();
        }
    };
    AnalyticsService.prototype.trackScreenView = function (title, campaignUrl) {
        if (this.isCordovaPlatform) {
            this.ga.trackView(title, campaignUrl).then(function () {
            }).catch(function (e) { return console.log('Error trackScreenView GoogleAnalytics', e); });
        }
    };
    AnalyticsService.prototype.trackMetric = function (key, value) {
        if (this.isCordovaPlatform) {
            this.ga.trackMetric(key, value).then(function () {
            }).catch(function (e) { return console.log('Error trackMetric GoogleAnalytics', e); });
        }
    };
    AnalyticsService.prototype.trackEvent = function (category, action, label, value) {
        if (this.isCordovaPlatform) {
            this.ga.trackEvent(category, action, label, value).then(function () {
            }).catch(function (e) { return console.log('Error trackEvent GoogleAnalytics', e); });
        }
    };
    AnalyticsService.prototype.setUserId = function (userId) {
        if (this.isCordovaPlatform) {
            this.ga.setUserId(userId).then(function () {
            }).catch(function (e) { return console.log('Error setUserId GoogleAnalytics', e); });
        }
    };
    AnalyticsService.prototype.setAllowIDFACollection = function (allow) {
        if (this.isCordovaPlatform) {
            this.ga.setAllowIDFACollection(allow).then(function () {
            }).catch(function (e) { return console.log('Error setAllowIDFACollection GoogleAnalytics', e); });
        }
    };
    return AnalyticsService;
}());
AnalyticsService = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* Injectable */])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Platform */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_analytics__["a" /* GoogleAnalytics */]])
], AnalyticsService);

//# sourceMappingURL=analytics-service.js.map

/***/ }),

/***/ 110:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Conversations; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_keyboard__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__conversations_new_message_new_message__ = __webpack_require__(338);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__public_profile_public_profile__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__conversations_chat_box_chat_box__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__base_conversations__ = __webpack_require__(828);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__housing_provider_options_housing_provider_options__ = __webpack_require__(458);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};















var Conversations = (function (_super) {
    __extends(Conversations, _super);
    function Conversations(navCtrl, userService, pubNubService, chatService, events, loadingCtrl, analyticsService, platform, loaderService, translateService, alertCtrl, keyboard) {
        var _this = _super.call(this, userService, pubNubService, translateService, chatService, loaderService) || this;
        _this.navCtrl = navCtrl;
        _this.userService = userService;
        _this.pubNubService = pubNubService;
        _this.chatService = chatService;
        _this.events = events;
        _this.loadingCtrl = loadingCtrl;
        _this.analyticsService = analyticsService;
        _this.platform = platform;
        _this.loaderService = loaderService;
        _this.translateService = translateService;
        _this.alertCtrl = alertCtrl;
        _this.keyboard = keyboard;
        _this.placeholderIamges = __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].PLACEHOLDER_IMAGES;
        _this.connectionStatus = __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS;
        _this.groupType = __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP;
        _this.zone = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["P" /* NgZone */]({ enableLongStackTrace: false });
        return _this;
    }
    Conversations.prototype.ngOnDestroy = function () {
        this.ionViewWillUnload();
    };
    Conversations.prototype.ngAfterViewInit = function () {
        // TODO - Need to move from here
        var elem = document.querySelector('.tabbar');
        elem.style.display = 'flex';
        // TODO - Need to move from here once Keyboard issue fixed 
        this.keyboard.close();
    };
    Conversations.prototype.ionViewDidEnter = function () {
        //console.log("Conversations ionViewDidEnter");
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].PAGES.CONVERSATION);
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].PAGES.CONVERSATION);
        this.content.resize();
    };
    Conversations.prototype.ionViewDidLoad = function () {
        //console.log("Conversations ionViewDidLoad");
        this.initUpdateConversationEvent();
        this.initSentConversationEvent();
        this.initPresenceEvent();
        this.initGroupCreatedEvent();
        this.initConversation();
        this.initUnBlockEvent();
        this.pubNubService.isConversationVist = true;
    };
    Conversations.prototype.ionViewWillUnload = function () {
        //console.log("Conversations - Looks like I'm about to ionViewWillUnload :(");
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].APP_EVENTS.UPDATE_CONVERSATION);
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].APP_EVENTS.SENT_MESSAGE);
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].APP_EVENTS.CONV_PRESENCE_EVENT);
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].APP_EVENTS.GROUP_CREATED);
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].APP_EVENTS.REFRESH_CONVERSATION);
    };
    Conversations.prototype.initConversation = function () {
        var showLoader = (this.userService.userObj.show_coach_marks.conversation) ? false : true;
        this.refreshConversation(this.refreshConversationDone, showLoader);
    };
    Conversations.prototype.initUpdateConversationEvent = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].APP_EVENTS.UPDATE_CONVERSATION, function (message, time) {
            // console.log('In UPDATE_CONVERSATION Event Type ', event[1]);
            var timetoken = null;
            if (time && message.is_group) {
                timetoken = time;
            }
            else {
                // console.log('Using message timetoken');
                timetoken = message.timetoken;
            }
            _this.updateConversations(message, timetoken);
        });
    };
    Conversations.prototype.initSentConversationEvent = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].APP_EVENTS.SENT_MESSAGE, function (event) {
            // console.log('In initSentConversationEvent SENT_MESSAGE Type ', event[0]);
            _this.updateSentConversations(event);
        });
    };
    Conversations.prototype.initGroupCreatedEvent = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].APP_EVENTS.GROUP_CREATED, function (event) {
            // console.log('Inside GROUP_CREATED subscribe>', event);
            var conversation = event;
            if (!_this.sharedChannelConversationIdMap[conversation.shared_channel]) {
                _this.conversations.push(conversation);
            }
            else {
                _this.sharedChannelConversationIdMap[conversation.shared_channel] = conversation;
                if (_this.sharedChannelIdConversationIndexMap[conversation.shared_channel] !== undefined) {
                    _this.conversations[_this.sharedChannelIdConversationIndexMap[conversation.shared_channel]].user_name = conversation.user_name;
                }
            }
            _this.sortConversation(_this.conversations, function (conversations) {
                _this.conversations = conversations;
            });
        });
    };
    Conversations.prototype.initUnBlockEvent = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].APP_EVENTS.REFRESH_CONVERSATION, function () {
            _this.refreshConversation(_this.refreshConversationDone, false);
        });
    };
    Conversations.prototype.initPresenceEvent = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].APP_EVENTS.CONV_PRESENCE_EVENT, function (presence) {
            //Set user online status.
            //let presenceObj = presence[0];
            //console.log('In subscribePresenceEvent[ action - ' + presence.action + ']', presence);
            _this.handlePresenceUpdate(presence);
            // If someone added you in group,someone accepted user invitation  
            _this.handleStateupdate(presence);
        });
    };
    Conversations.prototype.handleStateupdate = function (presenceObj) {
        if (presenceObj.action == 'state-change' && presenceObj.state !== undefined && presenceObj.channel === this.userService.userObj.user_id) {
            var showLoader = this.userService.getCurrentPage().currentPage === __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].PAGES.CONVERSATION && !this.userService.userObj.show_coach_marks.conversation;
            switch (presenceObj.state.action) {
                case __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].USER_STATES.GROUP_ADD:
                case __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].USER_STATES.GROUP_REMOVE:
                case __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].USER_STATES.GROUP_RENAME:
                case __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].USER_STATES.VERIFICATION_REQUEST:
                case __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].USER_STATES.VERIFICATION_CANCEL: {
                    this.refreshConversation(this.refreshConversationDone, showLoader);
                    break;
                }
                case __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].USER_STATES.CONNECTION_STATUS_CHANGED: {
                    this.handleConnectionStatusUpdate(presenceObj);
                    break;
                }
            }
        }
    };
    Conversations.prototype.handleConnectionStatusUpdate = function (presenceObj) {
        var showLoader = this.userService.getCurrentPage().currentPage === __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].PAGES.CONVERSATION && !this.userService.userObj.show_coach_marks.conversation;
        switch (presenceObj.state.connection_status) {
            case __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.INVITED:
            case __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.IGNORE: {
                this.refreshConversation(this.refreshConversationDone, showLoader);
                break;
            }
            case __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED: {
                if (presenceObj.state.connection_action &&
                    (presenceObj.state.connection_action === __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.BLOCKED ||
                        presenceObj.state.connection_action === __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.UNBLOCKED)) {
                    this.updateConnectionStatus(presenceObj.uuid, presenceObj.state.connection_status);
                }
                else {
                    this.refreshConversation(this.refreshConversationDone, showLoader);
                }
                break;
            }
            case __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED_BLOCKED: {
                //Just update the status to connected blocked 
                this.updateConnectionStatus(presenceObj.uuid, presenceObj.state.connection_status);
                break;
            }
        }
    };
    Conversations.prototype.updateConnectionStatus = function (userId, connectionStatus) {
        this.conversations.map(function (conversation, index) {
            if (userId === conversation.user_id) {
                conversation.connection_status = connectionStatus;
            }
        });
    };
    Conversations.prototype.handlePresenceUpdate = function (presenceObj) {
        if (this.conversations !== undefined) {
            this.conversations.map(function (conversation, index) {
                // if (presenceObj.uuid === conversation.user_id && presenceObj.state != undefined) {
                //   conversation.isTyping = presenceObj.state.isTyping;
                //   // // console.log("Typing status changed ", conversation.isTyping);
                // }
                if (presenceObj.uuid === conversation.user_id && presenceObj.actualChannel === conversation.user_id + "present-pnpres") {
                    if (presenceObj.action == "join") {
                        conversation.presence = "online";
                    }
                    else if (presenceObj.action == "leave") {
                        conversation.presence = "";
                    }
                }
            });
        }
    };
    Conversations.prototype.doRefreshConversation = function (refresher) {
        var _this = this;
        // console.log('In doRefreshConversation');
        this.refreshConversation(function () {
            refresher.complete();
            _this.updateSubscribeChannels();
            _this.refreshConversationDone();
        });
    };
    Conversations.prototype.openConversation = function (user) {
        //console.log("In openConversation User object is ", user);
        user.badgeCount = 0;
        if (user.connection_status === __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.INVITATION_RECEIVED) {
            this.viewInvite(user);
        }
        else if (user.connection_status === __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED || user.connection_status === __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED_BLOCKED || user.connection_status === __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.INVITED) {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__conversations_chat_box_chat_box__["a" /* ChatBox */], { user: user });
        }
    };
    Conversations.prototype.navigateToNewMessagePage = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__conversations_new_message_new_message__["a" /* NewMessage */]);
    };
    Conversations.prototype.viewInvite = function (user) {
        if (user.group_type !== __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].GROUP_TYPE.HOUSING_PROVIDER) {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__public_profile_public_profile__["a" /* PublicProfile */], { user: user });
        }
        else {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_14__housing_provider_options_housing_provider_options__["a" /* HousingProviderOptions */], { user: user });
        }
    };
    Conversations.prototype.leaveGroup = function (conversation, slidingItem) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: this.translateService.instant('CONVERSATIONS.LEAVE_GROUP'),
            buttons: [{
                    text: this.translateService.instant('CONVERSATIONS.OK'),
                    handler: function () {
                        slidingItem.close();
                        _this.exitGroup(conversation);
                        alert.dismiss();
                        return false;
                    }
                },
                {
                    text: this.translateService.instant('CONVERSATIONS.CANCEL'),
                    role: 'cancel',
                    handler: function () {
                        slidingItem.close();
                    }
                }],
            enableBackdropDismiss: false
        });
        alert.present();
    };
    Conversations.prototype.deleteConversation = function (conversation, slidingItem, position) {
        var that = this;
        var alert = that.alertCtrl.create({
            title: this.translateService.instant('CONVERSATIONS.DELETE_GROUP'),
            buttons: [{
                    text: this.translateService.instant('CONVERSATIONS.OK'),
                    handler: function () {
                        slidingItem.close();
                        that.chatService.deleteGroupConversation(conversation.shared_channel, that.userService.userObj.user_id).subscribe(function (response) {
                            //console.log("Success", response);
                            if (response.status !== 'ERROR') {
                            }
                        });
                        that.conversations.splice(position, 1);
                        alert.dismiss();
                        return false;
                    }
                },
                {
                    text: this.translateService.instant('CONVERSATIONS.CANCEL'),
                    role: 'cancel',
                    handler: function () {
                        slidingItem.close();
                    }
                }],
            enableBackdropDismiss: false
        });
        alert.present();
    };
    Conversations.prototype.archiveConversation = function (conversation, index) {
        var that = this;
        //Archive Conversation
        that.conversations[index].status = __WEBPACK_IMPORTED_MODULE_12__shared_config__["a" /* CONSTANTS */].CONVERSATION_STATUS.ARCHIVE;
        that.pubNubService.getTimeToken(function (pubnubtimetoken) {
            that.pubNubService.setConversationLastState(conversation.shared_channel, 0, pubnubtimetoken);
            that.updateConversationStatus(conversation);
        });
    };
    return Conversations;
}(__WEBPACK_IMPORTED_MODULE_6__base_conversations__["a" /* BaseConversations */]));
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
], Conversations.prototype, "content", void 0);
Conversations = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-conversations',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\conversations\conversations.html"*/'<ion-header labelHeader>\n\n    <ion-toolbar topHeader>\n\n        <ion-buttons start *ngIf="(userType !== usertypeConstant.HOUSING_PROVIDER && userType !== usertypeConstant.SERVICE_PROVIDER)">\n\n            <button ion-button (click)="navigateToNewMessagePage()">\n\n               <ion-icon class="icons-plus"></ion-icon>\n\n            </button>\n\n        </ion-buttons>\n\n        <ion-title>{{\'CONVERSATIONS.TITLE\' | translate}}</ion-title>\n\n    </ion-toolbar>\n\n</ion-header>\n\n\n\n<ion-content silvergrey-background>\n\n    <ion-refresher (ionRefresh)="doRefreshConversation($event)">\n\n            <ion-refresher-content pullingIcon="arrow-dropdown" pullingText="{{\'MISC.PULL\' | translate}}" refreshingSpinner="circles" refreshingText="{{\'MISC.REFRESH\' | translate}}">\n\n            </ion-refresher-content>\n\n        </ion-refresher>\n\n    <div *ngIf="conversations && conversations.length === 0 && isConversationsAPICall" class="conversation-message">\n\n        <h2>{{\'CONVERSATIONS.WELCOME\' | translate }} <br> {{\'CONVERSATIONS.YOUR_CONVERSATION\' | translate }} <span></span></h2>\n\n        <p class="no-records">{{\'ERROR_MESSAGES.NO_CONVERSATION\' | translate}} <br> {{\'ERROR_MESSAGES.NO_CONVERSATION_1\' | translate}} {{\'ERROR_MESSAGES.NO_CONVERSATION_2\' | translate}}</p>\n\n    </div>\n\n    <div>\n\n        <ion-list *ngFor="let conversation of conversations; let position = index">\n\n            <ion-item-sliding *ngIf="conversation.status !== \'archived\'" #slidingItem>\n\n                <button ion-item detail-none *ngIf="conversation.status !== \'archived\' && (conversation.type === groupType || conversation.connection_status === connectionStatus.CONNECTED\n\n                    || conversation.connection_status === connectionStatus.INVITATION_RECEIVED || conversation.connection_status === connectionStatus.CONNECTED_BLOCKED )" class="list-grid-136" (click)="openConversation(conversation)">\n\n                    <ion-avatar class="profile-img-44" item-start [ngClass]="{\'active\': conversation.type !==groupType && (conversation.connection_status === connectionStatus.CONNECTED || conversation.connection_status === connectionStatus.CONNECTED_BLOCKED ) && conversation.presence,\n\n                        \'de-active\': conversation.type !==groupType && (conversation.connection_status === connectionStatus.CONNECTED  || conversation.connection_status === connectionStatus.CONNECTED_BLOCKED ) && !conversation.presence}">\n\n                        <lazy-img  *ngIf="conversation.profile_pic" [inputSrc]="conversation.profile_pic" alt="" ></lazy-img>\n\n                        <lazy-img  *ngIf="!conversation.profile_pic" [inputSrc]="placeholderIamges.PROFILE_PIC" alt=""></lazy-img>\n\n                    </ion-avatar>\n\n\n\n                    <h2 *ngIf="conversation.user_name"><span class="text12px-black">{{conversation.user_name}} </span>\n\n                        <span *ngIf="conversation.latestMessageTimestamp" class="date-time-view">{{conversation.latestMessageTimestamp}}</span>\n\n                    </h2>\n\n                    <ion-chip *ngIf="conversation.type === groupType || conversation.connection_status === connectionStatus.CONNECTED || conversation.connection_status === connectionStatus.CONNECTED_BLOCKED">\n\n                        <p *ngIf="conversation.latestMessage && !conversation.isTyping" class="sendmsg">{{conversation.latestMessage}}\n\n                        </p>\n\n                        <p class="isType" *ngIf="conversation.isTyping"><cite>{{\'CONVERSATIONS.IS_TYPING\' | translate}}</cite></p>\n\n                        <ion-badge item-right *ngIf="conversation.badgeCount>0">{{conversation.badgeCount}}</ion-badge>\n\n                    </ion-chip>\n\n\n\n                    <ion-chip *ngIf="conversation.connection_status === connectionStatus.INVITATION_RECEIVED && conversation.group_type !== usertypeConstant.HOUSING_PROVIDER">\n\n                        <p class="invitation-msg">{{\'CONVERSATIONS.INVITE_CONNECT\' | translate}}</p>\n\n                    </ion-chip>\n\n                </button>\n\n\n\n                <ion-item-options side="right">\n\n                    <button *ngIf="(conversation.type !== groupType || conversation.group_type === \'service_provider\' || conversation.group_type === \'housing_provider\' ) && (conversation.connection_status === connectionStatus.CONNECTED || conversation.connection_status === connectionStatus.CONNECTED_BLOCKED)" ion-button color="danger" (click)="archiveConversation(conversation,position)"><ion-icon class="icons-archive"></ion-icon> {{\'CONVERSATIONS.ARCHIVE\' | translate}}</button>\n\n                    <button *ngIf="conversation.type === groupType && conversation.group_type === \'normal\' && conversation.leaving_time_token == null" ion-button color="danger" (click)="leaveGroup(conversation,slidingItem)"><ion-icon class="icons-sign-out"></ion-icon>{{ \'CONVERSATIONS.LEAVE\' | translate}}</button>\n\n                    <button *ngIf="conversation.type === groupType && conversation.group_type === \'normal\' && conversation.leaving_time_token > 0" ion-button color="danger" (click)="deleteConversation(conversation,slidingItem,position)"><ion-icon class="icons-delete"></ion-icon> {{ \'CONVERSATIONS.DELETE\' | translate}}</button>\n\n                </ion-item-options>\n\n            </ion-item-sliding>\n\n        </ion-list>\n\n    </div>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\conversations\conversations.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_7__providers_user_service__["a" /* UserService */],
        __WEBPACK_IMPORTED_MODULE_8__providers_pubnub_service__["a" /* PubNubService */], __WEBPACK_IMPORTED_MODULE_9__chat_service__["a" /* ChatService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["g" /* LoadingController */],
        __WEBPACK_IMPORTED_MODULE_10__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Platform */], __WEBPACK_IMPORTED_MODULE_11__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_13__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_keyboard__["a" /* Keyboard */]])
], Conversations);

//# sourceMappingURL=conversations.js.map

/***/ }),

/***/ 111:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PublicProfile; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__chat_box_chat_box__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__connection_list__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var PublicProfile = PublicProfile_1 = (function () {
    function PublicProfile(navCtrl, navParams, userService, chatService, loaderService, pubNubService, translateService, analyticsService, events, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.userService = userService;
        this.chatService = chatService;
        this.loaderService = loaderService;
        this.pubNubService = pubNubService;
        this.translateService = translateService;
        this.analyticsService = analyticsService;
        this.events = events;
        this.alertCtrl = alertCtrl;
        this.connectionStatus = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS;
        this.usertype = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_TYPE;
        this.connectionList = new __WEBPACK_IMPORTED_MODULE_4__connection_list__["a" /* ConnectionList */](chatService, pubNubService, translateService, loaderService);
        this.userData = this.userService.getUser();
        this.selectedUser = this.navParams.get('user');
        this.groupDetails = this.navParams.get('groupDetails');
        this.memberIndex = this.navParams.get('memberIndex');
        if (this.groupDetails) {
            this.groupChannel = this.groupDetails.shared_channel;
            this.groupName = this.groupDetails.name;
            this.groupOwner = this.groupDetails.created_by;
            this.selectedUser.receiver_id = this.selectedUser.user_id;
        }
        //console.log('In ViewInvite this.selectedUser ', this.selectedUser);
    }
    PublicProfile.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].PAGES.PUBLIC_PROFILE);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].PAGES.PUBLIC_PROFILE);
    };
    PublicProfile.prototype.onAcceptAndconnect = function () {
        var _this = this;
        this.updateConnectionStatus(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED, function () {
            _this.pubNubService.getTimeToken(function (pubnubtimestoken) {
                // Update Joining date as accepted date
                _this.selectedUser.joining_time_token = pubnubtimestoken;
                _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__chat_box_chat_box__["a" /* ChatBox */], { user: _this.selectedUser }).then(function () {
                    _this.navCtrl.remove((_this.navCtrl.length() - 2), 1);
                    _this.selectedUser.connection_status = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED;
                    _this.events.publish(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].APP_EVENTS.REFRESH_CONVERSATION);
                    var stateObj = {
                        _id: _this.selectedUser.shared_channel,
                        name: _this.selectedUser.user_name,
                        connection_status: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED,
                        action: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_STATES.CONNECTION_STATUS_CHANGED,
                        connection_type: _this.selectedUser.type
                    };
                    _this.pubNubService.setConnectionStatusChangeState(stateObj, [_this.selectedUser.receiver_id]);
                });
            });
        });
    };
    PublicProfile.prototype.onIgnoreClick = function () {
        var _this = this;
        //console.log('In onIgnoreClick');
        this.updateConnectionStatus(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.IGNORE, function () {
            _this.events.publish(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].APP_EVENTS.REFRESH_CONVERSATION);
            _this.selectedUser.connection_status = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.IGNORE;
            var stateObj = {
                _id: _this.selectedUser.shared_channel,
                name: _this.selectedUser.user_name,
                connection_status: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.IGNORE,
                action: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_STATES.CONNECTION_STATUS_CHANGED
            };
            _this.pubNubService.setConnectionStatusChangeState(stateObj, [_this.selectedUser.receiver_id]);
            _this.events.publish(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].APP_EVENTS.REFRESH_GROUP_DETAILS);
            _this.navCtrl.pop();
        });
    };
    PublicProfile.prototype.onBlockClick = function () {
        var _this = this;
        //console.log('In onBlockClick');
        var that = this;
        if (that.selectedUser.user_type && that.selectedUser.user_type === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_TYPE.ADMIN) {
            that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.ADMIN_BLOCK'));
        }
        else {
            that.updateConnectionStatus(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.BLOCKED, function () {
                var receiver_uuid;
                that.events.publish(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].APP_EVENTS.REFRESH_CONVERSATION);
                var alert = that.alertCtrl.create({
                    title: that.translateService.instant('ERROR_MESSAGES.BLOCK_SUCCESS'),
                    buttons: [{
                            text: _this.translateService.instant('CONVERSATIONS.OK'),
                            handler: function () {
                                if (that.memberIndex !== undefined) {
                                    receiver_uuid = that.selectedUser.user_id;
                                    that.navCtrl.pop();
                                    that.events.publish(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].APP_EVENTS.REFRESH_GROUP_DETAILS);
                                }
                                else {
                                    receiver_uuid = that.selectedUser.receiver_id;
                                    that.navCtrl.remove(1, (that.navCtrl.length() - 1));
                                }
                                that.selectedUser.connection_status = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.BLOCKED;
                                var stateObj = {
                                    _id: that.selectedUser.shared_channel,
                                    name: that.selectedUser.user_name,
                                    connection_status: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED_BLOCKED,
                                    action: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_STATES.CONNECTION_STATUS_CHANGED,
                                    connection_action: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.BLOCKED
                                };
                                that.pubNubService.setConnectionStatusChangeState(stateObj, [receiver_uuid]);
                                alert.dismiss();
                                return false;
                            }
                        }],
                    enableBackdropDismiss: false,
                    cssClass: 'alert-single'
                });
                alert.present();
            });
        }
    };
    PublicProfile.prototype.inviteOrCancelInvite = function (conversation, hasCalledFromNewMessage, callback) {
        if (hasCalledFromNewMessage === void 0) { hasCalledFromNewMessage = false; }
        if (conversation.connection_status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.NOT_CONNECTED) {
            this.sendInvite(conversation, hasCalledFromNewMessage);
        }
        else if (conversation.connection_status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.INVITED) {
            this.cancelInvite(conversation, hasCalledFromNewMessage, callback);
        }
    };
    PublicProfile.prototype.viewSentInvite = function (conversation) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__chat_box_chat_box__["a" /* ChatBox */], { user: conversation });
    };
    PublicProfile.prototype.cancelInvite = function (conversation, hasCalledFromNewMessage, callback) {
        var _this = this;
        //console.log('cancelInvite', conversation);
        var params = {
            user_id: this.userData.user_id,
            shared_channel: conversation.shared_channel,
            connection_status: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.IGNORE,
            receiver_id: conversation.receiver_id,
            receiver_username: conversation.user_name,
            is_advocate: conversation.is_advocate
        };
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.chatService.updateConnectionStatus(params).subscribe(function (result) {
            _this.loaderService.dismissLoader();
            if (result.status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                conversation.connection_status = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.NOT_CONNECTED;
                var stateObj = {
                    _id: conversation.shared_channel,
                    name: conversation.user_name,
                    connection_status: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.IGNORE,
                    action: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_STATES.CONNECTION_STATUS_CHANGED
                };
                _this.pubNubService.setConnectionStatusChangeState(stateObj, [conversation.receiver_id]);
                if (!hasCalledFromNewMessage) {
                    _this.navCtrl.pop();
                }
                if (callback) {
                    callback();
                }
            }
            else {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            }
        });
    };
    PublicProfile.prototype.viewReceivedInvite = function (conversation) {
        this.navCtrl.push(PublicProfile_1, { user: conversation });
    };
    PublicProfile.prototype.sendInvite = function (conversation, hasCalledFromNewMessage) {
        var _this = this;
        this.pubNubService.getTimeToken(function (pubnubtimestoken) {
            var obj = {
                user_id: _this.userData.user_id,
                created_by: _this.userData.user_id,
                receiver_id: conversation.receiver_id || conversation.user_id,
                receiver_username: conversation.user_name,
                joining_time_token: pubnubtimestoken
            };
            if (conversation.user_type !== __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_TYPE.RESIDENT) {
                obj['connection_status'] = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED;
            }
            _this.loaderService.createLoader(_this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
            _this.chatService.createOrEditConversation(obj).subscribe(function (result) {
                _this.loaderService.dismissLoader();
                if (result.status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS
                    && result.chat[0] && result.chat[0].shared_channel) {
                    conversation.shared_channel = result.chat[0].shared_channel;
                    if (conversation.user_type === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_TYPE.RESIDENT) {
                        conversation.connection_status = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.INVITED;
                        conversation.joining_time_token = pubnubtimestoken;
                        //  Share invite state and push notification to recevier only if receiver is not blocked. 
                        if (!result.is_blocked) {
                            var stateObj = {
                                _id: result.chat[0].shared_channel,
                                name: _this.userData.user_name,
                                connection_status: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.INVITED,
                                action: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_STATES.CONNECTION_STATUS_CHANGED
                            };
                            _this.pubNubService.setConnectionStatusChangeState(stateObj, [conversation.receiver_id]);
                            _this.chatService.getConversationExtraData({ shared_channel: result.chat[0].shared_channel }).subscribe(function (response) {
                                if (response.status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                                    Object.assign(conversation, { languages: response.languages });
                                    _this.sendPushNotificationToReceiver(conversation);
                                }
                            });
                        }
                        if (!hasCalledFromNewMessage) {
                            _this.navCtrl.pop();
                        }
                    }
                    else {
                        // If invited user is other then resident then open conversation directly.
                        conversation.connection_status = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED;
                        _this.pubNubService.getTimeToken(function (pubnubtimestoken) {
                            // Update Joining date as invitation sent date
                            conversation['joining_time_token'] = pubnubtimestoken;
                            _this.connectionList.updatePresenceStatus([conversation], function () {
                                _this.openChatBox(conversation);
                            });
                            _this.events.publish(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].APP_EVENTS.REFRESH_CONVERSATION);
                        });
                    }
                }
                else {
                    _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                }
            });
        });
    };
    PublicProfile.prototype.openChatBox = function (conversation) {
        var _this = this;
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__chat_box_chat_box__["a" /* ChatBox */], { user: conversation }).then(function () {
            _this.navCtrl.remove((_this.navCtrl.length() - 2), 1);
        });
    };
    PublicProfile.prototype.updateConnectionStatus = function (connectionStatus, callback) {
        var _this = this;
        var params = {
            user_id: this.userData.user_id,
            shared_channel: this.selectedUser.shared_channel,
            connection_status: connectionStatus,
            receiver_id: this.selectedUser.user_id,
            receiver_username: this.selectedUser.user_name,
            is_advocate: this.selectedUser.is_advocate
        };
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.chatService.updateConnectionStatus(params).subscribe(function (result) {
            //console.log('Inside updateConnectionStatus callback', result);
            _this.loaderService.dismissLoader();
            if (result.status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                if (callback) {
                    callback();
                }
            }
            else {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            }
        });
    };
    PublicProfile.prototype.onMessageClick = function () {
        var that = this;
        if (this.selectedUser.connection_status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED || this.selectedUser.connection_status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED_BLOCKED) {
            this.selectedUser.type = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.SINGLE;
            this.selectedUser.receiver_id = this.selectedUser.user_id;
            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
            that.navCtrl.remove(1, that.navCtrl.length() - 1, { animate: false, progressAnimation: false }).then(function () {
                that.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__chat_box_chat_box__["a" /* ChatBox */], { user: that.selectedUser }).then(function () {
                    that.loaderService.dismissLoader();
                });
            });
        }
        else {
            //console.log(CONSTANTS.ERROR_MESSAGES.UNINVITED_MESSAGE);
            this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.UNINVITED_MESSAGE'));
        }
    };
    PublicProfile.prototype.onRemoveClick = function (isLeave) {
        var _this = this;
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        var that = this;
        this.pubNubService.getTimeToken(function (pubnubtimetoken) {
            var removeRequest = {
                user_id: that.userData.user_id,
                shared_channel: that.groupChannel,
                name: that.groupName,
                member_id: that.selectedUser.user_id,
                leaving_time_token: pubnubtimetoken
            };
            that.chatService.removeMemberFromGroup(removeRequest).subscribe(function (result) {
                if (result.status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                    //console.log(pubnubtimetoken, '---', that.groupOwner, "--", that.userData.user_id, [that.selectedUser.user_id], that.groupChannel, that.groupName);
                    that.pubNubService.removeChannelFromGroup([that.selectedUser.user_id], that.groupChannel, that.groupName, pubnubtimetoken);
                    that.groupDetails.members.splice(that.memberIndex, 1);
                }
                else {
                    that.loaderService.showToaster(result.message);
                    that.loaderService.dismissLoader();
                }
                if (isLeave) {
                    that.navCtrl.remove(1, that.navCtrl.length() - 1);
                }
                else {
                    that.navCtrl.pop();
                }
            }, function (error) {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                _this.loaderService.dismissLoader();
            });
            //this.pubNubService.removeChannelFromGroup([this.selectedUser._id], this.group_channel,this.group_name, timestamp); 
        });
    };
    PublicProfile.prototype.onUnBlockClick = function () {
        var _this = this;
        var that = this;
        var params = {
            user_id: that.userData.user_id,
            shared_channel: that.selectedUser.shared_channel,
            connection_status: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.UNBLOCKED,
            receiver_id: that.selectedUser.user_id,
            receiver_username: that.selectedUser.user_name,
            is_advocate: that.selectedUser.is_advocate
        };
        that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        that.chatService.updateConnectionStatus(params).subscribe(function (result) {
            if (result.status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                var alert_1 = that.alertCtrl.create({
                    title: that.translateService.instant('ERROR_MESSAGES.UNBLOCK_SUCCESS'),
                    buttons: [{
                            text: _this.translateService.instant('CONVERSATIONS.OK'),
                            handler: function () {
                                var stateObj = {
                                    _id: that.selectedUser.shared_channel,
                                    name: that.userData.profile.first_name,
                                    connection_status: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED,
                                    action: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_STATES.CONNECTION_STATUS_CHANGED,
                                    connection_action: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.UNBLOCKED
                                };
                                that.pubNubService.setConnectionStatusChangeState(stateObj, [that.selectedUser.user_id]);
                                that.navCtrl.pop();
                                that.events.publish(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].APP_EVENTS.REFRESH_CONVERSATION);
                                that.events.publish(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].APP_EVENTS.REFRESH_GROUP_DETAILS);
                                alert_1.dismiss();
                                return false;
                            }
                        }],
                    enableBackdropDismiss: false,
                    cssClass: 'alert-single'
                });
                alert_1.present();
            }
            else {
                that.loaderService.dismissLoader();
                that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            }
            that.loaderService.dismissLoader();
        });
    };
    PublicProfile.prototype.sendPushNotificationToReceiver = function (conversation) {
        var _this = this;
        var pushObj;
        pushObj = {
            title: this.userData.user_name + " " + __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].MESSAGES.SENT_INVITE_NOT_POSTFIX,
            message: '',
            sender: this.userData.user_name,
            receiver_uuid: conversation.receiver_id,
        };
        this.pubNubService.getSupportedLanguageMsg(pushObj.title, conversation.languages, false).subscribe(function (msgContent) {
            pushObj.title = _this.chatService.getMessageContent(msgContent, _this.chatService.getNotificationLang(conversation.languages));
            _this.pubNubService.sendPushNotification(pushObj);
        });
    };
    return PublicProfile;
}());
PublicProfile = PublicProfile_1 = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-public-profile',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\conversations\public-profile\public-profile.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{selectedUser.user_name}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n\n\n<ion-content silvergrey-background>\n\n    <div class="view-invite">\n\n        <ion-avatar>\n\n            <img *ngIf="!selectedUser.profile_pic" src="./assets/img/image-placeholder.jpg" alt="" />\n\n            <img *ngIf="selectedUser.profile_pic" [src]="selectedUser.profile_pic" alt="" />\n\n        </ion-avatar>\n\n    </div>\n\n    <!-- If Invitation profile page -->\n\n    <ion-list  *ngIf="(selectedUser.user_type !== usertype.HOUSING_PROVIDER && selectedUser.user_type !== usertype.SERVICE_PROVIDER &&\n\n                       this.userData.user_type !== usertype.HOUSING_PROVIDER && this.userData.user_type !== usertype.SERVICE_PROVIDER ) ||\n\n                      (this.userData.user_type === usertype.ADMIN)">\n\n        <button ion-item detail-none class="list-grid-120" *ngIf="(selectedUser.connection_status === connectionStatus.NOT_CONNECTED\n\n         || selectedUser.connection_status === connectionStatus.INVITED) && selectedUser.user_id !== userData.user_id" (click)="inviteOrCancelInvite(selectedUser)">\n\n            <h2 *ngIf="selectedUser.connection_status === connectionStatus.NOT_CONNECTED"><span class="text14px-black">{{\'CONVERSATIONS.PUBLIC_PROFILE.INVITE\' | translate}}</span></h2>\n\n            <h2 *ngIf="selectedUser.connection_status === connectionStatus.INVITED"><span class="text14px-black">{{\'CONVERSATIONS.PUBLIC_PROFILE.CANCEL_INVITE\' | translate}}</span></h2>\n\n            <ion-icon item-right *ngIf="selectedUser.connection_status === connectionStatus.NOT_CONNECTED" class="icons-add-people icon-24"></ion-icon>\n\n            <ion-icon item-right  *ngIf="selectedUser.connection_status === connectionStatus.INVITED" class="icons-close icon-24"></ion-icon>\n\n         </button>\n\n\n\n        <button ion-item detail-none class="list-grid-120" *ngIf="selectedUser.connection_status && selectedUser.connection_status === connectionStatus.INVITATION_RECEIVED \n\n         && selectedUser.user_id !== userData.user_id" (click)="onAcceptAndconnect()">\n\n            <h2><span class="text14px-black">{{\'CONVERSATIONS.PUBLIC_PROFILE.ACCEPT_CONNECT\' | translate}}</span></h2>\n\n            <ion-icon item-right class="icons-add-people icon-24"></ion-icon>\n\n        </button>\n\n\n\n        <button ion-item detail-none class="list-grid-120" *ngIf="selectedUser.connection_status && selectedUser.connection_status === connectionStatus.INVITATION_RECEIVED \n\n         && selectedUser.user_id !== userData.user_id" (click)="onIgnoreClick()">\n\n            <h2><span class="text14px-black">{{\'CONVERSATIONS.PUBLIC_PROFILE.IGNORE\' | translate}}</span></h2>\n\n            <ion-icon item-right class="icons-ignore icon-24"></ion-icon>\n\n        </button>\n\n\n\n        <button ion-item detail-none class="list-grid-120" *ngIf="!selectedUser.type && selectedUser.user_id !== userData.user_id && \n\n        (selectedUser.connection_status && selectedUser.connection_status !== connectionStatus.BLOCKED \n\n        && selectedUser.connection_status !== connectionStatus.INVITATION_RECEIVED \n\n        && selectedUser.connection_status !== connectionStatus.INVITED )" (click)="onMessageClick()">\n\n            <h2><span class="text14px-black">{{\'CONVERSATIONS.PUBLIC_PROFILE.PRIVATE_MSG\' | translate}}</span></h2>\n\n            <ion-icon item-right class="icons-conversion icon-24"></ion-icon>\n\n        </button>\n\n\n\n        <button ion-item detail-none class="list-grid-120" *ngIf="!selectedUser.type && selectedUser.user_id !== userData.user_id"\n\n            (click)="onRemoveClick(false)">\n\n            <h2><span class="text14px-black">{{\'CONVERSATIONS.PUBLIC_PROFILE.REMOVE_GRP\' | translate}}</span></h2>\n\n            <ion-icon item-right class="icons-sign-out icon-24"></ion-icon>\n\n        </button>\n\n\n\n        <button ion-item detail-none class="list-grid-120" *ngIf="!selectedUser.type && selectedUser.user_id === userData.user_id" (click)="onRemoveClick(true)">\n\n            <h2><span class="text14px-black">{{\'CONVERSATIONS.PUBLIC_PROFILE.LEAVE_GRP\' | translate}}</span></h2>\n\n            <ion-icon item-right class="icons-sign-out icon-24"></ion-icon>\n\n        </button>\n\n\n\n        <button ion-item detail-none class="list-grid-120" *ngIf="((selectedUser.connection_status && selectedUser.connection_status !== connectionStatus.BLOCKED )\n\n         || !selectedUser.connection_status) && selectedUser.user_id !== userData.user_id" (click)="onBlockClick()">\n\n            <h2><span class="text14px-black">{{\'CONVERSATIONS.PUBLIC_PROFILE.BLOCK\' | translate}}</span></h2>\n\n            <ion-icon item-right class="icons-block icon-24"></ion-icon>\n\n        </button>\n\n\n\n        <button ion-item detail-none class="list-grid-120" *ngIf="(selectedUser.connection_status && selectedUser.connection_status == connectionStatus.BLOCKED\n\n         && selectedUser.user_id !== userData.user_id)" (click)="onUnBlockClick()">\n\n            <h2><span class="text14px-black">{{\'CONVERSATIONS.PUBLIC_PROFILE.UNBLOCK\' | translate}}</span></h2>\n\n            <ion-icon item-right class="icons-block icon-24"></ion-icon>\n\n        </button>\n\n    </ion-list>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\conversations\public-profile\public-profile.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_user_service__["a" /* UserService */],
        __WEBPACK_IMPORTED_MODULE_5__chat_service__["a" /* ChatService */], __WEBPACK_IMPORTED_MODULE_7__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_6__providers_pubnub_service__["a" /* PubNubService */],
        __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
], PublicProfile);

var PublicProfile_1;
//# sourceMappingURL=public-profile.js.map

/***/ }),

/***/ 112:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ServiceRequestService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__providers_http_service__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_environment__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ServiceRequestService = (function () {
    function ServiceRequestService(http) {
        this.http = http;
        // This is fixed for all domains so have to update this when we add/remove types
        this.serviceRequestTypeClassMap = {
            "5859382a4cce7614b8b0bd66_39": "icons-appliances",
            "5859382a4cce7614b8b0bd66_42": "icons-commonarea",
            "5859382a4cce7614b8b0bd66_38": "icons-plug",
            "5859382a4cce7614b8b0bd66_43": "icons-general",
            "5859382a4cce7614b8b0bd66_40": "icons-thermometer",
            "5859382a4cce7614b8b0bd66_44": "icons-general",
            "5859382a4cce7614b8b0bd66_41": "icons-plumbing"
        };
        //console.log('Hello ServiceRequestService Provider');
    }
    ServiceRequestService.prototype.getServiceRequestTypes = function () {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/getservicerequesttypes';
        return this.http.post(url, {}).map(function (res) { return res.json(); });
    };
    ServiceRequestService.prototype.reportServiceRequest = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/incidents';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ServiceRequestService.prototype.getServiceRequestList = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/incidents/getuserservicerequests';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ServiceRequestService.prototype.getServiceRequestDetails = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/incidents/getservicerequestdetails';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ServiceRequestService.prototype.checkForResidences = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/servicelocations/checkforresidences';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ServiceRequestService.prototype.getIncidentDateString = function () {
        var date = new Date(), dateStr = '';
        dateStr = date.getFullYear() % 100 + '' + numberInTwoDigit(date.getMonth() + 1) + '' + numberInTwoDigit(date.getDate());
        function numberInTwoDigit(input) {
            var outputstr = (input < 10) ? 0 + '' + input : input;
            return outputstr;
        }
        return dateStr;
    };
    ServiceRequestService.prototype.createConversation = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/incidentconversations';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ServiceRequestService.prototype.saveMessage = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/incidentmessages';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    return ServiceRequestService;
}());
ServiceRequestService = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* Injectable */])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__providers_http_service__["a" /* HttpService */]])
], ServiceRequestService);

//# sourceMappingURL=service-request-service.js.map

/***/ }),

/***/ 176:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProviderDetails; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__verify_address_verify_address__ = __webpack_require__(335);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__housing_unit_housing_unit__ = __webpack_require__(178);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__discontinued_property_discontinued_property__ = __webpack_require__(336);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__provider_service__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var ProviderDetails = (function () {
    function ProviderDetails(loaderService, providerService, analyticsService, navCtrl, navParams, events, translateService, userService) {
        this.loaderService = loaderService;
        this.providerService = providerService;
        this.analyticsService = analyticsService;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.events = events;
        this.translateService = translateService;
        this.userService = userService;
        this.isClosed = false;
        this.isFollowing = false;
        this.isFavorite = false;
        this.showConnect = true;
        this.hoursOfOperationCount = 0;
        this.userType = __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].USER_TYPE;
        this.providerId = this.navParams.get('providerId');
        this.buildingId = this.navParams.get('buildingId');
        this.buildingAddress = this.navParams.get('buildingAddress');
        this.showConnect = this.navParams.get('showConnect');
        this.providerDetails = {
            _id: '',
            about: '',
            public_name: '',
            profile_pic: '',
            location_type: '',
            banners: null,
            location: null,
            hours_of_operation: null,
            service_interests: null,
            is_favorite: false,
            is_following: false,
            is_advocate: false,
            resident_unit: ''
        };
    }
    ProviderDetails.prototype.ionViewDidLoad = function () {
        //console.log('Hello ProviderDetails Page');
        if (this.providerId) {
            this.getProviderDetails(this.providerId);
        }
        this.initPresenceEvent();
    };
    ProviderDetails.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].PAGES.PROVIDER_DETAIL);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].PAGES.PROVIDER_DETAIL, this.providerDetails.location_type);
    };
    ProviderDetails.prototype.ionViewWillUnload = function () {
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].APP_EVENTS.PROVIDER_PRESENCE_EVENT);
    };
    ProviderDetails.prototype.initPresenceEvent = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].APP_EVENTS.PROVIDER_PRESENCE_EVENT, function (presence) {
            if (presence.state.connection_action) {
                _this.handleProviderConnectionStatus(presence);
            }
        });
    };
    ProviderDetails.prototype.handleProviderConnectionStatus = function (presence) {
        if (presence.state.connection_action === __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED) {
            this.loaderService.showToaster(this.translateService.instant("ERROR_MESSAGES.VERIFY_ADDRESS_SUCCESS"));
            this.getProviderDetails(this.providerId);
            //console.log(this.translateService.instant("ERROR_MESSAGES.VERIFY_ADDRESS_SUCCESS"));
        }
        else if (presence.state.connection_action === __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.IGNORE) {
            this.loaderService.showToaster(this.translateService.instant("ERROR_MESSAGES.VERIFY_ADDRESS_DENY"));
            this.getProviderDetails(this.providerId);
            //console.log(this.translateService.instant("ERROR_MESSAGES.VERIFY_ADDRESS_DENY"));
        }
    };
    ProviderDetails.prototype.getProviderDetails = function (providerId) {
        var _this = this;
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.providerService.findPropertyById({ _id: providerId, user_id: this.userService.userObj.user_id, building_id: this.buildingId }).subscribe(function (response) {
            _this.loaderService.dismissLoader();
            if (response.status === __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                _this.providerDetails = response.property[0];
                //Set default value
                _this.isFavorite = _this.providerDetails.is_favorite || false;
                _this.isFollowing = _this.providerDetails.is_following || false;
                _this.updateWorkingStatus(_this.providerDetails);
            }
        }, function (error) {
            _this.loaderService.dismissLoader();
            _this.loaderService.showToaster(error);
        });
    };
    ProviderDetails.prototype.updateWorkingStatus = function (providerDetails) {
        var hours_of_operation = providerDetails.hours_of_operation;
        var today, weekday, currentDate, statDate, endDate;
        var start_time, start_hour, start_min, start_period;
        var end_time, end_hour, end_min, end_period;
        currentDate = new Date();
        statDate = new Date();
        endDate = new Date();
        weekday = ["SUNDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY"];
        today = weekday[currentDate.getDay()].toLowerCase();
        if (hours_of_operation && hours_of_operation[today] !== undefined) {
            start_time = hours_of_operation[today].start_time;
            start_hour = parseInt(start_time.substring(0, 2));
            start_min = start_time.substring(3, 5);
            start_period = start_time.substring(5, 7).toUpperCase();
            end_time = hours_of_operation[today].end_time;
            end_hour = parseInt(end_time.substring(0, 2));
            end_min = end_time.substring(3, 5);
            end_period = end_time.substring(5, 7).toUpperCase();
            if (start_period === 'PM') {
                start_hour += 12;
            }
            if (end_period === 'PM') {
                end_hour += 12;
            }
            statDate.setHours(start_hour);
            statDate.setMinutes(start_min);
            endDate.setHours(end_hour);
            endDate.setMinutes(end_min);
            if (statDate.getTime() <= currentDate.getTime() && currentDate.getTime() <= endDate.getTime()) {
                this.isClosed = false;
            }
            else {
                this.isClosed = true;
            }
            this.hoursOfOperationCount = Object.keys(this.providerDetails.hours_of_operation).length;
        }
    };
    ProviderDetails.prototype.addressVerification = function (isAdvocate) {
        // case 1 - Select Building 
        if (this.providerDetails.is_single_house_owner) {
            //case 2 - Single home 
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__verify_address_verify_address__["a" /* VerifyAddress */], { providerDetails: this.providerDetails, buildingId: this.buildingId, isAdvocate: isAdvocate, buildingAddress: this.buildingAddress });
        }
        else {
            //case 3 - sigle building / property multiple unit.          
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__housing_unit_housing_unit__["a" /* HousingUnit */], { buildingId: this.buildingId, providerDetails: this.providerDetails, units: this.providerDetails.units, isAdvocate: isAdvocate, buildingAddress: this.buildingAddress });
        }
    };
    ProviderDetails.prototype.toggleFollow = function (isFollowing) {
        var _this = this;
        var request = {
            user_id: this.userService.userObj.user_id,
            provider_location_id: this.providerDetails._id,
            is_following: !isFollowing,
            provider_name: this.providerDetails.public_name
        };
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.providerService.toggleFollowStatus(request).subscribe(function (response) {
            if (response.status === __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                _this.isFollowing = _this.providerDetails.is_following = !isFollowing;
            }
            else if (response.status === __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.ERROR) {
            }
            _this.loaderService.dismissLoader();
        });
    };
    ProviderDetails.prototype.toggleFavorite = function () {
        var _this = this;
        if (this.isFavorite !== this.providerDetails.is_favorite) {
            var request = {
                user_id: this.userService.userObj.user_id,
                provider_location_id: this.providerDetails._id,
                is_favorite: this.isFavorite,
                provider_name: this.providerDetails.public_name
            };
            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
            this.providerService.toggleFavoriteStatus(request).subscribe(function (response) {
                if (response.status === __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                }
                else if (response.status === __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.ERROR) {
                }
                _this.loaderService.dismissLoader();
            });
        }
    };
    ProviderDetails.prototype.discontinued = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__discontinued_property_discontinued_property__["a" /* DiscontinuedProperty */], { providerDetails: this.providerDetails, buildingId: this.buildingId, buildingAddress: this.buildingAddress });
    };
    return ProviderDetails;
}());
ProviderDetails = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-provider-details',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\provider-details\provider-details.html"*/'<ion-header labelHeader bg-transparant>\n\n    <ion-navbar [ngClass]="{\'status-pending\': providerDetails.verification_status === \'unverified\', \'status-verified\': providerDetails.verification_status === \'verified\'}">\n\n        <ion-title *ngIf="!providerDetails.verification_status  && providerDetails.public_name">{{providerDetails.public_name}}</ion-title>\n\n        <ion-title *ngIf="providerDetails.verification_status === \'verified\' && providerDetails.is_advocate === false">{{\'AROUND_ME.PROVIDER_DETAILS.TITLE_VERIFIED\' | translate}}</ion-title>\n\n        <ion-title *ngIf="providerDetails.verification_status === \'verified\' && providerDetails.is_advocate === true">{{\'AROUND_ME.PROVIDER_DETAILS.TITLE_RESIDENT_ADVOCATE\' | translate}}</ion-title>        \n\n        <ion-title *ngIf="providerDetails.verification_status === \'unverified\'">{{\'AROUND_ME.PROVIDER_DETAILS.TITLE_UNVERIFIED\' | translate}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n<!-- providerDetails.verification_status = undefined is default \n\n    providerDetails.verification_status = unverified - Address verification pending blue header - status-pending\n\n    providerDetails.verification_status = verified - You live here green header.  - status-verified\n\n-->\n\n\n\n<ion-content>\n\n    <div class="" [ngClass]="{\'live-bottom\' : !providerDetails.verification_status, \'dont-live-bottom\' : providerDetails.verification_status === \'unverified\' || providerDetails.verification_status === \'verified\'}">\n\n        <ion-slides *ngIf="providerDetails.banners" pager>\n\n            <ion-slide *ngFor="let banner of providerDetails.banners">\n\n                <img [src]="banner" alt="" />\n\n            </ion-slide>\n\n        </ion-slides>\n\n\n\n        <ion-card [ngClass]="{\'no-image-card\': (providerDetails.banners && providerDetails.banners.length === 0) || (!providerDetails.profile_pic || providerDetails.profile_pic ==\'\')}">\n\n            <ion-avatar *ngIf="providerDetails.profile_pic">\n\n                <img [src]="providerDetails.profile_pic" alt="" />\n\n            </ion-avatar>\n\n            <ion-card-title class="text30px-normal-grey" *ngIf="providerDetails.public_name">{{providerDetails.public_name}}</ion-card-title>\n\n\n\n            <ion-card-content class="text13px-thin-grey" *ngIf="providerDetails.location !== null">\n\n                <span *ngIf="providerDetails.location.street_address1">{{providerDetails.location.street_address1}}</span>\n\n            </ion-card-content>\n\n            <ion-col>\n\n                <button class="follow" *ngIf="!isFollowing" ion-button (click)=toggleFollow(isFollowing)>{{\'AROUND_ME.PROVIDER_DETAILS.FOLLOW_BTN\' | translate}}</button>\n\n                <button class="unfollow" *ngIf="isFollowing" ion-button (click)=toggleFollow(isFollowing)>{{\'AROUND_ME.PROVIDER_DETAILS.UNFOLLOW_BTN\' | translate}}</button>\n\n                <!--<ion-toggle class="follow" [(ngModel)]="isFollowing" (ionChange)=toggleFollow()></ion-toggle>-->\n\n                <ion-toggle class="favorite" [(ngModel)]="isFavorite" (ionChange)=toggleFavorite()></ion-toggle>\n\n            </ion-col>\n\n            <p *ngIf="providerDetails.about"> {{providerDetails.about}}</p>\n\n\n\n            <ion-card-header class="text10px-thin-grey" *ngIf="providerDetails.location_type === userType.SERVICE_PROVIDER && providerDetails.service_interests">{{\'AROUND_ME.PROVIDER_DETAILS.SERVICES\' | translate}}</ion-card-header>\n\n            <ion-grid *ngIf="providerDetails.location_type === userType.SERVICE_PROVIDER" class="row-list">\n\n                <ion-col col-6 *ngFor="let service of providerDetails.service_interests">\n\n                    <span *ngIf="service.name">{{service.name}}</span>\n\n                </ion-col>\n\n            </ion-grid>\n\n\n\n            <ion-card-header *ngIf="providerDetails.location_type === userType.SERVICE_PROVIDER && providerDetails.hours_of_operation!==null  && hoursOfOperationCount > 0"\n\n                class="working-status">\n\n                <span class="text10px-thin-grey">{{\'AROUND_ME.PROVIDER_DETAILS.HOURS\' | translate}}</span>\n\n                <span align-right class="text13px-normal-green" *ngIf="providerDetails.location_type === userType.SERVICE_PROVIDER && providerDetails.hours_of_operation!==null && !isClosed">{{\'AROUND_ME.WORKING_STATUS.OPEN_NOW\' | translate}}</span>\n\n                <span align-right class="text13px-normal-green red-text" *ngIf="providerDetails.location_type === userType.SERVICE_PROVIDER && providerDetails.hours_of_operation!==null && isClosed">{{\'AROUND_ME.WORKING_STATUS.CLOSED\' | translate}}</span>\n\n            </ion-card-header>\n\n\n\n\n\n\n\n            <div *ngIf="providerDetails.location_type && providerDetails.location_type.length == 0" class="message-no-data-found">\n\n                <p class="no-records">{{\'ERROR_MESSAGES.NO_DATA_FOUND\' | translate}}</p>\n\n            </div>\n\n            <ion-grid *ngIf="providerDetails.location_type === userType.SERVICE_PROVIDER && providerDetails.hours_of_operation!==null && hoursOfOperationCount > 0"\n\n                class="row-list">\n\n                <ion-col col-6 *ngIf="providerDetails.hours_of_operation.monday">\n\n                    <cite>{{\'DAYS_IN_SHORT.MONDAY\' | translate}}</cite> {{providerDetails.hours_of_operation.monday.start_time}}-{{providerDetails.hours_of_operation.monday.end_time}}\n\n                </ion-col>\n\n                <ion-col col-6 *ngIf="providerDetails.hours_of_operation.tuesday">\n\n                    <cite>{{\'DAYS_IN_SHORT.TUESDAY\' | translate}}</cite> {{providerDetails.hours_of_operation.tuesday.start_time}}-{{providerDetails.hours_of_operation.tuesday.end_time}}\n\n                </ion-col>\n\n                <ion-col col-6 *ngIf="providerDetails.hours_of_operation.wednesday">\n\n                    <cite>{{\'DAYS_IN_SHORT.WEDNESDAY\' | translate}}</cite> {{providerDetails.hours_of_operation.wednesday.start_time}}-{{providerDetails.hours_of_operation.wednesday.end_time}}\n\n                </ion-col>\n\n                <ion-col col-6 *ngIf="providerDetails.hours_of_operation.thursday">\n\n                    <cite>{{\'DAYS_IN_SHORT.THURSDAY\' | translate}}</cite> {{providerDetails.hours_of_operation.thursday.start_time}}-{{providerDetails.hours_of_operation.thursday.end_time}}\n\n                </ion-col>\n\n                <ion-col col-6 *ngIf="providerDetails.hours_of_operation.friday">\n\n                    <cite>{{\'DAYS_IN_SHORT.FRIDAY\' | translate}}</cite> {{providerDetails.hours_of_operation.friday.start_time}}-{{providerDetails.hours_of_operation.friday.end_time}}\n\n                </ion-col>\n\n                <ion-col col-6 *ngIf="providerDetails.hours_of_operation.saturday">\n\n                    <cite>{{\'DAYS_IN_SHORT.SATURDAY\' | translate}}</cite> {{providerDetails.hours_of_operation.saturday.start_time}}-{{providerDetails.hours_of_operation.saturday.end_time}}\n\n                </ion-col>\n\n                <ion-col col-6 *ngIf="providerDetails.hours_of_operation.sunday">\n\n                    <cite>{{\'DAYS_IN_SHORT.SUNDAY\' | translate}}</cite> {{providerDetails.hours_of_operation.sunday.start_time}}-{{providerDetails.hours_of_operation.sunday.end_time}}\n\n                </ion-col>\n\n            </ion-grid>\n\n        </ion-card>\n\n\n\n        <div class="absolute-bottom" *ngIf="providerDetails.location_type === \'housing_provider\' && this.showConnect !== false">\n\n            <button ion-button full class="button-square-grey" *ngIf="providerDetails.verification_status === \'unverified\' || providerDetails.verification_status === \'verified\'"\n\n                (click)="discontinued()">{{\'AROUND_ME.PROVIDER_DETAILS.DONT_LIVE\' | translate}}</button>\n\n            <button ion-button round full class="button-light-blue" *ngIf="!providerDetails.verification_status" (click)="addressVerification(false)">{{\'AROUND_ME.PROVIDER_DETAILS.LIVE\' | translate}}</button>\n\n            <button ion-button round full class="button-light-grey" *ngIf="!providerDetails.verification_status" (click)="addressVerification(true)">{{\'AROUND_ME.PROVIDER_DETAILS.RESIDENT_ADVOCATE\' | translate}}</button>\n\n        </div>\n\n    </div>\n\n</ion-content>\n\n<ion-footer class="quick-switch" footer-full>\n\n    <ion-toolbar>\n\n        <provider-options [providerDetails]=\'providerDetails\'></provider-options>\n\n    </ion-toolbar>\n\n</ion-footer>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\provider-details\provider-details.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_8__provider_service__["a" /* ProviderService */],
        __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_4__providers_user_service__["a" /* UserService */]])
], ProviderDetails);

//# sourceMappingURL=provider-details.js.map

/***/ }),

/***/ 177:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PendingConfirmation; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_config__ = __webpack_require__(6);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var PendingConfirmation = (function () {
    function PendingConfirmation(navCtrl, analyticsService, userService) {
        this.navCtrl = navCtrl;
        this.analyticsService = analyticsService;
        this.userService = userService;
        this.userService.isProfileUpdate = true;
    }
    PendingConfirmation.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].PAGES.PENDING_CONFIRMATION);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].PAGES.PENDING_CONFIRMATION);
    };
    PendingConfirmation.prototype.navigatetoNextPage = function () {
        var startIndex = this.navCtrl.getActive().index - 1;
        this.navCtrl.remove(startIndex, 2);
    };
    return PendingConfirmation;
}());
PendingConfirmation = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-pending-confirmation',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\pending-confirmation\pending-confirmation.html"*/'<ion-content grey-background side-padding>\n\n    <div class="confirmation-msg">\n\n        <div class="circle-icon-108 confirmation-icon">\n\n            <ion-icon class="icons-correct"></ion-icon>\n\n        </div>\n\n        <h2 class="text30px-bold-white">{{\'AROUND_ME.PENDING_CONFIRMATION.CONFIRMATION_MSG\' | translate}}<span splitter></span></h2>\n\n        <p class="text15px-normal-white">{{\'AROUND_ME.PENDING_CONFIRMATION.MSG\' | translate}}</p>\n\n    </div>\n\n    <div class="action-grid">\n\n        <button ion-button block round class="button-light-blue" (click)="navigatetoNextPage()">{{\'AROUND_ME.PENDING_CONFIRMATION.SEND_BUTTON\' | translate}}</button>\n\n    </div>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\pending-confirmation\pending-confirmation.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_3__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_2__providers_user_service__["a" /* UserService */]])
], PendingConfirmation);

//# sourceMappingURL=pending-confirmation.js.map

/***/ }),

/***/ 178:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HousingUnit; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pending_confirmation_pending_confirmation__ = __webpack_require__(177);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__conversations_chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__provider_service__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var HousingUnit = (function () {
    function HousingUnit(loaderService, navCtrl, navParams, chatService, providerService, translateService, userService, analyticsService, pubNubService) {
        this.loaderService = loaderService;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.chatService = chatService;
        this.providerService = providerService;
        this.translateService = translateService;
        this.userService = userService;
        this.analyticsService = analyticsService;
        this.pubNubService = pubNubService;
        this.buildingId = this.navParams.get('buildingId');
        this.buildingAddress = this.navParams.get('buildingAddress');
        this.providerDetails = this.navParams.get('providerDetails');
        this.unfilteredUnits = this.navParams.get('units');
        this.isAdvocate = this.navParams.get('isAdvocate') || false;
        this.buildingName = this.providerDetails.location.street_address1;
        this.userData = this.userService.getUser();
        //this.units = this.unfilteredUnits;
        this.unit = '';
        //console.log("HousingUnit", this.providerDetails);
    }
    HousingUnit.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].PAGES.HOUSING_UNIT);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].PAGES.HOUSING_UNIT);
    };
    HousingUnit.prototype.autoCompleteUnitSearch = function () {
        var _this = this;
        var unit = this.unit.trim();
        var units = [];
        if (unit && unit.length > 0 && this.unfilteredUnits !== undefined) {
            units = JSON.parse(JSON.stringify(this.unfilteredUnits));
            units = units.filter(function (unit) {
                return (unit.indexOf(_this.unit) !== -1);
            });
        }
        this.units = units.sort(this.sortAlphaNum);
        //this.units = units.sort();
        // console.log(this.unit);
        // console.log(this.units);
    };
    HousingUnit.prototype.onUnitSelect = function (unit) {
        this.unit = unit;
        this.units = [];
    };
    HousingUnit.prototype.sortAlphaNum = function (a, b) {
        var reA = '/[^a-zA-Z]/g';
        var reN = '/[^0-9]/g';
        var AInt = parseInt(a, 10);
        var BInt = parseInt(b, 10);
        if (isNaN(AInt) && isNaN(BInt)) {
            var aA = a.replace(reA, "");
            var bA = b.replace(reA, "");
            if (aA === bA) {
                var aN = parseInt(a.replace(reN, ""), 10);
                var bN = parseInt(b.replace(reN, ""), 10);
                return aN === bN ? 0 : aN > bN ? 1 : -1;
            }
            else {
                return aA > bA ? 1 : -1;
            }
        }
        else if (isNaN(AInt)) {
            return 1; //to make alphanumeric sort first return -1 here
        }
        else if (isNaN(BInt)) {
            return -1; //to make alphanumeric sort first return 1 here
        }
        else {
            return AInt > BInt ? 1 : -1;
        }
    };
    HousingUnit.prototype.verifyHomeAddress = function () {
        var _this = this;
        var that = this;
        if (this.unfilteredUnits.indexOf(this.unit) !== -1) {
            this.providerDetails.verification_status = __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].VERIFICATION_STATUS.UNVERIFIED;
            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
            this.openGroupChatBox(this.providerDetails, function () {
                var request;
                request = {
                    user_id: that.userData.user_id,
                    provider_location_id: that.providerDetails._id,
                    building_id: that.buildingId,
                    building_address: _this.buildingAddress,
                    unit: that.unit,
                    first_name: that.userData.profile.first_name,
                    last_name: that.userData.profile.last_name,
                    is_advocate: _this.isAdvocate
                };
                that.providerService.connectToPropertyManager(request).subscribe(function (response) {
                    if (response.status === __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                        that.loaderService.dismissLoader();
                        that.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__pending_confirmation_pending_confirmation__["a" /* PendingConfirmation */]);
                    }
                    else {
                        that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                    }
                });
            });
        }
        else {
            that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.INVALID_UNIT_MESSAGE'), __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].TOASTER.POSITION_CENTER);
        }
    };
    HousingUnit.prototype.openGroupChatBox = function (providerDetails, connectToPropertyManagerCallback) {
        var _this = this;
        var that = this, groupObject, memberIds = [];
        that.pubNubService.getTimeToken(function (timestamp) {
            if (providerDetails.provider_details) {
                providerDetails.provider_details.forEach(function (provider) {
                    memberIds.push(provider._id);
                });
            }
            groupObject = {
                user_id: that.userData.user_id,
                name: providerDetails.public_name,
                shared_channel: that.userData.user_id + '_' + providerDetails._id,
                members: memberIds,
                type: __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP,
                joining_time_token: timestamp,
                leaving_time_token: null,
                group_type: __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].USER_TYPE.HOUSING_PROVIDER,
                user_name: that.userData.user_name,
                created_by: that.userData.user_id,
                profile_pic: providerDetails.profile_pic,
                resident_profile_pic: that.userData.profile.profile_pic,
                is_advocate: _this.isAdvocate,
                verification_address: _this.providerDetails.location.street_address1 + ' . Unit: ' + _this.unit,
                location_id: providerDetails._id
            };
            that.chatService.createOrEditConversation(groupObject, false).subscribe(function (result) {
                if (result.status === __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                    var messagePrefixStr = __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].MESSAGES.VERIFICATION_PREFIX;
                    var addressStr = that.providerDetails.location.street_address1;
                    if (_this.isAdvocate) {
                        messagePrefixStr = __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].MESSAGES.ADVOCATE_VERIFICATION_PREFIX;
                    }
                    if (that.unit.trim().length > 0) {
                        addressStr += ' . Unit: ' + that.unit;
                    }
                    that.providerService.sendInvitationMessageToAdmin(groupObject, messagePrefixStr, addressStr);
                    if (groupObject.members && groupObject.members.length > 0) {
                        that.pubNubService.setUserStateGroup(groupObject.members, __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].USER_STATES.VERIFICATION_REQUEST, groupObject.shared_channel, groupObject.name);
                    }
                    if (that.pubNubService.pushNotificationChannels.indexOf(groupObject.shared_channel) === -1) {
                        that.pubNubService.setPushNotificationChannels([groupObject.shared_channel]);
                        if (!!that.userService.userObj.notification_enabled) {
                            that.pubNubService.registerDevice([groupObject.shared_channel], that.userService.deviceToken, that.userService.pushPlatform);
                        }
                    }
                    if (connectToPropertyManagerCallback) {
                        connectToPropertyManagerCallback();
                    }
                }
                else {
                    that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                    that.loaderService.dismissLoader();
                }
            }, function (error) {
                that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                that.loaderService.dismissLoader();
            });
        });
    };
    return HousingUnit;
}());
HousingUnit = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-housing-unit',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\housing-unit\housing-unit.html"*/'<ion-header labelHeader>\n\n    <ion-navbar class="status-pending">\n\n        <ion-title>{{\'AROUND_ME.HOUSING_UNIT.TITLE\' | translate}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content silvergrey-background>\n\n    <ion-list>\n\n         <button ion-item detail-none class="list-grid-136">\n\n            <h2>\n\n                <span class="text14px-black">{{buildingName}}</span>\n\n            </h2>\n\n        </button>\n\n    </ion-list>\n\n    <ion-list class="unit-input">\n\n        <ion-item class="shadow-box">\n\n            <ion-searchbar (ionInput)="autoCompleteUnitSearch()" autocomplete="on"\n\n              [(ngModel)]="unit" placeholder="{{\'AROUND_ME.HOUSING_UNIT.Unit\' | translate}}"></ion-searchbar>\n\n        </ion-item>\n\n        <ion-list class="places-list" *ngIf="units && units.length > 0">\n\n            <button ion-item detail-none class="list-grid-120" *ngFor="let unit of units" (tap)="onUnitSelect(unit)">\n\n                <h2 class="text14px-black">{{ unit }}</h2>\n\n            </button>\n\n        </ion-list>\n\n\n\n    </ion-list>\n\n    <p class="text12px-normal-grey unit-text">\n\n        {{\'AROUND_ME.HOUSING_UNIT.MSG\' | translate}}\n\n    </p>    \n\n</ion-content>\n\n<ion-footer footer-full>\n\n    <ion-toolbar>\n\n        <ion-button ion-button block class="button-square-blue" (click)="verifyHomeAddress()">{{\'AROUND_ME.HOUSING_UNIT.VERIFY-BTN\' | translate}}</ion-button>\n\n    </ion-toolbar>\n\n</ion-footer>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\housing-unit\housing-unit.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_6__conversations_chat_service__["a" /* ChatService */],
        __WEBPACK_IMPORTED_MODULE_8__provider_service__["a" /* ProviderService */], __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_7__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_5__providers_pubnub_service__["a" /* PubNubService */]])
], HousingUnit);

//# sourceMappingURL=housing-unit.js.map

/***/ }),

/***/ 179:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ActivityPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_keyboard__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_text_to_speech__ = __webpack_require__(337);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__conversations_chat_box_chat_box__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__activity_service__ = __webpack_require__(42);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__conversations_chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__ionic_native_call_number__ = __webpack_require__(167);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__ionic_native_social_sharing__ = __webpack_require__(461);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__aroundme_provider_details_provider_details__ = __webpack_require__(176);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__contact_list_contact_list__ = __webpack_require__(462);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__create_feed_create_feed__ = __webpack_require__(463);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__service_request_service_request__ = __webpack_require__(184);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__service_request_service_request_details_service_request_details__ = __webpack_require__(185);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




















var ActivityPage = (function () {
    function ActivityPage(activityService, navCtrl, navParams, userService, platform, events, pubNubService, analyticsService, translateService, callNumber, socialSharing, tts, loaderService, chatService, keyboard) {
        this.activityService = activityService;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.userService = userService;
        this.platform = platform;
        this.events = events;
        this.pubNubService = pubNubService;
        this.analyticsService = analyticsService;
        this.translateService = translateService;
        this.callNumber = callNumber;
        this.socialSharing = socialSharing;
        this.tts = tts;
        this.loaderService = loaderService;
        this.chatService = chatService;
        this.keyboard = keyboard;
        this.isFavorites = false;
        this.expandFeedCollection = new Map();
        this.isActivityAPICall = false;
        this.activityInfiniteScrollEnabled = true;
        this.notificationID = 0;
        this.favoriteFeedChanges = new Map();
        this.usertype = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_TYPE;
        this.activityService = activityService;
        this.navCtrl = navCtrl;
        this.activityFeeds = [];
        this.activityPageState = {
            pageNumber: 0,
            pageSize: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].DEFAULT_PAGE_SIZE.FEED,
            total: 0
        };
        this.userInfo = userService.getUser();
        this.zone = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["P" /* NgZone */]({ enableLongStackTrace: false });
        this.activityTemplates = ['Alert', 'Advertisement', 'Crime Alert', 'Article/Blog/Info', 'System Announcement', 'Property Manager Announcement', 'Poll', 'Incident', "Profile", "Placement", "Residency Connect", "Residency Deny", "Residency Accept", "Explor Rezility"];
        this.isCordovaPlatform = this.platform.is('cordova');
        this.isFavorites = this.navParams.get('favorites');
        if (!this.isFavorites) {
            this.initReLoadActivityFeedEvent();
            this.initUpdateFavoriteFeedEvent();
        }
        this.initTextToSpeechEvent();
        // TODO - Need to move from here once Keyboard issue fixed 
        this.keyboard.close();
    }
    ActivityPage.prototype.ionViewDidLoad = function () {
        if (this.isFavorites) {
            this.favoriteFeedChanges = new Map();
        }
        this.loadActivityFeed(null, this.loadActivityFeedCallback);
    };
    ActivityPage.prototype.ionViewDidEnter = function () {
        this.userInfo = this.userService.getUser();
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].PAGES.ACTIVITY_FEED);
        // Scroll to top on user tap on feed 
        if (this.pubNubService.feedBadgeCount !== "") {
            this.activityFeedContent.scrollToTop(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].ACTIVITY_FEED_SCROLL_TO_TOP_DURATION);
        }
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].PAGES.ACTIVITY_FEED);
        this.pubNubService.feedBadgeCount = "";
        // console.log("In ActivityPage:ionViewDidEnter Current page is ", this.userService.getCurrentPage().currentPage);
    };
    ActivityPage.prototype.initTextToSpeechEvent = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].APP_EVENTS.STOP_TTS, function () {
            _this.stopSpeech();
        });
    };
    ActivityPage.prototype.stopSpeech = function () {
        if (this.feedPosition !== undefined) {
            this.activityFeeds[this.feedPosition].isReading = false;
            this.tts.stop();
            this.feedPosition = undefined;
        }
    };
    ActivityPage.prototype.initReLoadActivityFeedEvent = function () {
        var _this = this;
        this.events.subscribe('reLoadActivityFeed', function (userEventData) {
            _this.reLoadNewActivityFeed(userEventData);
        });
    };
    ActivityPage.prototype.initUpdateFavoriteFeedEvent = function () {
        var _this = this;
        this.events.subscribe('updateFavoriteFeedEvent', function (favoriteFeedUpdates) {
            var isProfileUpdated = false;
            _this.activityFeeds.forEach(function (activity) {
                if (favoriteFeedUpdates[activity._id]) {
                    Object.assign(activity, favoriteFeedUpdates[activity._id]);
                    if (activity.template === "Profile") {
                        isProfileUpdated = true;
                    }
                }
            });
            //Remove profile update feeds. 
            if (isProfileUpdated) {
                _this.activityFeeds = _this.activityFeeds.filter(function (activity) {
                    if (favoriteFeedUpdates[activity._id]) {
                        return (activity.template !== "Profile");
                    }
                });
            }
        });
    };
    ActivityPage.prototype.ngOnDestroy = function () {
        // console.log("Activity Feed page is destroyed!!");
    };
    ActivityPage.prototype.reLoadNewActivityFeed = function (userEventData) {
        // console.log('In Event reLoadActivityFeed subscribe', userEventData, '----', this.notificationID);
        var feedId = userEventData.additionalData['notificationId'];
        if (this.notificationID !== feedId) {
            this.notificationID = feedId;
            if (this.userService.getCurrentPage().currentPage != __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].PAGES.ACTIVITY_FEED) {
                // console.log('In Event reLoadActivityFeed subscribe', userEventData);
                this.pubNubService.feedBadgeCount = "1";
                this.activityPageState.pageNumber = 0;
                this.activityFeeds = [];
                // console.log('In IF reLoadNewActivityFeed on different page');
                this.loadActivityFeed(null, this.loadActivityFeedCallback);
            }
            else {
                // TODO 
                // TBD, What should happen if user scrolled more than one page            
                //// console.log('In reLoadNewActivityFeed on same page');
                // console.log('In else reLoadNewActivityFeed on different page');
                this.getLatestFeed();
            }
        }
    };
    ActivityPage.prototype.loadActivityFeed = function (showLoader, loadActivityCB) {
        if (showLoader === void 0) { showLoader = true; }
        // console.log('In ActivityPage:loadActivityFeed');
        var that = this, activityParams;
        that.isActivityAPICall = false;
        if (this.userService.getCurrentPage().currentPage === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].PAGES.ACTIVITY_FEED && showLoader || this.isFavorites) {
            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        }
        if (that.activityPageState.pageNumber === 0 ||
            (that.activityPageState.pageNumber * that.activityPageState.pageSize) < that.activityPageState.total) {
            that.activityPageState.pageNumber += 1;
            activityParams = {
                user_id: that.userInfo.user_id,
                per_page: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].DEFAULT_PAGE_SIZE.FEED,
                page_number: that.activityPageState.pageNumber
            };
            if (this.isFavorites) {
                activityParams["is_favorite"] = true;
            }
            that.activityService.getActivityFeeds(activityParams).subscribe(function (responseObj) {
                //// console.log('data getActivityFeeds', responseObj);
                that.zone.run(function () {
                    that.activityFeeds = that.activityFeeds.concat(responseObj.activityfeed);
                    that.activityPageState.total = responseObj.total;
                });
                that.loaderService.dismissLoader();
                if (loadActivityCB) {
                    loadActivityCB.call(that);
                }
            }, function (error) {
                that.loaderService.showToaster(error);
                that.loaderService.dismissLoader();
                if (loadActivityCB) {
                    loadActivityCB.call(that);
                }
            });
        }
        else {
            that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.NO_MORE_DATA_TO_LOAD'));
            that.loaderService.dismissLoader();
            if (loadActivityCB) {
                loadActivityCB.call(that, true);
            }
        }
    };
    ActivityPage.prototype.getLatestFeed = function () {
        var _this = this;
        var that = this, activityParams;
        activityParams = { user_id: that.userInfo.user_id, per_page: 1, page_number: 1 };
        that.isActivityAPICall = false;
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        that.activityService.getActivityFeeds(activityParams).subscribe(function (response) {
            if (response.status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                var duplicateFeeds = that.activityFeeds.filter(function (feed) {
                    return feed._id == response.activityfeed[0]._id;
                });
                if (duplicateFeeds && duplicateFeeds.length === 0) {
                    // console.log('There is no dupliate feed');
                    that.activityFeeds.splice(0, 0, response.activityfeed[0]);
                    that.activityPageState.total = response.total;
                }
                else {
                    // console.log('There is duplicate feed');
                }
            }
            that.isActivityAPICall = true;
            _this.loaderService.dismissLoader();
        });
    };
    ActivityPage.prototype.trackActivityFeed = function (index, activity) {
        //// console.log('In trackActivityFeed',activity._id);
        return activity ? activity._id : undefined;
    };
    ActivityPage.prototype.isTemplateNo1345 = function (activity) {
        return (activity.template === this.activityTemplates[1] || activity.template === this.activityTemplates[3] || activity.template === this.activityTemplates[4] || activity.template === this.activityTemplates[5]);
    };
    ActivityPage.prototype.loadActivityFeedCallback = function () {
        var that = this;
        setTimeout(function () {
            that.isActivityAPICall = true;
        }, 500);
    };
    ActivityPage.prototype.doRefresh = function (refresher) {
        var _this = this;
        this.isActivityAPICall = false;
        this.activityPageState.pageNumber = 0;
        this.activityInfiniteScrollEnabled = true;
        this.activityFeeds = [];
        this.loadActivityFeed(false, function () {
            refresher.complete();
            _this.loadActivityFeedCallback();
        });
    };
    ActivityPage.prototype.setAnswerOption = function (pollObj, option, isCheckBox) {
        if (!pollObj.body.temp_answer) {
            pollObj.body.temp_answer = [];
        }
        if (isCheckBox) {
            option.selected = !option.selected;
        }
        else {
            pollObj.body.temp_answer = [];
            pollObj.body.options.forEach(function (obj) {
                if (obj.name === option.name) {
                    option.selected = !option.selected;
                }
                else {
                    obj.selected = false;
                }
            });
        }
        if (option.selected) {
            if (pollObj.template === this.activityTemplates[8] || pollObj.template === this.activityTemplates[6]) {
                pollObj.body.temp_answer.push(option.id);
            }
            else {
                pollObj.body.temp_answer.push(option.name);
            }
        }
        else {
            if (pollObj.template === this.activityTemplates[8] || pollObj.template === this.activityTemplates[6]) {
                pollObj.body.temp_answer.splice(pollObj.body.temp_answer.indexOf(option.id), 1);
            }
            else {
                pollObj.body.temp_answer.splice(pollObj.body.temp_answer.indexOf(option.name), 1);
            }
        }
    };
    ActivityPage.prototype.submitPoll = function (pollObj, cardIndex) {
        var that = this, voteTotal = 0, submitPollParams;
        pollObj.body.options.forEach(function (option) {
            if (option.selected) {
                option.vote += 1;
            }
            if (option.vote) {
                voteTotal += option.vote;
            }
        });
        pollObj.body.options.map(function (option) {
            var voteInPer = 0;
            if (option.vote) {
                voteInPer = Math.round((option.vote / voteTotal) * 100);
            }
            option['voteInPer'] = voteInPer + '%';
            return option;
        });
        pollObj.body.answer = pollObj.body.temp_answer;
        submitPollParams = {
            _id: pollObj._id,
            user_id: that.userInfo.user_id,
            answer_option: pollObj.body.answer,
            template: pollObj.template,
            profile_attributes: pollObj.profile_attributes,
            action_type: (pollObj.profile_attributes) ? __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].FEED_ACTIONS.PROFILE : __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].FEED_ACTIONS.POLL,
            feed_title: pollObj.body.question
        };
        that.activityService.submitPoll(submitPollParams).subscribe(function (data) {
            pollObj.body.temp_answer = [];
            if (that.isFavorites) {
                that.favoriteFeedChanges[pollObj._id] = pollObj;
            }
            if (pollObj.template === that.activityTemplates[8]) {
                that.activityFeeds.splice(cardIndex, 1);
                that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.PROFILE_SAVE_DONE'));
            }
            else {
                that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.POLL_SAVE_DONE'));
            }
            if (pollObj.profile_attributes) {
                that.userService.isProfileUpdate = true;
            }
        }, function (error) {
            that.loaderService.showToaster(error);
        });
        that.analyticsService.trackEvent(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].ANALYTICS_EVENT.SUBMIT_POLL_ANSWER, __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].ANALYTICS_EVENT.EVENT_ACTION, pollObj._id);
    };
    ActivityPage.prototype.openInAppBrowser = function (activity) {
        //this.shareVia(activity);
        // console.log('In openInAppBrowser opening url in InAppBrowser', activity.openInUrl);
        var updateActionTakenCountParams;
        updateActionTakenCountParams = {
            rezfeed_id: activity.rezfeed_id,
            user_id: this.userInfo.user_id,
            action_type: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].FEED_ACTIONS.MORE_INFO,
            feed_title: activity.header.title
        };
        if (this.userInfo.user_type === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_TYPE.RESIDENT) {
            this.activityService.updateActionTakenCount(updateActionTakenCountParams).subscribe(function (res) {
                // console.log('In updateActionTakenCount success', res);
            }, function (error) {
                // console.log('In updateActionTakenCount error', error);
            });
        }
        if (activity.openInUrl !== '' && this.isCordovaPlatform) {
            this.analyticsService.trackEvent(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].ANALYTICS_EVENT.EVENT_CATEGORY_LINK, __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].ANALYTICS_EVENT.EVENT_ACTION, activity.openInUrl);
            this.platform.ready().then(function () {
                cordova.InAppBrowser.open(activity.openInUrl, "_blank", "location=no");
            });
        }
        else {
            // console.log('Open me in mobile app', activity.openInUrl);
        }
    };
    ActivityPage.prototype.startConversation = function (activity) {
        var _this = this;
        var receiverObj, sender_ref_id;
        var that = this;
        if (activity.sender_ref_id) {
            sender_ref_id = activity.sender_ref_id;
            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
            var requestObj = { user_id: this.userInfo.user_id, receiver_id: sender_ref_id };
            this.chatService.checkForSharedChannel(requestObj).subscribe(function (response) {
                if (response.status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                    var userObj = response.user;
                    if (response.is_blocked === true) {
                        _this.loaderService.showToaster(userObj.user_name + " " + _this.translateService.instant('ERROR_MESSAGES.BLOCKED_USER_POSTFIX'));
                        //console.log(userObj.user_name + " " + this.translateService.instant('ERROR_MESSAGES.BLOCKED_USER_POSTFIX'));
                        _this.loaderService.dismissLoader();
                    }
                    else {
                        // Prepare receiverObj for start chat 
                        receiverObj = {
                            connection_status: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED,
                            receiver_id: sender_ref_id,
                            user_id: sender_ref_id,
                            user_name: userObj.user_name,
                            first_name: userObj.first_name,
                            last_name: userObj.last_name,
                            presence: '',
                            timetoken: null,
                            joining_time_token: null,
                            user_type: userObj.user_type
                        };
                        if (!response.shared_channel) {
                            _this.pubNubService.getTimeToken(function (pubnubtimestoken) {
                                var obj = {
                                    user_id: _this.userInfo.user_id,
                                    created_by: _this.userInfo.user_id,
                                    receiver_id: activity.sender_ref_id,
                                    joining_time_token: pubnubtimestoken,
                                    connection_status: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED
                                };
                                _this.chatService.createOrEditConversation(obj).subscribe(function (result) {
                                    //console.log('Inside changeConnectionStatus callback', result);
                                    if (result.status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS
                                        && result.chat[0] && result.chat[0].shared_channel) {
                                        receiverObj['timetoken'] = receiverObj['joining_time_token'] = obj.joining_time_token;
                                        receiverObj.shared_channel = result.chat[0].shared_channel;
                                        openChatbox(receiverObj);
                                    }
                                });
                            });
                        }
                        else {
                            receiverObj.shared_channel = response.shared_channel;
                            receiverObj['joining_time_token'] = response.joining_time_token;
                            receiverObj['type'] = response.type;
                            receiverObj['group_type'] = response.group_type;
                            openChatbox(receiverObj);
                        }
                    }
                }
                else {
                    _this.loaderService.showToaster(response.message);
                    _this.loaderService.dismissLoader();
                }
                _this.analyticsService.trackEvent(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].ANALYTICS_EVENT.EVENT_CATEGORY_START_CONVERSATION, __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].ANALYTICS_EVENT.EVENT_ACTION, activity.rezfeed_id);
            });
        }
        if (this.userInfo.user_type === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_TYPE.RESIDENT) {
            this.activityService.updateActionTakenCount({ rezfeed_id: activity.rezfeed_id, user_id: this.userInfo.user_id, action_type: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].FEED_ACTIONS.CHAT, feed_title: activity.header.title }).subscribe(function (res) {
                // console.log('In updateActionTakenCount success', res);
            }, function (error) {
                // console.log('In updateActionTakenCount error', error);
            });
        }
        function openChatbox(conversationObj) {
            that.pubNubService.getUsersState([conversationObj.receiver_id]).then(function (data) {
                if (data.channels) {
                    if (data.channels[conversationObj.receiver_id]) {
                        conversationObj.presence = "online";
                    }
                    else {
                        conversationObj.presence = "";
                    }
                }
                that.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__conversations_chat_box_chat_box__["a" /* ChatBox */], { user: conversationObj });
                that.loaderService.dismissLoader();
            });
        }
    };
    ActivityPage.prototype.loadMore = function (infiniteScroll) {
        var _this = this;
        // console.log('Begin async operation');
        this.loadActivityFeed(null, function (isMoreDataNotFound) {
            // console.log('isMoreDataFound', isMoreDataNotFound);
            infiniteScroll.complete();
            if (!!isMoreDataNotFound) {
                _this.activityInfiniteScrollEnabled = false;
            }
        });
    };
    ActivityPage.prototype.navigateToAroundMe = function (activity) {
        this.navCtrl.parent.select(2);
    };
    ActivityPage.prototype.callToPM = function (activity) {
        if (activity.sender_contact && activity.sender_contact !== '') {
            this.callNumber.callNumber(activity.sender_contact, true).then(function () {
            }).catch(function (error) {
                //console.log('Error launching dialer', error);
            });
        }
    };
    ActivityPage.prototype.shareVia = function (activity) {
        var options = {
            message: activity.body.detailText,
            subject: activity.body.headLineText,
            file: activity.body.imageUrl
            //url: activity.openInUrl
        };
        this.socialSharing.shareWithOptions(options);
        //this.socialSharing.shareViaFacebookWithPasteMessageHint(activity.body.detailText,activity.body.imageUrl,"","Say something about this post......");
    };
    ActivityPage.prototype.shareOnFacebook = function (activity, fab) {
        var _this = this;
        // this.socialSharing.shareViaFacebookWithPasteMessageHint(activity.body.detailText, "", activity.openInUrl, "Say something about this post......");
        fab.close();
        //Temp fix for existing data 
        if (!activity.openInUrl.includes("http")) {
            activity.openInUrl = activity.openInUrl.concat("http://");
        }
        this.userService.shareOnFacebook(activity.openInUrl, activity.header.title, activity.header.bgImageUrl, function (success) {
            if (success) {
                if (_this.userInfo.user_type === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_TYPE.RESIDENT) {
                    _this.activityService.updateActionTakenCount({ rezfeed_id: activity.rezfeed_id, user_id: _this.userInfo.user_id, action_type: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].FEED_ACTIONS.FB_SHARE, feed_title: activity.header.title }).subscribe(function (res) {
                    }, function (error) {
                    });
                }
            }
        });
    };
    ActivityPage.prototype.shareOnTwitter = function (activity, fab) {
        var _this = this;
        fab.close();
        var title;
        var that = this;
        if (this.platform.is('android')) {
            title = "#Rezility " + activity.header.title;
        }
        else {
            title = activity.header.title;
        }
        this.socialSharing.shareViaTwitter(title, activity.header.bgImageUrl, activity.openInUrl).then(function () {
            //Save the twitter share action
            if (_this.userInfo.user_type === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_TYPE.RESIDENT) {
                _this.activityService.updateActionTakenCount({ rezfeed_id: activity.rezfeed_id, user_id: _this.userInfo.user_id, action_type: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].FEED_ACTIONS.TWITTER_SHARE, feed_title: activity.header.title }).subscribe(function (res) {
                }, function (error) {
                });
            }
        }).catch(function () {
            that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.TWITTER_ERROR'));
        });
    };
    ActivityPage.prototype.toggleLike = function (activity, position) {
        var request = {
            user_id: this.userService.userObj.user_id,
            rezfeed_id: activity.rezfeed_id,
            is_like: !activity.is_like,
            action_type: '',
            feed_title: ''
        };
        if (activity.template === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].TEMPLATE.POLL || activity.template === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].TEMPLATE.PROFILE) {
            request.feed_title = activity.body.question;
        }
        else {
            request.feed_title = activity.header.title;
        }
        if (request.is_like) {
            activity.total_likes = activity.total_likes + 1;
        }
        else {
            activity.total_likes = activity.total_likes - 1;
        }
        if (this.isFavorites) {
            this.favoriteFeedChanges[activity._id] = activity;
            this.activityFeeds.splice(position, 1);
        }
        activity.is_like = !activity.is_like;
        //this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.activityService.updateFeedLike(request).subscribe(function (response) {
            if (response.status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                activity.total_likes = response.total_likes;
            }
            else if (response.status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.ERROR) {
                activity.is_like = !activity.is_like;
            }
            //this.loaderService.dismissLoader();
        });
    };
    ActivityPage.prototype.ionViewWillUnload = function () {
        this.stopSpeech();
        if (Object.keys(this.favoriteFeedChanges).length > 0) {
            this.events.publish('updateFavoriteFeedEvent', this.favoriteFeedChanges);
        }
    };
    ActivityPage.prototype.navigateToProviderDetails = function (activity) {
        //this.navCtrl.push(ProviderDetails, { providerId: "59705ed675372e327c92984f", buildingId: "59831d0b48ee58001106b3bb" });
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_15__aroundme_provider_details_provider_details__["a" /* ProviderDetails */], { providerId: activity.branch_id, buildingId: activity.building_id || '', showConnect: false });
        //Save the provider action
        if (activity.rezfeed_id && this.userInfo.user_type === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_TYPE.RESIDENT) {
            this.activityService.updateActionTakenCount({ rezfeed_id: activity.rezfeed_id, user_id: this.userInfo.user_id, action_type: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].FEED_ACTIONS.PROVIDER, feed_title: activity.header.title }).subscribe(function (res) {
            }, function (error) {
            });
        }
    };
    ActivityPage.prototype.readFeed = function (activity, position) {
        if (this.feedPosition !== undefined) {
            this.activityFeeds[this.feedPosition].isReading = false;
        }
        this.feedPosition = position;
        this.tts.stop();
        if (activity.isReading == undefined || (activity.isReading !== undefined && activity.isReading == false)) {
            activity.isReading = true;
            if (this.userService.currentLang.indexOf("-") == -1) {
                this.userService.currentLang = this.userService.currentLang.concat("-us");
            }
            var speechText = '';
            if (activity.template === this.activityTemplates[6] || activity.template === this.activityTemplates[8]) {
                speechText = activity.body.question;
                for (var i = 0; i < activity.body.options.length; i++) {
                    speechText = speechText.concat("    ");
                    speechText = speechText.concat(activity.body.options[i].name);
                }
                ;
            }
            else {
                speechText = activity.header.title + " " + activity.body.detailText;
            }
            var options = {
                text: speechText,
                locale: this.userService.currentLang,
                rate: 0.75
            };
            // console.log(options);
            this.tts.speak(options)
                .then(function () {
                activity.isReading = false;
            })
                .catch(function (reason) { return console.log(reason); });
        }
        else {
            activity.isReading = false;
        }
    };
    ActivityPage.prototype.muteFeed = function (activity) {
        activity.isReading = false;
        this.tts.stop();
        this.feedPosition = undefined;
    };
    ActivityPage.prototype.downloadImage = function (activity) {
        console.log(this.userInfo.low_data);
        activity.lowData = false;
    };
    ActivityPage.prototype.shareUser = function (activity, fab) {
        fab.close();
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_16__contact_list_contact_list__["a" /* ContactListPage */], { rezfeed_id: activity.rezfeed_id, feed_title: activity.header.title });
    };
    ActivityPage.prototype.navigateToCreateFeedPage = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_17__create_feed_create_feed__["a" /* CreateFeedPage */]);
    };
    ActivityPage.prototype.manageServiceRequest = function (activity) {
        if (activity.template === this.activityTemplates[7]) {
            if (activity.service_request_id) {
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_19__service_request_service_request_details_service_request_details__["a" /* ServiceRequestDetails */], { _id: activity.service_request_id });
            }
            else {
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_18__service_request_service_request__["a" /* ServiceRequest */]);
            }
        }
    };
    return ActivityPage;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
], ActivityPage.prototype, "activityFeedContent", void 0);
ActivityPage = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'activity-feed',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\activity\activity-feed.html"*/'<ion-header labelHeader>\n\n    <ion-toolbar topHeader *ngIf="!isFavorites">\n\n   <ion-buttons start *ngIf="(this.userInfo.user_type === usertype.HOUSING_PROVIDER || this.userInfo.user_type === usertype.SERVICE_PROVIDER) && this.userInfo.feed_templates.length > 0">\n\n            <button ion-button (click)="navigateToCreateFeedPage()">\n\n                <ion-icon class="icons-plus"></ion-icon>\n\n            </button>\n\n        </ion-buttons>\n\n        <ion-title>\n\n            {{\'ACTIVITY.TITLE\' | translate}}\n\n        </ion-title>\n\n    </ion-toolbar>\n\n    <ion-navbar *ngIf="isFavorites">\n\n        <ion-title> {{\'YOUR_STUFF.FAVORITES.TITLE\' | translate}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n\n\n<ion-content #activityFeedContent silvergrey-background>\n\n    <ion-refresher (ionRefresh)="doRefresh($event)">\n\n        <ion-refresher-content pullingIcon="arrow-dropdown" pullingText="{{\'MISC.PULL\' | translate}}" refreshingSpinner="circles"\n\n            refreshingText="{{\'MISC.REFRESH\' | translate}}">\n\n        </ion-refresher-content>\n\n    </ion-refresher>\n\n    <div>\n\n        <ion-list list-group>\n\n            <div *ngIf="activityFeeds.length == 0 && isActivityAPICall  && !isFavorites" class="message-no-data-found">\n\n                <p class="no-records">{{\'ERROR_MESSAGES.NO_DATA_FOUND\' | translate}}</p>\n\n            </div>\n\n            <div *ngIf="activityFeeds.length == 0 && isActivityAPICall && isFavorites" class="message-no-data-found">\n\n                <p class="no-records">{{\'ERROR_MESSAGES.NO_FAVORITE_FOUND\' | translate}}</p>\n\n            </div>\n\n\n\n            <div *ngFor="let activity of activityFeeds; trackBy:trackActivityFeed; let cardIndex=index;">\n\n                <ion-card class="card-panel">\n\n                    <ion-item selected-row list-row [ngClass]="{\'selected-row\':expandFeedCollection[activity._id] === true}">\n\n                        <div class="alerts article-no-image" *ngIf="activity.template === activityTemplates[0] || activity.template === activityTemplates[7]"\n\n                           >\n\n                            <div list-row-head>\n\n                                <ion-avatar item-left>\n\n                                    <ion-icon [ngClass]="{\'icons-news-alert\': activity.template === activityTemplates[0],  \'icons-report\': activity.template === activityTemplates[7]}"></ion-icon>\n\n                                </ion-avatar>\n\n                            </div>\n\n                            <ion-col list-expand-details  (click)="manageServiceRequest(activity)">\n\n                                <h4 *ngIf="activity.header.title" class="">{{activity.header.title}}</h4>\n\n                            </ion-col>\n\n                            <div list-row-footer class="action-bar">\n\n                                <ion-row>\n\n                                    <ion-col start class="text10px-thin-grey" *ngIf="activity.timestampAgo">\n\n                                        {{activity.timestampAgo}}\n\n                                    </ion-col>\n\n                                    <ion-col end>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === undefined || (activity.isReading !== undefined && activity.isReading === false)"\n\n                                            (click)="readFeed(activity,cardIndex)">\n\n                                            <ion-icon class="icons-read"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === true"\n\n                                            (click)="muteFeed(activity)">\n\n                                            <ion-icon class="icons-mute"></ion-icon>\n\n                                        </button>\n\n                                        <ion-fab bottom #fab *ngIf="activity.is_system_feed !== true">\n\n                                            <button ion-fab mini [disabled]="this.userInfo.user_type !== usertype.RESIDENT">\n\n                                                <ion-icon class="icons-share"></ion-icon>\n\n                                            </button>\n\n                                            <ion-fab-list side="top">\n\n                                                <button ion-fab class="su">\n\n                                                    <ion-icon class="icons-chat01" (tap)="shareUser(activity,fab)"></ion-icon>\n\n                                                </button>\n\n                                            </ion-fab-list>\n\n                                        </ion-fab>\n\n                                    </ion-col>\n\n                                </ion-row>\n\n                            </div>\n\n                        </div>\n\n\n\n                        <div class="crime-alerts article-no-image" *ngIf="activity.template === activityTemplates[2]">\n\n                            <div list-row-head>\n\n                                <ion-avatar item-left>\n\n                                    <ion-icon class="icons-alert"></ion-icon>\n\n                                </ion-avatar>\n\n                                <span>\n\n                                    <h4 *ngIf="activity.header.title" class="text18px-normal-white">{{activity.header.title}}</h4>\n\n                                </span>\n\n                            </div>\n\n                            <ion-col list-expand-details>\n\n                                <ion-avatar class="list-detail-img">\n\n                                    <lazy-img *ngIf="activity.body.imageUrl" [inputSrc]="activity.body.imageUrl" alt=""></lazy-img>\n\n                                </ion-avatar>\n\n                            </ion-col>\n\n                            <div list-row-footer class="action-bar">\n\n                                <ion-row>\n\n                                    <ion-col start class="text10px-thin-grey" *ngIf="activity.timestampAgo">\n\n                                        {{activity.timestampAgo}}\n\n                                    </ion-col>\n\n                                    <ion-col end>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === undefined || (activity.isReading !== undefined && activity.isReading === false)"\n\n                                            (click)="readFeed(activity,cardIndex)">\n\n                                            <ion-icon class="icons-read"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === true"\n\n                                            (click)="muteFeed(activity)">\n\n                                            <ion-icon class="icons-mute"></ion-icon>\n\n                                        </button>\n\n                                    </ion-col>\n\n                                </ion-row>\n\n                            </div>\n\n                        </div>\n\n\n\n                        <div [ngClass]="{\'article-no-image\': activity.header.bgImageUrl === \'\' &&( activity.template === activityTemplates[3] || activity.template === activityTemplates[1]),\n\n                        \'system-announcement\':activity.template === activityTemplates[4],\n\n                        \'property-manager-announcement\':activity.template === activityTemplates[5],\n\n                        \'article-image\':activity.header.bgImageUrl !== \'\'}" *ngIf="isTemplateNo1345(activity) === true">\n\n                            <div list-row-head>\n\n                                <ion-avatar class="bg-image-168" *ngIf="activity.header.bgImageUrl" (click)="downloadImage(activity)">\n\n                                    <lazy-img *ngIf="userInfo.low_data === true && (activity.lowData === undefined || activity.lowData === true)" [inputSrc]="activity.header.bgImageUrl"\n\n                                        [lowData]="true" alt=""></lazy-img>\n\n                                    <lazy-img *ngIf="userInfo.low_data === false || activity.lowData === false" [inputSrc]="activity.header.bgImageUrl" [lowData]="false"\n\n                                        alt=""></lazy-img>\n\n                                </ion-avatar>\n\n\n\n                                <ion-avatar item-left (tap)="this.userInfo.user_type === usertype.RESIDENT && navigateToProviderDetails(activity)">\n\n                                    <ion-icon *ngIf="activity.template === activityTemplates[5]" class="icons-announcment"></ion-icon>\n\n                                    <lazy-img *ngIf="activity.header.leftIconUrl && activity.template !== activityTemplates[5]" [inputSrc]="activity.header.leftIconUrl"\n\n                                        alt=""></lazy-img>\n\n                                </ion-avatar>\n\n\n\n                            </div>\n\n\n\n                            <ion-col list-expand-details>\n\n                                <!-- list-row -->\n\n                                <h4 class="" *ngIf="activity.body.headLineText">{{activity.body.headLineText}}</h4>\n\n                                <!--<p class="text10px-thin-grey" *ngIf="activity.timestampAgo">{{activity.timestampAgo}}</p>-->\n\n                                <h6 *ngIf="activity.body.detailText">{{activity.body.detailText}}</h6>\n\n                            </ion-col>\n\n                            <div list-row-footer class="action-bar">\n\n                                <ion-row>\n\n                                    <ion-col start class="text10px-thin-grey" *ngIf="activity.timestampAgo">\n\n                                        {{activity.timestampAgo}}\n\n                                    </ion-col>\n\n                                    <ion-col end>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.openInUrl !== \'\'"\n\n                                            (click)="openInAppBrowser(activity)">\n\n                                            <ion-icon class="icons-read-more"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === undefined || (activity.isReading !== undefined && activity.isReading === false)"\n\n                                            (click)="readFeed(activity,cardIndex)">\n\n                                            <ion-icon class="icons-read"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === true"\n\n                                            (click)="muteFeed(activity)">\n\n                                            <ion-icon class="icons-mute"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only class="like" *ngIf="!activity.is_like && activity.is_system_feed !== true" (tap)="this.userInfo.user_type === usertype.RESIDENT && toggleLike(activity,cardIndex)"\n\n                                            [disabled]="this.userInfo.user_type !== usertype.RESIDENT">\n\n                                            <ion-icon class="icons-unlike"></ion-icon>\n\n                                            <ion-badge class="like-count">{{activity.total_likes}}</ion-badge>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only class="like abc1" *ngIf="activity.is_like && activity.is_system_feed !== true" (tap)="this.userInfo.user_type === usertype.RESIDENT && toggleLike(activity,cardIndex)"\n\n                                            [disabled]="this.userInfo.user_type !== usertype.RESIDENT">\n\n                                            <ion-icon class="icons-like"></ion-icon>\n\n                                            <ion-badge class="like-count" *ngIf="activity.total_likes">{{activity.total_likes}}</ion-badge>\n\n                                        </button>\n\n\n\n                                        <!-- <ion-toggle class="icons-like" [(ngModel)]="activity.is_like" (ionChange)=toggleLike()></ion-toggle>                                      -->\n\n                                        <ion-fab bottom #fab *ngIf="activity.is_system_feed !== true">\n\n                                            <button ion-fab mini [disabled]="this.userInfo.user_type !== usertype.RESIDENT">\n\n                                                <ion-icon class="icons-share"></ion-icon>\n\n                                            </button>\n\n                                            <ion-fab-list side="top">\n\n                                                <button ion-fab *ngIf="activity.openInUrl !== \'\'" class="fb">\n\n                                                    <ion-icon class="icons-facebook" (tap)="shareOnFacebook(activity,fab)"></ion-icon>\n\n                                                </button>\n\n                                                <button ion-fab *ngIf="activity.openInUrl !== \'\'">\n\n                                                    <ion-icon class="icons-twitter" (tap)="shareOnTwitter(activity,fab)"></ion-icon>\n\n                                                </button>\n\n                                                <button ion-fab class="su">\n\n                                                    <ion-icon class="icons-chat01" (tap)="shareUser(activity,fab)"></ion-icon>\n\n                                                </button>\n\n                                            </ion-fab-list>\n\n                                        </ion-fab>\n\n                                    </ion-col>\n\n                                </ion-row>\n\n                            </div>\n\n                        </div>\n\n\n\n                        <!-- Start Portfolio option -->\n\n                        <div portfolio *ngIf="(activity.template === activityTemplates[8] && activity.body.answer.length === 0) || activity.template === activityTemplates[6]">\n\n                            <div list-expand-details>\n\n                                <ion-col ion-item list-row>\n\n                                    <ion-icon *ngIf="activity.template === activityTemplates[8]" class="icons-01"></ion-icon>\n\n                                    <ion-icon *ngIf="activity.template === activityTemplates[6]" class="icons-poll"></ion-icon>\n\n                                    <span>\n\n                                        <h4 class="text18px-normal-black" *ngIf="activity.body.question">{{activity.body.question}}</h4>\n\n                                        <p class="text10px-thin-grey" *ngIf="activity.timestampAgo">{{activity.timestampAgo}}</p>\n\n                                    </span>\n\n                                </ion-col>\n\n\n\n                                <ul list>\n\n                                    <li class="item item-checkbox" [ngClass]="{\'selectOption\': option.selected == true}" *ngFor="let option of activity.body.options">\n\n                                        <div poll-progress above-avg *ngIf="activity.body.answer.length>0" [style.width]="option.voteInPer"></div>\n\n                                        <label class="custom-types">\n\n                                            <cite title-info left-align>{{option.name}}</cite>\n\n                                            <div [ngClass]="{\'custom-radio\':!activity.is_multiselect,\'custom-checkbox\':activity.is_multiselect}" *ngIf="activity.body.answer.length==0">\n\n                                                <input *ngIf="!activity.is_multiselect" type="radio" [checked]="option.selected" (click)="setAnswerOption(activity,option,false)">\n\n\n\n                                                <input *ngIf="activity.is_multiselect" type="checkbox" [checked]="option.selected" (click)="setAnswerOption(activity,option,true)">\n\n                                                <span></span>\n\n                                            </div>\n\n                                            <span class="text18px-normal-black" *ngIf="activity.body.answer.length>0">{{option.voteInPer}}</span>\n\n                                        </label>\n\n                                    </li>\n\n                                </ul>\n\n                                <div list-row-footer class="action-bar">\n\n                                    <ion-row>\n\n                                        <ion-col start class="text10px-normal-blue" *ngIf="activity.body.temp_answer && activity.body.temp_answer.length>0">\n\n                                            <span (click)="submitPoll(activity,cardIndex)">{{activity.body.actionButtonName}}</span>\n\n                                        </ion-col>\n\n                                        <ion-col end>\n\n                                            <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === undefined || (activity.isReading !== undefined && activity.isReading === false)"\n\n                                                (click)="readFeed(activity,cardIndex)">\n\n                                                <ion-icon class="icons-read"></ion-icon>\n\n                                            </button>\n\n                                            <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === true"\n\n                                                (click)="muteFeed(activity)">\n\n                                                <ion-icon class="icons-mute"></ion-icon>\n\n                                            </button>\n\n                                            <button ion-item detail-none icon-only class="like" *ngIf="!activity.is_like" [disabled]="this.userInfo.user_type !== usertype.RESIDENT"\n\n                                                (tap)="this.userInfo.user_type === usertype.RESIDENT && toggleLike(activity,cardIndex)">\n\n                                                <ion-icon class="icons-unlike"></ion-icon>\n\n                                                <ion-badge class="like-count">{{activity.total_likes}}</ion-badge>\n\n                                            </button>\n\n                                            <button ion-item detail-none icon-only class="like" *ngIf="activity.is_like" [disabled]="this.userInfo.user_type !== usertype.RESIDENT"\n\n                                                (tap)="this.userInfo.user_type === usertype.RESIDENT && toggleLike(activity,cardIndex)">\n\n                                                <ion-icon class="icons-like"></ion-icon>\n\n                                                <ion-badge class="like-count" *ngIf="activity.total_likes">{{activity.total_likes}}</ion-badge>\n\n                                            </button>\n\n                                            <!-- <ion-toggle class="icons-like" [(ngModel)]="activity.is_like" (ionChange)=toggleLike()></ion-toggle> -->\n\n                                        </ion-col>\n\n                                    </ion-row>\n\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                        <!-- End Portfolio option -->\n\n\n\n                        <!-- Blog Article template -->\n\n                        <div *ngIf="activity.template === activityTemplates[9]" [ngClass]="{\'article-image\':(activity.header.bgImageUrl !== \'\'),\'article-no-image\':activity.header.bgImageUrl === \'\'}">\n\n                            <div list-row-head>\n\n                                <ion-avatar class="bg-image-168" *ngIf="activity.header.bgImageUrl" (click)="downloadImage(activity)">\n\n                                    <lazy-img *ngIf="userInfo.low_data === true && (activity.lowData === undefined || activity.lowData === true)" [inputSrc]="activity.header.bgImageUrl"\n\n                                        [lowData]="true" alt=""></lazy-img>\n\n                                    <lazy-img *ngIf="userInfo.low_data === false || activity.lowData === false" [inputSrc]="activity.header.bgImageUrl" [lowData]="false"\n\n                                        alt=""></lazy-img>\n\n                                </ion-avatar>\n\n                                <ion-avatar (tap)="this.userInfo.user_type === usertype.RESIDENT && navigateToProviderDetails(activity)">\n\n                                    <lazy-img *ngIf="activity.header.leftIconUrl" [inputSrc]="activity.header.leftIconUrl"></lazy-img>\n\n                                </ion-avatar>\n\n                            </div>\n\n                            <ion-col list-expand-details>\n\n                                <!-- list-row -->\n\n                                <h4 class="text18px-normal-black" *ngIf="activity.body.headLineText">{{activity.body.headLineText}}</h4>\n\n                                <!--<p class="text10px-thin-grey" *ngIf="activity.timestampAgo">{{activity.timestampAgo}}</p>-->\n\n                                <h6 title-info *ngIf="activity.body.detailText">{{activity.body.detailText}}</h6>\n\n                            </ion-col>\n\n                            <div list-row-footer class="action-bar">\n\n                                <ion-row>\n\n                                    <ion-col start class="text10px-thin-grey" *ngIf="activity.timestampAgo">\n\n                                        {{activity.timestampAgo}}\n\n                                    </ion-col>\n\n                                    <ion-col end>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.openInUrl !== \'\'" (click)="openInAppBrowser(activity)">\n\n                                            <ion-icon class="icons-read-more"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.is_allow_conversation === true"\n\n                                            (click)="startConversation(activity)">\n\n                                            <ion-icon class="icons-conversion"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === undefined || (activity.isReading !== undefined && activity.isReading === false)"\n\n                                            (click)="readFeed(activity,cardIndex)">\n\n                                            <ion-icon class="icons-read"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === true"\n\n                                            (click)="muteFeed(activity)">\n\n                                            <ion-icon class="icons-mute"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only class="like" *ngIf="!activity.is_like && activity.is_system_feed !== true" [disabled]="this.userInfo.user_type !== usertype.RESIDENT"\n\n                                            (tap)="this.userInfo.user_type === usertype.RESIDENT && toggleLike(activity,cardIndex)">\n\n                                            <ion-icon class="icons-unlike"></ion-icon>\n\n                                            <ion-badge class="like-count">{{activity.total_likes}}</ion-badge>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only class="like" *ngIf="activity.is_like && activity.is_system_feed !== true" [disabled]="this.userInfo.user_type !== usertype.RESIDENT"\n\n                                            (tap)="this.userInfo.user_type === usertype.RESIDENT && toggleLike(activity,cardIndex)">\n\n                                            <ion-icon class="icons-like"></ion-icon>\n\n                                            <ion-badge class="like-count" *ngIf="activity.total_likes">{{activity.total_likes}}</ion-badge>\n\n                                        </button>\n\n                                        <!-- <ion-toggle class="icons-like" [(ngModel)]="activity.is_like" (ionChange)=toggleLike()></ion-toggle>                                      -->\n\n                                        <ion-fab bottom #fab *ngIf="activity.is_system_feed !== true">\n\n                                            <button ion-fab mini [disabled]="this.userInfo.user_type !== usertype.RESIDENT">\n\n                                                <ion-icon class="icons-share"></ion-icon>\n\n                                            </button>\n\n                                            <ion-fab-list side="top">\n\n                                                <button ion-fab *ngIf="activity.openInUrl !== \'\'" class="fb">\n\n                                                    <ion-icon class="icons-facebook" (tap)="shareOnFacebook(activity,fab)"></ion-icon>\n\n                                                </button>\n\n                                                <button ion-fab *ngIf="activity.openInUrl !== \'\'">\n\n                                                    <ion-icon class="icons-twitter" (tap)="shareOnTwitter(activity,fab)"></ion-icon>\n\n                                                </button>\n\n                                                <button ion-fab class="su">\n\n                                                    <ion-icon class="icons-chat01" (tap)="shareUser(activity,fab)"></ion-icon>\n\n                                                </button>\n\n                                            </ion-fab-list>\n\n                                        </ion-fab>\n\n                                    </ion-col>\n\n                                </ion-row>\n\n                            </div>\n\n                        </div>\n\n                        <!-- Blog Article template -->\n\n\n\n                        <!-- Welcome Feed Template -->\n\n                        <div *ngIf="activity.template === activityTemplates[13]" class="article-no-image welcome-feed">\n\n                            <ion-row list-row-head *ngIf="activity.header.leftIconName">\n\n                                <ion-col col-3 text-center>\n\n                                    <ion-icon class="icons-feed"></ion-icon>\n\n                                    <label *ngIf="activity.header.leftIconName.YOUR_FEED">{{activity.header.leftIconName.YOUR_FEED}}</label>\n\n                                </ion-col>\n\n                                <ion-col col-3 text-center>\n\n                                    <ion-icon class="icons-conversion"></ion-icon>\n\n                                    <label *ngIf="activity.header.leftIconName.YOUR_CONV">{{activity.header.leftIconName.YOUR_CONV}}</label>\n\n                                </ion-col>\n\n                                <ion-col col-3 text-center>\n\n                                    <ion-icon class="icons-around-me"></ion-icon>\n\n                                    <label *ngIf="activity.header.leftIconName.AROUND_YOU">{{activity.header.leftIconName.AROUND_YOU}}</label>\n\n                                </ion-col>\n\n                                <ion-col col-3 text-center>\n\n                                    <ion-icon class="icons-my-stuff"></ion-icon>\n\n                                    <label *ngIf="activity.header.leftIconName.YOUR_STUFF">{{activity.header.leftIconName.YOUR_STUFF}}</label>\n\n                                </ion-col>\n\n                                <ion-avatar (tap)="this.userInfo.user_type === usertype.RESIDENT && navigateToProviderDetails(activity)">\n\n                                    <lazy-img *ngIf="activity.header.leftIconUrl" [inputSrc]="activity.header.leftIconUrl"></lazy-img>\n\n                                </ion-avatar>\n\n                            </ion-row>\n\n                            <img src="./assets/img/welcome-feed-strip.jpg" alt="" />\n\n                            <ion-col list-expand-details>\n\n                                <h4 class="text18px-normal-black" *ngIf="activity.body.headLineText">{{activity.body.headLineText}}</h4>\n\n                                <h6 title-info *ngIf="activity.body.detailText">{{activity.body.detailText}}</h6>\n\n                            </ion-col>\n\n                            <div list-row-footer class="action-bar">\n\n                                <ion-row>\n\n                                    <ion-col start class="text10px-thin-grey" *ngIf="activity.timestampAgo">\n\n                                        {{activity.timestampAgo}}\n\n                                    </ion-col>\n\n                                    <ion-col end>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.openInUrl !== \'\'"\n\n                                            (click)="openInAppBrowser(activity)">\n\n                                            <ion-icon class="icons-read-more"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type === usertype.HOUSING_PROVIDER || this.userInfo.user_type === usertype.SERVICE_PROVIDER  || this.userInfo.user_type === usertype.ADMIN"\n\n                                            *ngIf="activity.is_allow_conversation === true" (click)="startConversation(activity)">\n\n                                            <ion-icon class="icons-conversion"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === undefined || (activity.isReading !== undefined && activity.isReading === false)"\n\n                                            (click)="readFeed(activity,cardIndex)">\n\n                                            <ion-icon class="icons-read"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === true"\n\n                                            (click)="muteFeed(activity)">\n\n                                            <ion-icon class="icons-mute"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only class="like" *ngIf="!activity.is_like && activity.is_system_feed !== true" [disabled]="this.userInfo.user_type !== usertype.RESIDENT"\n\n                                            (tap)="this.userInfo.user_type === usertype.RESIDENT && toggleLike(activity,cardIndex)">\n\n                                            <ion-icon class="icons-unlike"></ion-icon>\n\n                                            <ion-badge class="like-count">{{activity.total_likes}}</ion-badge>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only class="like" *ngIf="activity.is_like && activity.is_system_feed !== true" [disabled]="this.userInfo.user_type !== usertype.RESIDENT"\n\n                                            (tap)="this.userInfo.user_type === usertype.RESIDENT && toggleLike(activity,cardIndex)">\n\n                                            <ion-icon class="icons-like"></ion-icon>\n\n                                            <ion-badge class="like-count" *ngIf="activity.total_likes">{{activity.total_likes}}</ion-badge>\n\n                                        </button>\n\n                                        <ion-fab bottom #fab *ngIf="activity.is_system_feed !== true">\n\n                                            <button ion-fab mini [disabled]="this.userInfo.user_type !== usertype.RESIDENT">\n\n                                                <ion-icon class="icons-share"></ion-icon>\n\n                                            </button>\n\n                                            <ion-fab-list side="top">\n\n                                                <button ion-fab *ngIf="activity.openInUrl !== \'\'" class="fb">\n\n                                                    <ion-icon class="icons-facebook" (tap)="shareOnFacebook(activity,fab)"></ion-icon>\n\n                                                </button>\n\n                                                <button ion-fab *ngIf="activity.openInUrl !== \'\'">\n\n                                                    <ion-icon class="icons-twitter" (tap)="shareOnTwitter(activity,fab)"></ion-icon>\n\n                                                </button>\n\n                                                <button ion-fab class="su">\n\n                                                    <ion-icon class="icons-chat01" (tap)="shareUser(activity,fab)"></ion-icon>\n\n                                                </button>\n\n                                            </ion-fab-list>\n\n                                        </ion-fab>\n\n                                    </ion-col>\n\n                                </ion-row>\n\n                            </div>\n\n                        </div>\n\n                        <!-- Welcome Feed Template -->\n\n\n\n                        <!-- Property manager connect template -->\n\n                        <div *ngIf="activity.template === activityTemplates[10]" class="article-no-image">\n\n                            <div list-row-head>\n\n                                <ion-avatar (tap)="this.userInfo.user_type === usertype.RESIDENT && navigateToProviderDetails(activity)">\n\n                                    <lazy-img *ngIf="activity.header.leftIconUrl" [inputSrc]="activity.header.leftIconUrl" alt=""></lazy-img>\n\n                                </ion-avatar>\n\n                            </div>\n\n                            <ion-col list-expand-details>\n\n                                <!-- list-row -->\n\n                                <h4 class="text18px-normal-black" *ngIf="activity.body.headLineText">{{activity.body.headLineText}}</h4>\n\n                                <!--<p class="text10px-thin-grey" *ngIf="activity.timestampAgo">{{activity.timestampAgo}}</p>-->\n\n                                <h6 title-info *ngIf="activity.body.detailText">{{activity.body.detailText}}</h6>\n\n                            </ion-col>\n\n                            <div list-row-footer class="action-bar">\n\n                                <ion-row>\n\n                                    <ion-col start class="text10px-thin-grey" *ngIf="activity.timestampAgo">\n\n                                        {{activity.timestampAgo}}\n\n                                    </ion-col>\n\n                                    <ion-col end>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" (click)="navigateToAroundMe(activity)">\n\n                                            <ion-icon class="icons-house"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" (click)="callToPM(activity)">\n\n                                            <ion-icon class="icons-contact"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === undefined || (activity.isReading !== undefined && activity.isReading === false)"\n\n                                            (click)="readFeed(activity,cardIndex)">\n\n                                            <ion-icon class="icons-read"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === true"\n\n                                            (click)="muteFeed(activity)">\n\n                                            <ion-icon class="icons-mute"></ion-icon>\n\n                                        </button>\n\n                                    </ion-col>\n\n                                </ion-row>\n\n                            </div>\n\n                        </div>\n\n                        <!-- Property manager connect template -->\n\n\n\n                        <!-- Residency declined template -->\n\n                        <div *ngIf="activity.template === activityTemplates[11]" class="article-no-image">\n\n                            <div list-row-head>\n\n                                <ion-avatar (tap)="this.userInfo.user_type === usertype.RESIDENT && navigateToProviderDetails(activity)">\n\n                                    <lazy-img *ngIf="activity.header.leftIconUrl" [inputSrc]="activity.header.leftIconUrl" alt=""></lazy-img>\n\n                                </ion-avatar>\n\n                            </div>\n\n                            <ion-col list-expand-details>\n\n                                <!-- list-row -->\n\n                                <h4 class="text18px-normal-black" *ngIf="activity.body.headLineText">{{activity.body.headLineText}}</h4>\n\n                                <!--<p class="text10px-thin-grey" *ngIf="activity.timestampAgo">{{activity.timestampAgo}}</p>-->\n\n                                <h6 title-info *ngIf="activity.body.detailText">{{activity.body.detailText}}</h6>\n\n                            </ion-col>\n\n                            <div list-row-footer class="action-bar">\n\n                                <ion-row>\n\n                                    <ion-col start class="text10px-thin-grey" *ngIf="activity.timestampAgo">\n\n                                        {{activity.timestampAgo}}\n\n                                    </ion-col>\n\n                                    <ion-col end>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" (click)="navigateToAroundMe(activity)">\n\n                                            <ion-icon class="icons-around-me"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" (click)="callToPM(activity)">\n\n                                            <ion-icon class="icons-contact"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === undefined || (activity.isReading !== undefined && activity.isReading === false)"\n\n                                            (click)="readFeed(activity,cardIndex)">\n\n                                            <ion-icon class="icons-read"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === true"\n\n                                            (click)="muteFeed(activity)">\n\n                                            <ion-icon class="icons-mute"></ion-icon>\n\n                                        </button>\n\n                                    </ion-col>\n\n                                </ion-row>\n\n                            </div>\n\n                        </div>\n\n                        <!-- Residency declined template -->\n\n\n\n                        <!-- Residency Accept template -->\n\n                        <div *ngIf="activity.template === activityTemplates[12]" class="article-no-image">\n\n                            <div list-row-head>\n\n                                <ion-avatar (tap)="this.userInfo.user_type === usertype.RESIDENT && navigateToProviderDetails(activity)">\n\n                                    <lazy-img *ngIf="activity.header.leftIconUrl" [inputSrc]="activity.header.leftIconUrl" alt=""></lazy-img>\n\n                                </ion-avatar>\n\n                            </div>\n\n                            <ion-col list-expand-details>\n\n                                <!-- list-row -->\n\n                                <h4 class="text18px-normal-black" *ngIf="activity.body.headLineText">{{activity.body.headLineText}}</h4>\n\n                                <!--<p class="text10px-thin-grey" *ngIf="activity.timestampAgo">{{activity.timestampAgo}}</p>-->\n\n                                <h6 title-info *ngIf="activity.body.detailText">{{activity.body.detailText}}</h6>\n\n                            </ion-col>\n\n                            <div list-row-footer class="action-bar">\n\n                                <ion-row>\n\n                                    <ion-col start class="text10px-thin-grey" *ngIf="activity.timestampAgo">\n\n                                        {{activity.timestampAgo}}\n\n                                    </ion-col>\n\n                                    <ion-col end>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === undefined || (activity.isReading !== undefined && activity.isReading === false)"\n\n                                            (click)="readFeed(activity,cardIndex)">\n\n                                            <ion-icon class="icons-read"></ion-icon>\n\n                                        </button>\n\n                                        <button ion-item detail-none icon-only [disabled]="this.userInfo.user_type !== usertype.RESIDENT" *ngIf="activity.isReading === true"\n\n                                            (click)="muteFeed(activity)">\n\n                                            <ion-icon class="icons-mute"></ion-icon>\n\n                                        </button>\n\n                                    </ion-col>\n\n                                </ion-row>\n\n                            </div>\n\n                        </div>\n\n                        <!-- Residency Accept template -->\n\n                    </ion-item>\n\n                </ion-card>\n\n            </div>\n\n        </ion-list>\n\n\n\n\n\n    </div>\n\n    <ion-infinite-scroll (ionInfinite)="loadMore($event)" [enabled]="activityInfiniteScrollEnabled">\n\n        <ion-infinite-scroll-content loadingSpinner="bubbles" loadingText="{{\'ERROR_MESSAGES.LOADING_MORE_DATA_TO_LOAD\' | translate}}"></ion-infinite-scroll-content>\n\n    </ion-infinite-scroll>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\activity\activity-feed.html"*/,
        providers: [__WEBPACK_IMPORTED_MODULE_6__activity_service__["a" /* ActivityService */]]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_6__activity_service__["a" /* ActivityService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_5__providers_user_service__["a" /* UserService */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Platform */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_9__providers_pubnub_service__["a" /* PubNubService */],
        __WEBPACK_IMPORTED_MODULE_10__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_13__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_12__ionic_native_call_number__["a" /* CallNumber */], __WEBPACK_IMPORTED_MODULE_14__ionic_native_social_sharing__["a" /* SocialSharing */], __WEBPACK_IMPORTED_MODULE_3__ionic_native_text_to_speech__["a" /* TextToSpeech */],
        __WEBPACK_IMPORTED_MODULE_11__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_7__conversations_chat_service__["a" /* ChatService */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_keyboard__["a" /* Keyboard */]])
], ActivityPage);

//# sourceMappingURL=activity-feed.js.map

/***/ }),

/***/ 180:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GroupChat; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_keyboard__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__chat_box_chat_box__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__connection_list__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__shared_util_date__ = __webpack_require__(181);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var GroupChat = (function () {
    function GroupChat(navCtrl, navParams, userService, analyticsService, chatService, pubNubService, events, translateService, loaderService, keyboard) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.userService = userService;
        this.analyticsService = analyticsService;
        this.chatService = chatService;
        this.pubNubService = pubNubService;
        this.events = events;
        this.translateService = translateService;
        this.loaderService = loaderService;
        this.keyboard = keyboard;
        this.conversationType = __WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE;
        this.placeholderIamges = __WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].PLACEHOLDER_IMAGES;
        this.selectedGroup = this.navParams.get('selectedGroup');
        this.connectionList = new __WEBPACK_IMPORTED_MODULE_6__connection_list__["a" /* ConnectionList */](chatService, pubNubService, translateService, loaderService);
        this.userData = this.userService.getUser();
        this.connectedUsersList = [];
        this.group = { searchStr: '', name: '', members: [], memberIds: [], profile_pic: '', isEditAction: false };
    }
    GroupChat.prototype.ionViewDidEnter = function () {
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].PAGES.GROUP_CHAT);
        this.initSearchMembers();
        this.initGroupMembers();
        this.content.resize();
    };
    GroupChat.prototype.initSearchMembers = function () {
        var _this = this;
        var members = [], memberIds = [];
        if (this.selectedGroup) {
            //Navigation from Conversation Settings
            this.pageCount = 3;
            if (this.selectedGroup.type === __WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP) {
                this.group.isEditAction = true;
                this.group.profile_pic = this.selectedGroup.profile_pic;
                if (this.selectedGroup.name !== undefined) {
                    this.group.name = this.selectedGroup.user_name;
                }
                if (this.selectedGroup.members && this.selectedGroup.members.length > 0) {
                    this.selectedGroup.members.forEach(function (user) {
                        if (_this.selectedGroup.user_id !== user.user_id) {
                            members.push(user);
                            memberIds.push(user.user_id);
                        }
                    });
                }
            }
            else {
                var tempUser = {
                    user_id: this.selectedGroup.user_id,
                    user_name: this.selectedGroup.user_name,
                    profile_pic: this.selectedGroup.profile_pic
                };
                members.push(tempUser);
                memberIds.push(tempUser.user_id);
            }
            this.group.members = members;
            this.group.memberIds = memberIds;
        }
        else {
            //Navigation from Create New Group
            this.pageCount = 2;
        }
    };
    GroupChat.prototype.initGroupMembers = function () {
        var _this = this;
        var params = { user_id: this.userData.user_id, is_group_data_needed: false };
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.connectionList.getUserList(params, function (error, response) {
            _this.connectionList.updatePresenceStatus(response.connected, function () {
                _this.usersListCopy = JSON.parse(JSON.stringify(response.connected));
                _this.searchUser('');
                _this.loaderService.dismissLoader();
            });
        });
    };
    GroupChat.prototype.selectUser = function (user) {
        this.content.resize();
        user.selected = true;
        if (user.selected) {
            this.group.members.push(user);
            this.group.memberIds.push(user.user_id);
        }
    };
    GroupChat.prototype.unSelectUser = function (user, index) {
        user.selected = false;
        this.group.members.splice(index, 1);
        this.group.memberIds.splice(index, 1);
        this.searchUser(this.group.searchStr);
        this.content.resize();
    };
    GroupChat.prototype.searchUser = function (searchString) {
        var _this = this;
        // Reset items back to all of the items    
        this.connectedUsersList = JSON.parse(JSON.stringify(this.usersListCopy));
        // if the value is an empty string don't filter the items
        this.connectedUsersList = this.connectedUsersList.filter(function (item) {
            return ((item.user_name.toLowerCase().indexOf(searchString.toLowerCase()) > -1) && (_this.group.memberIds.indexOf(item.receiver_id) === -1));
        });
    };
    GroupChat.prototype.createGroup = function () {
        var _this = this;
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.pubNubService.getTimeToken(function (pubnubtimestoken) {
            _this.createGroupPubnub(pubnubtimestoken);
        });
    };
    GroupChat.prototype.createGroupPubnub = function (timestamp) {
        var _this = this;
        var that = this, groupObject, sharedChannel, conversationObj;
        var joining_time_token = timestamp;
        if (this.selectedGroup && this.selectedGroup.type === __WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP) {
            sharedChannel = this.selectedGroup.shared_channel;
            joining_time_token = this.selectedGroup.joining_time_token;
        }
        else {
            sharedChannel = that.userData.user_id + '_' + new Date().getTime();
        }
        groupObject = {
            user_id: that.userData.user_id,
            name: that.group.name,
            shared_channel: sharedChannel,
            members: that.group.memberIds,
            created_by: that.userData.user_id,
            type: __WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP,
            joining_time_token: timestamp,
            leaving_time_token: null
        };
        if (groupObject.name.trim().length > 0 && groupObject.members.length > 0) {
            that.chatService.createOrEditConversation(groupObject, this.group.isEditAction).subscribe(function (result) {
                if (result.status === __WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                    var groupUpdates_1 = { addedMembers: [], removedMembers: [] };
                    if (_this.group.isEditAction) {
                        groupUpdates_1 = that.manageGroupUpdates(groupObject.members);
                    }
                    else {
                        groupUpdates_1.addedMembers = groupObject.members;
                    }
                    if (groupUpdates_1.removedMembers && groupUpdates_1.removedMembers.length > 0) {
                        _this.pubNubService.removeChannelFromGroup(groupUpdates_1.removedMembers, groupObject.shared_channel, groupObject.name, timestamp);
                    }
                    if ((groupUpdates_1.addedMembers && groupUpdates_1.addedMembers.length > 0) || groupObject.name !== _this.selectedGroup.name) {
                        that.pubNubService.addChanneltoGroup(groupUpdates_1.addedMembers, groupObject.shared_channel, groupObject.name, that.userService.userObj.user_id, that.userService.deviceToken, that.userService.pushPlatform);
                    }
                    // Notify group name change to members except addedMembers and removedMembers
                    if (_this.group.isEditAction && _this.group.name !== _this.selectedGroup.user_name) {
                        var remainingMembers_1 = [];
                        if (groupUpdates_1.addedMembers.length > 0 || groupUpdates_1.removedMembers.length > 0) {
                            groupObject.members.forEach(function (memberId) {
                                if (groupUpdates_1.addedMembers.indexOf(memberId) === -1
                                    && groupUpdates_1.removedMembers.indexOf(memberId) === -1) {
                                    remainingMembers_1.push(memberId);
                                }
                            });
                        }
                        else {
                            remainingMembers_1 = groupObject.members;
                        }
                        // console.log('remainingMembers', remainingMembers);
                        if (remainingMembers_1.length > 0) {
                            _this.pubNubService.setUserStateGroup(remainingMembers_1, __WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].USER_STATES.GROUP_RENAME, groupObject.shared_channel, groupObject.name);
                        }
                    }
                    conversationObj = {
                        name: groupObject.name,
                        user_id: groupObject.shared_channel,
                        user_name: groupObject.name,
                        user_email: groupObject.name,
                        shared_channel: groupObject.shared_channel,
                        receiver_id: groupObject.shared_channel,
                        members: _this.group.members,
                        type: groupObject.type,
                        timetoken: timestamp,
                        joining_time_token: joining_time_token,
                        leaving_time_token: null
                    };
                    if (!_this.group.isEditAction) {
                        _this.pubNubService.setPushNotificationChannels([sharedChannel]);
                        if (!!_this.userService.userObj.notification_enabled) {
                            _this.pubNubService.registerDevice([sharedChannel], _this.userService.deviceToken, _this.userService.pushPlatform);
                        }
                        conversationObj["joining_time_token"] = timestamp;
                        conversationObj["latestMessage"] = _this.translateService.instant('ERROR_MESSAGES.GRP_JOINED');
                        conversationObj["latestMessageTimestamp"] = Object(__WEBPACK_IMPORTED_MODULE_10__shared_util_date__["b" /* formatDate */])(_this.pubNubService.getDateTime(timestamp), _this.translateService);
                        conversationObj["connection_status"] = __WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED;
                        conversationObj["leaving_time_token"] = null;
                    }
                    that.navCtrl.remove((that.navCtrl.length() - _this.pageCount), _this.pageCount, { animate: false, progressAnimation: false }).then(function () {
                        that.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__chat_box_chat_box__["a" /* ChatBox */], { user: conversationObj }).then(function () {
                            that.events.publish(__WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].APP_EVENTS.GROUP_CREATED, conversationObj, "Group Created");
                            that.loaderService.dismissLoader();
                        });
                    });
                }
                else {
                    _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                    _this.loaderService.dismissLoader();
                }
            }, function (error) {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                _this.loaderService.dismissLoader();
            });
        }
        else {
            this.loaderService.dismissLoader();
        }
    };
    GroupChat.prototype.manageGroupUpdates = function (memberIds) {
        var _this = this;
        var removedMembers = [];
        var existingMembers = [];
        var addedMembers = [];
        this.selectedGroup.members.forEach(function (member) {
            if (memberIds.indexOf(member.user_id) == -1 && member.user_id !== _this.userData.user_id) {
                removedMembers.push(member.user_id);
            }
            existingMembers.push(member.user_id);
        });
        memberIds.forEach(function (memberId) {
            if (existingMembers.indexOf(memberId) == -1 && memberId !== _this.userData.user_id) {
                addedMembers.push(memberId);
            }
        });
        return { addedMembers: addedMembers, removedMembers: removedMembers };
    };
    GroupChat.prototype.changeProfile = function () {
        // TODO 
    };
    GroupChat.prototype.hideKeyboard = function () {
        this.keyboard.close();
    };
    return GroupChat;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
], GroupChat.prototype, "content", void 0);
GroupChat = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-group-chat',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\conversations\group-chat\group-chat.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title *ngIf="selectedGroup && selectedGroup.type !== conversationType.GROUP">{{\'CONVERSATIONS.GROUP_CHAT.ADDPEOPLE_TITLE\' | translate}}</ion-title>\n\n        <ion-title *ngIf="!selectedGroup && !group.isEditAction">{{\'CONVERSATIONS.GROUP_CHAT.CREATE_TITLE\' | translate}}</ion-title>\n\n        <ion-title *ngIf="selectedGroup && selectedGroup.type === conversationType.GROUP && group.isEditAction">{{\'CONVERSATIONS.GROUP_CHAT.EDIT_TITLE\' | translate}}</ion-title>\n\n        <ion-buttons end>\n\n            <button ion-button text-outline-btn [disabled]="!((group.name.length > 0) && (group.members.length>1))" (tap)="createGroup()">\n\n               <!--{{\'BUTTON_LABEL.SAVE\' | translate}}-->\n\n               <ion-icon class="icons-correct"></ion-icon>\n\n            </button>\n\n        </ion-buttons>\n\n    </ion-navbar>\n\n    <ion-toolbar>\n\n        <div class="group-title">\n\n            <ion-icon class="icons-chat01"></ion-icon>\n\n            <ion-input right class="text-field" [(ngModel)]="group.name" placeholder="{{\'CONVERSATIONS.GROUP_CHAT.GROUP_TITLE\' | translate}}" maxlength="50"></ion-input>\n\n        </div>\n\n        <div search-box [ngClass]="{\'only-search\':group.members.length===0}">\n\n            <div class="contact-chip">\n\n                <ion-icon class="icons-search"></ion-icon>\n\n                <ion-chip #chip2 *ngIf="group.members.length>0">\n\n                    <div class="select-contact" *ngFor="let user of group.members let userIndex=index">\n\n                        <span>{{user.user_name}}</span>\n\n                        <button ion-button clear color="dark" (click)="unSelectUser(user,userIndex)">\n\n                        <ion-icon class="icons-close" name="close-circle"></ion-icon>\n\n                    </button>\n\n                    </div>\n\n                    <ion-searchbar class="input-searchbar" [(ngModel)]="group.searchStr" placeholder="" (ionInput)="searchUser(group.searchStr)"></ion-searchbar>\n\n                </ion-chip>\n\n                <div *ngIf="group.members.length<=0">\n\n                    <ion-searchbar class="input-searchbar" [(ngModel)]="group.searchStr" placeholder="{{\'CONVERSATIONS.GROUP_CHAT.SEARCH_PEOPLE\' | translate}}" (ionInput)="searchUser(group.searchStr)"></ion-searchbar>\n\n                </div>\n\n            </div>\n\n        </div>\n\n    </ion-toolbar>\n\n</ion-header>\n\n\n\n<ion-content silvergrey-background new-message (pan)="hideKeyboard();" [ngClass]="{\'add-contacts\':group.members.length>0,\'remove-contacts\':group.members.length ===0}" class="scroll-content ionic-scroll has-header has-footer">\n\n    <ion-list>\n\n        <ion-item-divider *ngIf="{first: first}; let firstUser; let user;">{{\'CONVERSATIONS.GROUP_CHAT.TITLE\' | translate }}</ion-item-divider>\n\n    </ion-list>\n\n    <ion-list *ngFor="let user of connectedUsersList; let firstUser=first;">\n\n        <button ion-item detail-none class="list-grid-136" *ngIf="user.selected!== true" [ngClass]="{\'selected-card\':user.selected=== true}" (click)="!user.selected && selectUser(user)">\n\n            <h2><span class="text14px-black">{{user.user_name}}</span></h2>\n\n            <!--<p subtitle12px>Last seen 3 hours ago</p>-->\n\n            <ion-avatar item-end class="profile-img-44" [ngClass]="{\'active\': user.presence, \'de-active\':!user.presence}">\n\n                <img *ngIf="user.profile_pic" src={{user.profile_pic}} alt="" />\n\n                <img *ngIf="!user.profile_pic" [src]="placeholderIamges.PROFILE_PIC" alt="" />\n\n            </ion-avatar>\n\n        </button>\n\n    </ion-list>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\conversations\group-chat\group-chat.html"*/,
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_4__providers_user_service__["a" /* UserService */],
        __WEBPACK_IMPORTED_MODULE_11__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_5__chat_service__["a" /* ChatService */], __WEBPACK_IMPORTED_MODULE_7__providers_pubnub_service__["a" /* PubNubService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */],
        __WEBPACK_IMPORTED_MODULE_12__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_8__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_keyboard__["a" /* Keyboard */]])
], GroupChat);

//# sourceMappingURL=group-chat.js.map

/***/ }),

/***/ 181:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return formatDate; });
/* unused harmony export localDate */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return dateDifference; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(57);



var formatDate = function (inPutDate, translateService) {
    var givenDate, currentDate, dayDiff, responseStr, monthsInShort, periods;
    monthsInShort = [
        translateService.instant('MONTHS_IN_SHORT.JAN'),
        translateService.instant('MONTHS_IN_SHORT.FEB'),
        translateService.instant('MONTHS_IN_SHORT.MAR'),
        translateService.instant('MONTHS_IN_SHORT.APR'),
        translateService.instant('MONTHS_IN_SHORT.MAY'),
        translateService.instant('MONTHS_IN_SHORT.JUN'),
        translateService.instant('MONTHS_IN_SHORT.JUL'),
        translateService.instant('MONTHS_IN_SHORT.AUG'),
        translateService.instant('MONTHS_IN_SHORT.SEP'),
        translateService.instant('MONTHS_IN_SHORT.OCT'),
        translateService.instant('MONTHS_IN_SHORT.NOV'),
        translateService.instant('MONTHS_IN_SHORT.DEC'),
    ];
    periods = translateService.instant('TIMESTAMP.AM');
    givenDate = new Date(inPutDate);
    currentDate = new Date();
    // var a = moment(givenDate);
    // var b = moment(currentDate);
    // console.log(a.diff(b, 'days'));
    dayDiff = __WEBPACK_IMPORTED_MODULE_0_moment__(currentDate).diff(__WEBPACK_IMPORTED_MODULE_0_moment__(givenDate), 'days');
    if (dayDiff === 0 && (currentDate.getDate() - givenDate.getDate() === 0)) {
        responseStr = localDate(givenDate, translateService.currentLang);
    }
    else if (dayDiff <= 1) {
        responseStr = translateService.instant('TIMESTAMP.DAY_AGO');
    }
    else {
        responseStr = monthsInShort[givenDate.getMonth()] + ' ' + givenDate.getDate();
    }
    return responseStr;
};
function localDate(value, currentLang) {
    var datePipe = new __WEBPACK_IMPORTED_MODULE_1__angular_common__["d" /* DatePipe */](currentLang);
    var pattern = 'hh:mm a';
    if (currentLang.split('-')[0] === 'zh') {
        pattern = 'hh:mm';
    }
    return datePipe.transform(value, pattern);
}
var dateDifference = function (currentDate, givenDate) {
    return __WEBPACK_IMPORTED_MODULE_0_moment__(currentDate).diff(__WEBPACK_IMPORTED_MODULE_0_moment__(givenDate), 'days');
};
//# sourceMappingURL=date.js.map

/***/ }),

/***/ 182:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CreatePlacementFeedPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__activity_service__ = __webpack_require__(42);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__create_placement_feed_description_feed_description_feed__ = __webpack_require__(464);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_camera__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_upload_service__ = __webpack_require__(85);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__selectImage_select_image__ = __webpack_require__(466);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__shared_modals_set_delivery_feed_set_delivery_feed__ = __webpack_require__(183);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var CreatePlacementFeedPage = (function () {
    function CreatePlacementFeedPage(activityService, navCtrl, navParams, userService, events, actionSheetCtrl, camera, translateService, uploadService, loaderService, modalCtrl) {
        this.activityService = activityService;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.userService = userService;
        this.events = events;
        this.actionSheetCtrl = actionSheetCtrl;
        this.camera = camera;
        this.translateService = translateService;
        this.uploadService = uploadService;
        this.loaderService = loaderService;
        this.modalCtrl = modalCtrl;
        this.singleSelectRows = [];
        this.multiSelectRows = [];
        this.feedInfo = this.getDefaultActivityModel(this.navParams.get('selectedTemplate'), this.navParams.get('selectedSegment'));
        this.selectedBranch = this.navParams.get('selectedBranch');
    }
    CreatePlacementFeedPage.prototype.ionViewDidEnter = function () {
    };
    CreatePlacementFeedPage.prototype.uploadDone = function (error, url, imageCategory) {
        if (!error) {
            //this.serviceRequestObj.photos.push(url);
            if (imageCategory === __WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].FEED_IMAGE_TYPES.LOGO) {
                this.feedInfo.header.leftIconUrl = url;
            }
            else {
                this.feedInfo.header.bgImageUrl = url;
            }
        }
        console.log(error, url);
    };
    CreatePlacementFeedPage.prototype.presentActionSheet = function (imageCategory) {
        var _this = this;
        var that = this;
        var uploadOptions = {
            sourceType: that.camera.PictureSourceType.CAMERA, bucketSource: "feeds", cropImage: true,
            targetHeight: imageCategory === __WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].FEED_IMAGE_TYPES.LOGO ? 100 : 168,
            targetWidth: imageCategory === __WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].FEED_IMAGE_TYPES.LOGO ? 100 : 312,
            organizationId: this.selectedBranch.organization_id,
            branchId: this.selectedBranch._id,
            imageCategory: imageCategory
        };
        var actionSheet = that.actionSheetCtrl.create({
            cssClass: 'photo-sheet',
            buttons: [
                {
                    text: this.translateService.instant("CONVERSATIONS.NEW_MSG.TAKE_PHOTO"),
                    role: 'Take a photo',
                    cssClass: 'take-photo',
                    icon: 'icons-camera',
                    handler: function () {
                        that.uploadService.takeFromCamera(uploadOptions, function (error, image) {
                            that.uploadDone.call(that, error, image, imageCategory);
                        });
                    }
                }, {
                    text: this.translateService.instant("CONVERSATIONS.NEW_MSG.ATTACH_PHOTO"),
                    cssClass: 'take-photo',
                    icon: 'icons-image-photo',
                    handler: function () {
                        uploadOptions.sourceType = that.camera.PictureSourceType.PHOTOLIBRARY;
                        that.uploadService.takeFromCamera(uploadOptions, function (error, image) {
                            that.uploadDone.call(that, error, image, imageCategory);
                        });
                    }
                },
                {
                    text: this.translateService.instant("CONVERSATIONS.NEW_MSG.LIB_PHOTO"),
                    role: 'Load',
                    cssClass: 'take-photo',
                    icon: 'icons-grid',
                    handler: function () {
                        _this.showImageGallery(imageCategory);
                    }
                }
            ]
        });
        actionSheet.present();
    };
    CreatePlacementFeedPage.prototype.getDefaultActivityModel = function (template, userSegment) {
        return {
            template: template,
            header: {
                leftIconUrl: '',
                leftIconName: '',
                title: '',
                bgImageUrl: ''
            },
            body: {
                headLineText: '',
                detailText: '',
                imageUrl: ''
            },
            openInUrl: '',
            user_segment: userSegment !== undefined ? userSegment : '',
            poll: {
                question: '',
                answer_options: [],
                is_multiselect: false
            },
            is_allow_conversation: false
        };
    };
    CreatePlacementFeedPage.prototype.presentDescriptionModal = function () {
        var _this = this;
        this.placementInfo = {};
        this.placementInfo.title = this.feedInfo.header.title;
        this.placementInfo.description = this.feedInfo.body.detailText;
        this.placementInfo.allowConversation = this.feedInfo.is_allow_conversation;
        this.placementInfo.url = this.feedInfo.openInUrl;
        var descriptionModal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_6__create_placement_feed_description_feed_description_feed__["a" /* DescriptionFeedPage */], {
            placementInfo: this.placementInfo, organisationId: this.selectedBranch.organization_id
        });
        descriptionModal.onDidDismiss(function (data) {
            //console.log(data);
            if (data !== null) {
                _this.feedInfo.header.title = data.title;
                _this.feedInfo.body.headLineText = data.title;
                _this.feedInfo.body.detailText = data.description;
                _this.feedInfo.openInUrl = data.url;
                _this.feedInfo.is_allow_conversation = data.allowConversation;
            }
        });
        descriptionModal.present();
    };
    CreatePlacementFeedPage.prototype.showImageGallery = function (imageCategory) {
        var _this = this;
        var imageModel = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_9__selectImage_select_image__["a" /* SelectImage */], {
            organisationId: this.selectedBranch.organization_id,
            imageCategory: imageCategory
        });
        imageModel.onDidDismiss(function (data) {
            if (data) {
                if (data.imageType === __WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].FEED_IMAGE_TYPES.LOGO) {
                    _this.feedInfo.header.leftIconUrl = data.selectedImage;
                }
                else {
                    _this.feedInfo.header.bgImageUrl = data.selectedImage;
                }
            }
        });
        imageModel.present();
    };
    // submitCard() {
    //     let that = this;
    //     let params: ICreateFeed = this.activity;
    //     that.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
    //     params.branch_id = this.selectedBranch;
    //     params.scheduled_date = undefined;
    //     params.organization_id = this.selectedBranch.organization_id;
    //     params.feed_owner_id = this.userService.userObj.user_id;
    //     params.sender_ref_id = this.userService.userObj.user_id;
    //     params.created_by = this.userService.userObj.user_id;
    //     params.is_campaign_feed = false;
    //     //console.log("Data model ", params)
    //     that.activityService.createFeed(params).subscribe((response: any) => {
    //         that.loaderService.dismissLoader();
    //         const startIndex = that.navCtrl.getActive().index - 1;
    //         that.navCtrl.remove(startIndex, 2);
    //     });
    // }
    CreatePlacementFeedPage.prototype.setDelivery = function () {
        var _this = this;
        var params = this.feedInfo;
        this.feedInfo.is_edit_feed = false;
        params.branch_id = this.selectedBranch;
        //params.scheduled_date = undefined;
        params.organization_id = this.selectedBranch.organization_id;
        params.feed_owner_id = this.userService.userObj.user_id;
        params.sender_ref_id = this.userService.userObj.user_id;
        params.created_by = this.userService.userObj.user_id;
        params.is_campaign_feed = false;
        this.scheduledInfo = { isSubmit: false };
        if (this.feedInfo.scheduled_date !== undefined) {
            this.scheduledInfo.scheduledDate = this.feedInfo.scheduled_date;
            this.scheduledInfo.selectedScheduled = "schedule";
        }
        else {
            this.scheduledInfo.scheduledDate = new Date().toISOString();
            this.scheduledInfo.selectedScheduled = "now";
        }
        this.scheduledInfo.scheduledTime = this.scheduledInfo.scheduledDate;
        var setDeliveryModal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_11__shared_modals_set_delivery_feed_set_delivery_feed__["a" /* SetDeliveryFeedModal */], {
            scheduledInfo: this.scheduledInfo, placementFeedRequest: params, feedType: this.feedInfo.template
        });
        setDeliveryModal.onDidDismiss(function (data) {
            if (data && data.isSubmit) {
                var startIndex = _this.navCtrl.getActive().index - 1;
                _this.navCtrl.remove(startIndex, 2);
            }
            else if (data) {
                _this.scheduledInfo.selectedScheduled = data.selectedScheduled;
                _this.feedInfo.scheduled_date = data.scheduledDate;
            }
        });
        setDeliveryModal.present();
    };
    return CreatePlacementFeedPage;
}());
CreatePlacementFeedPage = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'create-placement-feed',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\activity\create-placement-feed\create-placement-feed.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title> {{\'ACTIVITY.BUILD_PLACEMENT\' | translate}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content silvergrey-background>\n\n    <ion-list list-group>\n\n        <ion-item selected-row list-row>\n\n            <!-- Blog Article template -->\n\n            <div [ngClass]="{\'article-image\': this.feedInfo.header.bgImageUrl !== \'\', \'article-no-image\': this.feedInfo.header.bgImageUrl === \'\'}">\n\n                <div list-row-head class="feed-upload">\n\n                    <ion-avatar (click)="presentActionSheet(\'images\')" [ngClass]="{\'bg-image-168\': this.feedInfo.header.bgImageUrl !== \'\'}">\n\n                        <ion-icon *ngIf="!this.feedInfo.header.bgImageUrl" class="icons-uploadimg"></ion-icon>\n\n                        <img *ngIf="this.feedInfo.header.bgImageUrl !== \'\'" src="{{this.feedInfo.header.bgImageUrl}}" alt="" />\n\n                    </ion-avatar>\n\n                    <ion-avatar item-left (click)="presentActionSheet(\'logos\')">\n\n                        <ion-icon *ngIf="!this.feedInfo.header.leftIconUrl" class="icons-uploadimg"></ion-icon>\n\n                        <img *ngIf="this.feedInfo.header.leftIconUrl !== \'\'" src="{{this.feedInfo.header.leftIconUrl}}" alt="" />\n\n                    </ion-avatar>\n\n                </div>\n\n                <ion-col list-expand-details (click)="presentDescriptionModal()">\n\n                    <h4 class="text18px-normal-black" *ngIf="this.feedInfo.header.title === \'\'">{{\'ACTIVITY.CREATE_FEED.HEADLINE\' | translate}}</h4>\n\n                    <h6 class="text18px-normal-black" *ngIf="this.feedInfo.body.detailText === \'\'">{{\'ACTIVITY.CREATE_FEED.SUMMARY\' | translate}}</h6>\n\n                    <h4 class="text18px-normal-black">{{this.feedInfo.header.title}}</h4>\n\n                    <h6 title-info>{{this.feedInfo.body.detailText}}</h6>\n\n                </ion-col>\n\n                <div list-row-footer class="action-bar">\n\n                    <ion-row>\n\n                        <ion-col start class="text10px-thin-grey">\n\n                            {{\'ACTIVITY.CREATE_FEED.NOW\' | translate}}\n\n                        </ion-col>\n\n                        <ion-col end>\n\n\n\n                            <button ion-item detail-none icon-only *ngIf="feedInfo.openInUrl !== \'\'">\n\n                                <ion-icon class="icons-read-more"></ion-icon>\n\n                            </button>\n\n                            <button ion-item detail-none icon-only *ngIf="feedInfo.is_allow_conversation === true">\n\n                                <ion-icon class="icons-conversion"></ion-icon>\n\n                            </button>\n\n                            <button ion-item detail-none icon-only>\n\n                                <ion-icon class="icons-read"></ion-icon>\n\n                            </button>\n\n                            <button ion-item detail-none icon-only class="like">\n\n                                <ion-icon class="icons-unlike"></ion-icon>\n\n                            </button>\n\n                            <button ion-item detail-none icon-only>\n\n                                <ion-icon class="icons-share"></ion-icon>\n\n                            </button>\n\n\n\n                        </ion-col>\n\n                    </ion-row>\n\n                </div>\n\n            </div>\n\n            <!-- Blog Article template -->\n\n        </ion-item>\n\n    </ion-list>\n\n</ion-content>\n\n<ion-footer footer-full>\n\n    <ion-toolbar>\n\n        <button ion-button block [disabled]="feedInfo.body.headLineText.length === 0 || feedInfo.body.detailText.length ===0 || feedInfo.header.leftIconUrl.length === 0 "\n\n            class="button-square-blue" (click)="setDelivery()">{{\'ACTIVITY.CREATE_FEED.SET_DELIVERY\' | translate}}</button>\n\n    </ion-toolbar>\n\n\n\n</ion-footer>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\activity\create-placement-feed\create-placement-feed.html"*/,
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__activity_service__["a" /* ActivityService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__providers_user_service__["a" /* UserService */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */], __WEBPACK_IMPORTED_MODULE_7__ionic_native_camera__["a" /* Camera */],
        __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_8__providers_upload_service__["a" /* UploadService */],
        __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* ModalController */]])
], CreatePlacementFeedPage);

//# sourceMappingURL=create-placement-feed.js.map

/***/ }),

/***/ 183:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SetDeliveryFeedModal; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pages_activity_activity_service__ = __webpack_require__(42);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_loader_service__ = __webpack_require__(10);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var SetDeliveryFeedModal = (function () {
    function SetDeliveryFeedModal(activityService, navCtrl, params, loaderService, events, translateService, viewCtrl) {
        this.activityService = activityService;
        this.navCtrl = navCtrl;
        this.params = params;
        this.loaderService = loaderService;
        this.events = events;
        this.translateService = translateService;
        this.viewCtrl = viewCtrl;
        this.scheduledInfo = params.get('scheduledInfo');
        this.placementFeedRequest = params.get('placementFeedRequest');
        this.pollFeedRequest = params.get('pollFeedRequest');
        this.feedType = params.get('feedType');
        this.scheduledInfo.scheduledDate = __WEBPACK_IMPORTED_MODULE_4_moment___default()(this.scheduledInfo.scheduledDate).format();
        this.scheduledInfo.scheduledTime = __WEBPACK_IMPORTED_MODULE_4_moment___default()(this.scheduledInfo.scheduledDate).format();
    }
    SetDeliveryFeedModal.prototype.dismiss = function () {
        if (this.scheduledInfo.selectedScheduled == __WEBPACK_IMPORTED_MODULE_5__config__["a" /* CONSTANTS */].DELIVERY_TYPE.NOW) {
            this.scheduledInfo.scheduledDate = undefined;
        }
        this.viewCtrl.dismiss(this.scheduledInfo);
    };
    SetDeliveryFeedModal.prototype.validate = function () {
        if (this.scheduledInfo.selectedScheduled !== __WEBPACK_IMPORTED_MODULE_5__config__["a" /* CONSTANTS */].DELIVERY_TYPE.NOW) {
            var selectedDate = new Date(this.scheduledInfo.scheduledDate);
            var selectedTime = new Date(this.scheduledInfo.scheduledTime);
            var currentDate = new Date();
            selectedDate.setHours(selectedTime.getHours());
            selectedDate.setMinutes(selectedTime.getMinutes());
            selectedDate.setSeconds(selectedTime.getSeconds());
            selectedDate.setMilliseconds(selectedTime.getMilliseconds());
            if (currentDate > selectedDate) {
                this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.INVALID_TIME'));
                return false;
            }
            this.deliveryDate = selectedDate;
        }
        else {
            this.deliveryDate = undefined;
        }
        return true;
    };
    SetDeliveryFeedModal.prototype.submitCard = function () {
        var _this = this;
        if (this.validate()) {
            var that_1 = this;
            that_1.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
            if (that_1.feedType === __WEBPACK_IMPORTED_MODULE_5__config__["a" /* CONSTANTS */].TEMPLATE.PLACEMENT) {
                that_1.placementFeedRequest.scheduled_date = that_1.deliveryDate;
                that_1.activityService.createFeed(that_1.placementFeedRequest).subscribe(function (response) {
                    that_1.loaderService.dismissLoader();
                    _this.scheduledInfo.isSubmit = true;
                    that_1.viewCtrl.dismiss(_this.scheduledInfo);
                });
            }
            else {
                that_1.pollFeedRequest.scheduled_date = that_1.deliveryDate;
                that_1.activityService.createPollFeed(this.pollFeedRequest).subscribe(function (response) {
                    _this.scheduledInfo.isSubmit = true;
                    that_1.loaderService.dismissLoader();
                    that_1.viewCtrl.dismiss(_this.scheduledInfo);
                });
            }
        }
    };
    return SetDeliveryFeedModal;
}());
SetDeliveryFeedModal = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'set-delivery-feed',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\shared\modals\set-delivery-feed\set-delivery-feed.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'ACTIVITY.CREATE_FEED.SET_DELIVERY\' | translate}}</ion-title>\n\n        <ion-buttons end>\n\n            <button ion-button (click)="dismiss()">\n\n                <ion-icon class="icons-close"></ion-icon>\n\n            </button>\n\n        </ion-buttons>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content silvergrey-background>\n\n    <ion-list list radio-group [(ngModel)]="scheduledInfo.selectedScheduled">\n\n        <ion-item class="list-grid-136" list-row>\n\n            <ion-radio class="custom-ion-radio" left checked="true" value="now"></ion-radio>\n\n            <ion-label right-align class="text14px-black">{{\'ACTIVITY.CREATE_FEED.RUN_PLACEMENT\' | translate}}</ion-label>\n\n        </ion-item>\n\n        <ion-item list-row class="list-grid-136">\n\n            <ion-radio class="custom-ion-radio" left value="schedule"></ion-radio>\n\n            <ion-label align-right class="text14px-black">{{\'ACTIVITY.CREATE_FEED.START_DATE\' | translate}}</ion-label>\n\n        </ion-item>\n\n        <ion-item-divider *ngIf="scheduledInfo.selectedScheduled === \'schedule\'">\n\n            {{\'ACTIVITY.CREATE_FEED.START_DELIVERY\' | translate}}\n\n        </ion-item-divider>\n\n        <ion-item class="list-grid-136 date-time" justify-content-between *ngIf="scheduledInfo.selectedScheduled === \'schedule\'">\n\n            <div item-content>\n\n                <ion-icon class="icons-calendar icon-24"></ion-icon>\n\n                <!--<ion-input type="date"  name="datepicker"></ion-input>-->\n\n                <ion-datetime displayFormat="MMM DD, YYYY" [(ngModel)]="scheduledInfo.scheduledDate"  max="2025-12-31"></ion-datetime>\n\n            </div>\n\n            <div item-content>\n\n                <ion-icon class="icons-time icon-24"></ion-icon>\n\n                <ion-datetime displayFormat="hh:mm A" [(ngModel)]="scheduledInfo.scheduledTime"></ion-datetime>\n\n                <!--<ion-input type="time"  name="timepicker"></ion-input>-->\n\n            </div>\n\n        </ion-item>\n\n    </ion-list>\n\n</ion-content>\n\n<ion-footer footer-full>\n\n    <ion-toolbar>\n\n        <button ion-button block class="button-square-blue" (click)="submitCard()">{{\'ACTIVITY.SUBMIT_CARD\' | translate}}</button>\n\n    </ion-toolbar>\n\n</ion-footer>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\shared\modals\set-delivery-feed\set-delivery-feed.html"*/,
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__pages_activity_activity_service__["a" /* ActivityService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */],
        __WEBPACK_IMPORTED_MODULE_6__providers_loader_service__["a" /* LoaderService */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* ViewController */]])
], SetDeliveryFeedModal);

//# sourceMappingURL=set-delivery-feed.js.map

/***/ }),

/***/ 184:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ServiceRequest; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__service_request_service__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__create_request_create_request__ = __webpack_require__(469);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__service_request_details_service_request_details__ = __webpack_require__(185);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var ServiceRequest = (function () {
    function ServiceRequest(navCtrl, serviceRequestService, events, translateService, userService, loaderService) {
        this.navCtrl = navCtrl;
        this.serviceRequestService = serviceRequestService;
        this.events = events;
        this.translateService = translateService;
        this.userService = userService;
        this.loaderService = loaderService;
        this.selectedTab = 'active';
        this.infiniteScrollEnabled = true;
        this.serviceRequests = [];
        this.selectedProperty = null;
        this.isServiceRequestAPICall = false;
        this.showToolbar = false;
        this.selectedTab = 'active';
        this.serviceRequestsPageState = {
            pageNumber: 0,
            pageSize: __WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].DEFAULT_PAGE_SIZE.SERVICE_LIST,
            total: 0
        };
        this.userInfo = this.userService.getUser();
        this.initResidentProperties();
    }
    ServiceRequest.prototype.ionViewDidLoad = function () {
        var _this = this;
        //console.log('Hello IncidentSetting Page');
        this.serviceRequestsPageState.pageNumber = 0;
        this.loadServiceRequestList();
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].APP_EVENTS.SERVICE_REQUEST_REPORTED, function (incident) {
            _this.serviceRequests.splice(0, 0, incident);
        });
    };
    ServiceRequest.prototype.ionViewDidEnter = function () {
        this.content.resize();
    };
    ServiceRequest.prototype.ionViewWillUnload = function () {
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].APP_EVENTS.SERVICE_REQUEST_REPORTED);
    };
    ServiceRequest.prototype.loadServiceRequestList = function (showLoader, callback) {
        var _this = this;
        if (showLoader === void 0) { showLoader = true; }
        this.isServiceRequestAPICall = false;
        if (this.serviceRequestsPageState.pageNumber === 0 ||
            (this.serviceRequestsPageState.pageNumber * this.serviceRequestsPageState.pageSize) < this.serviceRequestsPageState.total) {
            this.serviceRequestsPageState.pageNumber += 1;
            var params = {
                user_id: this.userInfo.user_id,
                per_page: this.serviceRequestsPageState.pageSize,
                page_number: this.serviceRequestsPageState.pageNumber
            };
            var that_1 = this;
            if (showLoader) {
                this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
            }
            this.serviceRequestService.getServiceRequestList(params).subscribe(function (response) {
                if (response.status === __WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                    that_1.serviceRequests = that_1.serviceRequests.concat(response.service_requests || []);
                    that_1.serviceRequestsPageState.total = response.total;
                    if (callback) {
                        callback();
                    }
                }
                _this.isServiceRequestAPICall = true;
                _this.loaderService.dismissLoader();
            });
        }
        else {
            this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.NO_MORE_DATA_TO_LOAD'));
            if (callback) {
                callback(true);
            }
        }
    };
    ServiceRequest.prototype.loadServiceRequestCallback = function () {
        var that = this;
        setTimeout(function () {
            that.isServiceRequestAPICall = true;
        }, 500);
    };
    ServiceRequest.prototype.doRefresh = function (refresher) {
        var _this = this;
        this.isServiceRequestAPICall = false;
        this.serviceRequestsPageState.pageNumber = 0;
        this.infiniteScrollEnabled = true;
        this.serviceRequests = [];
        this.loadServiceRequestList(false, function () {
            refresher.complete();
            _this.loadServiceRequestCallback();
        });
    };
    ServiceRequest.prototype.loadMore = function (infiniteScroll) {
        var _this = this;
        this.loadServiceRequestList(true, function (isMoreDataNotFound) {
            infiniteScroll.complete();
            if (!!isMoreDataNotFound) {
                _this.infiniteScrollEnabled = false;
            }
        });
    };
    ServiceRequest.prototype.initResidentProperties = function () {
        var _this = this;
        var that = this;
        that.serviceRequestService.checkForResidences({ user_id: that.userInfo.user_id }).subscribe(function (response) {
            //console.log('In initResidentProperties response', response);
            if (response.status === __WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                that.residentProperties = response.resident_properties || [];
                if (that.residentProperties && that.residentProperties.length > 0) {
                    // TODO, Have to show popup modal to select properties for reporting request
                    that.selectedProperty = that.residentProperties.filter(function (property) {
                        return property.is_advocate === false;
                    })[0];
                    if (!that.selectedProperty) {
                        that.selectedProperty = that.residentProperties[0];
                    }
                }
            }
            _this.showToolbar = true;
        });
    };
    ServiceRequest.prototype.serviceRequest = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__create_request_create_request__["a" /* CreateRequest */], { selectedProperty: this.selectedProperty });
    };
    ServiceRequest.prototype.viewRequestDetails = function (request) {
        //console.log('viewRequestDetails', request);
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__service_request_details_service_request_details__["a" /* ServiceRequestDetails */], { _id: request._id });
    };
    ServiceRequest.prototype.navigateToAroundYou = function () {
        if (this.userService.userObj.profile.home_address.street_address1.length > 0) {
            var data = {};
            data.address = this.userService.userObj.profile.home_address.street_address1;
            data.position = { lat: 0, lng: 0 };
            if (this.userService.userObj.profile.home_address.lat) {
                data.position.lat = parseFloat(this.userService.userObj.profile.home_address.lat);
                data.position.lng = parseFloat(this.userService.userObj.profile.home_address.long);
            }
            this.events.publish(__WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].APP_EVENTS.ARROUND_YOU_ACTIONS, __WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].ARROUND_YOU_ACTIONS.SELECT_SAVED_PIN, data);
        }
        this.navCtrl.pop();
        this.navCtrl.parent.select(2);
    };
    return ServiceRequest;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
], ServiceRequest.prototype, "content", void 0);
ServiceRequest = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'service-request',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\service-request\service-request.html"*/'<ion-header labelHeader>\n\n    <ion-navbar topHeader>\n\n        <ion-title>{{\'SERVICE_REQUESTS.TITLE\' | translate}} </ion-title>\n\n    </ion-navbar>\n\n\n\n    <ion-segment class="segment-tab" [(ngModel)]="selectedTab">\n\n        <ion-segment-button value="active" class="segment-activated" [ngClass]="{\'segment-activated\': selectedTab == \'active\'}">{{\'SERVICE_REQUESTS.REQUEST_LIST.ACTIVE\' | translate }}</ion-segment-button>\n\n        <ion-segment-button value="resolved" [ngClass]="{\'segment-activated\': selectedTab == \'resolved\'}">{{\'SERVICE_REQUESTS.REQUEST_LIST.RESOLVED\' | translate }}</ion-segment-button>\n\n    </ion-segment>\n\n</ion-header>\n\n\n\n<ion-content [ngSwitch]="selectedTab" silvergrey-background>\n\n    <ion-refresher (ionRefresh)="doRefresh($event)">\n\n        <ion-refresher-content pullingIcon="arrow-dropdown" pullingText="{{\'MISC.PULL\' | translate}}" refreshingSpinner="circles"\n\n            refreshingText="{{\'MISC.REFRESH\' | translate}}">\n\n        </ion-refresher-content>\n\n    </ion-refresher>\n\n\n\n    <ion-list *ngSwitchCase="\'active\'">\n\n        <div *ngIf="serviceRequests && serviceRequests.length === 0 && isServiceRequestAPICall && selectedProperty \n\n                &&  !selectedProperty.is_advocate &&  (selectedProperty.allow_service_requests === undefined || selectedProperty.allow_service_requests == true) "\n\n            class="message-no-data-found">\n\n            <p class="no-records">{{\'SERVICE_REQUESTS.REQUEST_LIST.ACTIVE_MSG\' | translate }}</p>\n\n        </div>\n\n        <div *ngIf="(serviceRequests && serviceRequests.length === 0 && isServiceRequestAPICall \n\n                    && (!selectedProperty || (selectedProperty && selectedProperty.is_advocate)))" class="message-no-data-found">\n\n            <p class="no-records">{{\'SERVICE_REQUESTS.VERIFY_ADDRESS\' | translate }}</p>\n\n        </div>\n\n        <div *ngIf="serviceRequests && serviceRequests.length === 0 && isServiceRequestAPICall && selectedProperty &&  selectedProperty.allow_service_requests === false"\n\n            class="message-no-data-found">\n\n            <p class="no-records">{{\'SERVICE_REQUESTS.NO_SERVICE_REQUEST\' | translate }}</p>\n\n        </div>\n\n        <div *ngFor="let request of serviceRequests">\n\n            <button *ngIf="request.status && request.status == \'active\'" ion-item detail-none class="list-grid-136" (click)="viewRequestDetails(request)">\n\n                <h2>\n\n                    <span class="text14px-black">{{request.incident_number}}</span>\n\n                    <span class="date-time-view"> {{request.created_at | localizedDate: \'MM/dd/yyyy\'}}</span>\n\n                </h2>\n\n                <p class="sendmsg">{{request.type}}</p>\n\n            </button>\n\n        </div>\n\n    </ion-list>\n\n    <ion-list *ngSwitchCase="\'resolved\'">\n\n        <div *ngIf="serviceRequests && serviceRequests.length === 0 && isServiceRequestAPICall && selectedProperty &&  !selectedProperty.is_advocate"\n\n            class="message-no-data-found">\n\n            <p class="no-records">{{\'SERVICE_REQUESTS.REQUEST_LIST.RESOLVED_MSG\' | translate }}</p>\n\n        </div>\n\n        <div *ngIf="(serviceRequests && serviceRequests.length === 0 && isServiceRequestAPICall \n\n        && (!selectedProperty || (selectedProperty && selectedProperty.is_advocate)))" class="message-no-data-found">\n\n            <p class="no-records">{{\'SERVICE_REQUESTS.VERIFY_ADDRESS\' | translate }}</p>\n\n        </div>\n\n        <div *ngFor="let request of serviceRequests">\n\n            <button *ngIf="request.status && request.status != \'active\'" ion-item detail-none class="list-grid-136" (click)="viewRequestDetails(request)">\n\n                <h2>\n\n                    <span class="text14px-black">{{request.incident_number}}</span>\n\n                    <span class="date-time-view">{{request.closed_date | localizedDate: \'MM/dd/yyyy\'}}</span>\n\n                </h2>\n\n                <p class="sendmsg">{{request.type}}</p>\n\n            </button>\n\n        </div>\n\n    </ion-list>\n\n    <ion-infinite-scroll (ionInfinite)="loadMore($event)" [enabled]="infiniteScrollEnabled">\n\n        <ion-infinite-scroll-content loadingSpinner="bubbles" loadingText="{{\'ERROR_MESSAGES.LOADING_MORE_DATA_TO_LOAD\' | translate}}"></ion-infinite-scroll-content>\n\n    </ion-infinite-scroll>\n\n</ion-content>\n\n<ion-footer footer-full>\n\n    <!--*ngIf="selectedProperty" -->\n\n    <ion-toolbar *ngIf="showToolbar" >\n\n        <button ion-button block class="button-square-blue"  *ngIf= "selectedProperty"\n\n        [disabled]="selectedProperty.allow_service_requests === false" \n\n        (click)="serviceRequest()">{{\'SERVICE_REQUESTS.SETTINGS.NEWSERVICE\' | translate }}</button>\n\n        <button ion-button block class="button-square-blue" *ngIf= "!selectedProperty || (selectedProperty && selectedProperty.is_advocate == true)"\n\n        (click)="navigateToAroundYou()">{{\'AROUND_ME.HOUSING_UNIT.VERIFY-BTN\' | translate }}</button>\n\n    </ion-toolbar>\n\n</ion-footer>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\service-request\service-request.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_2__service_request_service__["a" /* ServiceRequestService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */],
        __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_4__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_5__providers_loader_service__["a" /* LoaderService */]])
], ServiceRequest);

//# sourceMappingURL=service-request.js.map

/***/ }),

/***/ 185:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ServiceRequestDetails; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_camera__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__conversations_chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__service_request_service__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_upload_service__ = __webpack_require__(85);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var ServiceRequestDetails = (function () {
    function ServiceRequestDetails(navCtrl, serviceRequestService, navParams, camera, translateService, userService, loaderService, events, pubNubService, actionSheetCtrl, uploadService, chatService) {
        this.navCtrl = navCtrl;
        this.serviceRequestService = serviceRequestService;
        this.navParams = navParams;
        this.camera = camera;
        this.translateService = translateService;
        this.userService = userService;
        this.loaderService = loaderService;
        this.events = events;
        this.pubNubService = pubNubService;
        this.actionSheetCtrl = actionSheetCtrl;
        this.uploadService = uploadService;
        this.chatService = chatService;
        this.selectedTab = 'details';
        this.messages = [];
        this.placeholderIamges = __WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].PLACEHOLDER_IMAGES;
        this.messageContentType = __WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].MESSAGE_CONTENT_TYPE_ID;
        this.selectedTab = 'details';
        this.serviceRequestId = this.navParams.get('_id');
        this.userData = this.userService.getUser();
        this.serviceRequestDetails = {
            _id: '',
            address: '',
            description: '',
            incident_number: '',
            photos: [],
            property_id: '',
            status: '',
            type: '',
            type_id: '',
            user_name: ''
        };
        this.contactIdDetailMap = new Map();
        this.contactIdDetailMap[this.userData.user_id] = { user_name: this.userData.user_name, profile_pic: this.userData.profile.profile_pic };
    }
    ServiceRequestDetails.prototype.ionViewDidEnter = function () {
        this.init();
    };
    ServiceRequestDetails.prototype.ionViewDidLoad = function () {
        this.initServiceRequestMessageEvent();
    };
    ServiceRequestDetails.prototype.ionViewWillUnload = function () {
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].APP_EVENTS.SERVICE_REQUEST_MESSAGE);
    };
    ServiceRequestDetails.prototype.initServiceRequestMessageEvent = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].APP_EVENTS.SERVICE_REQUEST_MESSAGE, function (message, time) {
            //console.log('In SERVICE_REQUEST_MESSAGE Event Type ', message);
            if (_this.serviceRequestDetails.conversation && _this.serviceRequestDetails.conversation.shared_channel === message.shared_channel
                && _this.userData.user_id !== message.sender_uuid) {
                _this.messages.push(_this.createMessage(message));
                _this.scrollToBottom();
            }
        });
    };
    ServiceRequestDetails.prototype.init = function () {
        var _this = this;
        if (this.serviceRequestId) {
            this.loaderService.createLoader(this.translateService.instant("ERROR_MESSAGES.PLEASE_WAIT"));
            this.serviceRequestService.getServiceRequestDetails({ _id: this.serviceRequestId }).subscribe(function (response) {
                if (response.status === __WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                    //console.log(response.service_request[0]);
                    _this.serviceRequestDetails = response.service_request[0];
                    _this.serviceRequestDetails.status_translated = _this.translateService.instant("SERVICE_REQUESTS.REQUEST_LIST." + _this.serviceRequestDetails.status.toUpperCase());
                }
                _this.loaderService.dismissLoader();
            });
        }
    };
    ServiceRequestDetails.prototype.onDetailsClick = function () {
        this.content.resize();
    };
    ServiceRequestDetails.prototype.onConversationClick = function () {
        // Init contactIdDetailMap for display members picture
        if (this.serviceRequestDetails.providers) {
            this.setContactIdDetailMap(this.serviceRequestDetails.providers);
        }
        // Load existing history of selected incident
        if (this.serviceRequestDetails.conversation) {
            var languages_1 = [this.userService.getCurrentLang()];
            this.serviceRequestDetails.providers.forEach(function (self) {
                if (self.device_lang && languages_1.indexOf(self.device_lang) === -1) {
                    languages_1.push(self.device_lang);
                }
            });
            this.serviceRequestDetails.conversation.languages = languages_1;
            this.loadSelectedIncidentHistory(this.serviceRequestDetails.conversation);
        }
        this.content.resize();
    };
    ServiceRequestDetails.prototype.setContactIdDetailMap = function (userList) {
        var _this = this;
        userList.forEach(function (element) {
            _this.contactIdDetailMap[element.user_id] = { profile_pic: element.profile_pic || '', user_name: element.user_name || '' };
        });
    };
    ServiceRequestDetails.prototype.loadSelectedIncidentHistory = function (conversationObj) {
        var _this = this;
        var that = this;
        var leaving_time_token = null;
        if (conversationObj.leaving_time_token !== undefined && conversationObj.leaving_time_token > 0) {
            leaving_time_token = conversationObj.leaving_time_token;
        }
        this.pubNubService.historyresponse = null;
        this.pubNubService.chathistory(conversationObj.shared_channel, true, __WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].CONVERSATION_MAX_UNREAD_COUNT, conversationObj.joining_time_token, leaving_time_token).subscribe(function (event) {
            var messages = [];
            for (var i = 0; i < event.value.messages.length; i++) {
                if (event.value.messages[i].entry !== undefined) {
                    messages.push(that.createMessage(event.value.messages[i].entry));
                }
            }
            //console.log(messages);
            that.messages = messages;
            _this.scrollToBottom();
        });
    };
    ServiceRequestDetails.prototype.createMessage = function (message) {
        var messageObj, contactObj = {}, senderObj = this.contactIdDetailMap[message.sender_uuid];
        if (senderObj) {
            contactObj = { user_name: senderObj.user_name, profile_pic: senderObj.profile_pic };
        }
        messageObj = {
            content: this.chatService.getMessageContent(message.content),
            shared_channel: message.shared_channel,
            image: message.image,
            sender_uuid: message.sender_uuid,
            receiver_uuid: message.receiver_uuid,
            video: message.video,
            timetoken: message.timetoken / 10000,
            is_sys_msg: message.is_sys_msg || false,
            content_type_id: message.content_type_id || ''
        };
        Object.assign(messageObj, contactObj);
        return messageObj;
    };
    ServiceRequestDetails.prototype.scrollToBottom = function () {
        var that = this;
        setTimeout(function () {
            if (that.content && that.content._scroll) {
                that.content.scrollTo(0, that.content.getContentDimensions().scrollHeight, 10);
            }
        });
    };
    ServiceRequestDetails.prototype.sendMessage = function () {
        var _this = this;
        var conversation = this.serviceRequestDetails.conversation;
        if (conversation) {
            this.pubNubService.getTimeToken(function (pubnubtimestoken) {
                var coreMessageObj = {
                    content: null,
                    sender_uuid: _this.userData.user_id,
                    image: _this.pictureModel,
                    receiver_uuid: conversation.shared_channel,
                    shared_channel: conversation.shared_channel,
                    timetoken: pubnubtimestoken,
                    is_group: true,
                    is_sys_msg: false,
                    content_type_id: __WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].MESSAGE_CONTENT_TYPE_ID.SERVICE_REQUEST
                };
                _this.pubNubService.getSupportedLanguageMsg(_this.messageModel, conversation.languages, false).subscribe(function (msgContent) {
                    coreMessageObj.content = msgContent;
                    _this.pubNubService.publish(coreMessageObj.shared_channel, coreMessageObj).subscribe(function (event) {
                        // console.log('In sendInvitationMessageToAdmin Publish message', coreMessageObj, event);
                        _this.messages.push(_this.createMessage(coreMessageObj));
                        var saveMessage = {
                            user_id: _this.userData.user_id,
                            content: coreMessageObj.content,
                            shared_channel: coreMessageObj.shared_channel
                        };
                        _this.serviceRequestService.saveMessage(saveMessage).subscribe(function () {
                            // console.log('Saved message!');
                        });
                        _this.scrollToBottom();
                        _this.resetMessageModel();
                    });
                }, function (error) {
                    _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                });
            });
        }
    };
    ServiceRequestDetails.prototype.resetMessageModel = function () {
        this.messageModel = '';
        this.pictureModel = '';
    };
    ServiceRequestDetails.prototype.uploadDone = function (error, url) {
        if (!error) {
            this.pictureModel = url;
            this.sendMessage();
        }
        console.log(error, url);
    };
    ServiceRequestDetails.prototype.showActionSheet = function () {
        var that = this;
        var uploadOptions = {
            sourceType: that.camera.PictureSourceType.CAMERA,
            bucketSource: __WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].UPLOAD_IMAGE_SOURCE.INCIDENTS, cropImage: false,
            targetHeight: 600,
            targetWidth: 1062
        };
        var buttons = [
            {
                text: this.translateService.instant("CONVERSATIONS.NEW_MSG.TAKE_PHOTO"),
                role: 'Take a photo',
                cssClass: 'take-photo',
                icon: 'icons-camera',
                handler: function () {
                    that.uploadService.takeFromCamera(uploadOptions, function (error, image) {
                        that.uploadDone.call(that, error, image);
                    });
                }
            },
            {
                text: this.translateService.instant("CONVERSATIONS.NEW_MSG.ATTACH_PHOTO"),
                cssClass: 'take-photo',
                icon: 'icons-image-photo',
                handler: function () {
                    uploadOptions.sourceType = that.camera.PictureSourceType.PHOTOLIBRARY;
                    that.uploadService.takeFromCamera(uploadOptions, function (error, image) {
                        that.uploadDone.call(that, error, image);
                    });
                }
            }
        ];
        var actionSheet = this.actionSheetCtrl.create({
            cssClass: 'photo-sheet',
            buttons: buttons
        });
        actionSheet.present();
    };
    return ServiceRequestDetails;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
], ServiceRequestDetails.prototype, "content", void 0);
ServiceRequestDetails = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'service-request-details',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\service-request\service-request-details\service-request-details.html"*/'<ion-header labelHeader>\n\n    <ion-navbar topHeader>\n\n        <ion-title *ngIf="serviceRequestDetails.incident_number">{{serviceRequestDetails.incident_number}}</ion-title>\n\n    </ion-navbar>\n\n    <!-- If any content/variable is coming from server then please remove that content/variable from en/es/ko.json -->\n\n    <ion-segment class="segment-tab" [(ngModel)]="selectedTab">\n\n        <ion-segment-button value="details" class="segment-activated" [ngClass]="{\'segment-activated\': selectedTab == \'details\'}" (click)="onDetailsClick()">{{\'SERVICE_REQUESTS.DETAILS.DETAILS\' | translate}}</ion-segment-button>\n\n        <ion-segment-button value="conversation" [ngClass]="{\'segment-activated\': selectedTab == \'conversation\'}" (click)="onConversationClick()">{{\'SERVICE_REQUESTS.DETAILS.CONVERSATION\' | translate}}</ion-segment-button>\n\n    </ion-segment>\n\n</ion-header>\n\n\n\n<ion-content [ngSwitch]="selectedTab">\n\n    <div *ngSwitchCase="\'details\'">\n\n        <ion-slides pager *ngIf="serviceRequestDetails.photos && serviceRequestDetails.photos.length>0">\n\n            <ion-slide *ngFor=" let photo of serviceRequestDetails.photos">\n\n                <img [src]="photo" alt="" />\n\n            </ion-slide>\n\n        </ion-slides>\n\n        <ion-card>\n\n            <ion-label class="active-status">{{\'SERVICE_REQUESTS.DETAILS.STATUS\' | translate}} {{serviceRequestDetails.status_translated}}</ion-label>\n\n            <ion-card-header flexbox-between>\n\n                <div *ngIf="serviceRequestDetails.address">\n\n                    <p>{{serviceRequestDetails.address}}</p>\n\n                </div>\n\n                <ion-icon name="" class="icon-24" [ngClass]="serviceRequestService.serviceRequestTypeClassMap[serviceRequestDetails.type_id]"></ion-icon>\n\n            </ion-card-header>\n\n            <ion-card-content *ngIf="serviceRequestDetails.description">{{serviceRequestDetails.description}}</ion-card-content>\n\n        </ion-card>\n\n        <ion-infinite-scroll (ionInfinite)="loadMore($event)" [enabled]="infiniteScrollEnabled">\n\n            <ion-infinite-scroll-content loadingSpinner="bubbles" loadingText="{{\'ERROR_MESSAGES.LOADING_MORE_DATA_TO_LOAD\' | translate}}"></ion-infinite-scroll-content>\n\n        </ion-infinite-scroll>\n\n    </div>\n\n    <div #content class="conv-comment" *ngSwitchCase="\'conversation\'">\n\n        <ion-list *ngFor="let message of messages" class="conversation-chat" [ngClass]="{\'chat-img-text\': message.image && message.content !== \'image\'}">\n\n            <ion-item *ngIf="!message.content_type_id  || message.content_type_id === messageContentType.SERVICE_REQUEST" [ngClass]="{\'chat-property-img\': message.image && message.content !== \'image\', \'no-img-text\': message.content === \'image\'}">\n\n                <ion-avatar item-left>\n\n                    <lazy-img *ngIf="message.profile_pic" [inputSrc]="message.profile_pic" alt=""></lazy-img>\n\n                    <lazy-img *ngIf="!message.profile_pic" [inputSrc]="placeholderIamges.PROFILE_PIC" alt=""></lazy-img>\n\n                </ion-avatar>\n\n                <h4>                                        \n\n                    <span *ngIf="message.user_name">{{message.user_name}}</span>\n\n                    <ion-note class="datetime">{{ message.timetoken | localizedDate: \'MM/dd/yy hh:mm a\'}}</ion-note>\n\n                </h4>\n\n\n\n                <div *ngIf="message.image">\n\n                    <lazy-img name="image" [inputSrc]="message.image"  alt=""></lazy-img>\n\n                    <!-- (tap)="presentShowImageModal(message.image, false)" -->\n\n                </div>\n\n                <h3 *ngIf="message.content">{{message.content}}</h3>\n\n            </ion-item>\n\n        </ion-list>\n\n    </div>\n\n</ion-content>\n\n<ion-footer class="conv-comment-footer" [keyboardAttach]="content" footer-full id="chat-box-footer" *ngIf="selectedTab == \'conversation\'">\n\n    <ion-toolbar>\n\n        <button ion-button icon-only clear (click)="showActionSheet()">\n\n            <ion-icon class="icons-attachement"></ion-icon>\n\n        </button>\n\n        <ion-list class="chat-type-msg" id="chat-text">\n\n            <ion-item>\n\n                <ion-textarea autoresize autocomplete="true" spellcheck="true" autocorrect="true" [(ngModel)]="messageModel" col="55" placeholder="{{\'PLACEORDER.MESSAGE\' | translate}}"\n\n                    name="writeMessage"></ion-textarea>\n\n            </ion-item>\n\n        </ion-list>\n\n        <button ion-button icon-only clear [ngClass]="{\'active-btn\': !(messageModel && !pictureModel && messageModel.trim().length > 0)}"\n\n            (click)="sendMessage();">\n\n        <ion-icon class="icons-upload"></ion-icon>\n\n    </button>\n\n    </ion-toolbar>\n\n</ion-footer>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\service-request\service-request-details\service-request-details.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_7__service_request_service__["a" /* ServiceRequestService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__ionic_native_camera__["a" /* Camera */],
        __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_8__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */],
        __WEBPACK_IMPORTED_MODULE_9__providers_pubnub_service__["a" /* PubNubService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */], __WEBPACK_IMPORTED_MODULE_10__providers_upload_service__["a" /* UploadService */], __WEBPACK_IMPORTED_MODULE_5__conversations_chat_service__["a" /* ChatService */]])
], ServiceRequestDetails);

//# sourceMappingURL=service-request-details.js.map

/***/ }),

/***/ 186:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ValidationService; });
var ValidationService = (function () {
    function ValidationService() {
    }
    ValidationService.emailValidator = function (control) {
        var emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;
        //console.log('control.value',control.value);
        if (emailPattern.test(control.value)) {
            return null;
        }
        else {
            return { 'invalidEmailAddress': true };
        }
    };
    ;
    ValidationService.zipcodeValidator = function (control) {
        var zipcodePattern = /^[0-9]{5}(?:-[0-9]{4})?$/;
        if (zipcodePattern.test(control.value)) {
            return null;
        }
        else {
            return { 'invalidZipcode': true };
        }
    };
    ;
    ValidationService.strongPasswordValidator = function (control) {
        var passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*])(?=.{8,100})$/;
        if (passwordPattern.test(control.value)) {
            return null;
        }
        else {
            return { 'invalidPassword': true };
        }
    };
    ;
    ValidationService.isTrueValue = function (control) {
        if (control && control.value) {
            return null;
        }
        else {
            return { 'isFalseValue': true };
        }
    };
    return ValidationService;
}());

//# sourceMappingURL=validationService.js.map

/***/ }),

/***/ 187:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GetStarted; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_info_app_info__ = __webpack_require__(484);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__login_login__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_config__ = __webpack_require__(6);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var GetStarted = (function () {
    function GetStarted(navCtrl, analyticsService) {
        this.navCtrl = navCtrl;
        this.analyticsService = analyticsService;
    }
    GetStarted.prototype.ngOnInit = function () {
    };
    GetStarted.prototype.ionViewDidEnter = function () {
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].PAGES.GET_STARTED);
    };
    GetStarted.prototype.onGetStarted = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__app_info_app_info__["a" /* AppInfo */]);
    };
    GetStarted.prototype.onLoginToRezility = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__login_login__["a" /* LoginPage */]);
    };
    return GetStarted;
}());
GetStarted = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-get-started',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\get-started\get-started.html"*/'<ion-content grey-background class="Be-home">\n\n    <ion-view flexbox>\n\n        <ion-card>\n\n            <div>\n\n                <p rezility-logo>\n\n                    <ion-img src="./assets/img/rezility-logo.png" alt=""></ion-img>\n\n                </p>\n\n                <ion-card-content>\n\n                    {{\'SIGN_UP.MESSGAE_1\' | translate}} <br> {{\'SIGN_UP.MESSGAE_2\' | translate}}\n\n                </ion-card-content>\n\n            </div>\n\n            <div class="singup-logoin-buttons">\n\n                <button (click)="onGetStarted()" ion-button block large round class="button-light-blue">{{\'SIGN_UP.GET_STARTED\' | translate}}</button>\n\n                <button ion-button class="button-blue-link" (click)="onLoginToRezility()"> {{\'SIGN_UP.ALREADY_HAVE_ACCOUNT\' | translate}}</button>\n\n            </div>\n\n        </ion-card>\n\n    </ion-view>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\get-started\get-started.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_4__providers_analytics_service__["a" /* AnalyticsService */]])
], GetStarted);

//# sourceMappingURL=get-started.js.map

/***/ }),

/***/ 188:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImageCacheService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_file__ = __webpack_require__(831);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_imgcache_js__ = __webpack_require__(832);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_imgcache_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_imgcache_js__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * This service is charged of provide the methods to cache the images
 */
var ImageCacheService = (function () {
    function ImageCacheService(platform) {
        this.imgQueue = [];
        this.isAndroid = true;
        __WEBPACK_IMPORTED_MODULE_3_imgcache_js___default.a.options.debug = true;
        __WEBPACK_IMPORTED_MODULE_3_imgcache_js___default.a.options.cacheClearSize = 30;
        if (platform.is('ios')) {
            __WEBPACK_IMPORTED_MODULE_3_imgcache_js___default.a.options.cordovaFilesystemRoot = new __WEBPACK_IMPORTED_MODULE_2__ionic_native_file__["a" /* File */]().documentsDirectory;
            this.isAndroid = false;
        }
    }
    /**
     * Init imgCache library
     * @return {Promise}
     */
    ImageCacheService.prototype.initImageCache = function () {
        return new Promise(function (resolve, reject) {
            if (__WEBPACK_IMPORTED_MODULE_3_imgcache_js___default.a.ready) {
                resolve();
            }
            else {
                __WEBPACK_IMPORTED_MODULE_3_imgcache_js___default.a.init(function () { return resolve(); }, function () { return reject(); });
            }
        });
    };
    ImageCacheService.prototype.isCached = function (src) {
        return new Promise(function (resolve, reject) {
            __WEBPACK_IMPORTED_MODULE_3_imgcache_js___default.a.isCached(src, function (path, success) {
                // if not, it will be cached
                resolve(success);
            });
        });
    };
    /**
     * Cache images
     * @param src {string} - img source
     */
    ImageCacheService.prototype.cacheImage = function (src) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            __WEBPACK_IMPORTED_MODULE_3_imgcache_js___default.a.isCached(src, function (path, success) {
                // if not, it will be cached
                if (success) {
                    __WEBPACK_IMPORTED_MODULE_3_imgcache_js___default.a.getCachedFileURL(src, function (originalUrl, cacheUrl) {
                        if (!_this.isAndroid) {
                            var file = new __WEBPACK_IMPORTED_MODULE_2__ionic_native_file__["a" /* File */]();
                            var cacheFileUrl = cacheUrl.replace('cdvfile://localhost/persistent/', file.documentsDirectory);
                            var localServerFileUrl = cacheFileUrl.replace('file://', 'http://localhost:8080');
                            resolve(localServerFileUrl);
                        }
                        else {
                            resolve(cacheUrl);
                        }
                    }, function (e) {
                        console.error('img-cache-error:', e);
                        reject(e);
                    });
                }
                else {
                    // cache img
                    __WEBPACK_IMPORTED_MODULE_3_imgcache_js___default.a.cacheFile(src);
                    // return original img URL
                    resolve(src);
                }
            });
        });
    };
    ImageCacheService.prototype.clearCache = function () {
        __WEBPACK_IMPORTED_MODULE_3_imgcache_js___default.a.clearCache();
    };
    ImageCacheService.prototype.getCacheSize = function () {
        console.log("The cache size is ", __WEBPACK_IMPORTED_MODULE_3_imgcache_js___default.a.getCurrentSize());
    };
    return ImageCacheService;
}());
ImageCacheService = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* Injectable */])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Platform */]])
], ImageCacheService);

//# sourceMappingURL=image-cache-service.js.map

/***/ }),

/***/ 19:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export PubNubEventType */
/* unused harmony export PubNubEvent */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PubNubService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_observable_forkJoin__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_observable_forkJoin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_observable_forkJoin__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(162);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__shared_environment__ = __webpack_require__(34);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var PubNubEventType;
(function (PubNubEventType) {
    PubNubEventType[PubNubEventType["MESSAGE"] = 0] = "MESSAGE";
    PubNubEventType[PubNubEventType["PRESENCE"] = 1] = "PRESENCE";
    PubNubEventType[PubNubEventType["CONNECT"] = 2] = "CONNECT";
    PubNubEventType[PubNubEventType["DISCONNECT"] = 3] = "DISCONNECT";
    PubNubEventType[PubNubEventType["RECONNECT"] = 4] = "RECONNECT";
    PubNubEventType[PubNubEventType["PUBLISHED"] = 5] = "PUBLISHED";
    PubNubEventType[PubNubEventType["HISTORY"] = 6] = "HISTORY";
    PubNubEventType[PubNubEventType["GROUPADDCHANNEL"] = 7] = "GROUPADDCHANNEL";
    PubNubEventType[PubNubEventType["CHANNELLIST"] = 8] = "CHANNELLIST";
})(PubNubEventType || (PubNubEventType = {}));
var PubNubEvent = (function () {
    function PubNubEvent(type, channel, value) {
        this.type = type;
        this.value = value;
    }
    return PubNubEvent;
}());

var PubNubService = (function () {
    function PubNubService(events, http) {
        this.http = http;
        this.userConversationsMap = {};
        this.conversationCountMap = new Map();
        this.globalBadgeCount = '';
        this.feedBadgeCount = '';
        this.isCurrentUserTyping = false;
        this.isConversationVist = false;
        this.events = events;
    }
    PubNubService.prototype.initializePubnub = function (uuid) {
        var that = this;
        that.clearInstanceVar();
        that.userId = uuid;
        that.pubnub = new PubNub({
            uuid: uuid,
            subscribeKey: __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].PUBNUB_KEYS.SUBSCRIBE_KEY,
            publishKey: __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].PUBNUB_KEYS.PUBLISH_KEY,
            ssl: true,
            presenceTimeout: 120
        });
        that.pubnub.addListener({
            status: function (statusEvent) {
                // // console.log('In addListener status', statusEvent);
                if (statusEvent.category === "PNConnectedCategory") {
                    // that.pubnub.setState({ state: { new: 'state' } },
                    //     function (status) {
                    //         //  // console.log('In addListener status 22========', status);
                    //     });
                }
                // Following is working code but commented for DAY 1
                // else if (statusEvent.error && statusEvent.category === "PNNetworkIssuesCategory") {
                //     // console.log('In PubNubService:PNNetworkIssuesCategory -', statusEvent);
                //     that.pushNotificationChannels = statusEvent.affectedChannels;
                //     that.pushNotificationGroups = statusEvent.affectedChannelGroups;
                // } else if (statusEvent.category === "PNNetworkUpCategory") {
                //     // console.log('In PubNubService:PNNetworkUpCategory -', that.lastMessageTimeToken, that.pushNotificationChannels, that.pushNotificationGroups)
                //     that.pubnub.subscribe({ channels: that.pushNotificationChannels, channelGroups: that.pushNotificationGroups, timetoken: that.lastMessageTimeToken, withPresence: true });
                // }
            },
            message: function (message) {
                //console.log("New message received - ", message);
                that.lastMessageTimeToken = message.timetoken;
                if (!(message.message.content_type_id && message.message.content_type_id === __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].MESSAGE_CONTENT_TYPE_ID.SERVICE_REQUEST)) {
                    //TODO - The message object also give time in millisecs , this can be used for timestamp directly 
                    that.events.publish(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].APP_EVENTS.NEW_MESSAGE, message.message, message.timetoken, "From New Message");
                    that.events.publish(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].APP_EVENTS.UPDATE_CONVERSATION, message.message, message.timetoken);
                    // that.events.publish(APP_CONFIG.APP_EVENTS.UPDATE_BADGE, message.message);
                    //   eventEmitter.emit(new PubNubEvent(PubNubEventType.MESSAGE, channels, message));
                    if (!that.isConversationVist) {
                        var shared_channel = message.message.shared_channel || message.shared_channel;
                        var msgCount = that.getConversationBadgeCount(shared_channel) + 1;
                        that.setConversationLastState(shared_channel, msgCount);
                    }
                }
                else {
                    // This is for service request message
                    that.events.publish(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].APP_EVENTS.SERVICE_REQUEST_MESSAGE, message.message, message.timetoken);
                }
            },
            presence: function (presenceEvent) {
                //console.log("presenceEvent - ", presenceEvent);
                if (presenceEvent.action === 'state-change' && presenceEvent.channel === that.userId) {
                    if (presenceEvent.state.action == __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].USER_STATES.GROUP_ADD || presenceEvent.state.action == __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].USER_STATES.GROUP_REMOVE
                        || presenceEvent.state.action == __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].USER_STATES.VERIFICATION_REQUEST || presenceEvent.state.action == __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].USER_STATES.VERIFICATION_CANCEL) {
                        that.events.publish(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].APP_EVENTS.GROUP_EVENTS, presenceEvent);
                    }
                    else if (presenceEvent.state.action == __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].USER_STATES.CONNECTION_STATUS_CHANGED) {
                        that.events.publish(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].APP_EVENTS.CONNECTION_STATUS_CHANGED, presenceEvent);
                        that.events.publish(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].APP_EVENTS.CHAT_BOX_CONNECTION_STATUS_CHANGED, presenceEvent);
                        that.events.publish(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].APP_EVENTS.PROVIDER_PRESENCE_EVENT, presenceEvent);
                    }
                }
                that.events.publish(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].APP_EVENTS.NEW_MSG_PRESENCE_EVENT, presenceEvent);
                that.events.publish(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].APP_EVENTS.CHAT_BOX_PRESENCE_EVENT, presenceEvent);
                that.events.publish(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].APP_EVENTS.CONV_PRESENCE_EVENT, presenceEvent);
                that.events.publish(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].APP_EVENTS.GROUP_SETTING_PRESENCE_EVENT, presenceEvent);
            }
        });
        var conversationCountMap = that.getConversationCountMap();
        if (conversationCountMap) {
            // console.log("b4 reloadGlobalBadgeCount");
            that.conversationCountMap = conversationCountMap;
            that.reloadGlobalBadgeCount();
        }
        // set lastMessageTimeToken
        // that.getTimeToken((timetoken) => {
        //     that.lastMessageTimeToken = timetoken;
        // });
    };
    PubNubService.prototype.clearInstanceVar = function () {
        this.pushNotificationChannels = [];
        this.pushNotificationGroups = [];
        this.conversationCountMap = new Map();
        this.userConversationsMap = {};
        this.globalBadgeCount = '';
        this.feedBadgeCount = '';
        this.isCurrentUserTyping = false;
        this.isConversationVist = false;
        this.historyEventEmitter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["w" /* EventEmitter */]();
        this.historyresponse = null;
    };
    PubNubService.prototype.setPushNotificationChannels = function (channels) {
        this.pushNotificationChannels = this.pushNotificationChannels.concat(channels);
    };
    PubNubService.prototype.removePushNotifcationChannel = function (channel) {
        var index = this.pushNotificationChannels.indexOf(channel);
        this.pushNotificationChannels.splice(index, 1);
    };
    PubNubService.prototype.getPushNotificationChannels = function () {
        return this.pushNotificationChannels;
    };
    PubNubService.prototype.subscribe = function (channels, withPresence) {
        if (withPresence === void 0) { withPresence = true; }
        var that = this;
        // // console.log("subscribe", channels)
        that.pubnub.subscribe({
            channels: channels,
            withPresence: withPresence
        });
    };
    PubNubService.prototype.subscribeGroup = function (channels, withPresence) {
        if (withPresence === void 0) { withPresence = false; }
        var that = this;
        // // console.log("subscribe", channels)
        that.pubnub.subscribe({
            channelGroups: channels,
            withPresence: withPresence
        });
    };
    PubNubService.prototype.unsubscribe = function () {
        if (this.pubnub) {
            this.pubnub.unsubscribeAll();
        }
    };
    PubNubService.prototype.unsubscribeChannels = function (channels) {
        // console.log("unsubscribeChannels", channels)
        if (this.pubnub) {
            this.pubnub.unsubscribe({
                channels: channels
            }, function (status) {
                if (status.error) {
                    // console.log("unsubscribeChannels failed w/ error:", status);
                }
                else {
                    // console.log("unsubscribeChannels operation done!", channels);
                }
            });
        }
    };
    PubNubService.prototype.unRegisterAllChannels = function (device, pushGateway) {
        this.pubnub.push.deleteDevice({
            device: device,
            pushGateway: pushGateway // apns, gcm, mpns
        }, function (status) {
            if (status.error) {
                // console.log("operation failed w/ error:", status);
            }
            else {
                // console.log("unRegisterAllChannels operation done!")
            }
        });
    };
    PubNubService.prototype.publish = function (channel, message, storeInHistory) {
        if (storeInHistory === void 0) { storeInHistory = true; }
        var eventEmitter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["w" /* EventEmitter */]();
        this.pubnub.publish({
            channel: channel,
            // The message may be any valid JSON type including objects, arrays, strings, and numbers.       
            message: message,
            // If true the messages are stored in history, default true.
            storeInHistory: storeInHistory
        }, function (status, response) {
            if (!status.error) {
                eventEmitter.emit(new PubNubEvent(PubNubEventType.PUBLISHED, channel, response));
            }
            else {
                eventEmitter.error(response);
            }
        });
        return eventEmitter;
    };
    PubNubService.prototype.chathistory = function (channel, reverse, count, start, end, stringifiedTimeToken) {
        var _this = this;
        if (reverse === void 0) { reverse = false; }
        if (start === void 0) { start = null; }
        if (end === void 0) { end = null; }
        if (stringifiedTimeToken === void 0) { stringifiedTimeToken = true; }
        this.pubnub.history({
            channel: channel,
            count: count,
            start: start,
            end: end,
            reverse: reverse,
            stringifiedTimeToken: stringifiedTimeToken
        }, function (status, response) {
            if (!status.error) {
                //console.log("History", response);
                if (response.messages.length < 100) {
                    // push this conversation in to an array and emit that array
                    if (!_this.historyresponse) {
                        _this.historyresponse = response;
                    }
                    else {
                        _this.historyresponse.messages = _this.historyresponse.messages.concat(response.messages);
                        _this.historyresponse.endTimeToken = response.endTimeToken;
                        _this.historyresponse.startTimeToken = response.startTimeToken;
                    }
                    _this.historyEventEmitter.emit(new PubNubEvent(PubNubEventType.HISTORY, channel, _this.historyresponse));
                }
                else {
                    // push conversations in an array
                    //console.log("More records there");
                    if (!_this.historyresponse) {
                        _this.historyresponse = response;
                    }
                    else {
                        _this.historyresponse.messages = _this.historyresponse.messages.concat(response.messages);
                        _this.historyresponse.endTimeToken = response.endTimeToken;
                        _this.historyresponse.startTimeToken = response.startTimeToken;
                    }
                    _this.chathistory(channel, reverse, count, response.endTimeToken);
                }
            }
            else {
                _this.historyEventEmitter.error(response);
            }
        });
        return this.historyEventEmitter;
    };
    PubNubService.prototype.loadChathistory = function (channel, reverse, count, start, end, stringifiedTimeToken, callback) {
        if (reverse === void 0) { reverse = false; }
        if (start === void 0) { start = null; }
        if (end === void 0) { end = null; }
        if (stringifiedTimeToken === void 0) { stringifiedTimeToken = true; }
        this.pubnub.history({
            channel: channel,
            count: count,
            start: start,
            end: end,
            reverse: reverse,
            stringifiedTimeToken: stringifiedTimeToken
        }, function (status, response) {
            console.log("History", start, '-', end, '-', response.startTimeToken, '-', response.endTimeToken, '-', response.messages);
            if (callback) {
                callback(status.error, response);
            }
        });
    };
    PubNubService.prototype.history = function (channel, reverse, count, start, end, stringifiedTimeToken) {
        if (reverse === void 0) { reverse = false; }
        if (start === void 0) { start = null; }
        if (end === void 0) { end = null; }
        if (stringifiedTimeToken === void 0) { stringifiedTimeToken = true; }
        var eventEmitter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["w" /* EventEmitter */]();
        this.pubnub.history({
            channel: channel,
            count: count,
            start: start,
            end: end,
            reverse: reverse,
            stringifiedTimeToken: stringifiedTimeToken
        }, function (status, response) {
            if (!status.error) {
                // console.log("History", response);
                eventEmitter.emit(new PubNubEvent(PubNubEventType.HISTORY, channel, response));
            }
            else {
                eventEmitter.error(response);
            }
        });
        return eventEmitter;
    };
    PubNubService.prototype.registerDevice = function (channels, device, pushGateway) {
        // // console.log("ChannelList", channels, "===", device, pushGateway);
        this.pubnub.push.addChannels({
            device: device,
            channels: channels,
            pushGateway: pushGateway
        }, function (status, response) {
            if (!status.error) {
                // console.log("In registerDevice Done", response);
            }
            else {
                // console.log("registerDevice Error", response);
            }
        });
    };
    PubNubService.prototype.unRegisterDevice = function (channels, device, pushGateway) {
        this.pubnub.push.removeChannels({
            channels: channels,
            device: device,
            pushGateway: pushGateway
        }, function (status) {
            if (status.error) {
                // console.log("In unRegisterDevice operation failed w/ error:", status);
            }
            else {
                // console.log("In unRegisterDevice operation done!");
            }
        });
    };
    PubNubService.prototype.addChanneltoGroup = function (channelsList, channelGroupName, displayName, user_id, deviceToken, pushPlatform, action) {
        if (action === void 0) { action = __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].USER_STATES.GROUP_ADD; }
        var that = this;
        // console.log("addChanneltoGroup", channelsList, "-", channelGroupName);
        that.pubnub.channelGroups.addChannels({
            channels: channelsList,
            channelGroup: channelGroupName
        }, function (status) {
            if (status.error) {
                // console.log("addChanneltoGroup operation failed w/ status: ", status);
            }
            else {
                // console.log("addChanneltoGroup operation done!", status);
                that.setUserStateGroup(channelsList, action, channelGroupName, displayName);
                //that.subscribe([channelGroupName], true);
                that.addChanneltoMyGroup([channelGroupName], user_id + '_group');
                if (deviceToken !== undefined && pushPlatform !== undefined) {
                    that.registerDevice([channelGroupName], deviceToken, pushPlatform);
                }
            }
        });
    };
    PubNubService.prototype.listChannels = function (channelGroup) {
        // console.log('In listChannels', channelGroup);
        this.pubnub.channelGroups.listChannels({ channelGroup: channelGroup }, function (status, response) {
            if (status.error) {
                // console.log("In listChannels operation failed w/ error:", status);
                return;
            }
            console.log("In listChannels listing push channel for device", response.channels);
            // response.channels.forEach(function (channel) {
            //     // console.log(channel)
            // })
        });
    };
    PubNubService.prototype.removeChannelFromGroup = function (channelsList, channelGroupName, displayName, timestamp) {
        var that = this;
        // console.log("removeChannelFromGroup", channelsList, "-", channelGroupName);
        this.pubnub.channelGroups.removeChannels({
            channels: channelsList,
            channelGroup: channelGroupName
        }, function (status) {
            if (status.error) {
                // console.log("removeChannelFromGroup operation failed w/ error:", status);
            }
            else {
                // console.log("removeChannelFromGroup operation done!", status)
                that.setUserStateGroup(channelsList, __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].USER_STATES.GROUP_REMOVE, channelGroupName, displayName, timestamp);
            }
        });
    };
    PubNubService.prototype.deleteGroup = function (channelGroupName) {
        this.pubnub.channelGroups.deleteGroup({
            channelGroup: channelGroupName
        }, function (status) {
            if (status.error) {
                // console.log("deleteGroup operation failed w/ error:", status);
            }
            else {
                // console.log("deleteGroup operation done!")
            }
        });
    };
    PubNubService.prototype.getUsersState = function (channels) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.pubnub.hereNow({
                includeUUIDs: true,
                channels: channels
            }, function (status, response) {
                // handle status, response
                // console.log("hereNow Status ", response);
                resolve(response);
            });
        });
    };
    PubNubService.prototype.getSubscribedChannelsByUUID = function (uuid) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.pubnub.whereNow({ uuid: uuid }, function (status, response) {
                //// console.log("In getSubscribedChannels hereNow Status ", status, response);
                if (!status.error) {
                    resolve(response);
                }
            });
        });
    };
    PubNubService.prototype.sendPushNotification = function (coreMessageObj, callback) {
        var pushObj = this.getPushNotificationMessage(coreMessageObj);
        this.publish(coreMessageObj.receiver_uuid, pushObj).subscribe(function (event) {
            console.log('In sendPushNotification', event);
            if (callback) {
                callback(event);
            }
        });
    };
    PubNubService.prototype.getPushNotificationMessage = function (pushObj) {
        var pushNotificationObj = {
            "pn_gcm": {
                "data": {
                    "title": pushObj.title,
                    "message": pushObj.message,
                    "icon": __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].NOTIFICATION_ICON,
                    "color": __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].NOTIFICATION_COLOR
                }
            },
            "pn_apns": {
                "aps": {
                    "alert": pushObj.title + "\r" + pushObj.message,
                    "sound": "melody",
                    "content-available": 1
                },
                "sender": pushObj.sender
            },
            "pn_debug": true,
            'lasttimetoken': new Date().getTime()
        };
        return pushNotificationObj;
    };
    PubNubService.prototype.getTimeToken = function (callback) {
        var isTimeCalled = false;
        this.pubnub.time(function (status, response) {
            var timetoken = null;
            if (status.error) {
                timetoken = new Date().getTime() * 10000;
            }
            else {
                timetoken = response.timetoken;
            }
            if (!isTimeCalled && callback) {
                isTimeCalled = true;
                callback(timetoken);
            }
        });
    };
    PubNubService.prototype.getDateTime = function (timetoken) {
        return Math.round(timetoken / 10000);
    };
    PubNubService.prototype.setConversationLastState = function (shared_channel, count, timetoken) {
        var currentState = { count: count };
        if (timetoken) {
            currentState['timestamp'] = timetoken;
        }
        else {
            currentState['timestamp'] = this.getConversationLastReadTimetoken(shared_channel);
        }
        var oldCount = this.getConversationBadgeCount(shared_channel);
        if (shared_channel !== undefined && shared_channel !== '') {
            this.conversationCountMap[shared_channel] = currentState;
            var conversationCountMapStr = JSON.stringify(this.conversationCountMap);
            //// console.log('In setConversationLastState ', shared_channel, conversationCountMapStr);
            localStorage.setItem(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].LOCAL_CONVERSATION_COUNT_MAP + '-' + this.userId, conversationCountMapStr);
            // If current count and existing count is different then reload globalBadgeCount            
            if (count !== oldCount) {
                this.reloadGlobalBadgeCount();
            }
        }
    };
    PubNubService.prototype.getConversationBadgeCount = function (shared_channel) {
        var badgeCount = 0;
        if (this.conversationCountMap[shared_channel]) {
            badgeCount = this.conversationCountMap[shared_channel].count;
        }
        // // console.log('In getConversationBadgeCount', shared_channel, badgeCount);
        return badgeCount;
    };
    PubNubService.prototype.getConversationLastReadTimetoken = function (shared_channel) {
        var timestamp = null;
        if (this.conversationCountMap[shared_channel]) {
            timestamp = this.conversationCountMap[shared_channel].timestamp;
        }
        // // console.log('In getConversationLastReadTimestamp', shared_channel, badgeCount);
        return timestamp;
    };
    PubNubService.prototype.reloadGlobalBadgeCount = function () {
        var badgeCount = 0;
        if (this.conversationCountMap) {
            for (var key in this.conversationCountMap) {
                if (this.conversationCountMap[key]) {
                    if (this.conversationCountMap[key] && this.conversationCountMap[key].count) {
                        badgeCount += this.conversationCountMap[key].count;
                    }
                }
            }
        }
        if (badgeCount > 0) {
            this.globalBadgeCount = badgeCount.toString();
        }
        else {
            this.globalBadgeCount = '';
        }
    };
    PubNubService.prototype.getConversationCountMap = function () {
        var conversationCountMap = new Map(), conversationCountMapStr;
        conversationCountMapStr = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].LOCAL_CONVERSATION_COUNT_MAP + '-' + this.userId);
        if (conversationCountMapStr && conversationCountMapStr.length > 0) {
            conversationCountMap = JSON.parse(conversationCountMapStr);
        }
        return conversationCountMap;
    };
    PubNubService.prototype.setUserState = function (channelsList) {
        this.pubnub.setState({
            channels: channelsList,
            state: { isTyping: this.isCurrentUserTyping },
            function: function (status, response) {
                // handle status, response
                // console.log("Status---", status, "Response", response);
            }
        });
    };
    PubNubService.prototype.setConnectionStatusChangeState = function (newState, channels) {
        channels = channels || [];
        //console.log("In setConnectionStatusChangeState", channels, newState);
        newState['timetoken'] = new Date().getTime();
        this.pubnub.setState({ state: newState, channels: channels }, function (status, response) {
            //console.log('>>', status, response);
        });
    };
    PubNubService.prototype.setUserStateGroup = function (channelsList, action, groupName, displayName, timestamp) {
        var stateParams = { action: action, groupName: groupName, displayName: displayName };
        if (timestamp) {
            stateParams['leaving_time_token'] = timestamp;
        }
        stateParams['timetoken'] = new Date().getTime();
        this.pubnub.setState({
            channels: channelsList,
            state: stateParams,
            function: function (status, response) {
                // handle status, response
                //  // console.log("Status---", status, "Response", response);
            }
        });
    };
    PubNubService.prototype.startTyping = function (channelName) {
        //// console.log("User isTyping - ", this.isCurrentUserTyping, "---", channelName);
        this.isCurrentUserTyping = true;
        this.setUserState([channelName]);
    };
    PubNubService.prototype.stopTyping = function (channelName) {
        //// console.log("User isTyping - ", this.isCurrentUserTyping, "---", channelName);
        this.isCurrentUserTyping = false;
        this.setUserState([channelName]);
    };
    PubNubService.prototype.addChanneltoMyGroup = function (channelsList, channelGroupName) {
        //console.log("addChanneltoGroup", channelsList, "-", channelGroupName);
        this.pubnub.channelGroups.addChannels({
            channels: channelsList,
            channelGroup: channelGroupName
        }, function (status) {
            if (status.error) {
                //console.log("addChanneltoGroup operation failed w/ status: ", status);
            }
            else {
                //console.log("addChanneltoGroup operation done!", status);
            }
        });
    };
    PubNubService.prototype.removeChannelFromMyGroup = function (channelsList, channelGroupName) {
        //console.log("removeChannelFromGroup", channelsList, "-", channelGroupName);
        this.pubnub.channelGroups.removeChannels({
            channels: channelsList,
            channelGroup: channelGroupName
        }, function (status) {
            if (status.error) {
                //console.log("removeChannelFromGroup operation failed w/ error:", status);
            }
            else {
                //console.log("removeChannelFromGroup operation done!", status)
            }
        });
    };
    // This is kept for refernce but we are not using 
    PubNubService.prototype.getSupportedLanguageMsgOLd = function (inputMsg) {
        var simpleObservable = new __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__["Observable"](function (observer) {
            var languageOb = {};
            __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].AVAILABLE_LANGUAGE.forEach(function (language) {
                languageOb[language] = inputMsg;
            });
            observer.next(languageOb);
            observer.complete();
        });
        return simpleObservable;
    };
    PubNubService.prototype.getSupportedLanguageMsg = function (inputMsg, inputLanguages, isSysMsg) {
        var _this = this;
        if (isSysMsg === void 0) { isSysMsg = true; }
        var simpleObservable = new __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__["Observable"](function (observer) {
            inputLanguages = inputLanguages || __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].AVAILABLE_LANGUAGE;
            var requestList = [], messageContent = {};
            var languages = JSON.parse(JSON.stringify(inputLanguages));
            // There should be English language in all conversation object.
            if (languages.indexOf(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].DEFAULT_LANGUAGE) === -1) {
                languages.push(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].DEFAULT_LANGUAGE);
            }
            if (languages.indexOf(_this.userLang) !== -1 && !isSysMsg) {
                languages.splice(languages.indexOf(_this.userLang), 1);
                messageContent[_this.userLang] = inputMsg;
            }
            languages.forEach(function (target) {
                var translateUrl = __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].GOOGLE_TRANSLATION_BASE_URL + "&target=" + target + "&q=" + inputMsg;
                requestList.push(_this.http.get(translateUrl).map(function (res) { return res.json(); }));
            });
            if (requestList && requestList.length > 0) {
                Object(__WEBPACK_IMPORTED_MODULE_3_rxjs_observable_forkJoin__["forkJoin"])(requestList).subscribe(function (responseArray) {
                    responseArray.forEach(function (response, index) {
                        if (response.data && response.data.translations.length > 0) {
                            messageContent[languages[index]] = response.data.translations[0].translatedText;
                        }
                    });
                    observer.next(messageContent);
                    observer.complete();
                }, function (error) {
                    console.log('Error while google translating ', error);
                    observer.error(error);
                    observer.complete();
                });
            }
            else {
                observer.next(messageContent);
                observer.complete();
            }
        });
        return simpleObservable;
    };
    PubNubService.prototype.setUserLang = function (language) {
        this.userLang = language;
    };
    return PubNubService;
}());
PubNubService = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* Injectable */])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["c" /* Http */]])
], PubNubService);

//# sourceMappingURL=pubnub-service.js.map

/***/ }),

/***/ 199:
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncatched exception popping up in devtools
	return Promise.resolve().then(function() {
		throw new Error("Cannot find module '" + req + "'.");
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 199;

/***/ }),

/***/ 241:
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncatched exception popping up in devtools
	return Promise.resolve().then(function() {
		throw new Error("Cannot find module '" + req + "'.");
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 241;

/***/ }),

/***/ 27:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChatService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__providers_http_service__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_environment__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_catch__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var ChatService = (function () {
    function ChatService(http, userService) {
        this.http = http;
        this.userService = userService;
        // console.log('Hello ChatService Provider')
    }
    ChatService.prototype.createOrEditConversation = function (params, isEdit) {
        if (isEdit === void 0) { isEdit = false; }
        // console.log('In createGroup, isEdit:', isEdit)
        var url = __WEBPACK_IMPORTED_MODULE_3__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/chat';
        if (isEdit) {
            url += '/updategroupdetails';
        }
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ChatService.prototype.updateConnectionStatus = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_3__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/chat/updateconnectionstatus';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ChatService.prototype.updateProviderConnectionStatus = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_3__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/chat/updateproviderconnection';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ChatService.prototype.updateConversationStatus = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_3__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/chat/updateconversationstatus';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ChatService.prototype.chatArchives = function (params) {
        // console.log('In chatarchives')
        var url = __WEBPACK_IMPORTED_MODULE_3__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/chatarchives';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ChatService.prototype.changePushNotificationSetting = function (params) {
        // console.log('In changePushNotificationSetting')
        var url = __WEBPACK_IMPORTED_MODULE_3__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/chat/updateconversation';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ChatService.prototype.getUserConversation = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_3__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/chat/getconversationdetails';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ChatService.prototype.getConversationExtraData = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_3__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/chat/detectconversationlanguages ';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ChatService.prototype.searchConversation = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_3__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/chat/getsearchresultforconversation';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ChatService.prototype.getUserGroups = function (userId) {
        var url = __WEBPACK_IMPORTED_MODULE_3__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/chat/getusergroups';
        var requestObj = {
            "user_id": userId
        };
        return this.http.post(url, requestObj).map(function (res) { return res.json(); });
    };
    ChatService.prototype.getGroupDetails = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_3__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/chat/getgroupmemberdetails';
        var requestObj = {
            user_id: params.user_id,
            shared_channel: params.shared_channel
        };
        return this.http.post(url, requestObj).map(function (res) { return res.json(); });
    };
    ChatService.prototype.checkForSharedChannel = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_3__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/chat/checkforsharedchannel';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ChatService.prototype.removeMemberFromGroup = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_3__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/chat/removesinglememberfromgroup';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ChatService.prototype.deleteGroupConversation = function (shared_channel, user_id) {
        var params = {
            shared_channel: shared_channel,
            user_id: user_id
        };
        var url = __WEBPACK_IMPORTED_MODULE_3__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/chat/deleteuserorgroup';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ChatService.prototype.updateVerificationRequest = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_3__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/servicelocations/updateverificationrequest';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ChatService.prototype.getMessageContent = function (messageOb, expectedLangPrefix) {
        var langPrefix = __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].DEFAULT_LANGUAGE;
        expectedLangPrefix = expectedLangPrefix || this.userService.getCurrentLang();
        if (typeof messageOb === 'string') {
            return messageOb;
        }
        if (messageOb.hasOwnProperty(expectedLangPrefix)) {
            langPrefix = expectedLangPrefix;
        }
        return messageOb[langPrefix];
    };
    ChatService.prototype.getNotificationLang = function (inputLanguages) {
        var languages = inputLanguages || [];
        var curLang = this.userService.getCurrentLang();
        var returnLang = __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].DEFAULT_LANGUAGE;
        switch (languages.length) {
            case 2:
                languages = languages.filter(function (lang) {
                    return (lang !== curLang) ? true : false;
                });
                returnLang = languages[0] || __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].DEFAULT_LANGUAGE;
                break;
            case 1:
                returnLang = languages[0];
                break;
        }
        return returnLang;
    };
    return ChatService;
}());
ChatService = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* Injectable */])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__providers_http_service__["a" /* HttpService */], __WEBPACK_IMPORTED_MODULE_2__providers_user_service__["a" /* UserService */]])
], ChatService);

//# sourceMappingURL=chat-service.js.map

/***/ }),

/***/ 304:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HomeTabs; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pages_aroundme_aroundme__ = __webpack_require__(305);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pages_activity_activity_feed__ = __webpack_require__(179);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_conversations_conversations__ = __webpack_require__(110);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__pages_my_stuff_my_stuff__ = __webpack_require__(471);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






//import { ServiceRequest } from '../../pages/service-request/service-request';





var HomeTabs = (function () {
    function HomeTabs(pubNubService, userService, translateService, loaderService, events) {
        this.pubNubService = pubNubService;
        this.userService = userService;
        this.translateService = translateService;
        this.loaderService = loaderService;
        this.events = events;
        this.selectedIndex = 0;
        this.ActivityTab = __WEBPACK_IMPORTED_MODULE_3__pages_activity_activity_feed__["a" /* ActivityPage */];
        this.ConversationTab = __WEBPACK_IMPORTED_MODULE_4__pages_conversations_conversations__["a" /* Conversations */];
        this.AroundmeTab = __WEBPACK_IMPORTED_MODULE_2__pages_aroundme_aroundme__["a" /* AroundmePage */];
        this.MyStuffTab = __WEBPACK_IMPORTED_MODULE_5__pages_my_stuff_my_stuff__["a" /* MyStuff */];
        //this.ServiceRequestTab = ServiceRequest;
    }
    HomeTabs.prototype.onTabClick = function (tab) {
        this.selectedIndex = tab.index;
        if (this.selectedIndex !== 0) {
            this.events.publish(__WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].APP_EVENTS.STOP_TTS);
        }
    };
    HomeTabs.prototype.setCoachMarks = function (page) {
        var _this = this;
        switch (page) {
            case 'feed':
                this.userService.userObj.show_coach_marks.feed = false;
                break;
            case 'conversation':
                this.userService.userObj.show_coach_marks.conversation = false;
                break;
            case 'around_me':
                this.userService.userObj.show_coach_marks.around_me = false;
                break;
            case 'profile':
                this.userService.userObj.show_coach_marks.profile = false;
                break;
        }
        if (!this.userService.userObj.show_coach_marks.feed && !this.userService.userObj.show_coach_marks.conversation &&
            !this.userService.userObj.show_coach_marks.around_me && !this.userService.userObj.show_coach_marks.profile) {
            this.userService.userObj.show_coach_marks.all = false;
        }
        var coachMarksSettingsRequest;
        coachMarksSettingsRequest = Object.assign({ user_id: this.userService.userObj.user_id }, { show_coach_marks: this.userService.userObj.show_coach_marks });
        this.userService.setCoachMarkSettings(coachMarksSettingsRequest).subscribe(function (response) {
            if (response.status === __WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                _this.userService.userObj.show_coach_marks = response.show_coach_marks;
                // Set map clickable on Got it click of around you.
                if (page === 'around_me') {
                    _this.events.publish(__WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].APP_EVENTS.AROUND_YOU_COACH_MARK_GOT_IT_CLICK);
                }
            }
            else {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.PROFILE_SAVE_DONE'));
            }
        });
    };
    HomeTabs.prototype.ngOnDestroy = function () {
        // console.log("Home tab is killed!!");
        this.ActivityTab = null;
        this.ConversationTab = null;
        this.AroundmeTab = null;
        this.MyStuffTab = null;
    };
    return HomeTabs;
}());
HomeTabs = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-home-tabs',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\home-tabs\home-tabs.html"*/'<ion-tabs tabs selectedIndex=0 (ionChange)="onTabClick($event)" #rezTabs>\n\n    <ion-tab id="1" [root]="ActivityTab" tabIcon=\'icons-feed\' tabBadgeStyle="blue" tabBadge={{pubNubService.feedBadgeCount}} [ngClass]="{\'coach-noScroll\':userService.userObj.show_coach_marks && userService.userObj.show_coach_marks.feed && selectedIndex === 0}"></ion-tab>\n\n    <ion-tab id="2" [root]="ConversationTab" tabIcon=\'icons-conversion\' tabBadge={{pubNubService.globalBadgeCount}} [ngClass]="{\'coach-noScroll\':userService.userObj.show_coach_marks && userService.userObj.show_coach_marks.conversation && selectedIndex === 1}"></ion-tab>\n\n    <!--<ion-tab id="6" [root]="ServiceRequestTab" tabIcon=\'icons-service\'></ion-tab>-->\n\n    <!--<ion-fab bottom center>\n\n        <button ion-fab mini><ion-icon class="icons-service" name="add"></ion-icon></button>\n\n    </ion-fab>-->\n\n    <ion-tab [root]="AroundmeTab" tabIcon=\'icons-around-me\' [ngClass]="{\'coach-noScroll\':userService.userObj.show_coach_marks && userService.userObj.show_coach_marks.around_me && selectedIndex === 2}"></ion-tab>\n\n    <ion-tab [root]="MyStuffTab" tabIcon=\'icons-my-stuff\' [ngClass]="{\'coach-noScroll\':userService.userObj.show_coach_marks && userService.userObj.show_coach_marks.profile && selectedIndex === 3}"></ion-tab>\n\n\n\n</ion-tabs>\n\n<!-- Coach Mark Feed -->\n\n<ion-fab *ngIf="userService.userObj.show_coach_marks && userService.userObj.show_coach_marks.feed && selectedIndex === 0 " class="coach-feed">\n\n    <ion-label class="vertical-middle">\n\n        <span>{{\'COACH_MARK.FEED_MSG_1\' | translate }} <br>{{\'COACH_MARK.FEED_MSG_2\' | translate }}</span>\n\n        <button ion-fab class="gotit" (click)="setCoachMarks(\'feed\')">{{\'COACH_MARK.GOT_IT\' | translate }}</button>\n\n    </ion-label>\n\n    <button ion-button disabled class="footer-guideline">\n\n        <img src="./assets/img/coachmark-feed.png" alt="">\n\n    </button>\n\n</ion-fab>\n\n<!-- End Coach Mark Feed -->\n\n\n\n\n\n<!-- Coach Mark Conversation -->\n\n<ion-fab *ngIf="userService.userObj.show_coach_marks && userService.userObj.show_coach_marks.conversation && selectedIndex === 1 " class="coach-conversation">\n\n    <button ion-button disabled class="header-guideline-left">\n\n        <img src="./assets/img/coachmark-conversation-add.png" alt="">\n\n        <ion-label class="coachmark-text start-conv">{{\'COACH_MARK.START_CONVERSATION\' | translate }}</ion-label>\n\n    </button>\n\n    <ion-label class="vertical-middle">\n\n        <span>{{\'COACH_MARK.CONV_MSG_1\' | translate}} <br> {{\'COACH_MARK.CONV_MSG_2\' | translate}}</span>\n\n        <button ion-fab class="gotit" (click)="setCoachMarks(\'conversation\')">{{\'COACH_MARK.GOT_IT\' | translate }}</button>\n\n    </ion-label>\n\n    <button ion-button disabled class="footer-guideline">\n\n        <img src="./assets/img/coachmark-conversation.png" alt="">\n\n    </button>\n\n</ion-fab>\n\n<!-- End Coach Mark Conversation -->\n\n\n\n\n\n<!-- Coach Mark Around You -->\n\n<ion-fab *ngIf="userService.userObj.show_coach_marks && userService.userObj.show_coach_marks.around_me && selectedIndex === 2" class="coach-aroundyou">\n\n    <button ion-button disabled class="header-guideline-right">\n\n        <img src="./assets/img/coachmark-aroundyou-setting.png" alt="">\n\n        <ion-label class="coachmark-text map-settings">{{\'COACH_MARK.MAP_SETTINGS\' | translate}}</ion-label>\n\n    </button>\n\n    <button ion-button disabled class="header-guideline-leftdown">\n\n        <img src="./assets/img/coachmark-aroundyou-savedlocation.png" alt="">\n\n        <ion-label class="coachmark-text pinned-location">{{\'COACH_MARK.YOUR_PINNED\' | translate }} <br>{{\'COACH_MARK.LOCATION\' | translate }}</ion-label>\n\n    </button>\n\n    <button ion-button disabled class="header-guideline-left">\n\n        <img src="./assets/img/coachmark-aroundyou-save.png" alt="">\n\n        <ion-label class="coachmark-text save-location">{{\'COACH_MARK.SAVE_LOCATION\' | translate }}</ion-label>\n\n    </button>\n\n    <ion-label class="vertical-middle">\n\n        <span>{{\'COACH_MARK.AROUND_PLACE01\' | translate}} <br> {{\'COACH_MARK.AROUND_PLACE02\' | translate}}</span>\n\n        <button ion-fab class="gotit" (click)="setCoachMarks(\'around_me\')">{{\'COACH_MARK.GOT_IT\' | translate }}</button>\n\n    </ion-label>\n\n    <button ion-button disabled class="header-guideline-bottom">\n\n        <img src="./assets/img/coachmark-aroundyou-map.png" alt="">\n\n        <ion-label class="coachmark-text map-location">{{\'COACH_MARK.CENTER_MAP\' | translate}} <br>{{\'COACH_MARK.YOUR_LOCATION\' | translate}}</ion-label>\n\n    </button>\n\n\n\n    <button ion-button disabled class="footer-guideline">\n\n        <img src="./assets/img/coachmark-aroundyou.png" alt="">\n\n    </button>\n\n</ion-fab>\n\n<!-- End Coach Mark Around You -->\n\n\n\n\n\n<!-- Coach Mark Your Stuff-->\n\n<ion-fab *ngIf="userService.userObj.show_coach_marks && userService.userObj.show_coach_marks.profile && selectedIndex === 3 " class="coach-yourstuff">\n\n    <ion-label class="vertical-middle">\n\n        <span>{{\'COACH_MARK.STUFF_MSG_1\' | translate }} <br>{{\'COACH_MARK.STUFF_MSG_2\' | translate }}</span>\n\n        <button ion-fab class="gotit" (click)="setCoachMarks(\'profile\')">{{\'COACH_MARK.GOT_IT\' | translate }}</button>\n\n    </ion-label>\n\n    <button ion-button disabled class="footer-guideline">\n\n        <img src="./assets/img/coachmark-yourstuff.png" alt="">\n\n    </button>\n\n</ion-fab>\n\n<!-- End Coach Mark -->'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\home-tabs\home-tabs.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_6__providers_pubnub_service__["a" /* PubNubService */], __WEBPACK_IMPORTED_MODULE_7__providers_user_service__["a" /* UserService */],
        __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_8__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */]])
], HomeTabs);

//# sourceMappingURL=home-tabs.js.map

/***/ }),

/***/ 305:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AroundmePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__ = __webpack_require__(168);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_keyboard__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_network__ = __webpack_require__(165);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__pinned_location_pinned_location__ = __webpack_require__(306);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__map_overlays_map_overlays__ = __webpack_require__(333);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__set_pinned_location_set_pinned_location__ = __webpack_require__(334);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__provider_details_provider_details__ = __webpack_require__(176);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__aroundme_service__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__provider_service__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
















var AroundmePage = (function () {
    function AroundmePage(navCtrl, events, platform, zone, aroundMeService, providerService, translateService, userService, analyticsService, loaderService, keyboard, geocoder, googleMaps, network) {
        this.navCtrl = navCtrl;
        this.events = events;
        this.platform = platform;
        this.zone = zone;
        this.aroundMeService = aroundMeService;
        this.providerService = providerService;
        this.translateService = translateService;
        this.userService = userService;
        this.analyticsService = analyticsService;
        this.loaderService = loaderService;
        this.keyboard = keyboard;
        this.geocoder = geocoder;
        this.googleMaps = googleMaps;
        this.network = network;
        this.MAP_ZOOM_LEVEL = 15;
        this.MAP_ZOOM_START_LEVEL = 3;
        this.mapInitialised = false;
        this.togglePineedLocation = false;
        this.isMapVisible = true;
        this.tabMapClass = false;
        this.selectedTab = 'mapView';
        this.serviceProviders = [];
        this.housingProviders = [];
        this.isPlaceSelected = false;
        // Set default searchLocation empty
        this.searchLocation = { query: '' };
        // Set default pinedLocation empty  
        this.pinedLocation = { name: '', address: '' };
        this.togglePinnedClass = false;
        this.keyboard.close();
        this.initSelectPinnedLocationEvent();
        this.initCoachMarkClickEvent();
        this.setMapOverlaySettings();
        if (platform.is('cordova')) {
            //console.log("Get Provider by my current Location ");
        }
        else {
            //India 
            //-81.57008739999999, 
            //41.4003046
            //    -81.57008739999999, 
            //41.4003046
            //latitude: 39.2120554
            //longitude: -76.865926
            //41.476886,-81.6467857
            this.getProviders({ lat: 41.476886, lng: -81.6467857 }, [], true, function (providers) {
                // this.getProviders({ lat: 73.9026152, lng: 18.5479964 }, ["5859382a4cce7614b8b0bd66_23"], true, (providers) => {
            });
        }
    }
    AroundmePage.prototype.ngAfterViewInit = function () {
        this.initMapView();
    };
    AroundmePage.prototype.ionViewDidLoad = function () {
        this.initLanguageUpdateEvent();
    };
    AroundmePage.prototype.ionViewDidEnter = function () {
        // Set isMapVisible to false when coack mark screen is over on map 
        if (this.userService.userObj.show_coach_marks.around_me) {
            this.isMapVisible = false;
            this.map.setClickable(false);
        }
        // this.initOverlaysOptions();
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].PAGES.AROUND_YOU);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].PAGES.AROUND_YOU);
        this.initListView();
    };
    AroundmePage.prototype.ionViewWillUnload = function () {
        console.log("Around ME- Looks like I'm about to ionViewWillUnload :(");
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].APP_EVENTS.ARROUND_YOU_ACTIONS);
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].APP_EVENTS.LANGUAGE_UPDATE);
    };
    AroundmePage.prototype.ngOnDestroy = function () {
        this.map.remove();
        //this.ionViewWillUnload();
    };
    AroundmePage.prototype.initSelectPinnedLocationEvent = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].APP_EVENTS.ARROUND_YOU_ACTIONS, function (action, data) {
            //this.loadMapByPinedLocation(location);
            _this.loaderService.createLoader(_this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
            if (__WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].ARROUND_YOU_ACTIONS.SELECT_SAVED_PIN === action) {
                _this.currentAddress = _this.searchLocation.query = data.address;
                _this.currentPosition = data.position;
            }
            _this.addMarkerOnMap({ position: _this.currentPosition, title: _this.currentAddress }, _this.addMarkerDone);
        });
    };
    AroundmePage.prototype.initCoachMarkClickEvent = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].APP_EVENTS.AROUND_YOU_COACH_MARK_GOT_IT_CLICK, function () {
            if (!_this.userService.userObj.show_coach_marks.around_me) {
                _this.map.setClickable(true);
                _this.isMapVisible = true;
                _this.getMyLocation();
            }
        });
    };
    AroundmePage.prototype.initListView = function () {
        this.content.resize();
        this.setSelectedProperty(null);
    };
    AroundmePage.prototype.initMapView = function () {
        this.content.resize();
        if (!this.mapInitialised && this.platform.is('cordova')) {
            this.initMap();
        }
        this.setSelectedProperty(null);
    };
    AroundmePage.prototype.initMap = function () {
        var _this = this;
        var that = this;
        that.mapElement = document.getElementById('map');
        var startLocation = new __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["e" /* LatLng */](37.09024, -95.712891);
        var layoutOption = {
            controls: {
                compass: false, myLocationButton: false, indoorPicker: true, zoom: false, mapToolbar: false
            },
            gestures: {
                scroll: true, tilt: true, rotate: true, zoom: true
            },
            camera: {
                target: startLocation, tilt: 40, zoom: that.MAP_ZOOM_START_LEVEL, bearing: 0, duration: 2000
            }
        };
        that.map = that.googleMaps.create(that.mapElement, layoutOption);
        that.map.on(__WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["d" /* GoogleMapsEvent */].MAP_READY).subscribe(function (map) {
            _this.mapInitialised = true;
            _this.getMyLocation();
        });
        that.map.on(__WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["d" /* GoogleMapsEvent */].MAP_CLICK).subscribe(function (map) {
            _this.setSelectedProperty(null);
            _this.keyboard.close();
        });
        that.map.on(__WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["d" /* GoogleMapsEvent */].MAP_LONG_CLICK).subscribe(function (location) {
            //console.log("Map is long clicked.\n" + JSON.stringify(location));
            that.currentPosition = location[0];
            var params = {
                position: { lat: location[0].lat, lng: location[0].lng }
            };
            that.updateLocationDetailsByPosition(params);
        });
    };
    AroundmePage.prototype.addNetworkEvents = function () {
        var _this = this;
        this.network.onConnect().subscribe(function () {
            if (!_this.mapInitialised) {
                _this.initMap();
            }
            _this.enableMap();
        });
        this.network.onDisconnect().subscribe(function () {
            _this.disableMap();
        });
    };
    AroundmePage.prototype.getMyLocation = function () {
        var _this = this;
        var that = this;
        that.enableMap();
        // Don't show map when coach marker active
        if (!this.userService.userObj.show_coach_marks.around_me) {
            that.map.getMyLocation().then(function (location) {
                // set map position as per currentPosition
                that.currentPosition = location.latLng;
                var geocode = {
                    position: {
                        lat: location.latLng.lat,
                        lng: location.latLng.lng
                    }
                };
                that.updateLocationDetailsByPosition(geocode);
            }).catch(function (error) {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.LOCATION_NOT_FOUND'));
            });
        }
    };
    AroundmePage.prototype.updateLocationDetailsByPosition = function (geocode) {
        var that = this;
        that.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        that.geocoder.geocode(geocode).then(function (response) {
            if (response && response.length > 0) {
                var result = response[0];
                var address = result.extra.lines.toString();
                var position = new __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["e" /* LatLng */](result.position.lat, result.position.lng);
                that.currentPosition = position;
                that.currentAddress = address;
                that.searchLocation.query = address;
                that.pinedLocation.zipcode = result.postalCode;
                that.pinedLocation.city = result.locality;
                that.pinedLocation.state = result.adminArea;
                that.addMarkerOnMap({ position: position, title: address }, that.addMarkerDone);
            }
        }, function (error) {
            that.addMarkerOnMap({ position: that.currentPosition, title: that.currentAddress }, that.addMarkerDone);
            that.loaderService.showToaster(error);
        });
    };
    AroundmePage.prototype.addMarkerOnMap = function (markerOptions, addMarkerDoneCallback) {
        var that = this, latLng;
        that.setSelectedProperty(null);
        if (markerOptions.position) {
            latLng = new __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["e" /* LatLng */](markerOptions.position.lat, markerOptions.position.lng);
            markerOptions.position = latLng;
            console.log("Before Map Clear");
            that.map.clear().then(function () {
                console.log("After Map Clear");
                that.map.animateCamera({ target: latLng, zoom: that.MAP_ZOOM_LEVEL, tilt: 40, bearing: 0, duration: 1500 });
                if (markerOptions.title) {
                    markerOptions.title = markerOptions.title.split(',').join("\n");
                }
                // set default marker icon image
                markerOptions.icon = { url: __WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].GOOGLE_MAP_DEFAULT_MARKER.ICON };
                markerOptions.animation = __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["c" /* GoogleMapsAnimation */].DROP;
                //// console.log('In addMarkerOnMap position,markerOptions', markerOptions.position, markerOptions);
                that.map.addMarker(markerOptions)
                    .then(function (marker) {
                    marker.addEventListener(__WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["d" /* GoogleMapsEvent */].MARKER_CLICK).subscribe(function (marker) {
                        that.setSelectedProperty(null);
                        marker[1].showInfoWindow();
                    });
                    marker.addEventListener(__WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["d" /* GoogleMapsEvent */].INFO_CLICK).subscribe(function (marker) {
                        marker[1].hideInfoWindow();
                    });
                    if (addMarkerDoneCallback) {
                        addMarkerDoneCallback.call(that, latLng);
                    }
                }).catch(function (error) {
                    console.log(error);
                    that.loaderService.dismissLoader();
                });
            });
        }
    };
    AroundmePage.prototype.addMarkerDone = function (latLng) {
        var _this = this;
        var serviceInterest = [], goolgePlacesOverlaysOptions;
        var overlaysOptions = JSON.parse(JSON.stringify(this.aroundMeService.mapOverlays));
        if (overlaysOptions.service_interest) {
            overlaysOptions.service_interest.filter(function (option) {
                if (option.flag === true) {
                    serviceInterest.push(option._id);
                }
            });
        }
        if (overlaysOptions.google_places) {
            goolgePlacesOverlaysOptions = overlaysOptions.google_places.filter(function (option) {
                return option.flag === true;
            });
        }
        this.getProviders(latLng, serviceInterest, overlaysOptions.provider_overlay[0].flag, function (providers) {
            var places = updatePlacerIcon(providers);
            if (goolgePlacesOverlaysOptions && goolgePlacesOverlaysOptions.length > 0) {
                _this.getGooglePlaceNearBySearch(latLng, goolgePlacesOverlaysOptions, function (googlePlaces) {
                    places = places.concat(googlePlaces);
                    showPropertiesOnMap.call(_this, places);
                });
            }
            else if (places && places.length > 0) {
                showPropertiesOnMap.call(_this, places);
            }
            else {
                _this.loaderService.dismissLoader();
            }
        });
        function updatePlacerIcon(places) {
            var icons = {
                'Multi Units Property': './assets/img/pin-building.png',
                'Single Home Property': './assets/img/pin-housing.png',
                Education: './assets/img/pin-education.png',
                "Employment Assistance": './assets/img/pin-employement-assistance.png',
                "Financial Counseling": './assets/img/pin-financial-counselling.png',
                "Child Care": './assets/img/pin-child-care.png',
                Health: './assets/img/pin-healthcare-sp.png',
                Training: './assets/img/pin-training.png',
                Transportation: './assets/img/pin-transportation.png',
                "Legal Services": './assets/img/pin-legal-services.png',
                Housing: './assets/img/pin-housing-sp.png',
                service_provider: './assets/img/service_provider.png',
                housing_provider: './assets/img/housing_provider.png',
                'Community Engagement': './assets/img/pin_community-engagement.png',
                'Senior Service': './assets/img/pin_senior-service.png'
            };
            places.map(function (place) {
                if (place.location_type) {
                    var icon = null;
                    if (place.location_type === __WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].USER_TYPE.HOUSING_PROVIDER) {
                        icon = icons[place.icon_type] || icons[__WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].USER_TYPE.HOUSING_PROVIDER];
                    }
                    else if (place.location_type === __WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].USER_TYPE.SERVICE_PROVIDER) {
                        icon = icons[place.icon_type] || icons[__WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].USER_TYPE.SERVICE_PROVIDER];
                    }
                    place['icon'] = icon;
                }
                return place;
            });
            return places;
        }
        function showPropertiesOnMap(places) {
            var _this = this;
            if (places && places.length > 0) {
                this.showPropertiesOnMap(latLng, places, function () {
                    _this.loaderService.dismissLoader();
                });
            }
        }
    };
    AroundmePage.prototype.showPropertiesOnMap = function (position, places, showPropertiesOnMapCallback) {
        var that = this, markers = [], bounds = new __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["f" /* LatLngBounds */]([position]);
        function addMarker(place) {
            var latLng = new __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["e" /* LatLng */](place.location.latitude, place.location.longitude);
            var markerOptions = { position: latLng };
            if (place.name) {
                markerOptions['title'] = place.name;
            }
            if (place.icon) {
                markerOptions['icon'] = { url: place.icon, size: { width: 24, height: 29 } };
            }
            bounds.extend(latLng);
            that.map.addMarker(markerOptions).then(function (marker) {
                markers.push(marker);
                marker.addEventListener(__WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["d" /* GoogleMapsEvent */].MARKER_CLICK).subscribe(function (marker) {
                    if (place.location_type) {
                        that.setSelectedProperty(place);
                    }
                    else {
                        that.setSelectedProperty(null);
                        marker[1].showInfoWindow();
                    }
                });
                marker.addEventListener(__WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["d" /* GoogleMapsEvent */].INFO_CLICK).subscribe(function (marker) {
                    marker[1].hideInfoWindow();
                });
                if (markers.length === places.length) {
                    addedAllMarkers();
                }
            }).catch(function (e) {
                markers.push(null);
                if (markers.length === places.length) {
                    addedAllMarkers();
                }
            });
        }
        function addedAllMarkers() {
            if (places && places.length > 1) {
                //Adjust zoom level only if we have results 
                // that.map.animateCamera({
                //   'target': bounds
                // });
            }
            if (showPropertiesOnMapCallback) {
                showPropertiesOnMapCallback();
            }
        }
        // Iterate the places and add marker on map 
        if (places && places.length > 0) {
            places.forEach(function (place) {
                addMarker(place);
            });
        }
        else {
            if (showPropertiesOnMapCallback) {
                showPropertiesOnMapCallback();
            }
        }
    };
    AroundmePage.prototype.getProviders = function (latLng, serviceInterest, isHousingPropertyNeeded, callback) {
        var _this = this;
        var params;
        params = { user_id: this.userService.userObj.user_id, latitude: latLng.lat, longitude: latLng.lng, is_housing_property_needed: isHousingPropertyNeeded };
        if (serviceInterest && serviceInterest.length > 0) {
            params['service_interests'] = serviceInterest;
        }
        this.serviceProviders = [];
        this.housingProviders = [];
        this.providerService.getNearByProperties(params).subscribe(function (response) {
            if (response.status === __WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS && response.service_providers) {
                _this.serviceProviders = response.service_providers || [];
                _this.housingProviders = response.housing_providers || [];
                var providers = response.service_providers || [];
                providers = providers.concat(response.housing_providers || []);
                //this.loaderService.dismissLoader();
                if (callback) {
                    callback(providers);
                }
            }
            else {
                //this.loaderService.dismissLoader();
                if (callback) {
                    callback([]);
                }
            }
        }, function (error) {
            _this.loaderService.dismissLoader();
            _this.loaderService.showToaster(error);
        });
    };
    AroundmePage.prototype.setSelectedProperty = function (property) {
        var that = this;
        if (property) {
            that.zone.run(function () {
                that.selectedProperty = Object.assign(property, { selected: true });
            });
        }
        else {
            if (that.selectedProperty) {
                that.selectedProperty = null;
            }
        }
    };
    AroundmePage.prototype.getGooglePlaceNearBySearch = function (currentPosition, goolgePlacesOverlaysOptions, callback) {
        var that = this;
        var types = [];
        goolgePlacesOverlaysOptions.forEach(function (option, index) {
            types.push(option.type);
        });
        var params = {
            lat: currentPosition.lat,
            long: currentPosition.lng,
            radius: __WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].PLACE_NEAR_BY_SEARCH_MAP_RADIUS,
            types: types
        };
        var placesList = [];
        that.aroundMeService.getNearByPlaces(params).subscribe(function (response) {
            var icons = {
                school: './assets/img/pin-schools.png',
                bank: './assets/img/pin-banks.png',
                convenience_store: './assets/img/pin-grocery-stores.png',
                hospital: './assets/img/pin-healthcare.png',
                restaurant: './assets/img/pin-restaurants.png',
                shopping_mall: './assets/img/pin-shopping.png'
            };
            placesList = response.places;
            placesList.forEach(function (place) {
                var iconUrl = place.icon;
                place.types.forEach(function (types, index) {
                    if (types in icons) {
                        iconUrl = icons[types];
                    }
                });
                place['icon'] = iconUrl;
                place['location'] = { latitude: place.geometry.location.lat, longitude: place.geometry.location.lng };
            });
            if (callback) {
                callback(placesList);
            }
        }, function (error) {
            that.loaderService.showToaster(error);
            if (callback) {
                callback(placesList);
            }
        });
    };
    AroundmePage.prototype.autocompletePlacesSearch = function () {
        var _this = this;
        // console.log("Onupdate called ",this.searchLocation.query )
        var that = this, searchObj = null, autocompletePlacesTemp = [];
        if (that.searchLocation.query == '') {
            // Clear results when no input is provided 
            that.autocompletePlaces = [];
            return;
        }
        else if (that.searchLocation.query.length < 3) {
            //To show results till the user clears the input
            return;
        }
        if (!that.isPlaceSelected) {
            searchObj = { input: that.searchLocation.query };
            //, types: ['address'] , componentRestrictions: { country: 'US' }
            that.autoCompleteObserver = that.aroundMeService.getPlacePredictions(searchObj).subscribe(function (response) {
                console.log("Got Response");
                autocompletePlacesTemp = [];
                var places = response.places.predictions;
                if (places) {
                    places.forEach(function (place) {
                        autocompletePlacesTemp.push(place);
                    });
                    // apply result on autocompletePlaces object 
                    that.zone.run(function () {
                        that.autocompletePlaces = autocompletePlacesTemp;
                    });
                }
                else {
                    that.autocompletePlaces = [];
                }
            }, function (error) {
                _this.loaderService.showToaster(error);
            });
        }
    };
    AroundmePage.prototype.onPlaceSelect = function (placeDetail) {
        var _this = this;
        this.isPlaceSelected = true;
        this.autoCompleteObserver.unsubscribe();
        this.enableMap();
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        // console.log('In chooseItem', placeDetail);
        this.aroundMeService.placeDetailById({ place_id: placeDetail.place_id }).subscribe(function (place) {
            if (place.status === __WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                _this.currentPosition = new __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["e" /* LatLng */](place.location.lat, place.location.long);
                _this.currentAddress = place.location.address;
                _this.searchLocation.query = place.location.address;
                _this.pinedLocation.zipcode = place.location.zipcode;
                _this.pinedLocation.city = place.location.city;
                _this.pinedLocation.state = place.location.state;
                _this.pinedLocation.place_id = placeDetail.place_id;
                // add marker on map 
                _this.isPlaceSelected = false;
                _this.addMarkerOnMap({ position: _this.currentPosition, title: placeDetail.description }, _this.addMarkerDone);
            }
            else {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.ADDRESS_NOT_FOUND'));
            }
        }, function (error) {
            _this.loaderService.showToaster(error);
            _this.loaderService.dismissLoader();
        });
    };
    AroundmePage.prototype.setPinedLocationModel = function (placeDetail) {
        this.pinedLocation.zipcode = '';
        this.pinedLocation.city = '';
        this.pinedLocation.state = '';
        for (var i = 0; i < placeDetail.address_components.length; i++) {
            for (var j = 0; j < placeDetail.address_components[i].types.length; j++) {
                if (placeDetail.address_components[i].types[j] == __WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].GOOGLE_MAP_PLACE_DETAIL.POSTAL_CODE) {
                    this.pinedLocation.zipcode = placeDetail.address_components[i].long_name;
                }
                else if (placeDetail.address_components[i].types[j] == __WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].GOOGLE_MAP_PLACE_DETAIL.CITY) {
                    this.pinedLocation.city = placeDetail.address_components[i].long_name;
                }
                else if (placeDetail.address_components[i].types[j] == __WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].GOOGLE_MAP_PLACE_DETAIL.STATE) {
                    this.pinedLocation.state = placeDetail.address_components[i].long_name;
                }
            }
        }
    };
    AroundmePage.prototype.goToMapOverlaysPage = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__map_overlays_map_overlays__["a" /* MapOverlays */]);
    };
    AroundmePage.prototype.loadMapByPinedLocation = function (pinLocation) {
        // // console.log('In loadMapByPinedLocation', pinLocation);
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.addMarkerOnMap({ position: pinLocation.position, title: pinLocation.address }, this.addMarkerDone);
        this.currentPosition = pinLocation.position;
        this.currentAddress = this.searchLocation.query = pinLocation.address;
    };
    AroundmePage.prototype.openPinnedLocation = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__pinned_location_pinned_location__["a" /* PinnedLocation */]);
    };
    AroundmePage.prototype.setPinnedLocation = function () {
        this.pinedLocation.position = this.currentPosition;
        this.pinedLocation.address = this.currentAddress || this.searchLocation.query;
        this.pinedLocation.name = '';
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__set_pinned_location_set_pinned_location__["a" /* SetPinnedLocation */], { 'selectedlocation': this.pinedLocation });
    };
    AroundmePage.prototype.hideKeyboard = function () {
        // console.log("hideKeyboard");
        this.keyboard.close();
    };
    AroundmePage.prototype.disableMap = function () {
        this.setSelectedProperty(null);
        this.tabMapClass = true;
        this.togglePinnedClass = true;
        if (this.isMapVisible) {
            this.map.setClickable(false);
            this.isMapVisible = false;
        }
    };
    AroundmePage.prototype.enableMap = function () {
        var _this = this;
        this.autocompletePlaces = [];
        this.keyboard.close();
        setTimeout(function () {
            if (!_this.isMapVisible) {
                // setClickable to false when coach marker is on top of map 
                if (_this.userService.userObj.show_coach_marks.around_me) {
                    _this.map.setClickable(false);
                }
                else {
                    _this.map.setClickable(true);
                }
                _this.isMapVisible = true;
            }
            _this.togglePinnedClass = false;
            _this.tabMapClass = false;
        }, 500);
    };
    AroundmePage.prototype.openDetailsView = function (property) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__provider_details_provider_details__["a" /* ProviderDetails */], { providerId: property._id, buildingId: property.building_id || '', buildingAddress: property.street_address1 });
    };
    AroundmePage.prototype.setMapOverlaySettings = function () {
        var _this = this;
        this.aroundMeService.getUserAroundmeSettings({ user_id: this.userService.userObj.user_id }).subscribe(function (response) {
            if (response.google_places || response.service_interest) {
                _this.aroundMeService.mapOverlays.google_places = response.google_places;
                _this.aroundMeService.mapOverlays.service_interest = response.service_interest;
                _this.aroundMeService.mapOverlays.provider_overlay = response.provider_overlay;
            }
        });
    };
    AroundmePage.prototype.initLanguageUpdateEvent = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_13__shared_config__["a" /* CONSTANTS */].APP_EVENTS.LANGUAGE_UPDATE, function () {
            //this.loadMapByPinedLocation(location); 
            _this.setMapOverlaySettings();
        });
    };
    return AroundmePage;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
], AroundmePage.prototype, "content", void 0);
AroundmePage = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-aroundme',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\aroundme.html"*/'<ion-header id="aroundHeaderH" labelHeader bg-transparant>\n\n    <ion-navbar>\n\n        <ion-buttons start>\n\n            <button (tap)="setPinnedLocation()" ion-button>\n\n               <ion-icon class="icons-plus" ></ion-icon>\n\n            </button>\n\n        </ion-buttons>\n\n\n\n        <ion-title> {{\'AROUND_ME.TITLE\' | translate}}</ion-title>\n\n        <ion-buttons end>\n\n            <button ion-button (tap)="goToMapOverlaysPage()">\n\n               <ion-icon class="icons-edit"></ion-icon>\n\n            </button>\n\n        </ion-buttons>\n\n    </ion-navbar>\n\n    <ion-segment [(ngModel)]="selectedTab" class="segment-tab">\n\n        <ion-segment-button value="mapView" class="segment-activated" (ionSelect)="initMapView()">\n\n            <ion-icon class="icons-map-pin"></ion-icon>\n\n        </ion-segment-button>\n\n        <ion-segment-button value="listView" (ionSelect)="initListView()">\n\n            <ion-icon class="icons-chat-group"></ion-icon>\n\n        </ion-segment-button>\n\n    </ion-segment>\n\n    <ion-toolbar [hidden]="selectedTab !== \'mapView\'">\n\n        <ion-searchbar (ionInput)="autocompletePlacesSearch()" (ionFocus)="disableMap();" autocomplete="on" debounce="500" (ionBlur)="hideKeyboard()" [(ngModel)]="searchLocation.query" placeholder="{{\'AROUND_ME.SEARCH_LOCATION\' | translate}}"></ion-searchbar>\n\n        <ion-icon *ngIf="!togglePinnedClass" class="icons-list" (tap)="openPinnedLocation()"></ion-icon>\n\n        <ion-icon *ngIf="togglePinnedClass" class="icons-back-arrow" (tap)="enableMap()"></ion-icon>\n\n        <ion-list (pan)="hideKeyboard()" class="places-list" *ngIf="autocompletePlaces && autocompletePlaces.length > 0">\n\n            <button ion-item detail-none class="list-grid-120" *ngFor="let place of autocompletePlaces" (tap)="onPlaceSelect(place)">\n\n                <h2 class="text14px-black">{{ place.description }}</h2>\n\n            </button>\n\n        </ion-list>\n\n    </ion-toolbar>\n\n</ion-header>\n\n<ion-content silvergrey-background class="map-page" [ngClass]="{\'list-scroll\': selectedTab !== \'mapView\'}">\n\n\n\n    <div [hidden]="selectedTab !== \'mapView\'" class="map-view">\n\n        <div #map id="map" [ngClass]="{\'selected-list\': selectedProperty && selectedProperty.selected}">\n\n            <ion-card class="tappable-area" [ngClass]="{\'tabarea-show\': tabMapClass}" (tap)="hideKeyboard();"></ion-card>\n\n\n\n            <ion-item class="glocation" [ngClass]="{\'location-hide\':!isMapVisible,\'location-show\':isMapVisible}">\n\n                <button fab class="icons-location01" fab-right (tap)="getMyLocation()" style="position: static"></button>\n\n            </ion-item>\n\n            <ion-list class="selected-property">\n\n                <button ion-item detail-none (tap)="openDetailsView(selectedProperty)" *ngIf="selectedProperty && selectedProperty.selected" class="list-grid-136">\n\n                        <h2>\n\n                            <span class="text14px-black" *ngIf="selectedProperty.public_name">{{selectedProperty.public_name}}</span>\n\n                        </h2>\n\n                        <p class="sendmsg" *ngIf="selectedProperty.street_address1">{{selectedProperty.street_address1}}</p>\n\n                        <ion-avatar *ngIf="selectedProperty.profile_pic" item-end class="profile-img-44"><img [src]="selectedProperty.profile_pic" alt="" /></ion-avatar>\n\n                    </button>\n\n            </ion-list>\n\n        </div>\n\n    </div>\n\n\n\n    <div *ngIf="(housingProviders.length === 0 && serviceProviders.length === 0) " class="message-no-data-found">\n\n        <p class="no-records">{{\'ERROR_MESSAGES.NO_DATA_FOUND\' | translate}}</p>\n\n    </div>\n\n    <div [hidden]="selectedTab !== \'listView\'" class="list-view">\n\n        <ion-list>\n\n            <ion-item-divider *ngIf="housingProviders && housingProviders.length>0">{{\'AROUND_ME.LIST_VIEW.PROPERTY\' | translate}} </ion-item-divider>\n\n            <button ion-item detail-none class="list-grid-136" *ngFor="let property of housingProviders" (click)="openDetailsView(property)">\n\n                <h2><span class="text14px-black" *ngIf="property.public_name">{{property.public_name}}</span></h2>\n\n                <p class="sendmsg" *ngIf="property.street_address1">{{property.street_address1}}</p>\n\n                <ion-avatar *ngIf="property.profile_pic" item-end class="profile-img-44"><img [src]="property.profile_pic" alt="" /></ion-avatar>\n\n            </button>\n\n        </ion-list>\n\n        <ion-list>\n\n            <ion-item-divider *ngIf="serviceProviders && serviceProviders.length>0">{{\'AROUND_ME.LIST_VIEW.SERVICE_PROPVIDER\' | translate}} </ion-item-divider>\n\n            <button ion-item detail-none class="list-grid-136" *ngFor="let property of serviceProviders" (click)="openDetailsView(property)">\n\n                <h2><span class="text14px-black" *ngIf="property.public_name">{{property.public_name}}</span></h2>\n\n                <p class="sendmsg" *ngIf="property.street_address1">{{property.street_address1}}</p>\n\n                <ion-avatar *ngIf="property.profile_pic" item-end class="profile-img-44"><img [src]="property.profile_pic" alt="" /></ion-avatar>\n\n            </button>\n\n        </ion-list>\n\n    </div>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\aroundme.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Platform */], __WEBPACK_IMPORTED_MODULE_0__angular_core__["P" /* NgZone */],
        __WEBPACK_IMPORTED_MODULE_11__aroundme_service__["a" /* AroundMeService */], __WEBPACK_IMPORTED_MODULE_14__provider_service__["a" /* ProviderService */], __WEBPACK_IMPORTED_MODULE_15__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_10__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__["a" /* AnalyticsService */],
        __WEBPACK_IMPORTED_MODULE_12__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_3__ionic_native_keyboard__["a" /* Keyboard */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["a" /* Geocoder */],
        __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["b" /* GoogleMaps */], __WEBPACK_IMPORTED_MODULE_4__ionic_native_network__["a" /* Network */]])
], AroundmePage);

//# sourceMappingURL=aroundme.js.map

/***/ }),

/***/ 306:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PinnedLocation; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__aroundme_service__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__edit_location_edit_location__ = __webpack_require__(332);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var PinnedLocation = (function () {
    function PinnedLocation(userService, aroundMeService, analyticsService, translateService, events, navCtrl, loaderService) {
        this.userService = userService;
        this.aroundMeService = aroundMeService;
        this.analyticsService = analyticsService;
        this.translateService = translateService;
        this.events = events;
        this.navCtrl = navCtrl;
        this.loaderService = loaderService;
        this.isPinnedLocationAPICall = false;
        this.pinedLocations = [];
        this.userObj = {
            _id: userService.userObj.user_id
        };
    }
    PinnedLocation.prototype.loadMapByPinedLocation = function (pinLocation) {
        var _this = this;
        this.navCtrl.pop().then(function () {
            _this.events.publish(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].APP_EVENTS.ARROUND_YOU_ACTIONS, __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].ARROUND_YOU_ACTIONS.SELECT_SAVED_PIN, pinLocation);
        });
    };
    PinnedLocation.prototype.ionViewDidLoad = function () {
        // console.log('Hello PinnedLocation Page');
    };
    PinnedLocation.prototype.ionViewDidEnter = function () {
        var _this = this;
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].PAGES.MY_PINNED_LOCATION);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].PAGES.MY_PINNED_LOCATION);
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.isPinnedLocationAPICall = false;
        this.aroundMeService.getPinedLocations({ user_id: this.userService.userObj.user_id }).subscribe(function (results) {
            if (results.pin_locations && results.pin_locations.length > 0) {
                results.pin_locations.map(function (pinedLocation) {
                    pinedLocation['position'] = { lat: pinedLocation.lat, lng: pinedLocation.long };
                });
            }
            _this.pinedLocations = results.pin_locations;
            _this.pinedLocations.sort(function (a, b) { return (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0); });
            _this.isPinnedLocationAPICall = true;
            _this.loaderService.dismissLoader();
        }, function (error) {
            _this.loaderService.showToaster(error);
            _this.loaderService.dismissLoader();
        });
        this.loadUserProfile();
    };
    PinnedLocation.prototype.loadUserProfile = function () {
        var _this = this;
        if (this.userService.getUserProfile() !== undefined && this.userService.getUserProfile() !== null) {
            this.userObj = this.userService.getUserProfile();
        }
        else {
            this.userService.getUserById(this.userObj._id).subscribe(function (response) {
                if (response.status !== 'ERROR') {
                    _this.userObj = response.user;
                    Object.assign(_this.userObj, { _id: _this.userObj.user_id });
                }
            });
        }
    };
    PinnedLocation.prototype.edit = function (pinnedLocation, slidingItem, index) {
        pinnedLocation.user_id = this.userService.userObj.user_id;
        slidingItem.close();
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__edit_location_edit_location__["a" /* EditLocation */], { pinnedLocation: pinnedLocation });
        //navigate to new page for edit address
    };
    PinnedLocation.prototype.delete = function (pinnedLocation, slidingItem, position) {
        var _this = this;
        slidingItem.close();
        pinnedLocation.user_id = this.userService.userObj.user_id;
        //console.log(pinnedLocation);
        if (pinnedLocation.address_type === 'Home' || pinnedLocation.address_type === 'Work') {
            this.updateUserProfile(pinnedLocation);
        }
        this.aroundMeService.deletePinLocation(pinnedLocation).subscribe(function (response) {
            //console.log(response);
            if (response.status == __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                _this.pinedLocations.splice(position, 1);
            }
            else {
                _this.loaderService.showToaster(response.message);
            }
        });
    };
    PinnedLocation.prototype.updateUserProfile = function (pinedLocation) {
        var _this = this;
        var userAddress = {
            street_address1: '',
            city: '',
            state: '',
            zipcode: pinedLocation.zipcode,
            place_id: ''
        };
        var pinnedAddress = { "_id": this.userService.userObj.user_id, profile: this.userService.userObj.profile };
        if (pinedLocation.address_type === 'Home') {
            Object.assign(pinnedAddress.profile, { home_address: userAddress });
        }
        else if (pinedLocation.address_type === 'Work') {
            Object.assign(pinnedAddress.profile, { work_address: userAddress });
        }
        this.userService.updateUserInfo(pinnedAddress).subscribe(function (res) {
            if (res.status !== 'ERROR') {
                //let userObj = that.userService.getUserProfile();
                _this.userObj.profile = pinnedAddress.profile;
                _this.userService.setUserProfile(_this.userObj);
            }
        });
    };
    return PinnedLocation;
}());
PinnedLocation = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-pinned-location',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\pinned-location\pinned-location.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'AROUND_ME.YOUR_PINNED_LOCATION.TITLE\' | translate}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content silvergrey-background>\n\n    <div *ngIf="pinedLocations.length == 0 && isPinnedLocationAPICall" class="message-no-data-found">\n\n        <p class="no-records">{{\'AROUND_ME.NO_PINNED_MESSAGE\' | translate}} </p>\n\n    </div>\n\n    <ion-list pinned-location-list *ngFor=" let pinedLocation of pinedLocations; let position = index">\n\n        <ion-item-sliding #item>\n\n            <button ion-item detail-none class="list-grid-136" (click)="loadMapByPinedLocation(pinedLocation)">\n\n            <h2>\n\n                <span *ngIf="pinedLocation.name && pinedLocation.address_type===\'Home\'" class="text14px-black">{{\'AROUND_ME.ADDRESS_TYPE.HOME\' | translate}}</span>\n\n                <span *ngIf="pinedLocation.name && pinedLocation.address_type===\'Work\'" class="text14px-black">{{\'AROUND_ME.ADDRESS_TYPE.WORK\' | translate}}</span>\n\n                <span *ngIf="pinedLocation.name && pinedLocation.address_type===\'Other\'" class="text14px-black">{{pinedLocation.name}}</span>\n\n              \n\n                <span *ngIf="pinedLocation.address" class="sendmsg" >{{pinedLocation.address}}</span>\n\n            </h2>\n\n        </button>\n\n            <ion-item-options side="right">\n\n                <button ion-button (tap)="delete(pinedLocation,item,position)" ion-icon class="icons-delete">{{\'AROUND_ME.YOUR_PINNED_LOCATION.DELETE_BUTTON\' | translate}}</button>\n\n            </ion-item-options>\n\n        </ion-item-sliding>\n\n\n\n    </ion-list>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\pinned-location\pinned-location.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_2__aroundme_service__["a" /* AroundMeService */], __WEBPACK_IMPORTED_MODULE_7__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_8__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__["a" /* LoaderService */]])
], PinnedLocation);

//# sourceMappingURL=pinned-location.js.map

/***/ }),

/***/ 332:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditLocation; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__aroundme_service__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_google_maps__ = __webpack_require__(168);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_analytics_service__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var EditLocation = (function () {
    function EditLocation(userService, aroundMeService, navParams, googleMaps, zone, analyticsService, navCtrl, loaderService) {
        this.userService = userService;
        this.aroundMeService = aroundMeService;
        this.navParams = navParams;
        this.googleMaps = googleMaps;
        this.zone = zone;
        this.analyticsService = analyticsService;
        this.navCtrl = navCtrl;
        this.loaderService = loaderService;
        //private MAP_ZOOM_LEVEL: number = 15;
        this.MAP_ZOOM_START_LEVEL = 3;
        this.pinnedLocation = this.navParams.get('pinnedLocation');
    }
    EditLocation.prototype.ngAfterViewInit = function () {
        this.initMapView();
    };
    EditLocation.prototype.ionViewDidLoad = function () {
        // console.log('Hello PinnedLocation Page');
    };
    EditLocation.prototype.initMapView = function () {
        var that = this;
        var layoutOption = {
            'controls': {
                'compass': false, 'myLocationButton': false, 'indoorPicker': true, 'zoom': false, 'toolbar': false
            },
            'gestures': {
                'scroll': true, 'tilt': true, 'rotate': true, 'zoom': true
            },
            'camera': {
                'latLng': this.pinnedLocation.position, 'tilt': 40, 'zoom': that.MAP_ZOOM_START_LEVEL, 'bearing': 0, 'duration': 2000
            }
        };
        //console.log(this.pinnedLocation.position);
        that.map = that.googleMaps.create('map-location', layoutOption);
        that.map.on(__WEBPACK_IMPORTED_MODULE_6__ionic_native_google_maps__["d" /* GoogleMapsEvent */].MAP_READY).subscribe(function (map) {
            //console.log('GoogleMapsEvent.MAP_READY', map);
        });
        that.map.on(__WEBPACK_IMPORTED_MODULE_6__ionic_native_google_maps__["d" /* GoogleMapsEvent */].MAP_CLICK).subscribe(function (map) {
            //this.keyboard.close();
        });
        that.map.on(__WEBPACK_IMPORTED_MODULE_6__ionic_native_google_maps__["d" /* GoogleMapsEvent */].MAP_LONG_CLICK).subscribe(function (location) {
            // console.log("Map is long clicked.\n" + JSON.stringify(location));
            that.currentPosition = location;
            // let params: GeocoderRequest = {
            //   position: { lat: location.lat, lng: location.lng }
            // };
            //that.updateLocationDetailsByPosition(params);
        });
    };
    EditLocation.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].PAGES.EDIT_PINNED_LOCATION);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].PAGES.EDIT_PINNED_LOCATION);
        this.searchLocation = this.pinnedLocation.address;
        //this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
    };
    EditLocation.prototype.save = function (pinedLocation) {
        pinedLocation.user_id = this.userService.userObj.user_id;
        //navigate to saved location page 
    };
    EditLocation.prototype.onPlaceSelect = function (place) {
    };
    EditLocation.prototype.updatePin = function () {
    };
    EditLocation.prototype.autocompletePlacesSearch = function () {
        var _this = this;
        // console.log("Onupdate called ",this.searchLocation.query )
        var that = this, searchObj = null, autocompletePlacesTemp = [];
        if (that.searchLocation == '') {
            // Clear results when no input is provided 
            that.autocompletePlaces = [];
            return;
        }
        else if (that.searchLocation.length < 3) {
            //To show results till the user clears the input
            return;
        }
        searchObj = { input: that.searchLocation };
        //, types: ['address'] , componentRestrictions: { country: 'US' }
        that.aroundMeService.getPlacePredictions(searchObj).subscribe(function (response) {
            autocompletePlacesTemp = [];
            var places = response.places.predictions;
            if (places) {
                places.forEach(function (place) {
                    autocompletePlacesTemp.push(place);
                });
                // apply result on autocompletePlaces object 
                that.zone.run(function () {
                    that.autocompletePlaces = autocompletePlacesTemp;
                });
            }
            else {
                that.autocompletePlaces = [];
            }
        }, function (error) {
            _this.loaderService.showToaster(error);
        });
    };
    return EditLocation;
}());
EditLocation = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-edit-location',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\edit-location\edit-location.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'AROUND_ME.EDIT_LOCATION_TITLE\' | translate}}</ion-title>\n\n        <ion-buttons end>\n\n            <button (tap)="updatePin()" ion-button clear outline-btn><ion-icon class="icons-correct"></ion-icon></button>\n\n        </ion-buttons>\n\n   </ion-navbar>\n\n</ion-header>\n\n<ion-content class="map-page" bg-transparant>\n\n    <div #maplocation id="map-location" class="map-view">\n\n        <ion-item>\n\n            <ion-input [clearInput]="pinnedLocation.address_type !==\'other\'" [readonly]="pinnedLocation.address_type !==\'other\'" [(ngModel)]="pinnedLocation.name"></ion-input>\n\n        </ion-item>\n\n        <ion-item search-location>\n\n            <ion-searchbar (ionInput)="autocompletePlacesSearch()" (ionFocus)="hideMap();" autocomplete="on" (ionBlur)="hideKeyboard()" [(ngModel)]="searchLocation"></ion-searchbar>\n\n            <ion-list list-items (pan)="hideKeyboard()">\n\n                <ion-item grid1 *ngFor="let place of autocompletePlaces" (tap)="onPlaceSelect(place)">\n\n                    <h2 list-title>{{ place.description }}</h2>\n\n                </ion-item>\n\n            </ion-list>\n\n        </ion-item>\n\n    </div>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\edit-location\edit-location.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_2__aroundme_service__["a" /* AroundMeService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */],
        __WEBPACK_IMPORTED_MODULE_6__ionic_native_google_maps__["b" /* GoogleMaps */], __WEBPACK_IMPORTED_MODULE_0__angular_core__["P" /* NgZone */], __WEBPACK_IMPORTED_MODULE_7__providers_analytics_service__["a" /* AnalyticsService */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__["a" /* LoaderService */]])
], EditLocation);

//# sourceMappingURL=edit-location.js.map

/***/ }),

/***/ 333:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MapOverlays; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__aroundme_service__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var MapOverlays = (function () {
    function MapOverlays(loaderService, aroundMeService, translateService, analyticsService, userService, events, navCtrl) {
        this.loaderService = loaderService;
        this.aroundMeService = aroundMeService;
        this.translateService = translateService;
        this.analyticsService = analyticsService;
        this.userService = userService;
        this.events = events;
        this.navCtrl = navCtrl;
        this.userData = this.userService.getUser();
        this.setOverlaysOptions();
    }
    MapOverlays.prototype.ionViewDidLoad = function () {
        var _this = this;
        if (!this.aroundMeService.mapOverlays.google_places || !this.aroundMeService.mapOverlays.service_interest) {
            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
            this.aroundMeService.getUserAroundmeSettings({ user_id: this.userData.user_id }).subscribe(function (response) {
                if (response.google_places || response.service_interest) {
                    _this.aroundMeService.mapOverlays.google_places = response.google_places;
                    _this.aroundMeService.mapOverlays.service_interest = response.service_interest;
                    _this.aroundMeService.mapOverlays.provider_overlay = response.provider_overlay;
                    _this.setOverlaysOptions();
                }
                _this.loaderService.dismissLoader();
            });
        }
    };
    MapOverlays.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].PAGES.MY_PINNED_LOCATION);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].PAGES.MY_PINNED_LOCATION);
    };
    MapOverlays.prototype.setOverlaysOptions = function () {
        this.overlaysOptions = JSON.parse(JSON.stringify(this.aroundMeService.mapOverlays));
    };
    MapOverlays.prototype.saveFilter = function () {
        var _this = this;
        var mapOverlays = this.overlaysOptions;
        var updateObj = {
            user_id: this.userData.user_id,
            google_places: [],
            provider_overlay: [],
            service_interest: []
        };
        mapOverlays.google_places.forEach(function (self) {
            if (self.flag) {
                updateObj.google_places.push(self._id);
            }
        });
        mapOverlays.provider_overlay.forEach(function (self) {
            if (self.flag) {
                updateObj.provider_overlay.push(self._id);
            }
        });
        mapOverlays.service_interest.forEach(function (self) {
            if (self.flag) {
                updateObj.service_interest.push(self._id);
            }
        });
        this.aroundMeService.updateUserAroundmeSettings(updateObj).subscribe(function (response) {
            if (response.status === __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                _this.aroundMeService.mapOverlays = _this.overlaysOptions;
                _this.navCtrl.pop().then(function () {
                    _this.events.publish(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].APP_EVENTS.ARROUND_YOU_ACTIONS, __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].ARROUND_YOU_ACTIONS.SAVE_FILTER);
                });
            }
        });
    };
    return MapOverlays;
}());
MapOverlays = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-map-overlays',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\map-overlays\map-overlays.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'AROUND_ME.MAP_OVERLAYS.TITLE\' | translate}}</ion-title>\n\n        <ion-buttons end>\n\n            <!--<button (click)="clearMapOverlays()" ion-button clear text-outline-btn>{{\'AROUND_ME.MAP_OVERLAYS.CLEAR_BTN\' | translate}} </button>-->\n\n            <button ion-button (click)="saveFilter()"><ion-icon class="icons-correct" ></ion-icon></button>\n\n            \n\n        </ion-buttons>\n\n    </ion-navbar>\n\n</ion-header>\n\n\n\n<ion-content silvergrey-background>\n\n     <ion-list *ngIf="overlaysOptions.provider_overlay!==null">        \n\n        <ion-item-divider>{{\'AROUND_ME.MAP_OVERLAYS.PROVIDER_SECTION\' | translate}} </ion-item-divider> \n\n        <button *ngIf="overlaysOptions.provider_overlay[0]" ion-item detail-none class="list-grid-120">\n\n            <ion-label>\n\n                <h2 class="text14px-black">{{overlaysOptions.provider_overlay[0].name}}</h2>\n\n            </ion-label>            \n\n            <ion-checkbox checked="overlaysOptions.provider_overlay[0].flag" item-right [(ngModel)]="overlaysOptions.provider_overlay[0].flag"></ion-checkbox>\n\n        </button>\n\n    </ion-list>\n\n\n\n    <ion-list *ngIf="overlaysOptions.service_interest!==null">\n\n        <ion-item-divider>{{\'AROUND_ME.MAP_OVERLAYS.SERVICE_INTEREST\' | translate}} </ion-item-divider>   \n\n        <button ion-item detail-none class="list-grid-120" *ngFor="let option of overlaysOptions.service_interest">\n\n            <ion-label>\n\n                <h2 class="text14px-black">{{option.name}}</h2>\n\n            </ion-label>\n\n            <ion-checkbox checked="option.flag" item-right [(ngModel)]="option.flag"></ion-checkbox>\n\n        </button>\n\n    </ion-list>\n\n\n\n    <ion-list *ngIf="overlaysOptions.google_places!==null">\n\n        <ion-item-divider>{{\'AROUND_ME.MAP_OVERLAYS.GOOGLE_PLACES\' | translate}}</ion-item-divider>   \n\n        <button ion-item detail-none class="list-grid-120" *ngFor="let option of overlaysOptions.google_places">\n\n            <ion-label>\n\n                <h2 class="text14px-black">{{option.name}}</h2>\n\n            </ion-label>\n\n            <ion-checkbox checked="option.flag" item-right [(ngModel)]="option.flag"></ion-checkbox>\n\n        </button>\n\n   </ion-list>    \n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\map-overlays\map-overlays.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_2__aroundme_service__["a" /* AroundMeService */], __WEBPACK_IMPORTED_MODULE_7__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_6__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_4__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */]])
], MapOverlays);

//# sourceMappingURL=map-overlays.js.map

/***/ }),

/***/ 334:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SetPinnedLocation; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__aroundme_service__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var SetPinnedLocation = (function () {
    function SetPinnedLocation(navCtrl, navParams, loaderService, analyticsService, translateService, userService, aroundMeService, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loaderService = loaderService;
        this.analyticsService = analyticsService;
        this.translateService = translateService;
        this.userService = userService;
        this.aroundMeService = aroundMeService;
        this.alertCtrl = alertCtrl;
        this.AddressType = [{ name: this.translateService.instant("AROUND_ME.ADDRESS_TYPE.HOME"), value: 'Home' },
            { name: this.translateService.instant("AROUND_ME.ADDRESS_TYPE.WORK"), value: 'Work' },
            { name: this.translateService.instant("AROUND_ME.ADDRESS_TYPE.OTHER"), value: 'Other' }];
        this.locationName = '';
        this.userObj = {
            _id: userService.userObj.user_id
        };
        this.pinedLocation = this.navParams.get('selectedlocation');
    }
    SetPinnedLocation.prototype.ionViewDidLoad = function () {
    };
    SetPinnedLocation.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].PAGES.SET_PIN_LOCATION);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].PAGES.SET_PIN_LOCATION);
        if (this.userService.getUserProfile() !== undefined && this.userService.getUserProfile() !== null) {
            this.userObj = this.userService.getUserProfile();
        }
        else {
            this.loaduserProfileData();
        }
    };
    SetPinnedLocation.prototype.loaduserProfileData = function () {
        var _this = this;
        var that = this;
        this.userService.getUserById(this.userObj._id).subscribe(function (response) {
            if (response.status !== 'ERROR') {
                _this.userObj = response.user;
                Object.assign(_this.userObj, { _id: _this.userObj.user_id });
            }
            else {
                var alert_1 = that.alertCtrl.create({
                    subTitle: that.translateService.instant('ERROR_MESSAGES.APP_VERSION_UPDATED'),
                    buttons: [{
                            text: _this.translateService.instant('CONVERSATIONS.OK'),
                            handler: function () {
                                that.userService.logout();
                            }
                        }],
                    enableBackdropDismiss: false,
                    cssClass: 'alert-single'
                });
                alert_1.present();
            }
        }, function (error) {
            _this.loaderService.showToaster(error);
            _this.loaderService.dismissLoader();
        });
    };
    SetPinnedLocation.prototype.saveDropPin = function () {
        var that = this;
        //console.log(" that.pinedLocation.name", that.pinedLocation);
        if (that.pinedLocation !== undefined && that.pinedLocation.position !== undefined) {
            if (that.locationName !== 'Other') {
                that.pinedLocation.name = that.locationName;
            }
            var params_1 = {
                user_id: that.userObj._id,
                name: that.pinedLocation.name,
                address: that.pinedLocation.address,
                address_type: that.locationName,
                lat: that.pinedLocation.position.lat,
                long: that.pinedLocation.position.lng,
                zipcode: that.pinedLocation.zipcode,
                state: that.pinedLocation.state,
                city: that.pinedLocation.city
            };
            var userAddress = that.setUserAddress();
            var pinnedAddress_1 = { "_id": that.userObj._id, profile: that.userObj.profile };
            if (that.pinedLocation.name == 'Home') {
                Object.assign(pinnedAddress_1.profile, { home_address: userAddress });
            }
            else if (that.pinedLocation.name == 'Work') {
                Object.assign(pinnedAddress_1.profile, { work_address: userAddress });
            }
            // // console.log("PinnedAddress --->>", pinnedAddress);
            // if(that.pinedLocation.name)
            if (that.pinedLocation.name) {
                that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
                that.userService.updateUserInfo(pinnedAddress_1).subscribe(function (res) {
                    if (res.status !== 'ERROR') {
                        that.loaderService.dismissLoader();
                        //let userObj = that.userService.getUserProfile();
                        that.userObj.profile = pinnedAddress_1.profile;
                        that.userService.setUserProfile(that.userObj);
                        that.aroundMeService.addDropPinLocation(params_1).subscribe(function (result) {
                            // reset pinked location
                            that.pinedLocation = {
                                name: '',
                                address: '',
                                position: { lat: 0, lng: 0 }
                            };
                        }, function (error) {
                            that.loaderService.showToaster(error);
                            that.loaderService.dismissLoader();
                        });
                        that.navCtrl.pop();
                    }
                    else {
                        that.loaderService.showToaster(res.messsage);
                        that.loaderService.dismissLoader();
                    }
                }, function (error) {
                    that.loaderService.dismissLoader();
                    that.loaderService.showToaster(error);
                });
            }
            else {
                var alert_2 = that.alertCtrl.create({
                    title: that.translateService.instant('ERROR_MESSAGES.ERROR_TITLE'),
                    subTitle: that.translateService.instant('ERROR_MESSAGES.LOCATION_NAME_BLANK'),
                    buttons: [{
                            text: this.translateService.instant('MISC.OK')
                        }],
                    enableBackdropDismiss: false,
                    cssClass: 'alert-single'
                });
                alert_2.present();
            }
        }
        else {
            var alert_3 = that.alertCtrl.create({
                title: that.translateService.instant('ERROR_MESSAGES.ERROR_TITLE'),
                subTitle: that.translateService.instant('ERROR_MESSAGES.SELECT_LOCATION'),
                buttons: [{
                        text: this.translateService.instant('MISC.OK')
                    }],
                enableBackdropDismiss: false,
                cssClass: 'alert-single'
            });
            alert_3.present();
        }
    };
    SetPinnedLocation.prototype.setUserAddress = function () {
        var userAddress = {
            street_address1: '',
            city: '',
            state: '',
            zipcode: '',
            place_id: ''
        };
        userAddress.street_address1 = this.pinedLocation.address;
        if (this.pinedLocation.city) {
            userAddress.city = this.pinedLocation.city;
        }
        else {
            userAddress.city = '';
        }
        if (this.pinedLocation.zipcode) {
            userAddress.zipcode = this.pinedLocation.zipcode;
        }
        else {
            userAddress.zipcode = '';
        }
        if (this.pinedLocation.state) {
            userAddress.state = this.pinedLocation.state;
        }
        else {
            userAddress.state = '';
        }
        userAddress.place_id = this.pinedLocation.place_id;
        return userAddress;
    };
    return SetPinnedLocation;
}());
SetPinnedLocation = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-set-pinned-location',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\set-pinned-location\set-pinned-location.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'AROUND_ME.SET_PIN_LOCATION.TITLE\' | translate }}</ion-title>\n\n        <ion-buttons end>\n\n            <button ion-button clear (tap)="saveDropPin()"><ion-icon class="icons-correct"></ion-icon></button>\n\n        </ion-buttons>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content silvergrey-background>\n\n    <!-- silver-shade6 -->\n\n    <ion-list radio-group [(ngModel)]="locationName">\n\n        <!--  list-items -->\n\n        <button ion-item detail-none class="list-grid-120 new-radio" *ngFor="let addressType of AddressType">\n\n            <ion-label><span class="text14px-black">{{addressType.name}}</span></ion-label>\n\n            <ion-radio value="{{addressType.value}}"></ion-radio>\n\n        </button>\n\n        <button ion-item detail-none *ngIf="locationName == \'Other\'" class="list-grid-120 drop-location-field">\n\n            <ion-input name="" type="text" [(ngModel)]="pinedLocation.name" placeholder="{{\'AROUND_ME.SET_PIN_LOCATION.LOCATION\' | translate }}"></ion-input>\n\n        </button>\n\n        <button ion-item detail-none *ngIf="locationName == \'Other\'" class="list-grid-120 drop-address-field"> \n\n            <ion-label class="text14px-black">\n\n                {{pinedLocation.address}}\n\n            </ion-label>\n\n        </button>\n\n    </ion-list>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\set-pinned-location\set-pinned-location.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_6__providers_analytics_service__["a" /* AnalyticsService */],
        __WEBPACK_IMPORTED_MODULE_7__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_3__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_2__aroundme_service__["a" /* AroundMeService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
], SetPinnedLocation);

//# sourceMappingURL=set-pinned-location.js.map

/***/ }),

/***/ 335:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VerifyAddress; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pending_confirmation_pending_confirmation__ = __webpack_require__(177);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__conversations_chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__provider_service__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var VerifyAddress = (function () {
    function VerifyAddress(loaderService, navCtrl, navParams, userService, providerService, analyticsService, translateService, chatService, pubNubService) {
        this.loaderService = loaderService;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.userService = userService;
        this.providerService = providerService;
        this.analyticsService = analyticsService;
        this.translateService = translateService;
        this.chatService = chatService;
        this.pubNubService = pubNubService;
        this.buildingId = this.navParams.get('buildingId');
        this.buildingAddress = this.navParams.get('buildingAddress');
        this.isAdvocate = this.navParams.get('isAdvocate') || false;
        this.providerDetails = this.navParams.get('providerDetails');
        this.isAddressValid = false;
        this.userData = this.userService.getUser();
        this.unit = '';
    }
    VerifyAddress.prototype.ngOnInit = function () {
    };
    VerifyAddress.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].PAGES.VERIFY_ADDRESS);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].PAGES.VERIFY_ADDRESS);
    };
    VerifyAddress.prototype.ionViewDidLoad = function () {
    };
    VerifyAddress.prototype.verifyHomeAddress = function () {
        var _this = this;
        this.providerDetails.verification_status = __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].VERIFICATION_STATUS.UNVERIFIED;
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.openGroupChatBox(this.providerDetails, function () {
            var request;
            request = {
                user_id: _this.userData.user_id,
                provider_location_id: _this.providerDetails._id,
                building_id: _this.buildingId,
                building_address: _this.buildingAddress,
                unit: _this.unit,
                first_name: _this.userData.profile.first_name,
                last_name: _this.userData.profile.last_name,
                is_advocate: _this.isAdvocate
            };
            _this.providerService.connectToPropertyManager(request).subscribe(function (response) {
                if (response.status === __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                    _this.loaderService.dismissLoader();
                    _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__pending_confirmation_pending_confirmation__["a" /* PendingConfirmation */]);
                }
                else {
                    _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                }
            });
        });
    };
    VerifyAddress.prototype.openGroupChatBox = function (providerDetails, connectToPropertyManagerCallback) {
        var _this = this;
        var that = this, groupObject, memberIds = [];
        that.pubNubService.getTimeToken(function (timestamp) {
            if (providerDetails.provider_details) {
                providerDetails.provider_details.forEach(function (provider) {
                    memberIds.push(provider._id);
                });
            }
            groupObject = {
                user_id: that.userData.user_id,
                name: providerDetails.public_name,
                shared_channel: that.userData.user_id + '_' + providerDetails._id,
                members: memberIds,
                type: __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP,
                joining_time_token: timestamp,
                leaving_time_token: null,
                group_type: __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].USER_TYPE.HOUSING_PROVIDER,
                user_name: that.userData.user_name,
                created_by: that.userData.user_id,
                profile_pic: providerDetails.profile_pic,
                resident_profile_pic: that.userData.profile.profile_pic,
                is_advocate: _this.isAdvocate,
                verification_address: _this.providerDetails.location.street_address1 + ' . Unit: ' + _this.unit,
                location_id: providerDetails._id
            };
            that.chatService.createOrEditConversation(groupObject, false).subscribe(function (result) {
                if (result.status === __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                    var messagePrefixStr = void 0;
                    if (_this.isAdvocate) {
                        messagePrefixStr = __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].MESSAGES.ADVOCATE_VERIFICATION_PREFIX;
                    }
                    else {
                        messagePrefixStr = __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].MESSAGES.VERIFICATION_PREFIX;
                    }
                    var addressStr = that.providerDetails.location.street_address1;
                    if (that.unit.trim().length > 0) {
                        addressStr += ' . Unit: ' + that.unit;
                    }
                    that.providerService.sendInvitationMessageToAdmin(groupObject, messagePrefixStr, addressStr);
                    if (groupObject.members && groupObject.members.length > 0) {
                        that.pubNubService.setUserStateGroup(groupObject.members, __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].USER_STATES.VERIFICATION_REQUEST, groupObject.shared_channel, groupObject.name);
                    }
                    if (that.pubNubService.pushNotificationChannels.indexOf(groupObject.shared_channel) === -1) {
                        that.pubNubService.setPushNotificationChannels([groupObject.shared_channel]);
                        if (!!that.userService.userObj.notification_enabled) {
                            that.pubNubService.registerDevice([groupObject.shared_channel], that.userService.deviceToken, that.userService.pushPlatform);
                        }
                    }
                    if (connectToPropertyManagerCallback) {
                        connectToPropertyManagerCallback();
                    }
                }
                else {
                    that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                    that.loaderService.dismissLoader();
                }
            }, function (error) {
                that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                that.loaderService.dismissLoader();
            });
        });
    };
    return VerifyAddress;
}());
VerifyAddress = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-verify-address',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\verify-address\verify-address.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'AROUND_ME.VERIFY_ADDRESS.TITLE\' | translate}}</ion-title>\n\n        <ion-buttons end>\n\n            <button ion-button clear><ion-icon class="icons-correct"></ion-icon></button>\n\n        </ion-buttons>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content>\n\n    <form>\n\n        <ion-list class="message-mob-bg">\n\n            <ion-item>\n\n                <ion-input type="text" class="input14px-black" name="unit" [ngModel]="unit" placeholder="{{\'AROUND_ME.VERIFY_ADDRESS.APARTMENT_UNIT\' | translate}}"></ion-input>\n\n            </ion-item>\n\n            <ion-item>\n\n                <ion-input type="text" readonly class="input14px-black" placeholder="{{\'AROUND_ME.VERIFY_ADDRESS.ADDRESS\' | translate}}" [value]="providerDetails.location.street_address1"></ion-input>\n\n            </ion-item>\n\n            <ion-item>\n\n                <ion-input type="text" readonly class="input14px-black" placeholder="{{\'AROUND_ME.VERIFY_ADDRESS.PROVIDER\' | translate}}" [value]="providerDetails.public_name"></ion-input>\n\n            </ion-item>\n\n        </ion-list>\n\n    </form>\n\n</ion-content>\n\n<ion-footer [keyboardAttach]="content" footer-full>\n\n    <ion-toolbar>\n\n        <ion-button ion-button block [ngClass]="{\'button-disable\': isAddressValid}" class="button-square-blue" (click)="verifyHomeAddress()">{{\'AROUND_ME.VERIFY_ADDRESS.VERIFY_BUTTON\' | translate}}</ion-button>\n\n    </ion-toolbar>\n\n</ion-footer>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\verify-address\verify-address.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_7__providers_user_service__["a" /* UserService */],
        __WEBPACK_IMPORTED_MODULE_8__provider_service__["a" /* ProviderService */], __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_4__conversations_chat_service__["a" /* ChatService */], __WEBPACK_IMPORTED_MODULE_6__providers_pubnub_service__["a" /* PubNubService */]])
], VerifyAddress);

//# sourceMappingURL=verify-address.js.map

/***/ }),

/***/ 336:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DiscontinuedProperty; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__provider_service__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__conversations_chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_pubnub_service__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var DiscontinuedProperty = (function () {
    function DiscontinuedProperty(navCtrl, navParams, chatService, analyticsService, translateService, pubNubService, loaderService, providerService, userService) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.chatService = chatService;
        this.analyticsService = analyticsService;
        this.translateService = translateService;
        this.pubNubService = pubNubService;
        this.loaderService = loaderService;
        this.providerService = providerService;
        this.userService = userService;
        this.buildingId = this.navParams.get('buildingId');
        this.buildingAddress = this.navParams.get('buildingAddress');
        this.providerDetails = this.navParams.get('providerDetails');
    }
    DiscontinuedProperty.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].PAGES.DISCONTINUE_PROPERTY);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].PAGES.DISCONTINUE_PROPERTY);
    };
    DiscontinuedProperty.prototype.disconnect = function () {
        var _this = this;
        var that = this;
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        if (that.providerDetails.verification_status === __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].VERIFICATION_STATUS.UNVERIFIED) {
            if (!this.providerDetails.conversation) {
                this.providerService.findPropertyById({ _id: that.providerDetails._id, user_id: this.userService.userObj.user_id, building_id: this.buildingId }).subscribe(function (response) {
                    if (response.status === __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                        //this.providerDetails = response.property[0];
                        //this.providerDetails.conversation = response.property[0].conversation;
                        Object.assign(_this.providerDetails, { conversation: response.property[0].conversation });
                        //TODO - Add event in the portal to handle this Added a temp fix for managing change in verfication state 
                        if (response.property[0].verification_status === __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].VERIFICATION_STATUS.UNVERIFIED) {
                            _this.disconnectUnverified();
                        }
                        else {
                            _this.disconnectVerified();
                        }
                    }
                });
            }
            else {
                this.disconnectUnverified();
            }
        }
        else {
            this.disconnectVerified();
        }
    };
    DiscontinuedProperty.prototype.disconnectUnverified = function () {
        var updateGroupRequest;
        var disconnectRequest;
        var that = this;
        updateGroupRequest = {
            shared_channel: this.providerDetails.conversation.shared_channel,
            user_id: this.providerDetails.conversation.user_id,
            connection_status: __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.IGNORE,
            is_advocate: this.providerDetails.is_advocate
        };
        this.chatService.updateProviderConnectionStatus(updateGroupRequest).subscribe(function (response) {
            if (response.status === __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                disconnectRequest = {
                    user_id: that.providerDetails.conversation.user_id,
                    provider_location_id: that.providerDetails._id,
                    building_id: that.buildingId,
                    building_address: that.buildingAddress,
                    is_address_verified: false,
                    is_disconnect: true,
                    is_advocate: that.providerDetails.is_advocate,
                    unit: that.providerDetails.resident_unit || ''
                };
                that.notifyAdmin();
                that.providerService.updatePeopleLiveInProperty(disconnectRequest).subscribe(function (disconnectResponse) {
                    that.loaderService.dismissLoader();
                    if (disconnectResponse.status === __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                        that.providerDetails.verification_status = undefined;
                        that.userService.isProfileUpdate = true;
                        that.navCtrl.pop();
                    }
                    else {
                        that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                    }
                });
            }
            else {
                that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                that.loaderService.dismissLoader();
            }
        });
    };
    DiscontinuedProperty.prototype.notifyAdmin = function () {
        var membersList = [];
        this.providerDetails.conversation.members.forEach(function (member) {
            membersList = membersList.concat(member.user_id);
        });
        this.pubNubService.setUserStateGroup(membersList, __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].USER_STATES.VERIFICATION_CANCEL, this.providerDetails.conversation.shared_channel, this.providerDetails.conversation.name);
    };
    DiscontinuedProperty.prototype.disconnectVerified = function () {
        var that = this;
        var disconnectRequest;
        disconnectRequest = {
            user_id: that.userService.userObj.user_id,
            provider_location_id: that.providerDetails._id,
            building_id: that.buildingId,
            building_address: that.buildingAddress,
            is_address_verified: false,
            is_disconnect: true,
            is_advocate: that.providerDetails.is_advocate,
            unit: that.providerDetails.resident_unit || ''
        };
        that.providerService.updatePeopleLiveInProperty(disconnectRequest).subscribe(function (disconnectResponse) {
            that.loaderService.dismissLoader();
            if (disconnectResponse.status === __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                that.providerDetails.verification_status = undefined;
                that.userService.isProfileUpdate = true;
                that.navCtrl.pop();
            }
            else {
                that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            }
        });
    };
    DiscontinuedProperty.prototype.cancelDisconnect = function () {
        this.navCtrl.pop();
    };
    return DiscontinuedProperty;
}());
DiscontinuedProperty = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-discontinued-property',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\discontinued-property\discontinued-property.html"*/'<ion-content grey-background side-padding>\n\n    <div class="confirmation-msg">\n\n        <div class="circle-icon-108 confirmation-icon">\n\n            <ion-icon class="icons-alert"></ion-icon>\n\n        </div>\n\n        <h2 class="text30px-bold-white">{{\'AROUND_ME.DISCONTINUED_PROPERTY.CONFIRMATION_MSG\' | translate}}<span splitter></span></h2>\n\n        <p class="text15px-normal-white">{{\'AROUND_ME.DISCONTINUED_PROPERTY.MSG\' | translate}}</p>\n\n    </div>\n\n    <div class="action-grid">\n\n        <button ion-button block round class="button-light-blue" (click)="disconnect()">{{\'AROUND_ME.DISCONTINUED_PROPERTY.SEND_BUTTON\' | translate}}</button>\n\n        <p><button ion-button class="button-blue-link" (click)="cancelDisconnect()">{{\'AROUND_ME.DISCONTINUED_PROPERTY.CANCEL_BTN_LINK\' | translate}}</button></p>\n\n    </div>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\discontinued-property\discontinued-property.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_4__conversations_chat_service__["a" /* ChatService */],
        __WEBPACK_IMPORTED_MODULE_7__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_8__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_9__providers_pubnub_service__["a" /* PubNubService */],
        __WEBPACK_IMPORTED_MODULE_5__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_2__provider_service__["a" /* ProviderService */], __WEBPACK_IMPORTED_MODULE_6__providers_user_service__["a" /* UserService */]])
], DiscontinuedProperty);

//# sourceMappingURL=discontinued-property.js.map

/***/ }),

/***/ 338:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NewMessage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_keyboard__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__public_profile_public_profile__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__conversations_chat_box_chat_box__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__conversations_conversations__ = __webpack_require__(110);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__group_chat_group_chat__ = __webpack_require__(180);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__connection_list__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};















var NewMessage = (function () {
    function NewMessage(navCtrl, navParams, userService, chatService, pubNubService, loaderService, events, alertCtrl, translateService, analyticsService, keyboard) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.userService = userService;
        this.chatService = chatService;
        this.pubNubService = pubNubService;
        this.loaderService = loaderService;
        this.events = events;
        this.alertCtrl = alertCtrl;
        this.translateService = translateService;
        this.analyticsService = analyticsService;
        this.keyboard = keyboard;
        this.placeholderIamges = __WEBPACK_IMPORTED_MODULE_11__shared_config__["a" /* CONSTANTS */].PLACEHOLDER_IMAGES;
        this.connectionStatus = __WEBPACK_IMPORTED_MODULE_11__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS;
        this.connectionList = new __WEBPACK_IMPORTED_MODULE_7__connection_list__["a" /* ConnectionList */](chatService, pubNubService, translateService, loaderService);
        this.userData = this.userService.getUser();
        this.connectedUsersList = [];
        this.searchStr = '';
        this.publicProfile = new __WEBPACK_IMPORTED_MODULE_3__public_profile_public_profile__["a" /* PublicProfile */](navCtrl, navParams, userService, chatService, loaderService, pubNubService, translateService, analyticsService, events, alertCtrl);
    }
    NewMessage.prototype.ionViewDidEnter = function () {
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_11__shared_config__["a" /* CONSTANTS */].PAGES.NEW_MESSAGE);
        this.inItUserList();
    };
    NewMessage.prototype.ionViewDidLoad = function () {
        this.initPresence();
    };
    NewMessage.prototype.ionViewWillUnload = function () {
        // console.log("new-message- Looks like I'm about to ionViewWillUnload :(");
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_11__shared_config__["a" /* CONSTANTS */].APP_EVENTS.NEW_MSG_PRESENCE_EVENT);
    };
    NewMessage.prototype.inItUserList = function (showLoader) {
        var _this = this;
        if (showLoader === void 0) { showLoader = true; }
        var params = { user_id: this.userData.user_id, is_group_data_needed: false };
        if (showLoader) {
            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        }
        this.connectionList.getUserList(params, function (error, response) {
            var otherUsersList = [];
            _this.connectedUsersList = response.connected;
            otherUsersList = response.invitation_sent || [];
            otherUsersList = otherUsersList.concat(response.invitation_received);
            _this.otherUsersList = otherUsersList;
            _this.connectionList.updatePresenceStatus(_this.connectedUsersList);
            _this.loaderService.dismissLoader();
        });
    };
    NewMessage.prototype.initPresence = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_11__shared_config__["a" /* CONSTANTS */].APP_EVENTS.NEW_MSG_PRESENCE_EVENT, function (presence) {
            //let presenceObj = presence[0];
            //console.log('In NewMessage subscribePresenceEvent[ action - ' + presence.action + ']', presence);
            if ((presence.action == 'state-change' && presence.state !== undefined && presence.channel === _this.userService.userObj.user_id)
                && (presence.state.action == __WEBPACK_IMPORTED_MODULE_11__shared_config__["a" /* CONSTANTS */].USER_STATES.CONNECTION_STATUS_CHANGED && (presence.state.connection_status === __WEBPACK_IMPORTED_MODULE_11__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.INVITED
                    || presence.state.connection_status === __WEBPACK_IMPORTED_MODULE_11__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED
                    || presence.state.connection_status === __WEBPACK_IMPORTED_MODULE_11__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.IGNORE))) {
                // console.log('Called CONSTANTS.APP_EVENTS.NEW_MSG_PRESENCE_EVENT ');
                _this.inItUserList(false);
            }
            else {
                //Set user online status.
                _this.connectedUsersList.map(function (user, index) {
                    if (presence.uuid === user.user_id && presence.actualChannel === user.user_id + "present-pnpres") {
                        if (presence.action == "join") {
                            user.presence = "online";
                        }
                        else if (presence.action == "leave") {
                            user.presence = "";
                        }
                    }
                });
            }
        });
    };
    NewMessage.prototype.navigateToConversationPage = function () {
        this.searchStr = '';
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_5__conversations_conversations__["a" /* Conversations */]);
    };
    NewMessage.prototype.searchUser = function () {
        var _this = this;
        // set val to the value of the searchbar
        var searchStr = this.searchStr;
        // if the value is an empty string don't filter the items
        if (searchStr && searchStr.trim() != '') {
            var params = { user_id: this.userData.user_id, search_by: searchStr };
            this.connectedUsersList = [];
            this.otherUsersList = [];
            this.connectionList.searchConversation(params, function (error, response) {
                _this.connectedUsersList = response.connected;
                _this.otherUsersList = response.otherUsersList;
                _this.connectionList.updatePresenceStatus(_this.connectedUsersList);
            });
        }
        else {
            this.inItUserList(false);
        }
    };
    NewMessage.prototype.openConversation = function (conversation) {
        //console.log('openConversation', conversation.connection_status);
        conversation.type = __WEBPACK_IMPORTED_MODULE_11__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.SINGLE;
        switch (conversation.connection_status) {
            case __WEBPACK_IMPORTED_MODULE_11__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.INVITED:
                this.viewSentInvite(conversation);
                break;
            case __WEBPACK_IMPORTED_MODULE_11__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.INVITATION_RECEIVED:
                this.viewReceivedInvite(conversation);
                break;
            case __WEBPACK_IMPORTED_MODULE_11__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED:
            case __WEBPACK_IMPORTED_MODULE_11__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED_BLOCKED:
                this.openChatBox(conversation);
                break;
        }
    };
    NewMessage.prototype.inviteOrCancelInvite = function (conversation, position) {
        var _this = this;
        conversation.type = __WEBPACK_IMPORTED_MODULE_11__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.SINGLE;
        this.publicProfile.inviteOrCancelInvite(conversation, true, function () {
            if (conversation.connection_status === __WEBPACK_IMPORTED_MODULE_11__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.NOT_CONNECTED && _this.searchStr.trim().length === 0) {
                _this.otherUsersList.splice(position, 1);
            }
        });
    };
    NewMessage.prototype.viewSentInvite = function (conversation) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__conversations_chat_box_chat_box__["a" /* ChatBox */], { user: conversation });
    };
    NewMessage.prototype.viewReceivedInvite = function (conversation) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__public_profile_public_profile__["a" /* PublicProfile */], { user: conversation });
    };
    NewMessage.prototype.openChatBox = function (conversation) {
        var _this = this;
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__conversations_chat_box_chat_box__["a" /* ChatBox */], { user: conversation }).then(function () {
            _this.navCtrl.remove((_this.navCtrl.length() - 2), 1);
        });
    };
    NewMessage.prototype.createNewGroup = function () {
        this.searchStr = '';
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__group_chat_group_chat__["a" /* GroupChat */]);
    };
    NewMessage.prototype.hideKeyboard = function () {
        this.keyboard.close();
    };
    return NewMessage;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
], NewMessage.prototype, "content", void 0);
NewMessage = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-new-message',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\conversations\new-message\new-message.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'PLACEORDER.TITLE\' | translate}}</ion-title>\n\n    </ion-navbar>\n\n    <ion-toolbar class="search-box">\n\n        <div class="search-user">\n\n            <ion-icon class="icons-search"></ion-icon>\n\n            <ion-searchbar class="input-searchbar" right new-message-search [(ngModel)]="searchStr" (ionInput)="searchUser()" placeholder="{{\'PLACEORDER.SEARCH\' | translate}}"></ion-searchbar>\n\n        </div>\n\n        <button ion-button (click)="createNewGroup()">\n\n            <ion-icon item-left class="icons-chat01"></ion-icon>\n\n            {{\'CONVERSATIONS.NEW_MSG.CREATE_GROUP\' | translate}}\n\n        </button>\n\n    </ion-toolbar>\n\n</ion-header>\n\n\n\n<ion-content silvergrey-background new-message (pan)="hideKeyboard();">\n\n    <!-- [KeyboardContentScrollBottom]="content" -->\n\n    <ion-list>\n\n        <ion-item-divider *ngIf="{first: first}; let firstUser;">{{\'CONVERSATIONS.NEW_MSG.YOUR_CONNECTION\' | translate}}</ion-item-divider>\n\n         <button ion-item detail-none class="list-grid-136" *ngFor="let conversation of connectedUsersList" (click)="openConversation(conversation)">\n\n            <h2><span class="text14px-black">{{conversation.user_name}}</span></h2>\n\n            <ion-avatar item-end class="profile-img-44" [ngClass]="{\'active\': conversation.type !==\'group\' && conversation.presence, \'de-active\': conversation.type !==\'group\' && !conversation.presence}">\n\n                <img *ngIf="conversation.profile_pic" src={{conversation.profile_pic}} alt="" />\n\n                <img *ngIf="!conversation.profile_pic" [src]="placeholderIamges.PROFILE_PIC" alt="" />\n\n            </ion-avatar>\n\n        </button>\n\n    </ion-list>\n\n\n\n    <ion-list class="invite-status">\n\n        <ion-item-divider *ngIf="{first: first}; let firstUser;">{{\'CONVERSATIONS.NEW_MSG.OTHERS\' | translate}}</ion-item-divider>\n\n        <ion-item class="list-grid-136 multiaction" *ngFor="let conversation of otherUsersList; let position=index">\n\n            <button ion-button class="invite-name" (click)="openConversation(conversation)">\n\n                <h2><span class="text14px-black">{{conversation.first_name}} {{conversation.last_name}}</span></h2>\n\n                <ion-chip>\n\n                    <p *ngIf="conversation.connection_status === connectionStatus.INVITED" class="sendmsg" >{{\'CONVERSATIONS.NEW_MSG.INVITATION\' | translate}}</p>\n\n                    <p *ngIf="conversation.connection_status === connectionStatus.INVITATION_RECEIVED" class="invitation-msg">{{ \'CONVERSATIONS.NEW_MSG.INVITE_CONNECT\' | translate }}</p>\n\n                    <p *ngIf="conversation.connection_status === connectionStatus.NOT_CONNECTED" class="sendmsg">{{ \'CONVERSATIONS.NEW_MSG.NOT_CONNECT\' | translate}}</p>\n\n                </ion-chip>\n\n            </button>\n\n\n\n            <button ion-button clear item-end class="invite-action" *ngIf="conversation.connection_status === connectionStatus.INVITED || conversation.connection_status === connectionStatus.NOT_CONNECTED" (click)="inviteOrCancelInvite(conversation,position);">\n\n                <ion-icon *ngIf="conversation.connection_status === connectionStatus.INVITED" class="icons-close"></ion-icon>\n\n                <ion-icon *ngIf="conversation.connection_status === connectionStatus.NOT_CONNECTED" class="icons-add-people"></ion-icon>\n\n            </button>\n\n        </ion-item>\n\n    </ion-list>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\conversations\new-message\new-message.html"*/,
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_8__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_12__chat_service__["a" /* ChatService */],
        __WEBPACK_IMPORTED_MODULE_9__providers_pubnub_service__["a" /* PubNubService */], __WEBPACK_IMPORTED_MODULE_10__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
        __WEBPACK_IMPORTED_MODULE_14__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_13__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_keyboard__["a" /* Keyboard */]])
], NewMessage);

//# sourceMappingURL=new-message.js.map

/***/ }),

/***/ 34:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ENVIRONMENT; });
var ENVIRONMENT = {
    APP_BASE_URL: 'https://rezility-qa.herokuapp.com',
    APP_VERSION: '1.7.2 ',
    APP_VERSION_DISPLAY: '1.7.2 (QA-127)',
    PUBNUB_KEYS: {
        PUBLISH_KEY: 'pub-c-be48fa19-969b-4619-82c7-f1c3e40eaef3',
        SUBSCRIBE_KEY: 'sub-c-45fc1ec6-357e-11e7-887b-02ee2ddab7fe'
    },
    GOOGLE_ANALYTICS_TRACKING_ID: 'UA-98874270-1',
};
//# sourceMappingURL=environment.js.map

/***/ }),

/***/ 42:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ActivityService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_environment__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_http_service__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ActivityService = (function () {
    function ActivityService(httpClient) {
        this.httpService = httpClient;
    }
    ActivityService.prototype.getActivityFeeds = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_1__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/activityfeeds/findbyuserid';
        return this.httpService.post(url, params).map(function (res) { return res.json(); });
    };
    ActivityService.prototype.submitPoll = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_1__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/activityfeeds/votepoll';
        return this.httpService.post(url, params).map(function (res) { return res.json(); });
    };
    ActivityService.prototype.updateActionTakenCount = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_1__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/rezpolls/updateactiontakencount';
        return this.httpService.post(url, params).map(function (res) { return res.json(); });
    };
    ActivityService.prototype.updateFeedLike = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_1__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/activityfeeds/likefeed';
        return this.httpService.post(url, params).map(function (res) { return res.json(); });
    };
    ActivityService.prototype.shareFeed = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_1__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/rezpolls/sharefeed';
        return this.httpService.post(url, params).map(function (res) { return res.json(); });
    };
    ActivityService.prototype.getUserSegments = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_1__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/usersegments/findbyuserid';
        return this.httpService.post(url, params).map(function (res) { return res.json(); });
    };
    ActivityService.prototype.getImageLibraryData = function (organization_id, imageType) {
        var url = __WEBPACK_IMPORTED_MODULE_1__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/servicelocations/getorganizationimages';
        return this.httpService.post(url, { organization_id: organization_id, action_type: imageType }).map(function (res) { return res.json(); });
    };
    ActivityService.prototype.createFeed = function (data) {
        var url = __WEBPACK_IMPORTED_MODULE_1__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/activityfeeds';
        return this.httpService.post(url, data).map(function (res) { return res.json(); });
    };
    ActivityService.prototype.createPollFeed = function (data) {
        var url = __WEBPACK_IMPORTED_MODULE_1__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/rezpolls';
        return this.httpService.post(url, data).map(function (res) { return res.json(); });
    };
    ActivityService.prototype.refreshTarget = function (data) {
        Object.assign(data, { is_only_target_needed: true });
        var url = __WEBPACK_IMPORTED_MODULE_1__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/usersegments';
        return this.httpService.post(url, data).map(function (res) { return res.json(); });
    };
    return ActivityService;
}());
ActivityService = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* Injectable */])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__providers_http_service__["a" /* HttpService */]])
], ActivityService);

// export interface IUserSegmentAlert extends IUserSegment {
//     label?: string;
//     id?: string;
//     value?: any;
// } 
//# sourceMappingURL=activity-service.js.map

/***/ }),

/***/ 458:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HousingProviderOptions; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__chat_box_chat_box__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__connection_list__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var HousingProviderOptions = (function () {
    function HousingProviderOptions(navCtrl, navParams, userService, chatService, loaderService, pubNubService, translateService, analyticsService) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.userService = userService;
        this.chatService = chatService;
        this.loaderService = loaderService;
        this.pubNubService = pubNubService;
        this.translateService = translateService;
        this.analyticsService = analyticsService;
        // public groupChannel: string;
        // public groupName: string;
        // public groupOwner: string;
        // public memberIndex: number;
        this.connectionStatus = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS;
        this.connectionList = new __WEBPACK_IMPORTED_MODULE_4__connection_list__["a" /* ConnectionList */](chatService, pubNubService, translateService, loaderService);
        this.userData = this.userService.getUser();
        this.selectedUser = this.navParams.get('user');
        //this.groupDetails = this.navParams.get('groupDetails');
        //this.memberIndex = this.navParams.get('memberIndex');
        // if (this.groupDetails) {
        //   this.groupChannel = this.groupDetails.shared_channel;
        //   this.groupName = this.groupDetails.name;
        //   this.groupOwner = this.groupDetails.created_by;
        //   this.selectedUser.receiver_id = this.selectedUser.created_by;
        // }
        //console.log('In ViewInvite this.selectedUser ', this.selectedUser);
    }
    HousingProviderOptions.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].PAGES.PUBLIC_PROFILE);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].PAGES.PUBLIC_PROFILE);
    };
    HousingProviderOptions.prototype.onAcceptAndConnect = function () {
        var _this = this;
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.updateProviderConnection(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED, function () {
            var params = { user_id: _this.selectedUser.created_by, action: 'accept', is_advocate: _this.selectedUser.is_advocate };
            _this.chatService.updateVerificationRequest(params).subscribe(function (result) {
                _this.loaderService.dismissLoader();
                if (result.status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                    _this.pubNubService.getTimeToken(function (pubnubtimestoken) {
                        // Update Joining date as accepted date
                        //this.selectedUser.joining_time_token = pubnubtimestoken;
                        _this.selectedUser.connection_status = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED;
                        _this.selectedUser.verification_status = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].VERIFICATION_STATUS.VERIFIED;
                        _this.sendMessageOnPubnub('accept');
                        var stateObj = {
                            _id: _this.selectedUser.shared_channel,
                            name: _this.selectedUser.user_name,
                            connection_status: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED,
                            connection_action: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED,
                            action: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_STATES.CONNECTION_STATUS_CHANGED,
                            connection_type: _this.selectedUser.type
                        };
                        _this.pubNubService.setConnectionStatusChangeState(stateObj, [_this.selectedUser.created_by]);
                        _this.openChatBox(_this.selectedUser);
                    });
                }
                else {
                    _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                }
            });
        });
    };
    HousingProviderOptions.prototype.sendMessageOnPubnub = function (type) {
        var _this = this;
        var messageStr = '';
        //TODO - Temporary fix for getting address for housing provider. 
        var addressStr = this.selectedUser['home_address'] = this.selectedUser.latestMessage.substring(24);
        if (type === 'accept') {
            messageStr = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].MESSAGES.ACCEPTED_POSTFIX;
        }
        else if (type === 'deny') {
            messageStr = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].MESSAGES.DENY_PREFIX;
        }
        if (messageStr && messageStr.length === 0) {
            return;
        }
        this.pubNubService.getSupportedLanguageMsg(messageStr).subscribe(function (msgContent) {
            // Concat original address and translated message for all supported languages (REZ-2392)
            for (var langKey in msgContent) {
                if (msgContent.hasOwnProperty(langKey)) {
                    if (type === 'accept') {
                        msgContent[langKey] = addressStr + ' ' + msgContent[langKey];
                    }
                    else {
                        msgContent[langKey] = msgContent[langKey] + ' ' + addressStr;
                    }
                }
            }
            var coreMessageObj = {
                content: msgContent,
                sender_uuid: _this.userData.user_id,
                image: '',
                receiver_uuid: _this.selectedUser.shared_channel,
                shared_channel: _this.selectedUser.shared_channel,
                timetoken: _this.selectedUser.joining_time_token,
                tags_array: [],
                video: '',
                is_group: true,
                content_type_id: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].MESSAGE_CONTENT_TYPE_ID.SYSTEM_MESSAGE_TO_ALL
            };
            _this.pubNubService.publish(coreMessageObj.shared_channel, coreMessageObj).subscribe(function (event) {
                //console.log('In sendInvitationMessageToAdmin Publish message', coreMessageObj, event);
            });
        }, function (error) {
            _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
        });
    };
    HousingProviderOptions.prototype.onDeny = function () {
        var _this = this;
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.updateProviderConnection(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.IGNORE, function () {
            _this.onDisconnectFromAddress('deny');
        });
    };
    HousingProviderOptions.prototype.onDisconnectFromAddress = function (action) {
        var _this = this;
        if (action === void 0) { action = 'disconnect'; }
        var params = { user_id: this.selectedUser.created_by, action: action, is_advocate: this.selectedUser.is_advocate };
        this.chatService.updateVerificationRequest(params).subscribe(function (result) {
            _this.loaderService.dismissLoader();
            if (result.status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                _this.pubNubService.getTimeToken(function (pubnubtimestoken) {
                    // Update Joining date as accepted date
                    _this.selectedUser.joining_time_token = pubnubtimestoken;
                    _this.selectedUser.connection_status = __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.IGNORE;
                    // send message on Pubnub
                    if (action === 'deny') {
                        _this.sendMessageOnPubnub(action);
                    }
                    var stateObj = {
                        _id: _this.selectedUser.shared_channel,
                        name: _this.selectedUser.user_name,
                        connection_status: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.IGNORE,
                        connection_action: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.IGNORE,
                        action: __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].USER_STATES.CONNECTION_STATUS_CHANGED
                    };
                    _this.pubNubService.setConnectionStatusChangeState(stateObj, [_this.selectedUser.created_by]);
                });
                _this.loaderService.showToaster(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS, result.message);
                _this.navCtrl.pop();
            }
            else {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            }
        });
    };
    HousingProviderOptions.prototype.updateProviderConnection = function (connectionStatus, callback) {
        var _this = this;
        var params = {
            user_id: this.userData.user_id,
            shared_channel: this.selectedUser.shared_channel,
            connection_status: connectionStatus,
            receiver_id: this.selectedUser.created_by,
            is_advocate: this.selectedUser.is_advocate
        };
        this.chatService.updateProviderConnectionStatus(params).subscribe(function (result) {
            //console.log('Inside updateConnectionStatus callback', result);
            if (result.status === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                if (callback) {
                    callback();
                }
            }
            else {
                _this.loaderService.dismissLoader();
                _this.loaderService.showToaster(result.message);
                //this.router.navigate(['/conversation']);
            }
        });
    };
    HousingProviderOptions.prototype.openChatBox = function (conversation) {
        var _this = this;
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__chat_box_chat_box__["a" /* ChatBox */], { user: conversation }).then(function () {
            _this.navCtrl.remove((_this.navCtrl.length() - 2), 1);
        });
    };
    return HousingProviderOptions;
}());
HousingProviderOptions = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-housing-provider-options',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\conversations\housing-provider-options\housing-provider-options.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{selectedUser.user_name}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n\n\n<ion-content silvergrey-background>\n\n    <div class="view-invite">\n\n        <ion-avatar>\n\n            <img *ngIf="!selectedUser.profile_pic" src="./assets/img/image-placeholder.jpg" alt="" />\n\n            <img *ngIf="selectedUser.profile_pic" [src]="selectedUser.profile_pic" alt="" />\n\n        </ion-avatar>\n\n    </div>\n\n    <!-- If Invitation profile page -->\n\n    <ion-list>  \n\n\n\n        <button ion-item detail-none class="list-grid-120" (click)="onAcceptAndConnect()">\n\n            <h2><span class="text14px-black">{{\'CONVERSATIONS.PUBLIC_PROFILE.APPROVE_CONNECT\' | translate}}</span></h2>\n\n            <ion-icon item-right class="icons-add-people icon-24"></ion-icon>\n\n        </button>\n\n\n\n        <button ion-item detail-none class="list-grid-120"  (click)="onDeny()">\n\n            <h2><span class="text14px-black">{{\'CONVERSATIONS.PUBLIC_PROFILE.DENY\' | translate}}</span></h2>\n\n            <ion-icon item-right class="icons-ignore icon-24"></ion-icon>\n\n        </button>\n\n\n\n    </ion-list>\n\n</ion-content>\n\n'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\conversations\housing-provider-options\housing-provider-options.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_user_service__["a" /* UserService */],
        __WEBPACK_IMPORTED_MODULE_5__chat_service__["a" /* ChatService */], __WEBPACK_IMPORTED_MODULE_7__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_6__providers_pubnub_service__["a" /* PubNubService */],
        __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__["a" /* AnalyticsService */]])
], HousingProviderOptions);

//# sourceMappingURL=housing-provider-options.js.map

/***/ }),

/***/ 459:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ConversationSetting; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__group_chat_group_chat__ = __webpack_require__(180);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__public_profile_public_profile__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var ConversationSetting = (function () {
    function ConversationSetting(navCtrl, navParams, pubNubService, translateService, userService, chatService, events, analyticsService, loaderService) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.pubNubService = pubNubService;
        this.translateService = translateService;
        this.userService = userService;
        this.chatService = chatService;
        this.events = events;
        this.analyticsService = analyticsService;
        this.loaderService = loaderService;
        this.groupType = __WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP;
        this.placeholderIamges = __WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].PLACEHOLDER_IMAGES;
        this.selectedUser = this.navParams.get('selectedUser');
        if (this.selectedUser.type !== __WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.SINGLE) {
            this.selectedUser = JSON.parse(JSON.stringify(this.navParams.get('selectedUser')));
            this.selectedUser.members = [];
        }
        this.userData = this.userService.getUser();
        this.initConservsationSettings(this.selectedUser);
        this.initRefreshEvent();
        this.initPresenceEvent();
    }
    ConversationSetting.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].PAGES.CONVERSATION_SETTINGS);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].PAGES.CONVERSATION_SETTINGS);
    };
    ConversationSetting.prototype.initRefreshEvent = function () {
        var that = this;
        that.events.subscribe(__WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].APP_EVENTS.REFRESH_GROUP_DETAILS, function () {
            //console.log('In ConversationSetting REFRESH_GROUP_DETAILS');
            that.initConservsationSettings(that.selectedUser);
        });
    };
    ConversationSetting.prototype.initConservsationSettings = function (user) {
        var _this = this;
        if (user.type === this.groupType) {
            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
            var params = {
                user_id: this.userData.user_id,
                shared_channel: user.shared_channel
            };
            this.chatService.getGroupDetails(params).subscribe(function (groupDetails) {
                _this.loaderService.dismissLoader();
                if (groupDetails.status == 'SUCCESS') {
                    user = Object.assign(user, groupDetails.group_details);
                    if (_this.selectedUser.type === _this.groupType && _this.selectedUser.members.length > 0) {
                        _this.updatePresenceStatus();
                    }
                }
            }, function (error) {
                _this.loaderService.dismissLoader();
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            });
        }
    };
    ConversationSetting.prototype.updatePresenceStatus = function () {
        var that = this;
        var channels = [];
        this.selectedUser.members.forEach(function (member) {
            channels.push(member.user_id);
        });
        that.pubNubService.getUsersState(channels).then(function (data) {
            if (data.channels) {
                that.selectedUser.members.forEach(function (member) {
                    member.presence = data.channels[member.user_id] ? "online" : "";
                });
            }
            // console.log("---", that.selectedUser.members);
        });
    };
    ConversationSetting.prototype.openGroupChat = function () {
        if (this.selectedUser.leaving_time_token !== undefined && this.selectedUser.leaving_time_token > 0) {
            this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.GRP_EDIT_ERROR_MSG'));
            // console.log(this.translateService.instant('ERROR_MESSAGES.GRP_EDIT_ERROR_MSG'));
        }
        else {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__group_chat_group_chat__["a" /* GroupChat */], { selectedGroup: this.selectedUser });
        }
    };
    ConversationSetting.prototype.changeNotitficationStatus = function () {
        var _this = this;
        var params = { _id: this.selectedUser._id, notification: this.selectedUser.notification };
        var that = this;
        this.chatService.changePushNotificationSetting(params).subscribe(function (response) {
            //// console.log('In changeNotitficationStatus', response);
            if (that.selectedUser.notification) {
                that.pubNubService.removePushNotifcationChannel(that.selectedUser.shared_channel);
                that.pubNubService.unRegisterDevice([that.selectedUser.shared_channel], that.userService.deviceToken, that.userService.pushPlatform);
            }
            else {
                that.pubNubService.setPushNotificationChannels([that.selectedUser.shared_channel]);
                that.pubNubService.registerDevice([that.selectedUser.shared_channel], that.userService.deviceToken, that.userService.pushPlatform);
            }
        }, function (error) {
            _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
        });
    };
    ConversationSetting.prototype.initPresenceEvent = function () {
        var that = this;
        that.events.subscribe(__WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].APP_EVENTS.GROUP_SETTING_PRESENCE_EVENT, function (presence) {
            //Set user online status.
            //let presenceObj = presence[0];
            // console.log('In subscribePresenceEvent[ action - ' + presenceObj.action + ']', presenceObj);
            if (that.selectedUser.members && that.selectedUser.members.length > 0) {
                that.selectedUser.members.forEach(function (member) {
                    if (presence.uuid === member.user_id && presence.actualChannel === member.user_id + "present-pnpres") {
                        if (presence.action == "join") {
                            member.presence = "online";
                        }
                        else if (presence.action == "leave") {
                            member.presence = "";
                        }
                    }
                });
            }
        });
    };
    ConversationSetting.prototype.ionViewWillUnload = function () {
        // console.log("conversation-setting- Looks like I'm about to ionViewWillUnload :(");
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].APP_EVENTS.GROUP_SETTING_PRESENCE_EVENT);
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].APP_EVENTS.REFRESH_GROUP_DETAILS);
    };
    ConversationSetting.prototype.openProfile = function (member, position) {
        if (this.selectedUser.type === __WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.SINGLE) {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__public_profile_public_profile__["a" /* PublicProfile */], { user: member });
        }
        else {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__public_profile_public_profile__["a" /* PublicProfile */], { user: member, groupDetails: this.selectedUser, memberIndex: position });
        }
    };
    return ConversationSetting;
}());
ConversationSetting = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-conversation-setting',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\conversations\conversation-setting\conversation-setting.html"*/'<ion-header labelHeader>\n\n    <ion-navbar topHeader>\n\n        <ion-title>{{\'CONVERSATIONS.SETTING.TITLE\' | translate}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n\n\n<ion-content silvergrey-background incident-settings>\n\n    <ion-list>\n\n        <ion-item class="list-grid-120" toggle *ngIf="selectedUser.type === groupType">\n\n            <ion-label><span class="text14px-black">{{\'CONVERSATIONS.SETTING.SEND_PUSH_NOTIFICATION\' | translate}}</span></ion-label>\n\n            <ion-toggle [checked]="selectedUser.notification" [(ngModel)]="selectedUser.notification" (ionChange)="changeNotitficationStatus()"></ion-toggle>\n\n        </ion-item>\n\n\n\n        <ion-item-group>\n\n            <ion-item-divider>{{\'CONVERSATIONS.SETTING.PARTICIPANT\' | translate}}</ion-item-divider>\n\n             <button ion-item detail-none class="list-grid-136" *ngIf="selectedUser.type!== groupType" (click)="openProfile(selectedUser)">                \n\n                <h2><span class="text14px-black" *ngIf="selectedUser.first_name || selectedUser.last_name">\n\n                    {{selectedUser.first_name}} {{selectedUser.last_name}}</span></h2>\n\n                <ion-avatar item-end class="profile-img-44" [ngClass]="{\'active\': selectedUser.presence, \'de-active\':!selectedUser.presence}">\n\n                    <img *ngIf="selectedUser.profile_pic" [src]="selectedUser.profile_pic" alt="" />\n\n                    <img *ngIf="!selectedUser.profile_pic" [src]="placeholderIamges.PROFILE_PIC" alt="" />\n\n                </ion-avatar>\n\n            </button>\n\n            <div *ngIf="selectedUser.type === groupType">\n\n                <button ion-item detail-none class="list-grid-136" *ngFor="let member of selectedUser.members let position = index" (click)="openProfile(member,position)">\n\n                    <h2><span class="text14px-black" *ngIf="member.first_name || member.last_name">{{member.first_name}} {{member.last_name}}</span></h2>\n\n                    <ion-avatar class="profile-img-44" item-end [ngClass]="{\'active\': member.presence, \'de-active\':!member.presence}">\n\n                        <img *ngIf="member.profile_pic" [src]="member.profile_pic" alt="" />\n\n                        <img *ngIf="!member.profile_pic" [src]="placeholderIamges.PROFILE_PIC" alt="" />\n\n                    </ion-avatar>\n\n                </button>\n\n            </div>\n\n        </ion-item-group>\n\n    </ion-list>\n\n</ion-content>\n\n<ion-footer footer-full>\n\n    <ion-toolbar>\n\n    <button *ngIf="(selectedUser.type === groupType && selectedUser.members.length > 0) || selectedUser.type !== groupType" ion-button block large class="button-square-blue"  (click)="openGroupChat()">\n\n        <span *ngIf="selectedUser.type !== groupType ">{{\'CONVERSATIONS.SETTING.ADD_PEOPLE\' | translate}}</span>\n\n        <span *ngIf="selectedUser.type === groupType ">{{\'CONVERSATIONS.SETTING.EDIT_GROUP\' | translate}}</span>\n\n    </button>\n\n    </ion-toolbar>\n\n</ion-footer>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\conversations\conversation-setting\conversation-setting.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_pubnub_service__["a" /* PubNubService */], __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_4__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_5__chat_service__["a" /* ChatService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__["a" /* AnalyticsService */],
        __WEBPACK_IMPORTED_MODULE_7__providers_loader_service__["a" /* LoaderService */]])
], ConversationSetting);

//# sourceMappingURL=conversation-setting.js.map

/***/ }),

/***/ 460:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ShowImage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_user_service__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ShowImage = (function () {
    function ShowImage(navCtrl, navParams, events, analyticsService, userService, platform) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.events = events;
        this.analyticsService = analyticsService;
        this.userService = userService;
        this.platform = platform;
        this.image = '';
        this.enableButton = false;
        this.messageModel = '';
        this.enableButton = this.navParams.get('enableSendButton');
        this.image = this.navParams.get('image_content');
        if (this.platform.is('ios')) {
            this.image = this.image.replace(/^file:\/\//, '');
        }
        this.enableZoom = this.navParams.get('enableZoom');
    }
    ShowImage.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_2__shared_config__["a" /* CONSTANTS */].PAGES.VIEW_IMAGE);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_2__shared_config__["a" /* CONSTANTS */].PAGES.VIEW_IMAGE);
    };
    ShowImage.prototype.navigateToChatPage = function () {
        this.navCtrl.pop();
    };
    ShowImage.prototype.setAttachement = function () {
        var data = { 'image': this.image, 'attachement': true, caption: this.messageModel };
        // console.log('In setAttachement', data);
        this.navCtrl.pop();
        this.events.publish(__WEBPACK_IMPORTED_MODULE_2__shared_config__["a" /* CONSTANTS */].APP_EVENTS.CLOSE_IMAGE_PREVIEW, data);
    };
    ShowImage.prototype.dismiss = function () {
    };
    return ShowImage;
}());
ShowImage = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-show-image',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\conversations\show-image\show-image.html"*/'<ion-header labelHeader>\n\n    <ion-toolbar topHeader>\n\n        <ion-buttons start>\n\n            <button ion-button (click)="navigateToChatPage()">\n\n                <ion-icon class="icons-close"></ion-icon>\n\n            </button>\n\n        </ion-buttons>\n\n    </ion-toolbar>\n\n</ion-header>\n\n\n\n<ion-content #content silver-shade6 scroll="false">\n\n    <ion-card photo-video>\n\n        <ion-grid>\n\n            <ion-row>\n\n                <ion-col *ngIf="enableZoom">\n\n                    <img src="{{image}}" alt="">\n\n                </ion-col>\n\n            </ion-row>\n\n        </ion-grid>\n\n    </ion-card>\n\n    <ion-card photo-video>\n\n        <ion-grid>\n\n            <ion-row>\n\n                <ion-col *ngIf="!enableZoom">\n\n                    <img src="{{image}}" alt="">\n\n                </ion-col>\n\n            </ion-row>\n\n        </ion-grid>\n\n    </ion-card>\n\n</ion-content>\n\n<ion-footer [keyboardAttach]="content" *ngIf="enableButton" footer-full>\n\n    <ion-toolbar>\n\n        <ion-list class="chat-type-msg" id="chat-text">\n\n            <ion-item>\n\n                <ion-textarea autoresize autocomplete="true" spellcheck="true" autocorrect="true" [(ngModel)]="messageModel" row="3" col="55" placeholder="{{ \'CONVERSATIONS.SHOW_IMG.CAPTION\' | translate }}" name="messageModel"></ion-textarea>\n\n            </ion-item>\n\n        </ion-list>\n\n        <button ion-button clear icon-only *ngIf="enableButton" (click)="setAttachement()">\n\n            <ion-icon class="icons-upload"></ion-icon>\n\n        </button> \n\n    </ion-toolbar>\n\n</ion-footer>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\conversations\show-image\show-image.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_3__providers_analytics_service__["a" /* AnalyticsService */],
        __WEBPACK_IMPORTED_MODULE_4__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Platform */]])
], ShowImage);

//# sourceMappingURL=show-image.js.map

/***/ }),

/***/ 462:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ContactListPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__conversations_chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__conversations_connection_list__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__activity_service__ = __webpack_require__(42);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var ContactListPage = (function () {
    function ContactListPage(activityService, navCtrl, navParams, userService, analyticsService, chatService, pubNubService, events, translateService, loaderService) {
        this.activityService = activityService;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.userService = userService;
        this.analyticsService = analyticsService;
        this.chatService = chatService;
        this.pubNubService = pubNubService;
        this.events = events;
        this.translateService = translateService;
        this.loaderService = loaderService;
        this.conversationType = __WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE;
        this.placeholderIamges = __WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].PLACEHOLDER_IMAGES;
        this.receiverIds = [];
        this.contacts = [];
        this.rezfeed_id = this.navParams.get('rezfeed_id');
        this.feed_title = this.navParams.get('feed_title');
        this.connectionList = new __WEBPACK_IMPORTED_MODULE_3__conversations_connection_list__["a" /* ConnectionList */](chatService, pubNubService, translateService, loaderService);
        this.userData = this.userService.getUser();
        this.connectedUsersList = [];
    }
    ContactListPage.prototype.ionViewDidEnter = function () {
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].PAGES.GROUP_CHAT);
        this.initContacts();
        this.content.resize();
    };
    ContactListPage.prototype.initContacts = function () {
        var _this = this;
        var params = { user_id: this.userData.user_id, is_group_data_needed: false };
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.connectionList.getUserList(params, function (error, response) {
            _this.connectionList.updatePresenceStatus(response.connected, function () {
                _this.usersListCopy = JSON.parse(JSON.stringify(response.connected));
                _this.searchUser('');
                _this.loaderService.dismissLoader();
            });
        });
    };
    ContactListPage.prototype.selectUser = function (user) {
        this.content.resize();
        user.selected = true;
        if (user.selected) {
            this.contacts.push(user);
            this.receiverIds.push(user.user_id);
        }
    };
    ContactListPage.prototype.unSelectUser = function (user, index) {
        user.selected = false;
        this.contacts.splice(index, 1);
        this.receiverIds.splice(index, 1);
        this.searchUser(this.searchStr);
        this.content.resize();
    };
    ContactListPage.prototype.searchUser = function (searchString) {
        var _this = this;
        // Reset items back to all of the items    
        this.connectedUsersList = JSON.parse(JSON.stringify(this.usersListCopy));
        // if the value is an empty string don't filter the items
        this.connectedUsersList = this.connectedUsersList.filter(function (item) {
            return ((item.user_name.toLowerCase().indexOf(searchString.toLowerCase()) > -1) && (_this.receiverIds.indexOf(item.receiver_id) === -1));
        });
    };
    ContactListPage.prototype.shareFeed = function () {
        var _this = this;
        var shareFeedRequest = {
            receiver_id: this.receiverIds,
            rezfeed_id: this.rezfeed_id,
            user_id: this.userData.user_id,
            feed_title: this.feed_title
        };
        console.log(shareFeedRequest);
        this.activityService.shareFeed(shareFeedRequest).subscribe(function (response) {
            _this.loaderService.showToaster(response.message);
            //this.loaderService.dismissLoader();
            _this.navCtrl.pop();
        });
        //this.navCtrl.pop();
    };
    return ContactListPage;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
], ContactListPage.prototype, "content", void 0);
ContactListPage = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-contact-list',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\activity\contact-list\contact-list.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n      <ion-title>{{\'CONVERSATIONS.NEW_MSG.YOUR_CONNECTION\' | translate}}</ion-title>\n\n        <ion-buttons end>\n\n            <button *ngIf="contacts.length>0" ion-button text-outline-btn (tap)="shareFeed()">\n\n               <!--{{\'BUTTON_LABEL.SAVE\' | translate}}-->\n\n               <ion-icon class="icons-correct"></ion-icon>\n\n            </button>\n\n        </ion-buttons>\n\n    </ion-navbar>\n\n    <ion-toolbar>\n\n        <div search-box [ngClass]="{\'only-search\':contacts.length===0}">\n\n            <div class="contact-chip">\n\n                <ion-icon class="icons-search"></ion-icon>\n\n                <ion-chip #chip2 *ngIf="contacts.length>0">\n\n                    <div class="select-contact" *ngFor="let user of contacts let userIndex=index">\n\n                        <span>{{user.user_name}}</span>\n\n                        <button ion-button clear color="dark" (click)="unSelectUser(user,userIndex)">\n\n                        <ion-icon class="icons-close" name="close-circle"></ion-icon>\n\n                    </button>\n\n                    </div>\n\n                    <ion-searchbar class="input-searchbar" [(ngModel)]="searchStr" placeholder="" (ionInput)="searchUser(searchStr)"></ion-searchbar>\n\n                </ion-chip>\n\n                <div *ngIf="contacts.length<=0">\n\n                    <ion-searchbar class="input-searchbar" [(ngModel)]="searchStr" placeholder="{{\'CONVERSATIONS.GROUP_CHAT.SEARCH_PEOPLE\' | translate}}" (ionInput)="searchUser(searchStr)"></ion-searchbar>\n\n                </div>\n\n            </div>\n\n        </div>\n\n    </ion-toolbar>\n\n</ion-header>\n\n\n\n<ion-content silvergrey-background new-message (pan)="hideKeyboard();" [ngClass]="{\'add-contacts\':contacts.length>0,\'remove-contacts\':contacts.length ===0}" class="scroll-content ionic-scroll has-header has-footer">\n\n    <ion-list *ngFor="let user of connectedUsersList; let firstUser=first;">\n\n        <button ion-item detail-none class="list-grid-136" *ngIf="user.selected!== true" [ngClass]="{\'selected-card\':user.selected=== true}" (click)="!user.selected && selectUser(user)">\n\n            <h2><span class="text14px-black">{{user.user_name}}</span></h2>\n\n            <!--<p subtitle12px>Last seen 3 hours ago</p>-->\n\n            <ion-avatar item-end class="profile-img-44" [ngClass]="{\'active\': user.presence, \'de-active\':!user.presence}">\n\n                <img *ngIf="user.profile_pic" src={{user.profile_pic}} alt="" />\n\n                <img *ngIf="!user.profile_pic" [src]="placeholderIamges.PROFILE_PIC" alt="" />\n\n            </ion-avatar>\n\n        </button>\n\n    </ion-list>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\activity\contact-list\contact-list.html"*/,
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_10__activity_service__["a" /* ActivityService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_4__providers_user_service__["a" /* UserService */],
        __WEBPACK_IMPORTED_MODULE_8__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_2__conversations_chat_service__["a" /* ChatService */], __WEBPACK_IMPORTED_MODULE_5__providers_pubnub_service__["a" /* PubNubService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */],
        __WEBPACK_IMPORTED_MODULE_7__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_6__providers_loader_service__["a" /* LoaderService */]])
], ContactListPage);

//# sourceMappingURL=contact-list.js.map

/***/ }),

/***/ 463:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CreateFeedPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__activity_service__ = __webpack_require__(42);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__create_placement_feed_create_placement_feed__ = __webpack_require__(182);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__create_poll_feed_create_poll_feed__ = __webpack_require__(467);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__shared_config__ = __webpack_require__(6);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var CreateFeedPage = (function () {
    function CreateFeedPage(activityService, navCtrl, navParams, userService, events, translateService, alertCtrl, loaderService) {
        this.activityService = activityService;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.userService = userService;
        this.events = events;
        this.translateService = translateService;
        this.alertCtrl = alertCtrl;
        this.loaderService = loaderService;
    }
    CreateFeedPage.prototype.ionViewDidEnter = function () {
        this.branches = this.userService.userObj.branches;
        this.selectedTemplate = this.userService.userObj.feed_templates[0];
    };
    CreateFeedPage.prototype.loadUserSegments = function () {
        var that = this;
        this.selectedSegment = undefined;
        this.selectedSegmentName = '';
        that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        var userSegments = [];
        var request = {
            branch_id: that.selectedBranch._id,
            user_id: that.userService.userObj.user_id,
            user_type: that.userService.userObj.user_type
        };
        that.activityService.getUserSegments(request).subscribe(function (response) {
            //    this.loaderService.dismissLoader();
            if (response && response.usersegment) {
                response.usersegment.forEach(function (userSegment) {
                    userSegments.push({ _id: userSegment._id, name: userSegment.name, segment_category: userSegment.segment_category, parent_feed_id: userSegment.parent_feed_id });
                });
                that.userSegments = userSegments;
                console.log(that.userSegments);
            }
            that.loaderService.dismissLoader();
        });
    };
    CreateFeedPage.prototype.navigateToSetFeed = function () {
        console.log(this.selectedTemplate, this.selectedSegment);
        if (this.selectedTemplate === __WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].TEMPLATE.PLACEMENT) {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__create_placement_feed_create_placement_feed__["a" /* CreatePlacementFeedPage */], { selectedBranch: this.selectedBranch, selectedSegment: this.selectedSegment, selectedTemplate: this.selectedTemplate, organisationId: this.selectedBranch.organization_id });
        }
        else {
            console.log(this.selectedTemplate);
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__create_poll_feed_create_poll_feed__["a" /* CreatePollFeedPage */], { selectedBranch: this.selectedBranch, selectedSegment: this.selectedSegment, selectedTemplate: this.selectedTemplate, organisationId: this.selectedBranch.organization_id });
        }
    };
    CreateFeedPage.prototype.onTemplateSelect = function (template) {
        this.selectedTemplate = template;
    };
    CreateFeedPage.prototype.onSegmentList = function () {
        var _this = this;
        for (var i = 0; i < this.userSegments.length; i++) {
            //console.log(this.userSegments[i]);
            this.userSegments[i].type = "radio",
                this.userSegments[i].label = this.userSegments[i].name;
            this.userSegments[i].value = this.userSegments[i]._id + "_" + this.userSegments[i].name;
            if (!this.userSegments[i].parent_feed_id) {
                this.userSegments[i].id = "parent-" + i;
            }
            else {
                this.userSegments[i].id = "child-" + i;
            }
        }
        //console.log(this.userSegments);
        if (this.userSegments.length > 0) {
            var alert_1 = this.alertCtrl.create({
                title: 'Select Segment',
                inputs: this.userSegments,
                buttons: [
                    {
                        text: this.translateService.instant('CONVERSATIONS.CANCEL'),
                        role: 'cancel',
                        handler: function (data) {
                            console.log('Cancel clicked');
                        }
                    },
                    {
                        text: this.translateService.instant('CONVERSATIONS.OK'),
                        handler: function (data) {
                            var segmentData = data.split('_');
                            _this.selectedSegment = segmentData[0];
                            _this.selectedSegmentName = segmentData[1];
                        }
                    }
                ]
            });
            alert_1.present();
        }
        else {
            var alert_2 = this.alertCtrl.create({
                title: this.translateService.instant('ERROR_MESSAGES.NO_SEGMENTS'),
                buttons: [{
                        text: this.translateService.instant('MISC.DISMISS')
                    }],
                cssClass: 'alert-single'
            });
            alert_2.present();
        }
    };
    CreateFeedPage.prototype.refreshTarget = function () {
        // let refreshTargetObj = { created_by: this.userId, branch_id: this.userService.selectedBranch._id, segment_type: CONSTANTS.SEGMENT_TYPE.NORMAL };
        // if (this.audienceDetail.segment_category !== CONSTANTS.SEGMENT_CATEGORY.SERVICE_AREA) {
        //   let housingProviderObj = this.getHousingProviderRequestJSON();
        //   Object.assign(refreshTargetObj, housingProviderObj);
        // } else {
        //   Object.assign(refreshTargetObj, this.audienceDetail);
        // }
        // this.activityFeedService.refreshTarget(refreshTargetObj).subscribe((response: any) => {
        //   if (response.status !== CONSTANTS.RESPONSE_STATUS.ERROR) {
        //     this.targetCount = response.targets;
        //     this.setTargetPercentage(response.total_users);
        //   } else {
        //     this.notificationService.showToast(CONSTANTS.RESPONSE_STATUS.ERROR, CONSTANTS.ERROR_MESSAGES.SOMETHING_WENT_WRONG);
        //     this.targetCount = '0';
        //     this.setTargetPercentage(0);
        //   }
        // });
    };
    return CreateFeedPage;
}());
CreateFeedPage = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'create-feed',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\activity\create-feed\create-feed.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'ACTIVITY.DEFINE_AUDIENCE\' | translate}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content silvergrey-background class="">\n\n    <ion-list>\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'ACTIVITY.CREATE_FEED.BRANCHES\' | translate}}</ion-label>\n\n            <ion-select cancelText="{{\'CONVERSATIONS.CANCEL\' | translate}}" okText="{{\'CONVERSATIONS.OK\' | translate}}" class="edit-text"    [(ngModel)]="selectedBranch" (ionChange)=loadUserSegments()>\n\n                <li *ngFor="let branch of branches">\n\n                    <ion-option [value]="branch">{{branch.public_name}}</ion-option>\n\n                </li>\n\n            </ion-select>\n\n        </ion-item>\n\n\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'ACTIVITY.CREATE_FEED.SELECT_SEGMENT\' | translate}}</ion-label>\n\n            <!--<ion-select [(ngModel)]="selectedSegment" [disabled] = "userSegments === undefined" cancelText="{{\'CONVERSATIONS.CANCEL\' | translate}}" okText="{{\'CONVERSATIONS.OK\' | translate}}" class="edit-text">\n\n                <div *ngFor="let userSegment of userSegments">\n\n                    <ion-option value="{{userSegment._id}}" class="list-view__child" [ngClass]="{\'list-view__parent\': userSegment.parent_feed_id === null && userSegment.parent_feed_id === undefined}">\n\n                        {{userSegment.name}}\n\n                    </ion-option>\n\n                </div>\n\n            </ion-select>-->\n\n            <div item-content class="segment" (click)="onSegmentList()">{{selectedSegmentName}} <span></span></div>\n\n        </ion-item>\n\n        <!--<ion-item>\n\n            <button ion-button (click)="newButton()">{{selectedSegment}}</button>\n\n        </ion-item>-->\n\n    </ion-list>\n\n    <ion-label class="text14px-black template-label">{{\'ACTIVITY.CREATE_FEED.SELECT_TEMPLATE\' | translate}} </ion-label>\n\n    <ion-slides class="templates" [options]="runningSliderConfig" radio-group [(ngModel)]="selectedTemplate" pager>\n\n        <ion-slide class="placement" (click)="onTemplateSelect(\'Placement\')">\n\n            <ion-avatar>\n\n                <ion-radio class="custom-ion-radio" value="Placement" [checked]="selectedTemplate === \'Placement\'"></ion-radio>\n\n                <img src="./assets/img/placement.png" [ngClass]="{\'selected\': selectedTemplate === \'Placement\'}">\n\n            </ion-avatar>\n\n        </ion-slide>\n\n\n\n        <ion-slide class="poll" (click)="onTemplateSelect(\'Poll\')">\n\n            <ion-avatar>\n\n                <ion-radio class="custom-ion-radio" value="Poll" [checked]="selectedTemplate === \'Poll\'"></ion-radio>\n\n                <img src="./assets/img/poll.png" [ngClass]="{\'selected\': selectedTemplate === \'Poll\'}">\n\n            </ion-avatar>\n\n        </ion-slide>\n\n    </ion-slides>\n\n</ion-content>\n\n<ion-footer footer-full>\n\n    <ion-toolbar>\n\n        <button ion-button block class="button-square-blue" [disabled] = "selectedSegment === undefined || selectedBranch === undefined" (click)="navigateToSetFeed()">{{\'BUTTON_LABEL.CONTINUE\' | translate }}</button>\n\n    </ion-toolbar>\n\n</ion-footer>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\activity\create-feed\create-feed.html"*/,
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__activity_service__["a" /* ActivityService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__providers_user_service__["a" /* UserService */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */],
        __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
        __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__["a" /* LoaderService */]])
], CreateFeedPage);

//# sourceMappingURL=create-feed.js.map

/***/ }),

/***/ 464:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DescriptionFeedPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__create_placement_feed__ = __webpack_require__(182);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__activity_service__ = __webpack_require__(42);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var DescriptionFeedPage = (function () {
    function DescriptionFeedPage(activityService, navCtrl, params, userService, events, translateService, viewCtrl) {
        this.activityService = activityService;
        this.navCtrl = navCtrl;
        this.params = params;
        this.userService = userService;
        this.events = events;
        this.translateService = translateService;
        this.viewCtrl = viewCtrl;
        this.libraryBackImages = [];
        this.libraryLogoImages = [];
        this.placementInfo = params.get('placementInfo');
        this.selectedBranch = this.params.get('selectedBranch');
        this.organisationID = this.params.get('organisationId');
    }
    DescriptionFeedPage.prototype.dismiss = function () {
        if (this.validateData()) {
            this.placementInfo.description = this.placementInfo.description.trim();
            this.placementInfo.title = this.placementInfo.title.trim();
            this.viewCtrl.dismiss(this.placementInfo);
        }
        else {
            console.log("Please enter valid URL");
        }
    };
    DescriptionFeedPage.prototype.navigateBack = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_4__create_placement_feed__["a" /* CreatePlacementFeedPage */]);
    };
    DescriptionFeedPage.prototype.validateData = function () {
        //TODO - Validate URL here 
        return true;
    };
    return DescriptionFeedPage;
}());
DescriptionFeedPage = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'description-feed',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\activity\create-placement-feed\description-feed\description-feed.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'ACTIVITY.CREATE_FEED.PLACEMENT_HEADER\' | translate}}</ion-title>\n\n        <ion-buttons end>\n\n            <button ion-button (click)="dismiss()">\n\n                <ion-icon class="icons-correct"></ion-icon>\n\n            </button>\n\n        </ion-buttons>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content>\n\n    <ion-list>\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'ACTIVITY.CREATE_FEED.HEADLINEDESC\' | translate}}<cite class="has-error">*</cite>\n\n                <span>\n\n                    <cite *ngIf="placementInfo.title.length <= 0">100&nbsp;</cite>\n\n                    <cite *ngIf="placementInfo.title.length > 0">{{100 - placementInfo.title.length}}&nbsp;</cite>\n\n                    {{\'ACTIVITY.CREATE_FEED.TOTAL_CHARACTER\' | translate}}\n\n                </span>\n\n            </ion-label>\n\n            <ion-input class="feed-text" maxlength="100" type="text" [(ngModel)]="placementInfo.title" value=""></ion-input>\n\n        </ion-item>\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'ACTIVITY.CREATE_FEED.SUMMARY\' | translate}} <cite class="has-error">*</cite>\n\n                <span>\n\n                    <cite *ngIf="placementInfo.description.length <= 0">500&nbsp;</cite>\n\n                    <cite *ngIf="placementInfo.description.length > 0">{{500 - placementInfo.description.length}}&nbsp;</cite>\n\n                    {{\'ACTIVITY.CREATE_FEED.TOTAL_CHARACTER\' | translate}}\n\n                </span>\n\n            </ion-label>\n\n            <ion-textarea class="feed-text" maxlength="500" value="" [(ngModel)]="placementInfo.description"></ion-textarea>\n\n        </ion-item>\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'ACTIVITY.CREATE_FEED.MORE_INFO\' | translate}}</ion-label>\n\n            <ion-icon class="icons-read-more"></ion-icon>\n\n            <ion-input class="feed-text" maxlength="100" type="text" [(ngModel)]="placementInfo.url" value=""></ion-input>\n\n        </ion-item>\n\n        <ion-item-divider></ion-item-divider>\n\n        <ion-item class="list-grid-136 allow-check">\n\n            <ion-label class="text12px-black">{{\'ACTIVITY.CREATE_FEED.ALLOW\' | translate}}</ion-label>\n\n            <ion-checkbox [(ngModel)]="placementInfo.allowConversation"></ion-checkbox>    \n\n        </ion-item>\n\n    </ion-list>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\activity\create-placement-feed\description-feed\description-feed.html"*/,
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__activity_service__["a" /* ActivityService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */],
        __WEBPACK_IMPORTED_MODULE_2__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* ViewController */]])
], DescriptionFeedPage);

//# sourceMappingURL=description-feed.js.map

/***/ }),

/***/ 465:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CropImageModal; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_cropperjs__ = __webpack_require__(830);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_cropperjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_cropperjs__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var CropImageModal = (function () {
    function CropImageModal(viewCtrl, navParams, platform) {
        this.viewCtrl = viewCtrl;
        this.navParams = navParams;
        this.platform = platform;
        var filePath = this.navParams.get("imageBase64");
        filePath = filePath.replace(/^file:\/\//, '');
        this.imageBase64 = filePath;
        this.width = this.navParams.get("width");
        this.height = this.navParams.get("height");
    }
    CropImageModal.prototype.cropperLoad = function () {
        this.cropper = new __WEBPACK_IMPORTED_MODULE_2_cropperjs___default.a(this.input.nativeElement, {
            dragMode: 'crop',
            aspectRatio: this.width / this.height,
            modal: true,
            guides: true,
            highlight: true,
            center: true,
            background: false,
            autoCrop: true,
            movable: false,
            zoomable: false,
            autoCropArea: 1,
            responsive: true,
            cropBoxMovable: true,
            cropBoxResizable: true,
            scalable: false,
            minCropBoxWidth: this.width,
            minCropBoxHeight: this.height,
            crop: function (e) { }
        });
    };
    CropImageModal.prototype.cropperReset = function () { this.cropper.reset(); };
    CropImageModal.prototype.imageRotate = function () { this.cropper.rotate(90); };
    CropImageModal.prototype.cancel = function () { this.viewCtrl.dismiss(); };
    CropImageModal.prototype.finish = function () {
        var croppedImgB64String = this.cropper.getCroppedCanvas({}).toDataURL('image/jpeg', 1);
        this.viewCtrl.dismiss(croppedImgB64String);
    };
    return CropImageModal;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_14" /* ViewChild */])('image'),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ElementRef */])
], CropImageModal.prototype, "input", void 0);
CropImageModal = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'crop-image',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\shared\modals\crop-image\crop-image.html"*/' <ion-header labelHeader>\n\n  <ion-toolbar topHeader>\n\n    <ion-buttons start>\n\n      <button ion-button icon-only (click)="cropperReset()">\n\n        <ion-icon class=\'icons-reset\'></ion-icon>\n\n      </button>\n\n    </ion-buttons>\n\n    <ion-buttons padding-left padding-right end>\n\n      <button ion-button icon-only (click)="imageRotate()">\n\n        <ion-icon class=\'icons-refresh\'></ion-icon>\n\n      </button>\n\n    </ion-buttons>\n\n    <ion-buttons padding-left padding-right end>\n\n      <button ion-button icon-only (click)="cancel()">\n\n        <ion-icon class=\'icons-close\'></ion-icon>\n\n      </button>\n\n    </ion-buttons>\n\n    <ion-buttons padding-left padding-right end>\n\n      <button ion-button icon-only (click)="finish()">\n\n        <ion-icon class=\'icons-correct\'></ion-icon>\n\n      </button>\n\n    </ion-buttons>\n\n  </ion-toolbar>\n\n</ion-header>\n\n<ion-content class="background">\n\n  <div>\n\n    <img [src]="imageBase64" (load)="cropperLoad()" #image>\n\n  </div>\n\n</ion-content>\n\n'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\shared\modals\crop-image\crop-image.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* ViewController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Platform */]])
], CropImageModal);

//# sourceMappingURL=crop-image.js.map

/***/ }),

/***/ 466:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SelectImage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__activity_service__ = __webpack_require__(42);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var SelectImage = (function () {
    function SelectImage(activityService, navCtrl, params, userService, events, translateService, viewCtrl) {
        var _this = this;
        this.activityService = activityService;
        this.navCtrl = navCtrl;
        this.params = params;
        this.userService = userService;
        this.events = events;
        this.translateService = translateService;
        this.viewCtrl = viewCtrl;
        this.libraryImages = [];
        this.organisationID = this.params.get('organisationId');
        this.imageCategory = this.params.get('imageCategory');
        this.activityService.getImageLibraryData(this.organisationID, this.imageCategory).subscribe(function (response) {
            _this.libraryImages = response.result;
        });
    }
    SelectImage.prototype.dismiss = function () {
        this.viewCtrl.dismiss();
    };
    SelectImage.prototype.selectImage = function (position) {
        this.viewCtrl.dismiss({ selectedImage: this.libraryImages[position], imageType: this.imageCategory });
    };
    return SelectImage;
}());
SelectImage = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'select-image',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\activity\create-placement-feed\selectImage\select-image.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'ACTIVITY.CREATE_FEED.IMAGE_LIBRARY\' | translate}}</ion-title>\n\n        <ion-buttons end>\n\n            <button ion-button (click)="dismiss()">\n\n                <ion-icon class="icons-close"></ion-icon>\n\n            </button>\n\n        </ion-buttons>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content silvergrey-background>  \n\n    <ion-grid>\n\n        <ion-row>\n\n            <ion-col col-6 *ngFor="let images of libraryImages; let position = index;" [ngClass]="{\'images\': imageCategory === \'images\', \'logos\': imageCategory === \'logos\'}">\n\n                <img src={{images}} (click)="selectImage(position)"  />\n\n            </ion-col>\n\n        </ion-row>\n\n    </ion-grid>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\activity\create-placement-feed\selectImage\select-image.html"*/,
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__activity_service__["a" /* ActivityService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */],
        __WEBPACK_IMPORTED_MODULE_2__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* ViewController */]])
], SelectImage);

//# sourceMappingURL=select-image.js.map

/***/ }),

/***/ 467:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CreatePollFeedPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__activity_service__ = __webpack_require__(42);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__poll_description_poll_description__ = __webpack_require__(468);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_upload_service__ = __webpack_require__(85);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__shared_modals_set_delivery_feed_set_delivery_feed__ = __webpack_require__(183);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var CreatePollFeedPage = (function () {
    function CreatePollFeedPage(activityService, navCtrl, navParams, userService, events, translateService, uploadService, loaderService, modalCtrl) {
        this.activityService = activityService;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.userService = userService;
        this.events = events;
        this.translateService = translateService;
        this.uploadService = uploadService;
        this.loaderService = loaderService;
        this.modalCtrl = modalCtrl;
        this.singleSelectRows = [];
        this.multiSelectRows = [];
        this.feedTemplates = ['Placement', 'Poll'];
        this.singleSelection = 'singleSelection';
        this.multiSelection = 'multiSelection';
        this.pollInfo = this.getDefaultActivityModel(this.navParams.get('selectedTemplate'), this.navParams.get('selectedSegment'));
        this.selectedBranch = this.navParams.get('selectedBranch');
    }
    CreatePollFeedPage.prototype.getDefaultActivityModel = function (template, userSegment) {
        return {
            template: template,
            user_segment: userSegment !== undefined ? userSegment : '',
            question: '',
            answer_options: [],
            is_multiselect: false
        };
    };
    CreatePollFeedPage.prototype.pollDescriptionModal = function () {
        var _this = this;
        var descriptionModal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_6__poll_description_poll_description__["a" /* PollDescriptionPage */], { pollInfo: this.pollInfo, });
        descriptionModal.onDidDismiss(function (data) {
            _this.pollInfo.question = data.question;
            _this.pollInfo.answer_options = data.answer_options;
            _this.pollInfo.is_multiselect = data.is_multiselect;
        });
        descriptionModal.present();
    };
    CreatePollFeedPage.prototype.setDelivery = function () {
        var _this = this;
        var params = this.pollInfo;
        this.pollInfo.is_edit_feed = false;
        params.branch_id = this.selectedBranch;
        // params.scheduled_date = undefined;
        params.organization_id = this.selectedBranch.organization_id;
        params.feed_owner_id = this.userService.userObj.user_id;
        params.sender_ref_id = this.userService.userObj.user_id;
        params.created_by = this.userService.userObj.user_id;
        params.is_campaign_feed = false;
        params.count_answer_option = this.pollInfo.answer_options.length;
        this.scheduledInfo = { isSubmit: false };
        if (this.pollInfo.scheduled_date !== undefined) {
            this.scheduledInfo.scheduledDate = this.pollInfo.scheduled_date;
            this.scheduledInfo.selectedScheduled = "schedule";
        }
        else {
            this.scheduledInfo.scheduledDate = new Date().toISOString();
            this.scheduledInfo.selectedScheduled = "now";
        }
        this.scheduledInfo.scheduledTime = this.scheduledInfo.scheduledDate;
        var setDeliveryModal = this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_8__shared_modals_set_delivery_feed_set_delivery_feed__["a" /* SetDeliveryFeedModal */], {
            scheduledInfo: this.scheduledInfo, pollFeedRequest: params, feedType: this.pollInfo.template
        });
        setDeliveryModal.onDidDismiss(function (data) {
            if (data && data.isSubmit) {
                var startIndex = _this.navCtrl.getActive().index - 1;
                _this.navCtrl.remove(startIndex, 2);
            }
            else if (data) {
                _this.scheduledInfo.selectedScheduled = data.selectedScheduled;
                _this.pollInfo.scheduled_date = data.scheduledDate;
            }
        });
        setDeliveryModal.present();
    };
    return CreatePollFeedPage;
}());
CreatePollFeedPage = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'create-poll-feed',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\activity\create-poll-feed\create-poll-feed.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title> {{\'ACTIVITY.BUILD_POLL\' | translate}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content silvergrey-background>\n\n    <!-- Start Portfolio option -->\n\n    <ion-list list-group>\n\n        <ion-item list-row *ngIf="pollInfo.template === \'Poll\'" (click)="pollDescriptionModal()">\n\n            <div portfolio>\n\n                <div list-expand-details>\n\n                    <ion-col ion-item list-row>\n\n                        <ion-icon class="icons-poll"></ion-icon>\n\n                        <span>\n\n                            <h4 class="text18px-normal-black" *ngIf="pollInfo.question === \'\'">{{\'ACTIVITY.CREATE_FEED.ENTER_QUESTION\' | translate}}</h4>\n\n                            <h4 class="text18px-normal-black" *ngIf="pollInfo.question !== \'\'">{{pollInfo.question}}</h4>\n\n                            <p class="text10px-thin-grey">{{\'ACTIVITY.CREATE_FEED.NOW\' | translate}}</p>\n\n                        </span>\n\n                    </ion-col>\n\n                    <ul list>      \n\n                        <li class="item item-checkbox" *ngFor="let pollOption of pollInfo.answer_options">\n\n                            <label class="custom-types">\n\n                                <cite title-info left-align>{{pollOption}}</cite>\n\n                                <div class="custom-radio" *ngIf="pollInfo.is_multiselect === false">\n\n                                    <input type="radio" disabled="true">\n\n                                    <span></span>\n\n                                </div>\n\n                                <div class="custom-checkbox" *ngIf="pollInfo.is_multiselect === true">\n\n                                    <input type="checkbox" disabled="true">\n\n                                    <span></span>\n\n                                </div>\n\n                            </label>\n\n                        </li>\n\n                    </ul>\n\n\n\n                    <div list-row-footer class="action-bar">\n\n                        <ion-row>\n\n                            <ion-col start class="text10px-normal-blue">\n\n                                <span>{{\'ACTIVITY.CREATE_FEED.SUBMIT_ANSWER\' | translate}}</span>\n\n                            </ion-col>\n\n                            <ion-col end>\n\n                                <button ion-item detail-none icon-only>\n\n                                    <ion-icon class="icons-read"></ion-icon>\n\n                                </button>\n\n                                <button ion-item detail-none icon-only class="like">\n\n                                    <ion-icon class="icons-unlike"></ion-icon>                                         \n\n                                </button>  \n\n                            </ion-col>\n\n                        </ion-row>\n\n                    </div>\n\n                </div>\n\n            </div>\n\n        </ion-item>\n\n    </ion-list>\n\n    <ion-footer footer-full>\n\n        <ion-toolbar>\n\n            <button ion-button block [disabled] = "pollInfo.question.length === 0 || pollInfo.answer_options.length === 0" class="button-square-blue" (click)="setDelivery()">{{\'ACTIVITY.CREATE_FEED.SET_DELIVERY\' | translate}}</button>\n\n        </ion-toolbar>\n\n    </ion-footer>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\activity\create-poll-feed\create-poll-feed.html"*/,
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__activity_service__["a" /* ActivityService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__providers_user_service__["a" /* UserService */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_7__providers_upload_service__["a" /* UploadService */],
        __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* ModalController */]])
], CreatePollFeedPage);

//# sourceMappingURL=create-poll-feed.js.map

/***/ }),

/***/ 468:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PollDescriptionPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__activity_service__ = __webpack_require__(42);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var PollDescriptionPage = (function () {
    function PollDescriptionPage(activityService, navCtrl, params, userService, events, translateService, viewCtrl) {
        this.activityService = activityService;
        this.navCtrl = navCtrl;
        this.params = params;
        this.userService = userService;
        this.events = events;
        this.translateService = translateService;
        this.viewCtrl = viewCtrl;
        this.libraryBackImages = [];
        this.libraryLogoImages = [];
        this.multipleRows = [];
        this.pollAnswerOption = '';
        this.pollInfo = params.get('pollInfo');
        if (this.pollInfo.is_multiselect) {
            this.answerType = "multiple";
        }
        else {
            this.answerType = "single";
        }
        console.log(this.pollInfo);
        this.selectedBranch = this.params.get('selectedBranch');
        this.organisationID = this.params.get('organisationId');
    }
    PollDescriptionPage.prototype.dismiss = function () {
        if (this.answerType === "single") {
            this.pollInfo.is_multiselect = false;
        }
        else {
            this.pollInfo.is_multiselect = true;
        }
        this.pollInfo.question = this.pollInfo.question.trim();
        this.viewCtrl.dismiss(this.pollInfo);
    };
    PollDescriptionPage.prototype.onAddOptions = function () {
        if (this.pollAnswerOption.trim().length > 0) {
            this.pollInfo.answer_options.push(this.pollAnswerOption);
            this.pollAnswerOption = '';
        }
    };
    PollDescriptionPage.prototype.removeOption = function (indexNumber) {
        this.pollInfo.answer_options.splice(indexNumber, 1);
    };
    return PollDescriptionPage;
}());
PollDescriptionPage = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'poll-description',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\activity\create-poll-feed\poll-description\poll-description.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'ACTIVITY.CREATE_FEED.POLL_HEADER\' | translate}}</ion-title>\n\n        <ion-buttons end>\n\n            <button ion-button (click)="dismiss()">\n\n                <ion-icon class="icons-correct"></ion-icon>\n\n            </button>\n\n        </ion-buttons>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content>\n\n    <ion-list>\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'ACTIVITY.CREATE_FEED.QUESTION\' | translate}}<cite class="has-error">*</cite>\n\n                <span>\n\n                    <cite *ngIf="pollInfo.question.length <= 0">100&nbsp;</cite>\n\n                    <cite *ngIf="pollInfo.question.length > 0">{{100 - pollInfo.question.length}}&nbsp;</cite>\n\n                    {{\'ACTIVITY.CREATE_FEED.TOTAL_CHARACTER\' | translate}}\n\n                </span>\n\n            </ion-label>\n\n            <ion-input class="feed-text" maxlength="100" type="text" [(ngModel)]="pollInfo.question" value=""></ion-input>\n\n        </ion-item>\n\n\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'ACTIVITY.CREATE_FEED.RESPONSE_TYPE\' | translate}}<cite class="has-error">*</cite></ion-label>\n\n            <div item-content>\n\n                <ion-segment [(ngModel)]="answerType" color="primary">\n\n                    <ion-segment-button value="single">{{\'ACTIVITY.CREATE_FEED.SINGLE_SELECTION\' | translate}}</ion-segment-button>\n\n                    <ion-segment-button value="multiple">{{\'ACTIVITY.CREATE_FEED.MULTI_SELECTION\' | translate}}</ion-segment-button>\n\n                </ion-segment>\n\n            </div>\n\n        </ion-item>\n\n        <ion-item class="list-grid-136 no-space-between">\n\n            <ion-label class="text14px-black">{{\'ACTIVITY.CREATE_FEED.OPTIONS\' | translate}}<cite class="has-error">*</cite>\n\n                <span>\n\n                    <cite *ngIf="pollAnswerOption.length <= 0">100&nbsp;</cite>\n\n                    <cite *ngIf="pollAnswerOption.length > 0">{{100 - pollAnswerOption.length}}&nbsp;</cite>\n\n                    {{\'ACTIVITY.CREATE_FEED.TOTAL_CHARACTER\' | translate}}\n\n                </span>\n\n            </ion-label>\n\n            <div item-content class="remove-label" *ngFor=\'let multipleRow of pollInfo.answer_options; let indexNumber = index\'>\n\n                {{multipleRow}}\n\n                <ion-icon class="icons-close" (click)="removeOption(indexNumber)"></ion-icon>\n\n            </div>\n\n            <div item-content class="add-answer" *ngIf="pollInfo.answer_options.length<6">\n\n                <ion-input class="feed-text" maxlength="100" type="text" [(ngModel)]="pollAnswerOption" value=""></ion-input>\n\n                <button ion-button *ngIf="pollInfo.answer_options.length<6" [disabled]="pollAnswerOption === \'\'" name="pollAnswer" (click)="onAddOptions()">\n\n                    <ion-icon class="icons-plus"></ion-icon>\n\n                </button>\n\n            </div>\n\n        </ion-item>\n\n    </ion-list>\n\n    \n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\activity\create-poll-feed\poll-description\poll-description.html"*/,
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__activity_service__["a" /* ActivityService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */],
        __WEBPACK_IMPORTED_MODULE_2__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* ViewController */]])
], PollDescriptionPage);

//# sourceMappingURL=poll-description.js.map

/***/ }),

/***/ 469:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CreateRequest; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_camera__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__request_reported_request_reported__ = __webpack_require__(470);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__service_request_service__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_upload_service__ = __webpack_require__(85);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__providers_pubnub_service__ = __webpack_require__(19);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var CreateRequest = (function () {
    function CreateRequest(navCtrl, actionSheetCtrl, platform, analyticsService, camera, loaderService, userService, translateService, navParams, pubNubService, events, uploadService, serviceRequestService) {
        this.navCtrl = navCtrl;
        this.actionSheetCtrl = actionSheetCtrl;
        this.platform = platform;
        this.analyticsService = analyticsService;
        this.camera = camera;
        this.loaderService = loaderService;
        this.userService = userService;
        this.translateService = translateService;
        this.navParams = navParams;
        this.pubNubService = pubNubService;
        this.events = events;
        this.uploadService = uploadService;
        this.serviceRequestService = serviceRequestService;
        this.selectedTab = 'types';
        this.serviceRequestTypes = [];
        this.serviceRequestTypeClassMap = {};
        this.selectedTab = 'types';
        this.userData = this.userService.getUser();
        this.serviceRequestObj = {
            user_id: this.userData.user_id,
            user_name: this.userData.user_name,
            address: '',
            property_id: '',
            type: '',
            description: '',
            photos: [],
            building_id: '',
            incident_date_string: this.serviceRequestService.getIncidentDateString()
        };
        // This is fixed for all domains so have to update this when we add/remove types
        this.serviceRequestTypeClassMap = this.serviceRequestService.serviceRequestTypeClassMap;
        this.selectedProperty = this.navParams.get('selectedProperty');
        // console.log('this.serviceRequestPropertyId', this.serviceRequestPropertyId);
    }
    ;
    CreateRequest.prototype.ionViewDidEnter = function () {
        if (this.platform.is('cordova')) {
            this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].PAGES.SERVICE_REQUESTS);
        }
    };
    CreateRequest.prototype.ionViewDidLoad = function () {
        //console.log("In ionViewDidLoad, made display none");
        this.loadServiceRequestTypes();
    };
    CreateRequest.prototype.loadServiceRequestTypes = function () {
        var _this = this;
        this.serviceRequestService.getServiceRequestTypes().subscribe(function (response) {
            if (response.status === __WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                _this.serviceRequestTypes = response.result || [];
            }
        });
    };
    CreateRequest.prototype.onTabSelect = function (tabIndex) {
        //console.log(tabIndex == 1 && this.serviceRequestObj.type !== '', "extreesion check");
        if (tabIndex == 1 && this.serviceRequestObj.type !== '') {
            this.selectedTab = 'description';
        }
        else if (this.serviceRequestObj.description && this.serviceRequestObj.description.trim().length > 0 && tabIndex == 2) {
            this.selectedTab = 'photos';
        }
        else if (tabIndex == 0)
            this.selectedTab = 'types';
    };
    CreateRequest.prototype.getRequestTypeNameById = function (typeId) {
        var element = null, selecttedType = null;
        for (var index = 0; index < this.serviceRequestTypes.length; index++) {
            element = this.serviceRequestTypes[index];
            if (element._id === typeId) {
                selecttedType = element;
                break;
            }
        }
        return selecttedType.name || '';
    };
    CreateRequest.prototype.createNewServiceRequest = function () {
        var _this = this;
        this.loaderService.createLoader(this.translateService.instant("ERROR_MESSAGES.REPORTING"));
        this.serviceRequestObj['property_id'] = this.selectedProperty.property_id || '';
        this.serviceRequestObj['building_id'] = this.selectedProperty.building_id || '';
        this.serviceRequestObj['unit'] = this.selectedProperty.unit || '';
        this.serviceRequestService.reportServiceRequest(this.serviceRequestObj).subscribe(function (response) {
            //console.log(response, "response for INCIDENT API");
            if (response.status !== __WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.ERROR) {
                _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__request_reported_request_reported__["a" /* ServiceRequestReported */], { incident_no: response.incidents.incident_number }).then(function () {
                    _this.navCtrl.remove(_this.navCtrl.length() - 2, 1);
                    // Get request type name by id since we are not storing type name in database
                    response.incidents['type'] = _this.getRequestTypeNameById(response.incidents.type);
                    response.incidents['providers'] = response.providers || [];
                    _this.events.publish(__WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].APP_EVENTS.SERVICE_REQUEST_REPORTED, response.incidents);
                    _this.createConversation(response.incidents);
                });
            }
            else {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            }
            _this.loaderService.dismissLoader();
        }, function (error) {
            console.log("ERROR::", error);
            _this.loaderService.showToaster(error);
        });
    };
    CreateRequest.prototype.createConversation = function (serviceRequet) {
        var _this = this;
        this.pubNubService.getTimeToken(function (pubnubtimestoken) {
            var shared_channel = _this.userData.user_id + '_' + serviceRequet._id;
            var members = [];
            if (serviceRequet.providers) {
                serviceRequet.providers.forEach(function (self) {
                    if (self.user_id !== _this.userData.user_id) {
                        members.push(self.user_id);
                    }
                });
            }
            var newConversation = {
                user_id: _this.userData.user_id,
                shared_channel: shared_channel,
                name: serviceRequet.incident_number,
                joining_time_token: pubnubtimestoken,
                incident_id: serviceRequet._id,
                members: members
            };
            _this.serviceRequestService.createConversation(newConversation).subscribe(function (response) {
                if (response.status === __WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                    _this.pubNubService.addChanneltoGroup(newConversation.members, newConversation.shared_channel, newConversation.name, _this.userService.userObj.user_id, _this.userService.deviceToken, _this.userService.pushPlatform, __WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].USER_STATES.SERVICE_REQUEST_REPORTED);
                    _this.sendMessage(newConversation, serviceRequet.incident_number);
                }
            });
        });
    };
    CreateRequest.prototype.sendMessage = function (conversation, incident_number) {
        var _this = this;
        this.pubNubService.getSupportedLanguageMsg(__WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].MESSAGES.SERVICE_REQUEST_CREATED).subscribe(function (msgContent) {
            var coreMessageObj = {
                content: msgContent,
                sender_uuid: _this.userData.user_id,
                image: '',
                receiver_uuid: conversation.shared_channel,
                shared_channel: conversation.shared_channel,
                timetoken: conversation.joining_time_token,
                is_group: true,
                is_sys_msg: true,
                content_type_id: __WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].MESSAGE_CONTENT_TYPE_ID.SERVICE_REQUEST
            };
            _this.pubNubService.publish(coreMessageObj.shared_channel, coreMessageObj).subscribe(function (event) {
                // console.log('In sendInvitationMessageToAdmin Publish message', coreMessageObj, event);
                var saveMessage = {
                    user_id: _this.userData.user_id,
                    content: coreMessageObj.content,
                    shared_channel: coreMessageObj.shared_channel
                };
                _this.serviceRequestService.saveMessage(saveMessage).subscribe(function () {
                    // console.log('Saved message!');
                });
            });
        }, function (error) {
            _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
        });
    };
    CreateRequest.prototype.closeServiceRequest = function () {
        this.navCtrl.pop();
    };
    CreateRequest.prototype.uploadDone = function (error, url) {
        if (!error) {
            this.serviceRequestObj.photos.push(url);
        }
        console.log(error, url);
    };
    CreateRequest.prototype.presentActionSheet = function () {
        var that = this;
        var uploadOptions = {
            sourceType: that.camera.PictureSourceType.CAMERA,
            bucketSource: __WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].UPLOAD_IMAGE_SOURCE.INCIDENTS,
            cropImage: false,
            targetHeight: 600,
            targetWidth: 1062
        };
        var actionSheet = that.actionSheetCtrl.create({
            cssClass: 'photo-sheet',
            buttons: [
                {
                    text: this.translateService.instant("CONVERSATIONS.NEW_MSG.TAKE_PHOTO"),
                    role: 'Take a photo',
                    cssClass: 'take-photo',
                    icon: 'icons-camera',
                    handler: function () {
                        that.uploadService.takeFromCamera(uploadOptions, function (error, image) {
                            that.uploadDone.call(that, error, image);
                        });
                    }
                }, {
                    text: this.translateService.instant("CONVERSATIONS.NEW_MSG.ATTACH_PHOTO"),
                    cssClass: 'take-photo',
                    icon: 'icons-image-photo',
                    handler: function () {
                        uploadOptions.sourceType = that.camera.PictureSourceType.PHOTOLIBRARY;
                        that.uploadService.takeFromCamera(uploadOptions, function (error, image) {
                            that.uploadDone.call(that, error, image);
                        });
                    }
                }
            ]
        });
        actionSheet.present();
    };
    CreateRequest.prototype.removePhoto = function (index) {
        this.serviceRequestObj.photos.splice(index, 1);
    };
    return CreateRequest;
}());
CreateRequest = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-create-request',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\service-request\create-request\create-request.html"*/'<ion-header labelHeader incident-header>\n\n    <ion-toolbar topHeader>\n\n        <ion-buttons start>\n\n            <button ion-button (click)="closeServiceRequest()">\n\n               <ion-icon class="icons-close-big"></ion-icon>\n\n            </button>\n\n        </ion-buttons>\n\n        <ion-title>{{\'SERVICE_REQUESTS.SETTINGS.TITLE\' | translate}} </ion-title>\n\n        <ion-buttons end sendbtn>\n\n            <button *ngIf="selectedTab == \'photos\'" (click)="createNewServiceRequest()" ion-button>\n\n                <ion-icons class="icons-upload"></ion-icons>\n\n            </button>\n\n        </ion-buttons>\n\n    </ion-toolbar>\n\n    <ion-segment incident-tab [(ngModel)]="selectedTab">\n\n        <ion-segment-button value="types" class="segment-activated" [ngClass]="{\'segment-activated\': selectedTab == \'types\', \'green-bar\': serviceRequestObj.type}" (click)="onTabSelect(0)">\n\n            {{\'SERVICE_REQUESTS.TYPE\' | translate}} <span></span>\n\n        </ion-segment-button>\n\n        <ion-segment-button value="description" [ngClass]="{\'segment-activated\': selectedTab == \'description\' ,  \'green-bar\': serviceRequestObj.description && serviceRequestObj.description.trim().length > 0}" [disabled]="!serviceRequestObj.type" (click)="onTabSelect(1)">\n\n            {{\'SERVICE_REQUESTS.DESCRIPTION\' | translate}} <span></span>\n\n        </ion-segment-button>\n\n        <ion-segment-button value="photos" [ngClass]="{\'segment-activated\': selectedTab == \'photos\', \'green-bar\': serviceRequestObj.photos.length > 0}" [disabled]="!(serviceRequestObj.description && serviceRequestObj.description.trim().length > 0)" (click)="onTabSelect(2)">\n\n            {{\'SERVICE_REQUESTS.PHOTOS\' | translate}} <span></span>\n\n        </ion-segment-button>\n\n    </ion-segment>\n\n</ion-header>\n\n\n\n<ion-content [ngSwitch]="selectedTab" incident-report silvergrey-background>\n\n    <ion-list radio-group [(ngModel)]="serviceRequestObj.type" list-items *ngSwitchCase="\'types\'">\n\n        <ion-item list-grid class="list-grid-120" *ngFor="let requestType of serviceRequestTypes">\n\n            <ion-label title14px>{{requestType.name}}</ion-label>\n\n            <ion-radio [value]="requestType._id" [class]="serviceRequestTypeClassMap[requestType._id]" name="convType"></ion-radio>\n\n        </ion-item>\n\n\n\n    </ion-list>\n\n    <ion-item description *ngSwitchCase="\'description\'">\n\n        <ion-textarea [(ngModel)]="serviceRequestObj.description" rows="8" autocomplete="true" spellcheck="true" autocorrect="true" maxlength="500" subtitle12px placeholder="{{\'SERVICE_REQUESTS.DESCRIPTION_HINT\' | translate}}"></ion-textarea>\n\n    </ion-item>\n\n    <ion-card photos *ngSwitchCase="\'photos\'">\n\n        <p *ngIf="!serviceRequestObj.photos[0]">\n\n            {{\'SERVICE_REQUESTS.PHOTOS_HINT\' | translate}}\n\n        </p>\n\n        <ion-grid>\n\n            <ion-row>\n\n                <ion-col width-12 *ngIf="serviceRequestObj.photos[0]"><img [src]="serviceRequestObj.photos[0]" /><ion-icons class="icons-close" (click)="removePhoto(0)"></ion-icons></ion-col>\n\n                <ion-col *ngIf="serviceRequestObj.photos[1]"><img [src]="serviceRequestObj.photos[1]" /><ion-icons class="icons-close" (click)="removePhoto(1)"></ion-icons></ion-col>\n\n                <ion-col *ngIf="serviceRequestObj.photos[2]"><img [src]="serviceRequestObj.photos[2]" /><ion-icons class="icons-close" (click)="removePhoto(2)"></ion-icons></ion-col>\n\n                <ion-col *ngIf="serviceRequestObj.photos[3]"><img [src]="serviceRequestObj.photos[3]" /><ion-icons class="icons-close" (click)="removePhoto(3)"></ion-icons></ion-col>\n\n                <ion-col *ngIf="serviceRequestObj.photos[4]"><img [src]="serviceRequestObj.photos[4]" /><ion-icons class="icons-close" (click)="removePhoto(4)"></ion-icons></ion-col>\n\n            </ion-row>\n\n        </ion-grid>\n\n    </ion-card>\n\n</ion-content>\n\n<ion-footer [keyboardAttach]="content">\n\n    <ion-button *ngIf="selectedTab == \'types\'" ion-button block class="button-light-blue" [ngClass]="{\'button-disable\': !serviceRequestObj.type}" (click)="onTabSelect(1)">{{\'SERVICE_REQUESTS.NEXT\' | translate}}</ion-button>\n\n    <ion-button *ngIf="selectedTab == \'description\'" ion-button block class="button-light-blue" [ngClass]="{\'button-disable\': !(serviceRequestObj.description && serviceRequestObj.description.trim().length > 0)}" (click)="onTabSelect(2)">{{\'SERVICE_REQUESTS.NEXT\' | translate}}</ion-button>\n\n    <ion-button *ngIf="selectedTab == \'photos\'" ion-button block class="button-light-blue" [ngClass]="{\'button-disable\': (serviceRequestObj.photos.length >= 5)}" (click)="presentActionSheet()">{{\'SERVICE_REQUESTS.ADD_PHOTOS\' | translate}}</ion-button>\n\n</ion-footer>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\service-request\create-request\create-request.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Platform */],
        __WEBPACK_IMPORTED_MODULE_8__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_camera__["a" /* Camera */], __WEBPACK_IMPORTED_MODULE_9__providers_loader_service__["a" /* LoaderService */],
        __WEBPACK_IMPORTED_MODULE_4__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_11__providers_pubnub_service__["a" /* PubNubService */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_7__providers_upload_service__["a" /* UploadService */], __WEBPACK_IMPORTED_MODULE_6__service_request_service__["a" /* ServiceRequestService */]])
], CreateRequest);

//# sourceMappingURL=create-request.js.map

/***/ }),

/***/ 470:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ServiceRequestReported; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ServiceRequestReported = (function () {
    function ServiceRequestReported(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.incidentNumber = this.navParams.get('incident_no');
    }
    ServiceRequestReported.prototype.ionViewDidLoad = function () {
        //console.log('Hello ServiceRequestReported Page',this.incidentNumber);
    };
    ServiceRequestReported.prototype.navigateToServiceListPage = function () {
        this.navCtrl.pop();
    };
    return ServiceRequestReported;
}());
ServiceRequestReported = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-request-reported',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\service-request\create-request\request-reported\request-reported.html"*/'<ion-content grey-background side-padding>\n\n    <div class="confirmation-msg">\n\n        <div class="circle-icon-108 confirmation-icon">\n\n            <ion-icon class="icons-correct"></ion-icon>\n\n        </div>\n\n        <h2 class="text30px-bold-white">{{\'SERVICE_REQUESTS.PROBLEMREPORTED\' | translate}}<span splitter></span></h2>\n\n        <p class="text15px-normal-white">{{\'SERVICE_REQUESTS.REFERENCE_NUMBER\' | translate}}  {{incidentNumber}}</p>\n\n    </div>\n\n    <div class="action-grid">\n\n        <button ion-button block round class="button-light-blue" (click)="navigateToServiceListPage()">{{\'BUTTON_LABEL.CONTINUE\' | translate}}</button>\n\n    </div>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\service-request\create-request\request-reported\request-reported.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */]])
], ServiceRequestReported);

//# sourceMappingURL=request-reported.js.map

/***/ }),

/***/ 471:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MyStuff; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_keyboard__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__profile_profile__ = __webpack_require__(472);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__settings_settings__ = __webpack_require__(476);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__pages_service_request_service_request__ = __webpack_require__(184);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__tell_feedback_tell_feedback__ = __webpack_require__(479);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__activity_activity_feed__ = __webpack_require__(179);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






//import { FrequetlyAskedQustion } from './frequetly-asked-qustion/frequetly-asked-qustion';







var MyStuff = (function () {
    function MyStuff(navCtrl, userService, analyticsService, platform, alertCtrl, translateService, loaderService, keyboard) {
        this.navCtrl = navCtrl;
        this.userService = userService;
        this.analyticsService = analyticsService;
        this.platform = platform;
        this.alertCtrl = alertCtrl;
        this.translateService = translateService;
        this.loaderService = loaderService;
        this.keyboard = keyboard;
        this.usertype = __WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].USER_TYPE;
        this.resetUserObj();
        this.keyboard.close();
    }
    MyStuff.prototype.ionViewDidEnter = function () {
        this.content.resize();
        var tempUser = this.userService.getUserProfile();
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].PAGES.MY_STUFF);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].PAGES.MY_STUFF);
        if (this.userService.isCoachSettingsUpdated && tempUser.show_coach_marks) {
            //console.log('Updated show_coach_marks');
            this.userService.userObj.show_coach_marks = tempUser.show_coach_marks;
            this.userService.isCoachSettingsUpdated = false;
        }
        if (tempUser && tempUser.user_id !== '' && this.userService.isProfileUpdate === false) {
            this.userObj = JSON.parse(JSON.stringify(this.userService.getUserProfile()));
        }
        else {
            this.initUserObj();
        }
    };
    MyStuff.prototype.ionViewDidLoad = function () {
        //console.log('Hello MyStuff Page');
    };
    MyStuff.prototype.ngOnDestroy = function () {
        // console.log("MyStuff is killed");
    };
    MyStuff.prototype.initUserObj = function (initUserObjCB) {
        var _this = this;
        var that = this, userInfo = this.userService.getUser();
        if (!this.userService.userObj.show_coach_marks.profile) {
            that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        }
        this.userService.getUserById(userInfo.user_id).subscribe(function (response) {
            if (response.status !== 'ERROR') {
                _this.userObj = response.user;
                Object.assign(_this.userObj, { _id: userInfo.user_id });
                _this.userService.setUserProfile(_this.userObj);
                // // console.log('In MyStuff userObj ->', this.userObj);
                if (initUserObjCB) {
                    initUserObjCB();
                }
            }
            else {
                var alert_1 = that.alertCtrl.create({
                    subTitle: that.translateService.instant('ERROR_MESSAGES.APP_VERSION_UPDATED'),
                    buttons: [{
                            text: _this.translateService.instant('CONVERSATIONS.OK'),
                            handler: function () {
                                that.userService.logout();
                            }
                        }],
                    enableBackdropDismiss: false,
                    cssClass: 'alert-single'
                });
                alert_1.present();
            }
            _this.loaderService.dismissLoader();
        }, function (error) {
            // // console.log("ERROR::", error);
            _this.loaderService.showToaster(error);
            _this.loaderService.dismissLoader();
        });
    };
    MyStuff.prototype.resetUserObj = function () {
        this.userObj = {
            _id: '',
            user_id: '',
            user_name: '',
            email: '',
            is_mobile_number_verified: false,
            verification_code: '',
            profile: {}
        };
        this.userObj.profile = {
            profile_pic: '',
            description: '',
            gender: '',
            phone_number: '',
            name: '',
            first_name: '',
            last_name: '',
            nick_name: ''
        };
    };
    MyStuff.prototype.navigatTo = function (pageName) {
        var _this = this;
        if (this.userService.isOnline()) {
            if (this.userObj && this.userObj.user_id !== '') {
                this.openPage(pageName);
            }
            else {
                this.initUserObj(function () {
                    _this.openPage(pageName);
                });
            }
        }
        else {
            this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.NO_NETWORK'));
        }
    };
    MyStuff.prototype.openPage = function (pageName) {
        switch (pageName) {
            case 'settings':
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__settings_settings__["a" /* Settings */], { userData: this.userObj });
                break;
            case 'profile':
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__profile_profile__["a" /* Profile */], { userData: this.userObj });
                break;
            case 'servicerequest':
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__pages_service_request_service_request__["a" /* ServiceRequest */]);
                break;
            case 'feedback':
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__tell_feedback_tell_feedback__["a" /* TellFeedback */], { userData: this.userObj });
                break;
            case 'favorites':
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__activity_activity_feed__["a" /* ActivityPage */], { favorites: true });
                break;
            case 'help':
                //this.navCtrl.push(FrequetlyAskedQustion);
                cordova.InAppBrowser.open(__WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].FAQ_URL, "_blank", "location=no");
                break;
        }
    };
    return MyStuff;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
], MyStuff.prototype, "content", void 0);
MyStuff = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-my-stuff',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\my-stuff.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'YOUR_STUFF.TITLE\' | translate}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n\n\n<ion-content silvergrey-background>\n\n    <ion-list>\n\n        <ion-list-header profile-image>\n\n            <!--// TODO: Change request as per -->\n\n            <!--<img *ngIf="userObj.profile.profile_pic" src={{userObj.profile.profile_pic}} />\n\n            <img *ngIf="!userObj.profile.profile_pic" src="./assets/img/image-placeholder.jpg">\n\n            <div background-overlays></div>-->\n\n            <span *ngIf="!userObj.profile.first_name" class="image-caption">{{\'YOUR_STUFF.HI\' | translate}}<br>{{userObj.user_name}}!</span>\n\n            <span *ngIf="userObj.profile.first_name" class="image-caption">{{\'YOUR_STUFF.HI\' | translate}}<br>{{userObj.profile.first_name}} {{userObj.profile.last_name}}!</span>\n\n        </ion-list-header>\n\n\n\n        <button ion-item detail-none class="list-grid-120" (click)="navigatTo(\'profile\')">\n\n            <h2><span class="text14px-black">{{\'YOUR_STUFF.PROFILE.TITLE\' | translate}}</span></h2>\n\n            <ion-icon item-right class="icons-user icon-24"></ion-icon>\n\n        </button>\n\n        <button ion-item detail-none class="list-grid-120" (click)="navigatTo(\'favorites\')">\n\n            <h2><span class="text14px-black">{{\'YOUR_STUFF.FAVORITES.TITLE\' | translate}}</span></h2>\n\n            <ion-icon item-right class="icons-unlike icon-24"></ion-icon>\n\n        </button>\n\n        <button *ngIf="userObj.user_type === usertype.RESIDENT" ion-item detail-none class="list-grid-120" (click)="navigatTo(\'servicerequest\')" >\n\n            <h2><span class="text14px-black">{{\'SERVICE_REQUESTS.TITLE\' | translate}}</span></h2>\n\n            <ion-icon item-right class="icons-service icon-24"></ion-icon>\n\n        </button>\n\n        <button ion-item detail-none class="list-grid-120" (click)="navigatTo(\'help\')">\n\n            <h2><span class="text14px-black">{{\'YOUR_STUFF.FAQ.TITLE\' | translate}}</span></h2>\n\n            <ion-icon item-right class="icons-help icon-24"></ion-icon>\n\n        </button>\n\n        <button ion-item detail-none class="list-grid-120" (click)="navigatTo(\'feedback\')">\n\n            <h2><span class="text14px-black">{{\'YOUR_STUFF.FEEDBACK.TITLE\' | translate}}</span></h2>\n\n            <ion-icon item-right class="icons-announcment icon-24"></ion-icon>\n\n        </button>\n\n        <button ion-item detail-none class="list-grid-120" (click)="navigatTo(\'settings\')">\n\n            <h2><span class="text14px-black">{{\'YOUR_STUFF.SETTINGS.TITLE\' | translate}}</span></h2>\n\n            <ion-icon item-right class="icons-more icon-24"></ion-icon>\n\n        </button>\n\n\n\n    </ion-list>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\my-stuff.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_7__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_8__providers_analytics_service__["a" /* AnalyticsService */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Platform */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_11__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_9__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_keyboard__["a" /* Keyboard */]])
], MyStuff);

//# sourceMappingURL=my-stuff.js.map

/***/ }),

/***/ 472:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Profile; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_transfer__ = __webpack_require__(103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ionic_native_camera__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_crop__ = __webpack_require__(166);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__edit_profile_edit_profile__ = __webpack_require__(473);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__shared_environment__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var Profile = (function () {
    function Profile(navCtrl, navParams, actionSheetCtrl, alertCtrl, userService, translateService, loaderService, analyticsService, transfer, camera, crop) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.actionSheetCtrl = actionSheetCtrl;
        this.alertCtrl = alertCtrl;
        this.userService = userService;
        this.translateService = translateService;
        this.loaderService = loaderService;
        this.analyticsService = analyticsService;
        this.transfer = transfer;
        this.camera = camera;
        this.crop = crop;
        this.userObj = JSON.parse(JSON.stringify(this.navParams.get('userData')));
    }
    Profile.prototype.ionViewDidEnter = function () {
        //this.initUserObj();    
        this.content.resize();
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].PAGES.MY_STUFF_PROFILE);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].PAGES.MY_STUFF_PROFILE);
        this.userObj = JSON.parse(JSON.stringify(this.userService.getUserProfile()));
    };
    Profile.prototype.ionViewDidLoad = function () {
        this.content.resize();
    };
    Profile.prototype.navigatToEditProfile = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__edit_profile_edit_profile__["a" /* EditProfile */], { userData: this.userObj });
    };
    Profile.prototype.uploadFileOnserver = function (fileURI, callback) {
        var fileTransfer = this.transfer.create();
        var fileUploadOptions = {
            fileKey: 'file',
            fileName: this.getFileName(fileURI),
            httpMethod: 'POST'
        };
        if (!fileUploadOptions.headers) {
            fileUploadOptions.headers = {
                'Authorization': 'Bearer ' + this.userService.http.token,
                source: __WEBPACK_IMPORTED_MODULE_9__shared_config__["a" /* CONSTANTS */].UPLOAD_IMAGE_SOURCE.PROFILE, user_id: this.userObj.user_id
            };
        }
        var uploadEndpoint = __WEBPACK_IMPORTED_MODULE_8__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/listing/uploadImage';
        // // console.log('In uploadFileOnserver fileUrl', fileURI, uploadEndpoint, fileUploadOptions);
        if (!this.userService.isOnline()) {
            callback(this.translateService.instant('ERROR_MESSAGES.NO_NETWORK'));
        }
        else {
            fileTransfer.upload(fileURI, uploadEndpoint, fileUploadOptions).then(function (data) {
                // // console.log('In uploadFileOnserver success', data)
                if (callback) {
                    var response = JSON.parse(data.response);
                    // // console.log("Image respinse", response);
                    callback(null, response.image_url);
                }
            }, function (err) {
                if (callback) {
                    callback(err);
                }
            });
            fileTransfer.onProgress(function (state) {
                // console.log(state);
            });
        }
    };
    Profile.prototype.getFileName = function (fileURI) {
        var fileNameTemp, fileExt = 'jpg', fileName;
        if (fileURI.indexOf('.') !== -1 && fileURI.indexOf('?') !== -1) {
            fileNameTemp = fileURI.split('.').pop();
            fileExt = fileNameTemp.split('?')[0];
        }
        fileName = this.userObj.user_name + new Date().getTime() + '.' + fileExt;
        return fileName;
    };
    Profile.prototype.takeFromCamera = function (source) {
        var _this = this;
        // console.log('Take pic from Camera');
        this.camera.getPicture({
            quality: 100,
            destinationType: this.camera.DestinationType.FILE_URI,
            sourceType: source,
            allowEdit: false,
            encodingType: this.camera.EncodingType.JPEG,
            targetWidth: 600,
            targetHeight: 338,
            mediaType: this.camera.MediaType.PICTURE,
            saveToPhotoAlbum: true,
            correctOrientation: true
        }).then(function (imageData) {
            _this.crop.crop(imageData, { quality: 100 }).then(function (croppedimageData) {
                _this.loaderService.createLoader(_this.translateService.instant('ERROR_MESSAGES.UPLOADING'));
                _this.uploadFileOnserver(croppedimageData, function (error, image_url) {
                    if (!error) {
                        _this.userObj.profile.profile_pic = image_url;
                        _this.userService.updateUserInfo(_this.userObj).subscribe(function (res) {
                            if (res.status == 'SUCCESS') {
                                _this.userService.setUserProfile(_this.userObj);
                                _this.loaderService.dismissLoader();
                                // // console.log(res, "response from userService.updateUserInfo");
                            }
                            else {
                                var alert_1 = _this.alertCtrl.create({
                                    title: _this.translateService.instant('ERROR_MESSAGES.ERROR_TITLE'),
                                    subTitle: res.message,
                                    buttons: [{
                                            text: _this.translateService.instant('MISC.DISMISS')
                                        }],
                                    enableBackdropDismiss: false,
                                    cssClass: 'alert-single'
                                });
                                alert_1.present();
                            }
                        }, function (error) {
                            _this.loaderService.showToaster(error);
                            _this.loaderService.dismissLoader();
                        });
                    }
                    else {
                        _this.loaderService.showToaster(error);
                        _this.loaderService.dismissLoader();
                    }
                });
            }, function (error) {
                // console.log('ERROR ->' + JSON.stringify(error));
            });
        });
    };
    Profile.prototype.presentActionSheet = function () {
        var _this = this;
        var actionSheet = this.actionSheetCtrl.create({
            cssClass: 'photo-sheet',
            buttons: [
                {
                    text: this.translateService.instant("CONVERSATIONS.NEW_MSG.TAKE_PHOTO"),
                    role: 'Take a photo',
                    cssClass: 'take-photo',
                    icon: 'icons-camera',
                    handler: function () {
                        _this.takeFromCamera(_this.camera.PictureSourceType.CAMERA);
                    }
                }, {
                    text: this.translateService.instant("CONVERSATIONS.NEW_MSG.ATTACH_PHOTO"),
                    cssClass: 'take-photo',
                    icon: 'icons-image-photo',
                    handler: function () {
                        _this.takeFromCamera(_this.camera.PictureSourceType.PHOTOLIBRARY);
                    }
                }
            ]
        });
        actionSheet.present();
    };
    return Profile;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_3__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_4_ionic_angular__["c" /* Content */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4_ionic_angular__["c" /* Content */])
], Profile.prototype, "content", void 0);
Profile = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_3__angular_core__["n" /* Component */])({
        selector: 'page-profile',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\profile\profile.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'YOUR_STUFF.PROFILE.TITLE\' | translate}}</ion-title>\n\n        <ion-buttons end>\n\n            <button ion-button clear text-outline-btn (click)="navigatToEditProfile()">{{\'BUTTON_LABEL.EDIT\' | translate}}</button>\n\n        </ion-buttons>\n\n    </ion-navbar>\n\n</ion-header>\n\n\n\n<ion-content>\n\n    <ion-card profile-details>\n\n        <ion-card-header profile-image>\n\n            <ion-avatar>\n\n                <img *ngIf="userObj.profile.profile_pic" src={{userObj.profile.profile_pic}} alt="" />\n\n                <img *ngIf="!userObj.profile.profile_pic" src="./assets/img/image-placeholder.jpg" alt="" />    \n\n            </ion-avatar>\n\n            <button ion-button clear icon-only class="image-caption" (click)="presentActionSheet()">\n\n				<ion-icon class="icons-camera"></ion-icon>\n\n			</button>\n\n        </ion-card-header> \n\n\n\n        <ion-card-content profile-info>\n\n            <ion-card-title *ngIf="!userObj.profile.first_name">{{userObj.user_name}}<br></ion-card-title>\n\n            <ion-card-title *ngIf="userObj.profile.first_name">{{userObj.profile.first_name}} <br> {{userObj.profile.last_name}}<br></ion-card-title>\n\n            <p class="resident-detail">{{userObj.profile.description}} </p>\n\n        </ion-card-content>\n\n    </ion-card>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\profile\profile.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_4_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_4_ionic_angular__["a" /* ActionSheetController */],
        __WEBPACK_IMPORTED_MODULE_4_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_6__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_11__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_7__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_10__providers_analytics_service__["a" /* AnalyticsService */],
        __WEBPACK_IMPORTED_MODULE_0__ionic_native_transfer__["a" /* Transfer */], __WEBPACK_IMPORTED_MODULE_1__ionic_native_camera__["a" /* Camera */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_crop__["a" /* Crop */]])
], Profile);

//# sourceMappingURL=profile.js.map

/***/ }),

/***/ 473:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditProfile; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__verifications_verifications__ = __webpack_require__(474);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__address_address__ = __webpack_require__(475);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_date_picker__ = __webpack_require__(302);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__shared_util_date__ = __webpack_require__(181);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var EditProfile = (function () {
    function EditProfile(navCtrl, navParams, userService, alertCtrl, translateService, datePicker, analyticsService, loaderService) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.userService = userService;
        this.alertCtrl = alertCtrl;
        this.translateService = translateService;
        this.datePicker = datePicker;
        this.analyticsService = analyticsService;
        this.loaderService = loaderService;
        this.isMasterDetailsLoaded = false;
        this.mask = "(999) 999-9999";
        this.userMasterData = {
            _id: '',
            deeplink_base_url: '',
            language: [],
            education_level: [],
            annual_income: [],
            gender: [],
            service_interest: []
        };
        this.currentDate = new Date().toISOString();
        // this.maxDate = new Date().setFullYear(new Date().getFullYear() - 1);
        this.initMasterDetails();
        this.userObj = JSON.parse(JSON.stringify(this.navParams.get('userData')));
        this.phonenumber = this.userObj.profile.phone_number;
        this.formatPhone();
    }
    EditProfile.prototype.ionViewDidLoad = function () {
        this.content.resize();
        this.userService.setTempUserProfileObj(this.userObj);
    };
    EditProfile.prototype.ionViewDidEnter = function () {
        this.content.resize();
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].PAGES.EDIT_PROFILE);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].PAGES.EDIT_PROFILE);
        this.userObj = this.userService.getTempUserProfileObj();
    };
    EditProfile.prototype.initMasterDetails = function () {
        var _this = this;
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.userService.getDataFromUserMaster().subscribe(function (response) {
            // // console.log('<<response>>', response);
            if (response.status !== 'ERROR') {
                _this.isMasterDetailsLoaded = true;
                _this.userMasterData = response.userMaster[0];
                _this.userMasterData.service_interest = _this.userMasterData.service_interest.sort(_this.sortServiceInterest);
            }
            else {
                // // console.log('Error in getDataFromUserMaster', response);
                _this.loaderService.showToaster(response.message);
            }
            _this.loaderService.dismissLoader();
        }, function (error) {
            _this.loaderService.showToaster(error);
            _this.loaderService.dismissLoader();
        });
    };
    EditProfile.prototype.navigateToVerification = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__verifications_verifications__["a" /* Verifications */], { userData: this.userObj });
    };
    EditProfile.prototype.saveToBackend = function () {
        var _this = this;
        // // console.log("save call to backend");
        // // console.log(this.userObj, "userobjToBackend");
        this.userObj.profile.age = parseInt('' + this.userObj.profile.age);
        var phoneValidator = this.validatePhone();
        var nameValidator = this.validateNameFields();
        if (nameValidator && phoneValidator) {
            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
            this.userService.updateUserInfo(this.userObj).subscribe(function (res) {
                if (res.status == 'SUCCESS') {
                    // // console.log(res, "response from userService.updateUserInfo");
                    _this.userService.setUserProfile(_this.userObj);
                    _this.navCtrl.pop();
                }
                else {
                    var alert_1 = _this.alertCtrl.create({
                        title: _this.translateService.instant('ERROR_MESSAGES.ERROR_TITLE'),
                        subTitle: res.message,
                        buttons: [{
                                text: _this.translateService.instant('MISC.DISMISS')
                            }],
                        enableBackdropDismiss: false
                    });
                    alert_1.present();
                }
                _this.loaderService.dismissLoader();
            }, function (error) {
                // // console.log("ERROR::", error);
                _this.loaderService.showToaster(error);
                _this.loaderService.dismissLoader();
            });
        }
    };
    EditProfile.prototype.navigatTo = function (pageName) {
        console.log(this.userObj.profile.phone_number);
        console.log(this.phonenumber.replace(/\D+/g, ''));
        switch (pageName) {
            case 'Address':
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__address_address__["a" /* Address */], { userData: this.userObj });
                break;
        }
    };
    EditProfile.prototype.calculateAge = function (birthday) {
        var ageDifMs = Date.now() - birthday.getTime();
        var ageDate = new Date(ageDifMs); // miliseconds from epoch
        return Math.abs(ageDate.getUTCFullYear() - 1970);
    };
    EditProfile.prototype.dateSelectionEvent = function (e) {
        // console.log("currentDate", this.currentDate);
        // console.log("this.userObj.profile.date_of_birth", this.userObj.profile.date_of_birth);
        // console.log("Selection event", this.userObj.profile.date_of_birth > this.currentDate);
        if ((this.userObj.profile.date_of_birth > this.currentDate)) {
            this.userObj.profile.date_of_birth = new Date().toISOString();
            this.loaderService.showToaster(this.translateService.instant('YOUR_STUFF.PROFILE.MESSAGES'));
        }
        else {
            this.userObj.profile.age = this.calculateAge(new Date(this.userObj.profile.date_of_birth));
        }
    };
    EditProfile.prototype.dateSelection = function () {
        var that = this;
        this.datePicker.show({
            date: new Date(),
            mode: 'date',
            locale: this.userService.getCurrentLang(),
            cancelButtonLabel: that.translateService.instant('CONVERSATIONS.CANCEL'),
            doneButtonLabel: that.translateService.instant('CONVERSATIONS.OK')
        }).then(function (date) {
            //('Got date: ', date, 'that.currentDate', that.currentDate);
            //console.log(dateDifference(that.currentDate, date));
            if (date) {
                if (Object(__WEBPACK_IMPORTED_MODULE_10__shared_util_date__["a" /* dateDifference */])(that.currentDate, date) <= 0) {
                    that.loaderService.showToaster(that.translateService.instant('YOUR_STUFF.PROFILE.MESSAGES.DOB_ERROR'));
                }
                else {
                    that.userObj.profile.date_of_birth = date.toISOString();
                    that.userObj.profile.age = that.calculateAge(date);
                }
            }
        }, function (err) { return console.log('Error occurred while getting date: ', err); });
    };
    EditProfile.prototype.validateNameFields = function () {
        if ((this.userObj.profile.first_name.trim().length > 0 && this.userObj.profile.last_name.trim().length > 0)) {
            return true;
        }
        else {
            this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.NAME_VALIDATION'));
            return false;
        }
    };
    EditProfile.prototype.validatePhone = function () {
        if (this.phonenumber.length > 0) {
            var phonePattern = /^(\([0-9]{3}\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}/;
            if (phonePattern.test(this.phonenumber)) {
                this.userObj.profile.phone_number = this.phonenumber.replace(/\D+/g, '');
                return true;
            }
            else {
                //TODO - Replace this with phone message 
                this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.PHONE_VALIDATION'));
                return false;
            }
        }
        else {
            return true;
        }
    };
    EditProfile.prototype.formatPhone = function () {
        console.log(this.phonenumber);
        this.phonenumber = this.format(this.phonenumber);
        console.log(this.phonenumber);
    };
    EditProfile.prototype.format = function (v) {
        var s = '';
        var matches = v.match(/[a-zA-Z0-9]+/g);
        if (matches !== null) {
            var value = matches.join('').split('');
            var chars = this.mask.split('');
            for (var _i = 0, chars_1 = chars; _i < chars_1.length; _i++) {
                var c = chars_1[_i];
                if (value.length === 0) {
                    break;
                }
                switch (c) {
                    case '#':
                        s += value[0];
                        value = value.slice(1);
                        break;
                    case '9':
                        if (value[0].match(/\d/) !== null) {
                            s += value[0];
                            value = value.slice(1);
                        }
                        break;
                    case 'A':
                        if (value[0].match(/[a-zA-Z]/) !== null) {
                            s += value[0];
                            value = value.slice(1);
                        }
                        break;
                    default:
                        s += c;
                }
            }
        }
        return s;
    };
    EditProfile.prototype.sortServiceInterest = function (a, b) {
        return a.name > b.name ? 1 : -1;
    };
    return EditProfile;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
], EditProfile.prototype, "content", void 0);
EditProfile = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-edit-profile',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\profile\edit-profile\edit-profile.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'YOUR_STUFF.PROFILE.EDIT.TITLE\' | translate}}</ion-title>\n\n        <ion-buttons end>\n\n            <button (tap)="saveToBackend()" ion-button><ion-icon class="icons-correct"></ion-icon></button>\n\n        </ion-buttons>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content silvergrey-background>\n\n    <ion-list>\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.FIRST_NAME\' | translate}}</ion-label>\n\n            <ion-input type="text" class="edit-text" name="profile.first_name" placeholder="{{\'YOUR_STUFF.PROFILE.EDIT.FIRST_NAME\' | translate}}"\n\n                [(ngModel)]="userObj.profile.first_name"></ion-input>\n\n        </ion-item>\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.MIDDLE_NAME\' | translate}}</ion-label>\n\n            <ion-input type="text" class="edit-text" name="profile.middle_name" placeholder="{{\'YOUR_STUFF.PROFILE.EDIT.MIDDLE_NAME\' | translate}}"\n\n                [(ngModel)]="userObj.profile.middle_name"></ion-input>\n\n        </ion-item>\n\n\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.LAST_NAME\' | translate}}</ion-label>\n\n            <ion-input type="text" class="edit-text" name="profile.last_name" placeholder="{{\'YOUR_STUFF.PROFILE.EDIT.LAST_NAME\' | translate}}"\n\n                [(ngModel)]="userObj.profile.last_name"></ion-input>\n\n        </ion-item>\n\n\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.PHONE_NUMBER\' | translate}}</ion-label>\n\n            <ion-input type="tel" class="edit-text"  name="profile.phone_number" maxlength=14 placeholder="{{\'YOUR_STUFF.PROFILE.EDIT.PHONE_NUMBER\' | translate}}"\n\n               (ionChange)="formatPhone()" [(ngModel)]="phonenumber"></ion-input>\n\n        </ion-item>\n\n\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.ABOUT\' | translate}}</ion-label>\n\n            <ion-input type="text" class="edit-text" name="profile.descreption" placeholder="{{\'YOUR_STUFF.PROFILE.EDIT.ABOUT\' | translate}}"\n\n                [(ngModel)]="userObj.profile.description"></ion-input>\n\n        </ion-item>\n\n\n\n        <ion-item class="list-grid-136 dob" (click)="dateSelection()">\n\n            <h2 class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.DATE_OF_BIRTH\' | translate}}</h2>\n\n            <p class="sendmsg">{{ userObj.profile.date_of_birth | localizedDate: \'MMMM dd, yyyy\' }}</p>\n\n            <!--<ion-input type="text" class="edit-text" readonly   value=" ">  </ion-input>-->\n\n\n\n        </ion-item>\n\n\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.GENDER\' | translate}}</ion-label>\n\n            <ion-select cancelText="{{\'CONVERSATIONS.CANCEL\' | translate}}" okText="{{\'CONVERSATIONS.OK\' | translate}}" class="edit-text"\n\n                [(ngModel)]="userObj.profile.gender">\n\n                <li *ngFor="let gen of userMasterData.gender | slice:1">\n\n                    <ion-option value="{{gen._id}}">{{gen.name}}</ion-option>\n\n                </li>\n\n            </ion-select>\n\n        </ion-item>\n\n        <ion-item class="list-grid-136" (click)="navigatTo(\'Address\')">\n\n            <ion-label class="text14px-black flexLabel">{{\'YOUR_STUFF.PROFILE.EDIT.HOME_ADDRESS\' | translate}}\n\n\n\n            </ion-label>\n\n            <ion-note item-end *ngIf="userObj.profile.home_address.verification_status !== \'verified\'">{{\'YOUR_STUFF.PROFILE.EDIT.UNVERIFIED\' | translate }}</ion-note>\n\n            <ion-note item-end *ngIf="userObj.profile.home_address.verification_status === \'verified\'" [ngClass]="{\'verified\': userObj.profile.home_address.verification_status === \'verified\'}">{{\'YOUR_STUFF.PROFILE.EDIT.VERIFIED\' | translate }}</ion-note>\n\n        </ion-item>\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.EDUCATION_LEVEL\' | translate}}</ion-label>\n\n            <ion-select cancelText="{{\'CONVERSATIONS.CANCEL\' | translate}}" okText="{{\'CONVERSATIONS.OK\' | translate}}" class="edit-text"\n\n                [(ngModel)]="userObj.profile.education_level">\n\n                <li *ngFor="let education of userMasterData.education_level">\n\n                    <ion-option value="{{education._id}}">{{education.name}}</ion-option>\n\n                </li>\n\n            </ion-select>\n\n        </ion-item>\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.ANNUAL_INCOME\' | translate}}</ion-label>\n\n            <ion-select cancelText="{{\'CONVERSATIONS.CANCEL\' | translate}}" okText="{{\'CONVERSATIONS.OK\' | translate}}" class="edit-text"\n\n                [(ngModel)]="userObj.financial_info.annual_income">\n\n                <li *ngFor="let income of userMasterData.annual_income">\n\n                    <ion-option *ngIf="income.min !==0 && income.max !== 999999999" value="{{income._id}}">${{income.min | number : fractionSize}}-{{income.max | number : fractionSize}}</ion-option>\n\n                    <ion-option *ngIf="income.min === 0" value="{{income._id}}"> {{\'YOUR_STUFF.PROFILE.EDIT.UNDER\' | translate}} ${{income.max | number : fractionSize}}</ion-option>\n\n                    <ion-option *ngIf="income.min === 50000" value="{{income._id}}">{{\'YOUR_STUFF.PROFILE.EDIT.OVER\' | translate}} ${{income.min | number : fractionSize}}</ion-option>\n\n                </li>\n\n            </ion-select>\n\n        </ion-item>\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.SERVICE_INTERESTS\' | translate}}</ion-label>\n\n            <ion-select cancelText="{{\'CONVERSATIONS.CANCEL\' | translate}}" okText="{{\'CONVERSATIONS.OK\' | translate}}" class="edit-text" [(ngModel)]="userObj.service_interests" multiple="true">\n\n                <li *ngFor="let serviceinterest of userMasterData.service_interest">\n\n                    <ion-option value="{{serviceinterest._id}}">{{serviceinterest.name}}</ion-option>\n\n                </li>\n\n            </ion-select>\n\n        </ion-item>\n\n        <ion-item class="list-grid-136 verify" (click)="navigateToVerification()">\n\n            <h2 class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.VERIFICATIONS.TITLE\' | translate}}</h2>\n\n            <p class="sendmsg">{{\'YOUR_STUFF.PROFILE.EDIT.VERIFICATIONS.FB_STATUS\' | translate}}</p>\n\n        </ion-item>\n\n    </ion-list>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\profile\edit-profile\edit-profile.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_4__providers_user_service__["a" /* UserService */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_8__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_9__ionic_native_date_picker__["a" /* DatePicker */],
        __WEBPACK_IMPORTED_MODULE_7__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_5__providers_loader_service__["a" /* LoaderService */]])
], EditProfile);

//# sourceMappingURL=edit-profile.js.map

/***/ }),

/***/ 474:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Verifications; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var Verifications = (function () {
    function Verifications(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.userObj = this.navParams.get('userData');
    }
    Verifications.prototype.ionViewDidLoad = function () {
        // console.log('Hello Verifications Page');
    };
    return Verifications;
}());
Verifications = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-verifications',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\profile\edit-profile\verifications\verifications.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'YOUR_STUFF.PROFILE.EDIT.VERIFICATIONS.TITLE\' | translate}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n\n\n<ion-content silvergrey-background>\n\n    <ion-list>\n\n        <button ion-item detail-none class="list-grid-136" *ngIf="userObj.facebook"  [ngClass]="{\'verified\': userObj.facebook}">\n\n            <h2 class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.VERIFICATIONS.FACEBOOK_CONNECTED\' | translate}}</h2>\n\n            <ion-icon item-right [ngClass]="{\'icons-correct\': userObj.facebook}"></ion-icon>\n\n        </button>\n\n        <button ion-item detail-none *ngIf="!userObj.facebook" class="list-grid-136">\n\n            <h2><span class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.VERIFICATIONS.FB_NOT\' | translate}} </span></h2>\n\n        </button>\n\n    </ion-list>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\profile\edit-profile\verifications\verifications.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */]])
], Verifications);

//# sourceMappingURL=verifications.js.map

/***/ }),

/***/ 475:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Address; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__aroundme_aroundme_service__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var Address = (function () {
    function Address(navCtrl, userService, loaderService, zone, aroundMeService, analyticsService, translateService, alertCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.userService = userService;
        this.loaderService = loaderService;
        this.zone = zone;
        this.aroundMeService = aroundMeService;
        this.analyticsService = analyticsService;
        this.translateService = translateService;
        this.alertCtrl = alertCtrl;
        this.navParams = navParams;
        this.modelModified = false;
        this.addressObj = {
            _id: this.userService.userObj.user_id,
            profile: {
                home_address: {
                    street_address1: '',
                    street_address2: '',
                    city: '',
                    state: '',
                    zipcode: ''
                }
            }
        };
        if (this.navParams.get('userData') !== undefined) {
            this.userProfile = JSON.parse(JSON.stringify(this.navParams.get('userData')));
            this.addressObj.profile = this.userProfile.profile;
            this.query = this.addressObj.profile.home_address.street_address1;
        }
    }
    Address.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].PAGES.ADDRESS_UPDATE);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].PAGES.ADDRESS_UPDATE);
    };
    Address.prototype.ionViewDidLoad = function () {
        // console.log('Hello Address Page');
        var _this = this;
        this.navBar.backButtonClick = function (e) {
            // console.log("BAck clicked");
            // todo something
            if (_this.modelModified) {
                var alert_1 = _this.alertCtrl.create({
                    title: _this.translateService.instant('LOGIN.CONTINUE_SAVE'),
                    buttons: [{
                            text: _this.translateService.instant('CONVERSATIONS.OK'),
                            handler: function () {
                                var navTransition = alert_1.dismiss();
                                navTransition.then(function () {
                                    _this.navCtrl.pop();
                                });
                                return false;
                            }
                        },
                        {
                            text: _this.translateService.instant('CONVERSATIONS.CANCEL'),
                            role: 'cancel',
                            handler: function (data) {
                                // console.log('Cancel clicked');
                            }
                        }],
                    enableBackdropDismiss: false
                });
                alert_1.present();
            }
            else {
                _this.navCtrl.pop();
            }
        };
    };
    Address.prototype.saveToBackend = function () {
        var _this = this;
        if (this.modelModified) {
            var regex = new RegExp("^[0-9]{5}(?:-[0-9]{4})?$");
            if (regex.test(this.addressObj.profile.home_address.zipcode)) {
                this.addressObj.profile.home_address.verification_status = '';
                this.userProfile.profile = this.addressObj.profile;
                this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
                this.userService.updateUserInfo(this.userProfile).subscribe(function (res) {
                    if (res.status == 'SUCCESS') {
                        _this.navCtrl.pop();
                        //this.userProfile.profile = this.addressObj.profile;
                        _this.userService.setTempUserProfileObj(_this.userProfile);
                        _this.userService.setUserProfile(_this.userProfile);
                    }
                    else {
                        var alert_2 = _this.alertCtrl.create({
                            title: _this.translateService.instant('ERROR_MESSAGES.ERROR_TITLE'),
                            subTitle: res.message,
                            buttons: [{
                                    text: _this.translateService.instant('MISC.DISMISS')
                                }],
                            enableBackdropDismiss: false,
                            cssClass: 'alert-single'
                        });
                        alert_2.present();
                    }
                    _this.loaderService.dismissLoader();
                }, function (error) {
                    _this.loaderService.showToaster(error);
                    _this.loaderService.dismissLoader();
                });
            }
            else {
                this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.ZIP_CODE_VALID'));
            }
        }
        else {
            this.navCtrl.pop();
        }
    };
    Address.prototype.detectChange = function (e) {
        this.modelModified = true;
    };
    Address.prototype.autocompletePlacesSearch = function () {
        var _this = this;
        // console.log("Onupdate called ",this.searchLocation.query )
        var that = this, searchObj = null, autocompletePlacesTemp = [];
        if (that.query == '') {
            // Clear results when no input is provided 
            that.autocompletePlaces = [];
            return;
        }
        else if (that.query.length < 3) {
            //To show results till the user clears the input
            return;
        }
        searchObj = { input: that.query };
        //, types: ['address'] , componentRestrictions: { country: 'US' }
        that.aroundMeService.getPlacePredictions(searchObj).subscribe(function (response) {
            autocompletePlacesTemp = [];
            var places = response.places.predictions;
            if (places) {
                places.forEach(function (place) {
                    autocompletePlacesTemp.push(place);
                });
                // apply result on autocompletePlaces object 
                that.zone.run(function () {
                    that.autocompletePlaces = autocompletePlacesTemp;
                });
            }
            else {
                that.autocompletePlaces = [];
            }
        }, function (error) {
            _this.loaderService.showToaster(error);
        });
    };
    Address.prototype.onPlaceSelect = function (placeDetail) {
        var _this = this;
        this.modelModified = true;
        this.autocompletePlaces = [];
        this.addressObj.profile.home_address.zipcode = '';
        this.addressObj.profile.home_address.street_address2 = '';
        this.query = placeDetail.description;
        this.aroundMeService.placeDetailById({ place_id: placeDetail.place_id }).subscribe(function (place) {
            if (place.status === __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                //this.query = place.location.address;
                _this.addressObj.profile.home_address.street_address1 = place.location.address;
                _this.addressObj.profile.home_address.zipcode = place.location.zipcode;
                _this.addressObj.profile.home_address.city = place.location.city;
                _this.addressObj.profile.home_address.state = place.location.state;
                _this.addressObj.profile.home_address.place_id = placeDetail.place_id;
                _this.addressObj.profile.home_address.lat = place.location.lat;
                _this.addressObj.profile.home_address.long = place.location.long;
                // add marker on map 
            }
            else {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.ADDRESS_NOT_FOUND'));
            }
        }, function (error) {
            _this.loaderService.showToaster(error);
        });
    };
    Address.prototype.hideAutoComplete = function () {
        this.autocompletePlaces = [];
    };
    return Address;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* Navbar */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* Navbar */])
], Address.prototype, "navBar", void 0);
Address = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-address',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\profile\edit-profile\address\address.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'YOUR_STUFF.PROFILE.EDIT.ADDRESS.TITLE\' | translate}}</ion-title>\n\n        <ion-buttons end>\n\n            <button (click)="saveToBackend()" ion-button><ion-icon class="icons-correct"></ion-icon></button>\n\n        </ion-buttons>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content silvergrey-background>\n\n    <ion-list>\n\n        <ion-item class="search-address list-grid-136">\n\n            <label class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.ADDRESS.STREET_ADDRESS_1\' | translate }}</label>\n\n            <ion-searchbar (ionInput)="autocompletePlacesSearch()" autocomplete="on" [(ngModel)]="query" placeholder="{{\'YOUR_STUFF.PROFILE.EDIT.ADDRESS.SEARCH_LOCATION\' | translate }}"></ion-searchbar>\n\n            <ion-list (pan)="hideKeyboard()" class="places-list" *ngIf="autocompletePlaces && autocompletePlaces.length > 0">\n\n                <button ion-item detail-none class="list-grid-120" *ngFor="let place of autocompletePlaces" (tap)="onPlaceSelect(place)">\n\n                    <h2 class="text12px-grey">{{ place.description }}</h2>\n\n                </button>\n\n            </ion-list>\n\n        </ion-item>\n\n        <ion-item class="list-grid-136" (pan)="hideAutoComplete()">\n\n            <ion-label class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.ADDRESS.UNIT_NO\' | translate}}</ion-label>\n\n            <ion-input type="text" class="edit-text" name="home_address.street_address2" (ionFocus)=hideAutoComplete() (ngModelChange)="detectChange($event)" [(ngModel)]="addressObj.profile.home_address.street_address2"></ion-input>\n\n        </ion-item>\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.ADDRESS.ZIP_CODE\' | translate}}</ion-label>\n\n            <ion-input type="text" class="edit-text" name="home_address.zipcode" (ionFocus)=hideAutoComplete() (ngModelChange)="detectChange($event)" [(ngModel)]="addressObj.profile.home_address.zipcode"></ion-input>\n\n        </ion-item>\n\n    </ion-list>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\profile\edit-profile\address\address.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_2__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_3__providers_loader_service__["a" /* LoaderService */],
        __WEBPACK_IMPORTED_MODULE_0__angular_core__["P" /* NgZone */], __WEBPACK_IMPORTED_MODULE_5__aroundme_aroundme_service__["a" /* AroundMeService */], __WEBPACK_IMPORTED_MODULE_6__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_7__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */]])
], Address);

//# sourceMappingURL=address.js.map

/***/ }),

/***/ 476:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Settings; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_environment__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__change_password_change_password__ = __webpack_require__(477);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__blocked_users_blocked_users__ = __webpack_require__(478);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var Settings = (function () {
    function Settings(navCtrl, userService, analyticsService, translateService, events, navParams, loaderService, pubNubService) {
        this.navCtrl = navCtrl;
        this.userService = userService;
        this.analyticsService = analyticsService;
        this.translateService = translateService;
        this.events = events;
        this.navParams = navParams;
        this.loaderService = loaderService;
        this.pubNubService = pubNubService;
        this.appVersion = __WEBPACK_IMPORTED_MODULE_4__shared_environment__["a" /* ENVIRONMENT */].APP_VERSION_DISPLAY;
        this.showCoachMarks = false;
        this.usertype = __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].USER_TYPE;
        this.LANGUAGEMAP = {
            'en': [{ "name": "English", "id": "en" },
                { "name": "Spanish", "id": "es" },
                { "name": "Korean", "id": "ko" },
                { "name": "Haitian Creole", "id": "ht" },
                { "name": "Russian", "id": "ru" },
                { "name": "Chinese, Simplified", "id": "zh-CN" },
                { "name": "Chinese, Traditional", "id": "zh-TW" },
                { "name": "Portuguese", "id": "pt" }],
            'ko': [{ "name": "영어", "id": "en" },
                { "name": "스페인어", "id": "es" },
                { "name": "한국어", "id": "ko" },
                { "name": "아이티 크리올", "id": "ht" },
                { "name": "러시아어", "id": "ru" },
                { "name": "중국어 간체", "id": "zh-CN" },
                { "name": "중국 전통", "id": "zh-TW" },
                { "name": "포르투갈어", "id": "pt" }],
            'es': [{ "name": "Inglés", "id": "en" },
                { "name": "Español", "id": "es" },
                { "name": "Coreano", "id": "ko" },
                { "name": "Criollo haitiano", "id": "ht" },
                { "name": "Ruso", "id": "ru" },
                { "name": "Chino (simplificado)", "id": "zh-CN" },
                { "name": "Chino (tradicional)", "id": "zh-TW" },
                { "name": "Portugués", "id": "pt" }],
            'ht': [{ "name": "Angle", "id": "en" },
                { "name": "Panyòl", "id": "es" },
                { "name": "Koreyen", "id": "ko" },
                { "name": "Kreyòl Ayisyen", "id": "ht" },
                { "name": "Ris", "id": "ru" },
                { "name": "Chinwa, Senplifye", "id": "zh-CN" },
                { "name": "Chinwa, tradisyonèl", "id": "zh-TW" },
                { "name": "Pòtigè", "id": "pt" }],
            'ru': [{ "name": "английский", "id": "en" },
                { "name": "испанский", "id": "es" },
                { "name": "Корейский", "id": "ko" },
                { "name": "Гаитянский креольский", "id": "ht" },
                { "name": "русский", "id": "ru" },
                { "name": "Китайский упрощенный", "id": "zh-CN" },
                { "name": "Китайский традиционный", "id": "zh-TW" },
                { "name": "португальский", "id": "pt" }],
            'zh-CN': [{ "name": "英语", "id": "en" },
                { "name": "西班牙语", "id": "es" },
                { "name": "朝鲜的", "id": "ko" },
                { "name": "海地克里奥尔人", "id": "ht" },
                { "name": "俄语", "id": "ru" },
                { "name": "简体中文", "id": "zh-CN" },
                { "name": "中国传统的", "id": "zh-TW" },
                { "name": "葡萄牙语", "id": "pt" }],
            'zh-TW': [{ "name": "英語", "id": "en" },
                { "name": "西班牙語", "id": "es" },
                { "name": "朝鮮的", "id": "ko" },
                { "name": "海地克里奧爾人", "id": "ht" },
                { "name": "俄語", "id": "ru" },
                { "name": "簡體中文", "id": "zh-CN" },
                { "name": "中國傳統的", "id": "zh-TW" },
                { "name": "葡萄牙語", "id": "pt" }],
            'pt': [{ "name": "Inglês", "id": "en" },
                { "name": "Espanhol", "id": "es" },
                { "name": "Coreano", "id": "ko" },
                { "name": "Crioulo Haitiano", "id": "ht" },
                { "name": "Russo", "id": "ru" },
                { "name": "Chinês, Simplificado", "id": "zh-CN" },
                { "name": "Chinês, Tradicional", "id": "zh-TW" },
                { "name": "Português", "id": "pt" }]
        };
        this.userObj = this.navParams.get('userData');
        this.currentLanguage = this.translateService.currentLang;
        this.availableLanguages = this.LANGUAGEMAP[this.currentLanguage];
        this.availableLanguages = this.availableLanguages.sort(this.sortLanguages);
    }
    Settings.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].PAGES.MY_STUFF_SETTINGS);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].PAGES.MY_STUFF_SETTINGS);
        this.showCoachMarks = this.userService.userObj.show_coach_marks.all;
    };
    Settings.prototype.ionViewDidUnload = function () {
        //console.log("Settings");
    };
    Settings.prototype.changeNotitficationStatus = function () {
        var _this = this;
        var notificationObj = { notification_enabled: this.userObj.notification_enabled, _id: this.userObj._id };
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        var pushChannels = this.pubNubService.getPushNotificationChannels();
        this.userService.updateUserInfo(notificationObj).subscribe(function (res) {
            if (res.status == 'SUCCESS') {
                _this.userService.userProfile.notification_enabled = _this.userObj.notification_enabled;
                if (!_this.userObj.notification_enabled) {
                    _this.pubNubService.unRegisterDevice(pushChannels, _this.userService.deviceToken, _this.userService.pushPlatform);
                }
                else {
                    _this.pubNubService.registerDevice(pushChannels, _this.userService.deviceToken, _this.userService.pushPlatform);
                }
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SETTINGS_UPDATED'));
            }
            else {
                _this.loaderService.showToaster(res.message);
            }
            _this.loaderService.dismissLoader();
        }, function (error) {
            // // console.log("ERROR::", error);
            _this.loaderService.showToaster(error);
            _this.loaderService.dismissLoader();
        });
    };
    Settings.prototype.changeLowDataSettings = function () {
        var _this = this;
        var notificationObj = { low_data: this.userObj.low_data, _id: this.userObj._id };
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.userService.updateUserInfo(notificationObj).subscribe(function (res) {
            if (res.status == 'SUCCESS') {
                _this.userService.userObj.low_data = _this.userObj.low_data;
                _this.userService.userProfile.low_data = _this.userObj.low_data;
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SETTINGS_UPDATED'));
            }
            else {
                _this.loaderService.showToaster(res.message);
            }
            _this.loaderService.dismissLoader();
        }, function (error) {
            // // console.log("ERROR::", error);
            _this.loaderService.showToaster(error);
            _this.loaderService.dismissLoader();
        });
    };
    Settings.prototype.changeCoachMarkStatus = function () {
        var _this = this;
        var coachMarksSettingsRequest;
        var showCoachMarks = { all: true, feed: true, conversation: true, around_me: true, profile: true };
        showCoachMarks.all = showCoachMarks.feed = showCoachMarks.conversation = showCoachMarks.around_me = showCoachMarks.profile = this.showCoachMarks;
        coachMarksSettingsRequest = Object.assign({ user_id: this.userObj.user_id }, { show_coach_marks: showCoachMarks });
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.userService.setCoachMarkSettings(coachMarksSettingsRequest).subscribe(function (response) {
            if (response.status === __WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                _this.userObj.show_coach_marks = response.show_coach_marks;
                _this.userService.setUserProfile(_this.userObj);
                _this.userService.isCoachSettingsUpdated = true;
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SETTINGS_UPDATED'));
            }
            else {
                _this.loaderService.showToaster(response.message);
            }
            _this.loaderService.dismissLoader();
        }, function (error) {
            _this.loaderService.showToaster(error);
            _this.loaderService.dismissLoader();
        });
    };
    Settings.prototype.navigatTo = function (pageName) {
        // console.log(pageName);
        switch (pageName) {
            case 'changePassword':
                if (!this.userObj.facebook) {
                    this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__change_password_change_password__["a" /* ChangePassword */], { userData: this.userObj });
                }
                break;
            case 'blockedUsers':
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__blocked_users_blocked_users__["a" /* BlockedUsers */]);
                break;
        }
    };
    Settings.prototype.onLogout = function () {
        //console.log("---", this.navCtrl.length());
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.LOGGING_OUT'));
        this.userService.logout();
    };
    Settings.prototype.changeLanguage = function () {
        this.translateService.use(this.currentLanguage);
        this.userService.setCurrentLang(this.currentLanguage);
        this.pubNubService.setUserLang(this.currentLanguage);
        this.availableLanguages = this.LANGUAGEMAP[this.currentLanguage];
        this.availableLanguages = this.availableLanguages.sort(this.sortLanguages);
        if (this.userService.userObj && this.userService.userObj.user_id) {
            this.userService.updateUserDeviceLang({ user_id: this.userService.userObj.user_id }).subscribe(function (res) {
            });
            this.events.publish(__WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].APP_EVENTS.REFRESH_CONVERSATION);
            this.events.publish(__WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].APP_EVENTS.LANGUAGE_UPDATE);
        }
    };
    Settings.prototype.sortLanguages = function (a, b) {
        return a.name > b.name ? 1 : -1;
    };
    return Settings;
}());
Settings = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-settings',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\settings\settings.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'YOUR_STUFF.SETTINGS.TITLE\' | translate}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n\n\n<ion-content silvergrey-background>\n\n    <ion-list>\n\n        <ion-item class="list-grid-136" toggle>\n\n            <ion-label class="text14px-black">{{\'YOUR_STUFF.SETTINGS.SEND_PUSH_NOTIFICATIONS\' | translate}}</ion-label>\n\n            <ion-toggle [checked]="userObj.notification_enabled" [(ngModel)]="userObj.notification_enabled" (ionChange)="changeNotitficationStatus()"></ion-toggle>\n\n        </ion-item>\n\n        <ion-item class="list-grid-136" toggle>\n\n                <ion-label class="text14px-black">{{\'YOUR_STUFF.SETTINGS.LOW_DATA\' | translate}}</ion-label>\n\n                <ion-toggle [checked]="userObj.low_data" [(ngModel)]="userObj.low_data" (ionChange)="changeLowDataSettings()"></ion-toggle>\n\n            </ion-item>\n\n        <button ion-item detail-none class="list-grid-136" *ngIf="!userObj.facebook" list-grid (click)="navigatTo(\'changePassword\')">\n\n            <h2 class="text14px-black">{{\'YOUR_STUFF.SETTINGS.CHANGE_PASSWORD.TITLE\' | translate}}</h2>\n\n        </button>\n\n        <button ion-item detail-none class="list-grid-136" (click)="navigatTo(\'blockedUsers\')">\n\n            <h2 class="text14px-black">{{\'YOUR_STUFF.SETTINGS.BLOCKED_USERS\' | translate}}</h2>\n\n        </button>\n\n        \n\n        <ion-item class="list-grid-136" toggle>\n\n            <ion-label class="text14px-black">{{\'YOUR_STUFF.SETTINGS.SHOW_COACHMARKS\' | translate}}</ion-label>\n\n           \n\n            <ion-toggle [checked]="userService.userObj.show_coach_marks && userService.userObj.show_coach_marks.all" [(ngModel)]="showCoachMarks" (ionChange)="changeCoachMarkStatus()"></ion-toggle>\n\n        </ion-item>\n\n        <!--<button ion-item detail-none list-grid (click)="navigatTo(\'aboutApp\')" class="button">\n\n            <h2 title14px><span>{{\'YOUR_STUFF.SETTINGS.ABOUT_APP\' | translate}}</span></h2>\n\n        </button>-->\n\n        <ion-item class="list-grid-136">\n\n            <ion-label class="text14px-black">{{\'YOUR_STUFF.PROFILE.EDIT.LANGUAGE\' | translate}}</ion-label>\n\n            <ion-select [disabled]="(userService.userObj.user_type === usertype.HOUSING_PROVIDER || userService.userObj.user_type === usertype.SERVICE_PROVIDER)" cancelText="{{\'CONVERSATIONS.CANCEL\' | translate}}" okText="{{\'CONVERSATIONS.OK\' | translate}}" class="edit-text"\n\n                [(ngModel)]="currentLanguage" (ionChange) = "changeLanguage()">\n\n                <li *ngFor="let lang of availableLanguages">\n\n                    <ion-option value="{{lang.id}}">{{lang.name}}</ion-option>\n\n                </li>\n\n            </ion-select>\n\n        </ion-item>\n\n        <button ion-item detail-none class="list-grid-136" (click)="onLogout()">\n\n            <h2 class="text14px-black">{{\'YOUR_STUFF.SETTINGS.LOG_OUT\' | translate}}</h2>\n\n        </button>\n\n    </ion-list>\n\n</ion-content>\n\n\n\n<ion-footer footer-full>\n\n    <ion-toolbar>\n\n        <ion-button ion-button outline class="grey-outline-btn">{{\'YOUR_STUFF.SETTINGS.VERSION\' | translate}} - &nbsp; <span> {{appVersion}}</span></ion-button>\n\n    </ion-toolbar>\n\n</ion-footer>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\settings\settings.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_2__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__["a" /* AnalyticsService */],
        __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_6__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_7__providers_pubnub_service__["a" /* PubNubService */]])
], Settings);

//# sourceMappingURL=settings.js.map

/***/ }),

/***/ 477:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChangePassword; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var ChangePassword = (function () {
    function ChangePassword(userService, loaderService, navParams, translateService, analyticsService, alertCtrl, navctrl) {
        this.userService = userService;
        this.loaderService = loaderService;
        this.navParams = navParams;
        this.translateService = translateService;
        this.analyticsService = analyticsService;
        this.alertCtrl = alertCtrl;
        this.navctrl = navctrl;
        // // console.log('Hello ChangePassword Component');
        this.newPassword = '';
        this.repeatPassword = '';
        this.mediumRegex = new RegExp(__WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].CHANGE_PASSWORD_MESSAGES.MEDIUM_REGX);
        this.userObj = this.navParams.get('userData');
    }
    ChangePassword.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].PAGES.MY_STUFF_CHANGE_PASSWORD);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].PAGES.MY_STUFF_CHANGE_PASSWORD);
    };
    ChangePassword.prototype.saveToBackend = function () {
        var _this = this;
        var that = this;
        that.repeatPassword = that.repeatPassword.trim();
        that.newPassword = that.newPassword.trim();
        var validatePassword = that.mediumRegex.test(that.newPassword);
        var message = '';
        if (that.newPassword == '') {
            message = this.translateService.instant('ERROR_MESSAGES.PASSWORD_BLANK');
        }
        else if (that.newPassword !== that.repeatPassword) {
            message = this.translateService.instant('ERROR_MESSAGES.PASSWORD_MISMATCH');
        }
        else if (validatePassword) {
            var passwordRequest = { password: that.repeatPassword, email: that.userObj.email, _id: that.userObj._id };
            that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
            that.userService.changePassword(passwordRequest).subscribe(function (res) {
                if (res.status == 'SUCCESS') {
                    // // console.log(res, "response from userService.updateUserInfo");
                    that.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.UPDATE_SUCCESSFUL'));
                    that.loaderService.dismissLoader();
                    that.navctrl.pop();
                }
                else {
                    that.loaderService.showToaster(res.message);
                    that.loaderService.dismissLoader();
                }
            }, function (error) {
                // // console.log("ERROR::", error);
                that.loaderService.showToaster(error);
                that.loaderService.dismissLoader();
            });
        }
        else {
            message = this.translateService.instant('ERROR_MESSAGES.PASSWORD_FORMAT');
        }
        if (message != '') {
            var alert_1 = that.alertCtrl.create({
                title: that.translateService.instant('ERROR_MESSAGES.ERROR_TITLE'),
                subTitle: message,
                buttons: [{
                        text: this.translateService.instant('CONVERSATIONS.OK'),
                        handler: function () {
                            that.repeatPassword = '';
                            that.newPassword = '';
                        }
                    }],
                enableBackdropDismiss: false,
                cssClass: 'alert-single'
            });
            alert_1.present();
        }
    };
    return ChangePassword;
}());
ChangePassword = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'change-password',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\settings\change-password\change-password.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'YOUR_STUFF.SETTINGS.CHANGE_PASSWORD.TITLE\' | translate}}</ion-title>\n\n        <ion-buttons end>\n\n            <button (click)="saveToBackend()" ion-button clear><ion-icon class="icons-correct"></ion-icon></button>\n\n        </ion-buttons>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content silvergrey-background>\n\n    <ion-list>\n\n        <ion-item class="list-grid-136">\n\n            <ion-label floating class="text14px-black">{{\'YOUR_STUFF.SETTINGS.CHANGE_PASSWORD.NEW_PASSWORD\' | translate}}</ion-label>\n\n            <ion-input type="password" name="newpassword" class="edit-text" [(ngModel)]="newPassword" required></ion-input>\n\n        </ion-item>\n\n        <ion-item class="list-grid-136">\n\n            <ion-label floating class="text14px-black">{{\'YOUR_STUFF.SETTINGS.CHANGE_PASSWORD.REPEAT_PASSWORD\' | translate}}</ion-label>\n\n            <ion-input [disabled]="!(newPassword && this.newPassword.trim().length > 0)" type="password" class="edit-text" minlength=8 name="repeatPassword" [(ngModel)]="repeatPassword" required></ion-input>\n\n        </ion-item>\n\n    </ion-list>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\settings\change-password\change-password.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_3__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_6__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_5__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */]])
], ChangePassword);

//# sourceMappingURL=change-password.js.map

/***/ }),

/***/ 478:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BlockedUsers; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__conversations_chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var BlockedUsers = (function () {
    function BlockedUsers(navCtrl, userService, chatService, pubNubService, analyticsService, events, loaderService, translateService, alertCtrl) {
        this.navCtrl = navCtrl;
        this.userService = userService;
        this.chatService = chatService;
        this.pubNubService = pubNubService;
        this.analyticsService = analyticsService;
        this.events = events;
        this.loaderService = loaderService;
        this.translateService = translateService;
        this.alertCtrl = alertCtrl;
        this.user_id = this.userService.userProfile.user_id;
        this.loadBlockedUsers();
    }
    BlockedUsers.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].PAGES.MY_STUFF_BLOCKED_USERS);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].PAGES.MY_STUFF_BLOCKED_USERS);
    };
    BlockedUsers.prototype.loadBlockedUsers = function () {
        var _this = this;
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.userService.getBlockedUsers(this.user_id).subscribe(function (result) {
            if (result) {
                _this.blockedUsers = result.blocked_users || [];
            }
            _this.loaderService.dismissLoader();
        });
    };
    BlockedUsers.prototype.unBlockUser = function (user, index) {
        var _this = this;
        var params = {
            user_id: this.user_id,
            shared_channel: user.shared_channel,
            connection_status: __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.UNBLOCKED,
            receiver_id: user.user_id,
            receiver_username: user.user_name,
            is_advocate: false
        };
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.chatService.updateConnectionStatus(params).subscribe(function (result) {
            if (result.status === __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                _this.blockedUsers.splice(index, 1);
                _this.loaderService.dismissLoader();
                var alertControl = _this.alertCtrl.create({
                    title: _this.translateService.instant('ERROR_MESSAGES.UNBLOCK_SUCCESS'),
                    buttons: [{
                            text: _this.translateService.instant('MISC.OK')
                        }],
                    enableBackdropDismiss: false,
                    cssClass: 'alert-single'
                });
                alertControl.present();
                _this.notifyBlockedUser(user);
                _this.events.publish(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].APP_EVENTS.REFRESH_CONVERSATION);
            }
            else {
                _this.loaderService.dismissLoader();
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            }
            // Do not dismiss loader as we will be doint in conversation screen 
            // this.loaderService.dismissLoader();
        });
    };
    BlockedUsers.prototype.notifyBlockedUser = function (user) {
        var stateObj = {
            _id: user.shared_channel,
            name: user.first_name,
            connection_status: __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED,
            action: __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].USER_STATES.CONNECTION_STATUS_CHANGED,
            connection_action: __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.UNBLOCKED,
            connection_type: __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.SINGLE
        };
        this.pubNubService.setConnectionStatusChangeState(stateObj, [user.user_id]);
    };
    return BlockedUsers;
}());
BlockedUsers = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-blocked-users',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\settings\blocked-users\blocked-users.html"*/'<!--\n\n  Generated template for the BlockedUsers page.\n\n\n\n  See http://ionicframework.com/docs/v2/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n-->\n\n<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'YOUR_STUFF.SETTINGS.BLOCKED_USERS\' | translate }}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n\n\n\n\n<ion-content silvergrey-background>\n\n\n\n    <div *ngIf="blockedUsers && blockedUsers.length === 0" class="message-no-data-found">\n\n        <p class="no-records">{{\'ERROR_MESSAGES.EMPTY_BLOCKED_LIST\' | translate}}</p>\n\n    </div>\n\n\n\n    <ion-list>\n\n        <button ion-item detail-none class="list-grid-136" *ngFor="let user of blockedUsers let position = index" (click)="unBlockUser(user,position)" >\n\n                <h2 class="text14px-black">{{user.user_name}}</h2>\n\n                <p class="sendmsg">{{ user.timetoken | localizedDate: \'MM/dd/yy\'}}</p>\n\n            <ion-icon item-right class="icons-add-people icon-24"></ion-icon>\n\n        </button>      \n\n    </ion-list>\n\n</ion-content>\n\n'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\settings\blocked-users\blocked-users.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_3__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_4__conversations_chat_service__["a" /* ChatService */], __WEBPACK_IMPORTED_MODULE_6__providers_pubnub_service__["a" /* PubNubService */],
        __WEBPACK_IMPORTED_MODULE_7__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_2__providers_loader_service__["a" /* LoaderService */],
        __WEBPACK_IMPORTED_MODULE_8__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
], BlockedUsers);

//# sourceMappingURL=blocked-users.js.map

/***/ }),

/***/ 479:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TellFeedback; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var TellFeedback = (function () {
    function TellFeedback(navCtrl, userService, loaderService, translateService, analyticsService, navParams, alertCtrl) {
        this.navCtrl = navCtrl;
        this.userService = userService;
        this.loaderService = loaderService;
        this.translateService = translateService;
        this.analyticsService = analyticsService;
        this.navParams = navParams;
        this.alertCtrl = alertCtrl;
        this.feedbackObj = {
            user_id: '',
            message: '',
            first_name: '',
            last_name: '',
            user_email: ''
        };
        var userObj = this.navParams.get('userData');
        // console.log("User", userObj);
        this.feedbackObj.first_name = userObj.profile.first_name;
        this.feedbackObj.last_name = userObj.profile.last_name;
        this.feedbackObj.user_email = userObj.email;
    }
    TellFeedback.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].PAGES.FEEDBACK);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].PAGES.FEEDBACK);
    };
    TellFeedback.prototype.saveFeeedBack = function () {
        var _this = this;
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.REPORTING'));
        this.userService.saveFeedBack(this.feedbackObj).subscribe(function (res) {
            // // console.log('feedback response', res)
            if (res.status !== 'ERROR') {
                _this.loaderService.dismissLoader();
                var alert_1 = _this.alertCtrl.create({
                    title: res.message,
                    buttons: [{
                            text: _this.translateService.instant('CONVERSATIONS.OK'),
                            handler: function () {
                                _this.navCtrl.pop();
                            }
                        }],
                    enableBackdropDismiss: false,
                    cssClass: 'alert-single'
                });
                alert_1.present();
            }
            else {
                _this.loaderService.dismissLoader();
                var alert_2 = _this.alertCtrl.create({
                    title: _this.translateService.instant('ERROR_MESSAGES.ERROR_TITLE'),
                    subTitle: res.message,
                    buttons: [{
                            text: _this.translateService.instant('MISC.OK')
                        }],
                    enableBackdropDismiss: false,
                    cssClass: 'alert-single'
                });
                alert_2.present();
            }
        }, function (error) {
            _this.loaderService.showToaster(error);
            _this.loaderService.dismissLoader();
        });
    };
    return TellFeedback;
}());
TellFeedback = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-tell-feedback',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\tell-feedback\tell-feedback.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'YOUR_STUFF.TELL_FEEDBACK.TITLE\' | translate}}</ion-title>\n\n        <ion-buttons end>\n\n            <button *ngIf="feedbackObj.message && feedbackObj.message.trim().length > 0" (click)="saveFeeedBack()" ion-button clear text-outline-btn>{{\'YOUR_STUFF.TELL_FEEDBACK.SEND_BTN\' | translate}}</button>\n\n        </ion-buttons>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content>\n\n    <ion-list description>\n\n        <ion-item>\n\n            <ion-textarea autocomplete="true" spellcheck="true" autocorrect="true" [(ngModel)]="feedbackObj.message" maxlength="500" placeholder="{{\'YOUR_STUFF.TELL_FEEDBACK.PLACEHOLDER\' | translate}}"></ion-textarea>\n\n        </ion-item>\n\n    </ion-list>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\my-stuff\tell-feedback\tell-feedback.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_2__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_3__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_6__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_5__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
], TellFeedback);

//# sourceMappingURL=tell-feedback.js.map

/***/ }),

/***/ 480:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RequestLoginLink; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_validationService__ = __webpack_require__(186);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__login_link_sent_login_link_sent__ = __webpack_require__(481);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__request_login_error_request_login_error__ = __webpack_require__(482);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var RequestLoginLink = (function () {
    function RequestLoginLink(navCtrl, formBuilder, userService, translateService, analyticsService, loaderService) {
        this.navCtrl = navCtrl;
        this.formBuilder = formBuilder;
        this.userService = userService;
        this.translateService = translateService;
        this.analyticsService = analyticsService;
        this.loaderService = loaderService;
        this.emailAddress = '';
        this.isFormSubmmited = false;
        this.isForgotpasswordApiCalled = false;
        this.requestLogin = formBuilder.group({
            'emailAddress': ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].maxLength(150), __WEBPACK_IMPORTED_MODULE_3__shared_validationService__["a" /* ValidationService */].emailValidator, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].required])]
        });
    }
    RequestLoginLink.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].PAGES.REQUEST_PASSWORD);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_8__shared_config__["a" /* CONSTANTS */].PAGES.REQUEST_PASSWORD);
    };
    RequestLoginLink.prototype.onSendLoginLink = function () {
        var _this = this;
        this.isFormSubmmited = true;
        if (this.requestLogin.valid && !this.isForgotpasswordApiCalled) {
            this.isForgotpasswordApiCalled = true;
            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
            this.userService.forgotpassword(this.emailAddress).subscribe(function (response) {
                _this.isForgotpasswordApiCalled = false;
                _this.loaderService.dismissLoader();
                if (response.status !== "ERROR" && response.status_code === 0) {
                    _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__login_link_sent_login_link_sent__["a" /* LoginLinkSent */], { email: _this.emailAddress });
                }
                else if (response.status_code === 1 || response.status_code === 2) {
                    _this.requestLogin.reset();
                    _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__request_login_error_request_login_error__["a" /* RequestLoginError */], { status_code: response.status_code, error_message: response.message });
                }
            }, function (error) {
                // console.log("ERROR::", error);
                _this.loaderService.dismissLoader();
                _this.loaderService.showToaster(error);
            });
        }
    };
    return RequestLoginLink;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
], RequestLoginLink.prototype, "content", void 0);
RequestLoginLink = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-request-login-link',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\login\request-login-link\request-login-link.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'LOGIN.FORGOT_PASSWORD\' | translate}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content class="dark-grey-background">\n\n    <!-- [keyboardScrollBottom] -->\n\n    <div>\n\n        <form [formGroup]="requestLogin" novalidate>\n\n            <ion-list confirm-email text-align-center>\n\n                <h2 class="text30px-bold-white">\n\n                    {{\'LOGIN.REQUEST_LOG_IN_LINK\' | translate}}\n\n                    <span></span>\n\n                </h2>\n\n                <p>{{\'LOGIN.REQUEST_LOG_IN_LINK_MESSAGE\' | translate}}</p>\n\n                <ion-item>\n\n                    <ion-input id="userEmail" class="input14px-black" formControlName="emailAddress" [(ngModel)]="emailAddress" type="email" placeholder="{{\'LOGIN.EMAIL_ADDRESS\' | translate}}"></ion-input>\n\n                </ion-item>\n\n                <ion-label error-msg *ngIf="!requestLogin.get(\'emailAddress\').valid  && ((requestLogin.get(\'emailAddress\').dirty && requestLogin.get(\'emailAddress\').touched)|| isFormSubmmited)">\n\n                    {{\'LOGIN.VALID_EMAIL\' | translate}} </ion-label>\n\n                <ion-card toolbar-bg>\n\n                    <button ion-button block large round class="button-light-blue" (click)="onSendLoginLink()">{{\'LOGIN.SEND_LOGIN_LINK\' | translate}} </button>\n\n                </ion-card>\n\n            </ion-list>\n\n        </form>\n\n    </div>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\login\request-login-link\request-login-link.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */], __WEBPACK_IMPORTED_MODULE_6__providers_user_service__["a" /* UserService */],
        __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_7__providers_loader_service__["a" /* LoaderService */]])
], RequestLoginLink);

//# sourceMappingURL=request-login-link.js.map

/***/ }),

/***/ 481:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoginLinkSent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__login_login__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_user_service__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var LoginLinkSent = (function () {
    function LoginLinkSent(navCtrl, navParams, analyticsService, userService) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.analyticsService = analyticsService;
        this.userService = userService;
        this.email = this.navParams.get('email');
    }
    LoginLinkSent.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].PAGES.REQUEST_PASSWORD_SUCCESS);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_3__shared_config__["a" /* CONSTANTS */].PAGES.REQUEST_PASSWORD_SUCCESS);
    };
    LoginLinkSent.prototype.onContinue = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__login_login__["a" /* LoginPage */], { loginLinkSentEmail: this.email });
    };
    return LoginLinkSent;
}());
LoginLinkSent = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-login-link-sent',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\login\login-link-sent\login-link-sent.html"*/'<ion-content grey-background padding="true">\n\n <ion-view>\n\n     <ion-card class="message-mob-bg">\n\n        <div class="check-email-icon"><ion-icon class="icons-mail"></ion-icon></div>  	\n\n        <ion-card-content>\n\n            <ion-card-title>{{\'LOGIN.LOGIN_LINK_SENT\' | translate}}</ion-card-title>\n\n            <p class="divider"><span></span></p>\n\n            <p>{{\'LOGIN.FORGOT_PASS_MESSAGE\' | translate}}</p>\n\n        </ion-card-content>\n\n     </ion-card>\n\n         \n\n    <ion-card toolbar-bg >\n\n         <button ion-button block large round class="button-light-blue" (click)="onContinue()">{{\'BUTTON_LABEL.CONTINUE\' | translate}}</button>\n\n    </ion-card>\n\n   \n\n</ion-view>\n\n \n\n</ion-content> '/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\login\login-link-sent\login-link-sent.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_4__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_5__providers_user_service__["a" /* UserService */]])
], LoginLinkSent);

//# sourceMappingURL=login-link-sent.js.map

/***/ }),

/***/ 482:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RequestLoginError; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__base_login__ = __webpack_require__(483);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ngx_translate_core__ = __webpack_require__(8);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var RequestLoginError = (function (_super) {
    __extends(RequestLoginError, _super);
    function RequestLoginError(userService, alertCtrl, events, translateService, analyticsService, loaderService, navCtrl, navParams) {
        var _this = _super.call(this, userService, alertCtrl, events, translateService, loaderService) || this;
        _this.userService = userService;
        _this.alertCtrl = alertCtrl;
        _this.events = events;
        _this.translateService = translateService;
        _this.analyticsService = analyticsService;
        _this.loaderService = loaderService;
        _this.navCtrl = navCtrl;
        _this.navParams = navParams;
        _this.status_code = _this.navParams.get('status_code');
        _this.error_message = _this.navParams.get('error_message');
        return _this;
        //console.log('Hello RequestLoginError Page', this.status_code, this.error_message);
    }
    RequestLoginError.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].PAGES.REQUEST_PASSWORD_ERROR);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].PAGES.REQUEST_PASSWORD_ERROR);
    };
    RequestLoginError.prototype.fixThisIssue = function () {
        this.navCtrl.pop();
    };
    RequestLoginError.prototype.loginWithFacebook = function () {
        this.onFLogin();
    };
    return RequestLoginError;
}(__WEBPACK_IMPORTED_MODULE_2__base_login__["a" /* BaseLoginClass */]));
RequestLoginError = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-request-login-error',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\login\request-login-error\request-login-error.html"*/'<ion-header labelHeader *ngIf="status_code === 2">\n\n  <ion-navbar>\n\n    <ion-title></ion-title>\n\n  </ion-navbar>\n\n</ion-header>\n\n<ion-content grey-background [ngClass]="{\'dark-grey-background fb-login\': status_code === 2}" padding="true">\n\n    <ion-view>\n\n        <ion-card class="message-mob-bg">\n\n            <div class="check-error-icon"><ion-icon class="icons-alert"></ion-icon></div>  	\n\n            <ion-card-content>\n\n                <ion-card-title>{{\'MISC.Oops\' | translate}}</ion-card-title>\n\n                <p class="divider"><span></span></p>\n\n                <p>{{error_message}}</p>                \n\n            </ion-card-content>\n\n        </ion-card>\n\n        <ion-card toolbar-bg >\n\n            <button *ngIf="status_code === 1" ion-button block large round class="button-light-blue" (click)="fixThisIssue()">{{\'BUTTON_LABEL.FIX_ERROR\' | translate}}</button>\n\n            <button *ngIf="status_code === 2" ion-button block large round class="button-contrast-blue" (click)="loginWithFacebook()">{{\'BUTTON_LABEL.LOGIN_FACEBOOK\' | translate}}</button>\n\n        </ion-card>\n\n    </ion-view>\n\n</ion-content>\n\n'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\login\request-login-error\request-login-error.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_7__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_6__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */]])
], RequestLoginError);

//# sourceMappingURL=request-login-error.js.map

/***/ }),

/***/ 483:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BaseLoginClass; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_config__ = __webpack_require__(6);

var BaseLoginClass = (function () {
    function BaseLoginClass(userService, alertCtrl, events, translateService, loaderService) {
        this.userService = userService;
        this.alertCtrl = alertCtrl;
        this.events = events;
        this.translateService = translateService;
        this.loaderService = loaderService;
        this.userService = userService;
    }
    BaseLoginClass.prototype.proceedLogin = function (user, callback) {
        var _this = this;
        var that = this;
        that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        that.userService.login(user).subscribe(function (data) {
            if (data.status !== "ERROR") {
                that.userService.storeUserCredentials(data, function () {
                    that.events.publish('user:login');
                });
            }
            else {
                if (!callback) {
                    that.userService.fbLogout();
                    var alert_1 = that.alertCtrl.create({
                        title: that.translateService.instant('ERROR_MESSAGES.ERROR_TITLE'),
                        message: data.message,
                        buttons: [{
                                text: this.translateService.instant('MISC.OK')
                            }],
                        enableBackdropDismiss: false,
                        cssClass: 'alert-single'
                    });
                    alert_1.present();
                }
                else {
                    callback(data.message);
                }
            }
            that.loaderService.dismissLoader();
        }, function (error) {
            // console.log("ERROR::", error);
            _this.loaderService.dismissLoader();
            _this.loaderService.showToaster(error);
        });
    };
    BaseLoginClass.prototype.onFLogin = function () {
        var _this = this;
        var that = this;
        that.userService.fbLogin().then(function () {
            that.userService.getUserFacebookProfile().then(function (profileData) {
                // console.log('In fbLogin');
                // console.log(JSON.stringify(profileData), "ProfileData IN FBlogin");
                if (!profileData.errorCode) {
                    var userObj = {
                        user_name: profileData.name,
                        email: profileData.email,
                        profile: {
                            profile_pic: __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].FACEBOOk_PROFILE_URL.PREFIX + profileData.id + __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].FACEBOOk_PROFILE_URL.POSTFIX || '',
                            name: profileData.name
                        },
                        authType: 'fb',
                        facebook: profileData.id
                    };
                    // console.log("Outer FBlogin userObj>> ", userObj);
                    that.proceedLogin(userObj);
                }
                else {
                    // console.log('In onFLogin got error', profileData);
                }
            }), function (error) {
                // console.log(" ERROR::", error);
                _this.loaderService.dismissLoader();
                _this.loaderService.showToaster(error);
            };
        }, function (error) {
            // console.log("Facebook ERROR::", error);
            _this.loaderService.dismissLoader();
            _this.loaderService.showToaster(error);
        });
    };
    return BaseLoginClass;
}());

//# sourceMappingURL=base-login.js.map

/***/ }),

/***/ 484:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppInfo; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__sign_up_sign_up__ = __webpack_require__(485);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__login_login__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_analytics_service__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var AppInfo = (function () {
    function AppInfo(navCtrl, analyticsService) {
        this.navCtrl = navCtrl;
        this.analyticsService = analyticsService;
        this.runningSliderConfig = {
            initialSlide: 0
        };
    }
    AppInfo.prototype.ionViewDidEnter = function () {
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].PAGES.APP_ONBOARDING);
    };
    AppInfo.prototype.skipSlides = function () {
        this.slides.slideTo(3, 500);
    };
    AppInfo.prototype.navigatetoNextPage = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__sign_up_sign_up__["a" /* SignUp */]);
    };
    AppInfo.prototype.navigatetoBackPage = function () {
        this.navCtrl.pop();
    };
    AppInfo.prototype.alreadyHaveAccount = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_3__login_login__["a" /* LoginPage */]);
    };
    return AppInfo;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* Slides */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* Slides */])
], AppInfo.prototype, "slides", void 0);
AppInfo = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'app-info',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\get-started\app-info\app-info.html"*/'<ion-content grey-background>\n\n    <ion-slides [options]="runningSliderConfig" pager>\n\n        <ion-slide>\n\n            <ion-toolbar>\n\n                <ion-buttons start>\n\n                    <button ion-button clear text-outline-btn (click)="navigatetoBackPage()">\n\n                        <ion-icon class="icons-back-arrow"></ion-icon>\n\n                    </button>\n\n                </ion-buttons>\n\n                <ion-buttons end>\n\n                    <button ion-button clear text-outline-btn (click)="skipSlides()">{{\'GET_STARTED.ONBOARDING.SKIP\' | translate}}</button>\n\n                </ion-buttons>\n\n            </ion-toolbar>\n\n            <img src="./assets/img/onboarding-feed.png" alt="">\n\n            <div class="circle-icon-108 feed">\n\n                <ion-icon class="icons-feed"></ion-icon>\n\n            </div>\n\n            <div class="caption">\n\n                <h2 class="text30px-bold-white">{{\'GET_STARTED.ONBOARDING.FEED_TITLE\' | translate}}</h2>\n\n                <p class="text15px-normal-white">{{\'GET_STARTED.ONBOARDING.APP_INFO_MESSAGE\' | translate}}</p>\n\n            </div>\n\n        </ion-slide>\n\n\n\n        <ion-slide>\n\n            <ion-toolbar>\n\n                <ion-buttons end>\n\n                    <button ion-button clear text-outline-btn (click)="skipSlides()">{{\'GET_STARTED.ONBOARDING.SKIP\' | translate}}</button>\n\n                </ion-buttons>\n\n            </ion-toolbar>\n\n            <img src="./assets/img/onboarding-conversation.png" alt="">\n\n            <div class="circle-icon-108 conversations">\n\n                <ion-icon class="icons-conversion"></ion-icon>\n\n            </div>\n\n            <div class="caption">\n\n                <h2 class="text30px-bold-white">{{\'GET_STARTED.ONBOARDING.CONV_TITLE\' | translate}}</h2>\n\n                <p class="text15px-normal-white">{{\'GET_STARTED.ONBOARDING.CONV_DESC\' | translate }}</p>\n\n            </div>\n\n        </ion-slide>\n\n\n\n        <ion-slide>\n\n            <ion-toolbar>\n\n                <ion-buttons end>\n\n                    <button ion-button clear text-outline-btn (click)="skipSlides()">{{\'GET_STARTED.ONBOARDING.SKIP\' | translate}}</button>\n\n                </ion-buttons>\n\n            </ion-toolbar>\n\n            <img src="./assets/img/onboarding-aroundyou.png" alt="">\n\n            <div class="circle-icon-108 around-you">\n\n                <ion-icon class="icons-around-me"></ion-icon>\n\n            </div>\n\n            <div class="caption">\n\n                <h2 class="text30px-bold-white">{{\'GET_STARTED.ONBOARDING.AROUND_TITLE\' | translate}}</h2>\n\n                <p class="text15px-normal-white">{{\'GET_STARTED.ONBOARDING.AROUND_DESC\' | translate}}</p>\n\n            </div>\n\n        </ion-slide>\n\n        <ion-slide class="scrollable-height">\n\n            <div class="get-started">\n\n                <div class="caption privacy-msg">\n\n                    <div class="circle-icon-108 privacy-logo">\n\n                        <ion-icon class="icons-privacy"></ion-icon>\n\n                    </div>\n\n                    <h2 class="text30px-bold-white">{{\'GET_STARTED.ONBOARDING.PRIVACY\' | translate}}<span splitter></span></h2>\n\n                    <p class="text15px-normal-white">{{\'GET_STARTED.ONBOARDING.PRIVACY_DESC\' | translate}}</p>\n\n                </div>\n\n                <div class="action-grid">\n\n                    <button ion-button block round class="button-light-blue" (click)="navigatetoNextPage()">{{\'GET_STARTED.TITLE\' | translate}}</button>\n\n                    <p><button ion-button class="button-blue-link" (click)="alreadyHaveAccount()" >{{\'GET_STARTED.ONBOARDING.ALREADY_ACC\' | translate}}</button></p>\n\n                </div>\n\n            </div>\n\n        </ion-slide>\n\n    </ion-slides>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\get-started\app-info\app-info.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_5__providers_analytics_service__["a" /* AnalyticsService */]])
], AppInfo);

//# sourceMappingURL=app-info.js.map

/***/ }),

/***/ 485:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SignUp; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__select_password_select_password__ = __webpack_require__(486);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__login_login__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__shared_validationService__ = __webpack_require__(186);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var SignUp = (function () {
    function SignUp(navCtrl, platform, userService, translateService, analyticsService, loaderService, fb) {
        this.navCtrl = navCtrl;
        this.platform = platform;
        this.userService = userService;
        this.translateService = translateService;
        this.analyticsService = analyticsService;
        this.loaderService = loaderService;
        this.fb = fb;
        this.signupForm = this.fb.group({
            'firstName': ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].maxLength(50), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].required])],
            'lastName': ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].maxLength(50), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].required])],
            'email': ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].maxLength(150), __WEBPACK_IMPORTED_MODULE_8__shared_validationService__["a" /* ValidationService */].emailValidator, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].required])],
            'zipcode': ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].maxLength(10), __WEBPACK_IMPORTED_MODULE_8__shared_validationService__["a" /* ValidationService */].zipcodeValidator, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].required])],
            'privacyAccepted': ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_8__shared_validationService__["a" /* ValidationService */].isTrueValue, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].required])]
        });
        this.signUpModel = {
            first_name: '',
            last_name: '',
            email: '',
            zipcode: null,
            is_terms_checked: false,
            is_privacy_checked: false,
            is_terms_privacy_accepted: false
        };
        this.isSignupFormInValid = true;
        this.isEmailVerified = false;
    }
    SignUp.prototype.ngOnInit = function () {
        var _this = this;
        //console.log('In SignUp ngOnInit');    
        this.signupForm.valueChanges.subscribe(function (data) {
            if (_this.signupForm.invalid !== _this.isSignupFormInValid) {
                _this.isSignupFormInValid = !_this.isSignupFormInValid;
            }
        });
    };
    SignUp.prototype.ionViewDidEnter = function () {
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_7__shared_config__["a" /* CONSTANTS */].PAGES.SIGN_UP);
    };
    SignUp.prototype.openPrivacyNoticeUrl = function () {
        this.signUpModel.is_privacy_checked = true;
        this.openInAppBrowser(__WEBPACK_IMPORTED_MODULE_7__shared_config__["a" /* CONSTANTS */].PRIVACY_NOTICE_URL);
    };
    SignUp.prototype.openTermsOfUseUrl = function () {
        this.signUpModel.is_terms_checked = true;
        this.openInAppBrowser(__WEBPACK_IMPORTED_MODULE_7__shared_config__["a" /* CONSTANTS */].TERM_OF_USE_URL);
    };
    SignUp.prototype.openInAppBrowser = function (url) {
        this.platform.ready().then(function () {
            cordova.InAppBrowser.open(url, "_blank", "location=no");
        });
    };
    SignUp.prototype.privacyAccepted = function () {
        this.signUpModel.is_terms_privacy_accepted = !this.signUpModel.is_terms_privacy_accepted;
    };
    SignUp.prototype.onContinue = function () {
        var _this = this;
        if (this.signupForm.valid && !this.isEmailVerified && !this.isSignupFormInValid) {
            this.isEmailVerified = true;
            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
            this.userService.verifyEmailId(this.signUpModel.email).subscribe(function (response) {
                _this.isEmailVerified = false;
                if (response.status === __WEBPACK_IMPORTED_MODULE_7__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                    if (response.is_exist) {
                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__login_login__["a" /* LoginPage */], { email: _this.signUpModel.email });
                    }
                    else {
                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__select_password_select_password__["a" /* SelectPassword */], { signUpModel: _this.signUpModel });
                    }
                }
                else {
                    _this.loaderService.showToaster(response.message);
                }
                _this.loaderService.dismissLoader();
            });
        }
    };
    SignUp.prototype.navigatetoBackPage = function () {
        this.navCtrl.pop();
    };
    return SignUp;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
], SignUp.prototype, "content", void 0);
SignUp = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-sign-up',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\get-started\sign-up\sign-up.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'SIGN_UP.TITLE\' | translate}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n<!--<ion-content >-->\n\n<!-- #ionContents [activationCodeKeyboard] -->\n\n<ion-content class="dark-grey-background">\n\n    <div>\n\n        <form [formGroup]="signupForm">\n\n            <ion-list class="message-mob-bg">\n\n                <ion-item>\n\n                    <ion-input type="text" autocomplete="off" spellcheck="false" autocorrect="off" class="input14px-black" [(ngModel)]="signUpModel.first_name" formControlName="firstName" placeholder="{{\'SIGN_UP.FIRST_NAME\' | translate}}"></ion-input>\n\n                    <ion-label *ngIf="!signupForm.get(\'firstName\').valid  && (signupForm.get(\'firstName\').dirty && signupForm.get(\'firstName\').touched)">{{\'SIGN_UP.ENTER_FN\' | translate}}</ion-label>\n\n                </ion-item>\n\n                <ion-item>\n\n                    <ion-input type="text" autocomplete="false" spellcheck="false" autocorrect="false" class="input14px-black" [(ngModel)]="signUpModel.last_name" formControlName="lastName" placeholder="{{\'SIGN_UP.LAST_NAME\' | translate}}"></ion-input>\n\n                    <ion-label *ngIf="!signupForm.get(\'lastName\').valid  && (signupForm.get(\'lastName\').dirty && signupForm.get(\'lastName\').touched)">{{\'SIGN_UP.ENTER_LN\' | translate}}</ion-label>\n\n                </ion-item>\n\n                <ion-item>\n\n                    <ion-input type="email" autocomplete="false" spellcheck="false" autocorrect="false" class="input14px-black" [(ngModel)]="signUpModel.email" formControlName="email" placeholder="{{\'SIGN_UP.EMAIL\' | translate}}"></ion-input>\n\n                    <ion-label *ngIf="!signupForm.get(\'email\').valid  && (signupForm.get(\'email\').dirty && signupForm.get(\'email\').touched)">{{\'SIGN_UP.ENTER_EMAIL\' | translate}}</ion-label>\n\n                </ion-item>\n\n                <ion-item>\n\n                    <ion-input type="text" autocomplete="false" spellcheck="false" autocorrect="false" class="input14px-black" [(ngModel)]="signUpModel.zipcode" formControlName="zipcode" placeholder="{{\'SIGN_UP.ZIP_CODE\' | translate}}"></ion-input>\n\n                    <ion-label *ngIf="!signupForm.get(\'zipcode\').valid  && (signupForm.get(\'zipcode\').dirty && signupForm.get(\'zipcode\').touched)">{{\'SIGN_UP.ENTER_ZIP\' | translate}}</ion-label>\n\n                </ion-item>\n\n            </ion-list>\n\n            <div class="disclaimer-text">\n\n                <ion-checkbox [(ngModel)]="signUpModel.is_terms_privacy_accepted" formControlName="privacyAccepted" (click)="privacyAccepted()"></ion-checkbox>\n\n\n\n                <ion-label *ngIf="this.userService.getCurrentLang() !== \'es\'">\n\n                    {{\'SIGN_UP.PRIVACY_MSG\' | translate }} <span tappable (click)="openPrivacyNoticeUrl()">{{\'SIGN_UP.PRIVACY_MSG1\' | translate }}</span> {{\'SIGN_UP.PRIVACY_MSG2\' | translate}} <span tappable (click)="openTermsOfUseUrl()">{{\'SIGN_UP.PRIVACY_MSG3\' | translate}}</span>.\n\n                </ion-label>\n\n                <ion-label *ngIf="this.userService.getCurrentLang() === \'es\'">\n\n                    {{\'SIGN_UP.PRIVACY_MSG\' | translate }} <span tappable (click)="openTermsOfUseUrl()">{{\'SIGN_UP.PRIVACY_MSG1\' | translate }}</span> {{\'SIGN_UP.PRIVACY_MSG2\' | translate}} <span tappable (click)="openPrivacyNoticeUrl()">{{\'SIGN_UP.PRIVACY_MSG3\' | translate}}</span>                    {{\'SIGN_UP.PRIVACY_MSG5\' | translate}}\n\n                </ion-label>\n\n            </div>\n\n            <p *ngIf="!signupForm.get(\'privacyAccepted\').valid  && (signupForm.get(\'privacyAccepted\').dirty)" class="error-label">{{\'SIGN_UP.PRIVACY_MSG4\' | translate }}</p>\n\n        </form>\n\n    </div>\n\n</ion-content>\n\n<ion-footer [keyboardAttach]="content" footer-full>\n\n    <ion-toolbar>\n\n        <ion-button ion-button block [ngClass]="{\'button-disable\': isSignupFormInValid}" class="button-square-blue" (click)="onContinue()">{{\'BUTTON_LABEL.CONTINUE\' | translate }}</ion-button>\n\n    </ion-toolbar>\n\n</ion-footer>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\get-started\sign-up\sign-up.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Platform */], __WEBPACK_IMPORTED_MODULE_5__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_10__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_6__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */]])
], SignUp);

//# sourceMappingURL=sign-up.js.map

/***/ }),

/***/ 486:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SelectPassword; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__choose_password_choose_password__ = __webpack_require__(487);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__login_login__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var SelectPassword = (function () {
    function SelectPassword(navCtrl, userService, events, translateService, analyticsService, navParams, loaderService) {
        this.navCtrl = navCtrl;
        this.userService = userService;
        this.events = events;
        this.translateService = translateService;
        this.analyticsService = analyticsService;
        this.navParams = navParams;
        this.loaderService = loaderService;
        this.signUpModel = this.navParams.get('signUpModel');
        //console.log('In SelectPassword params:userId', this.signUpModel);
    }
    SelectPassword.prototype.ionViewDidEnter = function () {
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].PAGES.SELECT_PASSWORD);
    };
    SelectPassword.prototype.navigateToChoosePassword = function () {
        if (this.signUpModel) {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__choose_password_choose_password__["a" /* ChoosePassword */], { signUpModel: this.signUpModel });
        }
    };
    SelectPassword.prototype.navigatetoGetStartedPage = function () {
        this.navCtrl.remove((this.navCtrl.length() - 1), 1, { animate: false, progressAnimation: false }).then(function () {
        });
    };
    SelectPassword.prototype.navigateToSignInPage = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_3__login_login__["a" /* LoginPage */]);
    };
    SelectPassword.prototype.onFLogin = function () {
        var that = this;
        that.userService.fbLogin().then(function () {
            that.userService.getUserFacebookProfile().then(function (profileData) {
                if (!profileData.errorCode) {
                    that.signUpModel['facebook'] = profileData.id;
                    that.signUpModel['profile_pic'] = __WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].FACEBOOk_PROFILE_URL.PREFIX + profileData.id + __WEBPACK_IMPORTED_MODULE_6__shared_config__["a" /* CONSTANTS */].FACEBOOk_PROFILE_URL.POSTFIX || '';
                    that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
                    that.userService.signup(that.signUpModel).subscribe(function (data) {
                        if (data.status !== "ERROR") {
                            that.userService.storeUserCredentials(data, function () {
                                that.events.publish('user:signup');
                                that.loaderService.dismissLoader();
                            });
                        }
                        else {
                            that.signUpModel['facebook'] = '';
                            that.signUpModel['profile_pic'] = '';
                            that.userService.fbLogout();
                            that.loaderService.showToaster(data.message);
                            that.loaderService.dismissLoader();
                        }
                    }, function (error) {
                        that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                        that.loaderService.dismissLoader();
                    });
                }
            }, function (error) {
                that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            });
        }, function (error) {
            that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
        });
    };
    return SelectPassword;
}());
SelectPassword = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-select-password',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\get-started\select-password\select-password.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'SIGN_UP.SELECT_PASSWORD.COMPLETE_SIGN\' | translate}}</ion-title>\n\n    </ion-navbar> \n\n</ion-header>\n\n<ion-content pwdMsg class="dark-grey-background">\n\n    <ion-card class="selectpwd" block select-pwd-button>\n\n        <div class="">\n\n            <ion-card-header text-center>\n\n                {{\'SIGN_UP.WELCOME\' | translate }}<br>{{\'SIGN_UP.WELCOME_1\' | translate }}\n\n            </ion-card-header>\n\n            <span class="divider"></span>\n\n            <ion-card-content text-center>\n\n                {{\'SIGN_UP.MESSAGE\' | translate }}\n\n            </ion-card-content>\n\n        </div>\n\n        <ion-toolbar position="bottom" class="select-btm-btn">\n\n            <ion-button ion-button block round class="button-light-blue" (click)="navigateToChoosePassword()">\n\n            {{\'SIGN_UP.CHOOSE_PASSWORD\' | translate}} </ion-button>\n\n            <ion-button (click)="onFLogin()" ion-button block round class="button-contrast-blue">\n\n                {{\'LOGIN.LOGIN_WITH_FB_BTN\' | translate}} </ion-button>\n\n        </ion-toolbar>\n\n    </ion-card>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\get-started\select-password\select-password.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_4__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_8__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_7__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_5__providers_loader_service__["a" /* LoaderService */]])
], SelectPassword);

//# sourceMappingURL=select-password.js.map

/***/ }),

/***/ 487:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChoosePassword; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var ChoosePassword = (function () {
    function ChoosePassword(navCtrl, userService, events, translateService, analyticsService, params, loaderService) {
        this.navCtrl = navCtrl;
        this.userService = userService;
        this.events = events;
        this.translateService = translateService;
        this.analyticsService = analyticsService;
        this.params = params;
        this.loaderService = loaderService;
        this.isPasswordType = false;
        this.isFormSubmmited = false;
        this.password = '';
        this.strongRegex = new RegExp("^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*])(?=.{8,100})");
        this.mediumRegex = new RegExp("^(((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]))((?=.*[a-z]))((?=.*[A-Z]))(?=.*[0-9]))(?=.{8,100})");
        this.signUpModel = this.params.get('signUpModel');
        this.signUpModel['password'] = '';
    }
    ChoosePassword.prototype.ionViewDidLoad = function () {
        //console.log("In ionViewDidLoad userObj", this.signUpModel);
    };
    ChoosePassword.prototype.ionViewDidEnter = function () {
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].PAGES.CHOOSE_PASSWORD);
    };
    ChoosePassword.prototype.onLoginToRezility = function () {
        var that = this;
        that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        if (!that.isFormSubmmited) {
            that.isFormSubmmited = true;
            that.userService.signup(this.signUpModel, false).subscribe(function (data) {
                that.isFormSubmmited = false;
                if (data.status !== "ERROR") {
                    that.userService.storeUserCredentials(data, function () {
                        that.events.publish('user:signup');
                    });
                }
                else {
                    that.loaderService.showToaster(data.message);
                    that.loaderService.dismissLoader();
                }
            }, function (error) {
                that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                that.loaderService.dismissLoader();
            });
        }
    };
    ChoosePassword.prototype.analyzePasswordStrength = function (value) {
        if (value === '') {
            this.passwordstrength = 'weak';
        }
        else if (this.strongRegex.test(value)) {
            this.passwordstrength = 'strong';
        }
        else if (this.mediumRegex.test(value)) {
            this.passwordstrength = 'strong';
        }
        else {
            this.passwordstrength = 'weak';
        }
    };
    ChoosePassword.prototype.onShowPassword = function () {
        this.isPasswordType = !this.isPasswordType;
    };
    return ChoosePassword;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
], ChoosePassword.prototype, "content", void 0);
ChoosePassword = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-choose-password',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\get-started\select-password\choose-password\choose-password.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>\n\n            {{\'SIGN_UP.CREATE_PASSWORD.TITLE\' | translate}}\n\n        </ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content changeWeak-password [ngClass]="{\'changeWeak-password\':passwordstrength==\'weak\', \'changeStrong-password\':passwordstrength==\'strong\'}">\n\n    <!-- [KeyboardGetstarted] -->\n\n    <ion-card change-pwd>\n\n        <ion-card-content>\n\n            <ion-card-title *ngIf="passwordstrength !==\'strong\' ">\n\n                {{\'SIGN_UP.CREATE_PASSWORD.PASSWORD_STRENGTH_LEVEL1\' | translate}}\n\n                <p *ngIf="passwordstrength !==\'strong\' ">{{\'SIGN_UP.CREATE_PASSWORD.PASSWORD_STRENGTH_LEVEL2\' | translate}} </p>\n\n            </ion-card-title>\n\n\n\n            <ion-card-title *ngIf="passwordstrength ===\'strong\' ">\n\n                {{\'SIGN_UP.CREATE_PASSWORD.PASSWORD_STRENGTH_LEVEL3\' | translate}}\n\n                <p *ngIf="passwordstrength ===\'strong\' ">{{\'SIGN_UP.CREATE_PASSWORD.PASSWORD_STRENGTH_LEVEL4\' | translate}} </p>\n\n            </ion-card-title>\n\n            <div class="relative">\n\n                <ion-list class="pwd-field">\n\n                    <ion-item>\n\n                        <ion-input *ngIf="!isPasswordType" text-align-center [ngClass]="{\'input-cover\':isPasswordType === false}" [(ngModel)]="signUpModel.password" (keyup)="analyzePasswordStrength(signUpModel.password)" type="password" maxlength=100></ion-input>\n\n                        <ion-input *ngIf="isPasswordType" text-align-center [ngClass]="{\'input-cover\':isPasswordType === false}" [(ngModel)]="signUpModel.password" (keyup)="analyzePasswordStrength(signUpModel.password)" type="text" maxlength=100></ion-input>\n\n                    </ion-item>\n\n                </ion-list>\n\n                <ion-icon class="icons-preview" (click)="onShowPassword()"></ion-icon>\n\n            </div>\n\n        </ion-card-content>\n\n    </ion-card>\n\n</ion-content>\n\n<ion-footer [keyboardAttach]="content" footer-full>\n\n    <ion-toolbar>\n\n        <div>\n\n            <button ion-button block class="button-square-blue" [ngClass]="{\'button-disable\': passwordstrength !==\'strong\'}" (click)="onLoginToRezility()">{{\'SIGN_UP.CREATE_PASSWORD.LOGIN_INTO_BEHOME\' | translate}} </button>\n\n        </div>\n\n    </ion-toolbar>\n\n</ion-footer>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\get-started\select-password\choose-password\choose-password.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_2__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_6__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_5__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_loader_service__["a" /* LoaderService */]])
], ChoosePassword);

//# sourceMappingURL=choose-password.js.map

/***/ }),

/***/ 488:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__ = __webpack_require__(489);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__app_module__ = __webpack_require__(493);


Object(__WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__["a" /* platformBrowserDynamic */])().bootstrapModule(__WEBPACK_IMPORTED_MODULE_1__app_module__["a" /* AppModule */]);
//# sourceMappingURL=main.js.map

/***/ }),

/***/ 493:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppModule; });
/* unused harmony export httpServiceHelperFactory */
/* unused harmony export createTranslateLoader */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngx_translate_http_loader__ = __webpack_require__(533);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_http__ = __webpack_require__(162);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_storage__ = __webpack_require__(289);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_platform_browser__ = __webpack_require__(58);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_toast__ = __webpack_require__(290);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_splash_screen__ = __webpack_require__(293);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_status_bar__ = __webpack_require__(294);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_native_push__ = __webpack_require__(295);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__ionic_native_keyboard__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__ionic_native_deeplinks__ = __webpack_require__(296);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__ionic_native_network__ = __webpack_require__(165);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__ionic_native_transfer__ = __webpack_require__(103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__ionic_native_media_capture__ = __webpack_require__(298);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__ionic_native_facebook__ = __webpack_require__(299);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__ionic_native_crop__ = __webpack_require__(166);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__ionic_native_camera__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__ionic_native_in_app_browser__ = __webpack_require__(300);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__ionic_native_call_number__ = __webpack_require__(167);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__ionic_native_google_analytics__ = __webpack_require__(301);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__ionic_native_date_picker__ = __webpack_require__(302);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__app_component__ = __webpack_require__(544);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__pages_home_tabs_home_tabs__ = __webpack_require__(304);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__pages_activity_activity_feed_module__ = __webpack_require__(833);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__pages_aroundme_aroundme_module__ = __webpack_require__(839);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__pages_my_stuff_my_stuff_module__ = __webpack_require__(842);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__pages_conversations_conversations_module__ = __webpack_require__(843);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__pages_login_login_module__ = __webpack_require__(844);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__pages_get_started_get_started_module__ = __webpack_require__(845);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__pages_service_request_service_request_module__ = __webpack_require__(846);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__providers_http_service__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__providers_storage_service__ = __webpack_require__(847);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__directives_keyboard_tab_handler_directive__ = __webpack_require__(848);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__ionic_native_social_sharing__ = __webpack_require__(461);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__ionic_native_text_to_speech__ = __webpack_require__(337);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__ionic_native_device__ = __webpack_require__(303);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};










































var AppModule = (function () {
    function AppModule() {
    }
    return AppModule;
}());
AppModule = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["L" /* NgModule */])({
        declarations: [
            __WEBPACK_IMPORTED_MODULE_23__app_component__["a" /* RezApp */],
            __WEBPACK_IMPORTED_MODULE_24__pages_home_tabs_home_tabs__["a" /* HomeTabs */],
            __WEBPACK_IMPORTED_MODULE_38__directives_keyboard_tab_handler_directive__["a" /* KeyboardTabHandler */],
        ],
        imports: [
            __WEBPACK_IMPORTED_MODULE_6__angular_platform_browser__["a" /* BrowserModule */],
            __WEBPACK_IMPORTED_MODULE_4__angular_http__["d" /* HttpModule */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["f" /* IonicModule */].forRoot(__WEBPACK_IMPORTED_MODULE_23__app_component__["a" /* RezApp */], {
                tabsPlacement: 'bottom',
                tabsHideOnSubPages: 'true',
                activator: "ripple",
                swipeBackEnabled: "false"
            }),
            __WEBPACK_IMPORTED_MODULE_5__ionic_storage__["a" /* IonicStorageModule */].forRoot(),
            __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__["b" /* TranslateModule */].forRoot({
                loader: {
                    provide: __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__["a" /* TranslateLoader */],
                    useFactory: (createTranslateLoader),
                    deps: [__WEBPACK_IMPORTED_MODULE_4__angular_http__["c" /* Http */]]
                }
            }),
            __WEBPACK_IMPORTED_MODULE_25__pages_activity_activity_feed_module__["a" /* ActivityFeedModule */],
            __WEBPACK_IMPORTED_MODULE_26__pages_aroundme_aroundme_module__["a" /* AroundMeModule */],
            __WEBPACK_IMPORTED_MODULE_27__pages_my_stuff_my_stuff_module__["a" /* MyStuffModule */],
            __WEBPACK_IMPORTED_MODULE_28__pages_conversations_conversations_module__["a" /* ConversationModule */],
            __WEBPACK_IMPORTED_MODULE_29__pages_login_login_module__["a" /* LoginModule */],
            __WEBPACK_IMPORTED_MODULE_30__pages_get_started_get_started_module__["a" /* GetStartedModule */],
            __WEBPACK_IMPORTED_MODULE_31__pages_service_request_service_request_module__["a" /* ServiceRequestModule */]
        ],
        bootstrap: [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["e" /* IonicApp */]],
        entryComponents: [
            __WEBPACK_IMPORTED_MODULE_23__app_component__["a" /* RezApp */],
            __WEBPACK_IMPORTED_MODULE_24__pages_home_tabs_home_tabs__["a" /* HomeTabs */]
        ],
        providers: [{
                provide: __WEBPACK_IMPORTED_MODULE_32__providers_http_service__["a" /* HttpService */],
                useFactory: httpServiceHelperFactory,
                deps: [__WEBPACK_IMPORTED_MODULE_4__angular_http__["f" /* XHRBackend */], __WEBPACK_IMPORTED_MODULE_4__angular_http__["e" /* RequestOptions */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Platform */]]
            }, __WEBPACK_IMPORTED_MODULE_7__ionic_native_toast__["a" /* Toast */], __WEBPACK_IMPORTED_MODULE_8__ionic_native_splash_screen__["a" /* SplashScreen */], __WEBPACK_IMPORTED_MODULE_9__ionic_native_status_bar__["a" /* StatusBar */], __WEBPACK_IMPORTED_MODULE_12__ionic_native_deeplinks__["a" /* Deeplinks */], __WEBPACK_IMPORTED_MODULE_13__ionic_native_network__["a" /* Network */],
            __WEBPACK_IMPORTED_MODULE_11__ionic_native_keyboard__["a" /* Keyboard */], __WEBPACK_IMPORTED_MODULE_18__ionic_native_camera__["a" /* Camera */], __WEBPACK_IMPORTED_MODULE_14__ionic_native_transfer__["a" /* Transfer */], __WEBPACK_IMPORTED_MODULE_15__ionic_native_media_capture__["a" /* MediaCapture */], __WEBPACK_IMPORTED_MODULE_21__ionic_native_google_analytics__["a" /* GoogleAnalytics */], __WEBPACK_IMPORTED_MODULE_22__ionic_native_date_picker__["a" /* DatePicker */],
            __WEBPACK_IMPORTED_MODULE_10__ionic_native_push__["a" /* Push */], __WEBPACK_IMPORTED_MODULE_16__ionic_native_facebook__["a" /* Facebook */], __WEBPACK_IMPORTED_MODULE_17__ionic_native_crop__["a" /* Crop */], __WEBPACK_IMPORTED_MODULE_19__ionic_native_in_app_browser__["a" /* InAppBrowser */], __WEBPACK_IMPORTED_MODULE_20__ionic_native_call_number__["a" /* CallNumber */], __WEBPACK_IMPORTED_MODULE_39__ionic_native_social_sharing__["a" /* SocialSharing */], __WEBPACK_IMPORTED_MODULE_40__ionic_native_text_to_speech__["a" /* TextToSpeech */], __WEBPACK_IMPORTED_MODULE_41__ionic_native_device__["a" /* Device */],
            __WEBPACK_IMPORTED_MODULE_37__providers_pubnub_service__["a" /* PubNubService */], __WEBPACK_IMPORTED_MODULE_36__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_35__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_34__providers_storage_service__["a" /* StorageService */], __WEBPACK_IMPORTED_MODULE_33__providers_loader_service__["a" /* LoaderService */]
        ],
        schemas: [__WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* CUSTOM_ELEMENTS_SCHEMA */]]
    })
], AppModule);

function httpServiceHelperFactory(xhrBackend, requestOptions, platform, translateService) {
    return new __WEBPACK_IMPORTED_MODULE_32__providers_http_service__["a" /* HttpService */](xhrBackend, requestOptions, translateService);
}
function createTranslateLoader(http) {
    return new __WEBPACK_IMPORTED_MODULE_3__ngx_translate_http_loader__["a" /* TranslateHttpLoader */](http, './assets/i18n/', '.json');
}
//# sourceMappingURL=app.module.js.map

/***/ }),

/***/ 53:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HttpService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(162);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_environment__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_Rx__ = __webpack_require__(545);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_Rx___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_Rx__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ngx_translate_core__ = __webpack_require__(8);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





//import { LoaderService } from "./loader-service";


var HttpService = (function (_super) {
    __extends(HttpService, _super);
    function HttpService(backend, defaultOptions, translateService) {
        var _this = _super.call(this, backend, defaultOptions) || this;
        _this.translateService = translateService;
        _this.online = true;
        _this.defaultRequestParams = {
            app_id: __WEBPACK_IMPORTED_MODULE_2__shared_config__["a" /* CONSTANTS */].APP_ID,
            app_version: __WEBPACK_IMPORTED_MODULE_3__shared_environment__["a" /* ENVIRONMENT */].APP_VERSION,
            device_id: __WEBPACK_IMPORTED_MODULE_2__shared_config__["a" /* CONSTANTS */].DEVICE_ID,
            device_type: null,
            sys_user_id: null,
            sys_user_type: null
        };
        return _this;
    }
    HttpService.prototype.isOnline = function () {
        return this.online;
    };
    /**
     * Performs any type of http request.
     * @param url
     * @param options
     * @returns {Observable<Response>}
     */
    HttpService.prototype.request = function (url, options) {
        return _super.prototype.request.call(this, url, options);
    };
    /**
     * Performs a request with `get` http method.
     * @param url
     * @param options
     * @returns {Observable<>}
     */
    HttpService.prototype.get = function (url, options) {
        var _this = this;
        if (this.requestInterceptor()) {
            return _super.prototype.get.call(this, this.getFullUrl(url), this.requestOptions(options))
                .timeout(__WEBPACK_IMPORTED_MODULE_2__shared_config__["a" /* CONSTANTS */].NETWORK_TIMEOUT)
                .catch(this.onCatch)
                .do(function (res) {
                _this.onSubscribeSuccess(res);
            }, function (error) {
                _this.onSubscribeError(error);
            })
                .finally(function () {
                _this.onFinally();
            });
        }
        else {
            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].throw('Network not Connected');
        }
    };
    HttpService.prototype.getLocal = function (url, options) {
        return _super.prototype.get.call(this, url, options);
    };
    /**
     * Performs a request with `post` http method.
     * @param url
     * @param body
     * @param options
     * @returns {Observable<>}
     */
    HttpService.prototype.post = function (url, body, options) {
        var _this = this;
        if (this.requestInterceptor()) {
            Object.assign(body, this.defaultRequestParams);
            return _super.prototype.post.call(this, this.getFullUrl(url), body, this.requestOptions(options))
                .timeout(__WEBPACK_IMPORTED_MODULE_2__shared_config__["a" /* CONSTANTS */].NETWORK_TIMEOUT)
                .catch(this.onCatch)
                .do(function (res) {
                _this.onSubscribeSuccess(res);
            }, function (error) {
                _this.onSubscribeError(error);
            })
                .finally(function () {
                _this.onFinally();
            });
        }
        else {
            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].throw(this.translateService.instant('ERROR_MESSAGES.NO_NETWORK'));
        }
    };
    /**
     * Performs a request with `put` http method.
     * @param url
     * @param body
     * @param options
     * @returns {Observable<>}
     */
    HttpService.prototype.put = function (url, body, options) {
        var _this = this;
        this.requestInterceptor();
        Object.assign(body, this.defaultRequestParams);
        return _super.prototype.put.call(this, this.getFullUrl(url), body, this.requestOptions(options))
            .timeout(__WEBPACK_IMPORTED_MODULE_2__shared_config__["a" /* CONSTANTS */].NETWORK_TIMEOUT)
            .catch(this.onCatch)
            .do(function (res) {
            _this.onSubscribeSuccess(res);
        }, function (error) {
            _this.onSubscribeError(error);
        })
            .finally(function () {
            _this.onFinally();
        });
    };
    /**
     * Performs a request with `delete` http method.
     * @param url
     * @param options
     * @returns {Observable<>}
     */
    HttpService.prototype.delete = function (url, options) {
        var _this = this;
        this.requestInterceptor();
        return _super.prototype.delete.call(this, this.getFullUrl(url), this.requestOptions(options))
            .timeout(__WEBPACK_IMPORTED_MODULE_2__shared_config__["a" /* CONSTANTS */].NETWORK_TIMEOUT)
            .catch(this.onCatch)
            .do(function (res) {
            _this.onSubscribeSuccess(res);
        }, function (error) {
            _this.onSubscribeError(error);
        })
            .finally(function () {
            _this.onFinally();
        });
    };
    /**
     * Request options.
     * @param options
     * @returns {RequestOptionsArgs}
     */
    HttpService.prototype.requestOptions = function (options) {
        if (options == null) {
            options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["e" /* RequestOptions */]();
        }
        if (options.headers == null) {
            options.headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
                'Content-Type': 'application/json',
                'Authorization': 'Bearer ' + this.token,
                'Accept-Language': this.userLangHeader,
                'accept-version': this.defaultRequestParams.app_version
            });
        }
        return options;
    };
    /**
     * Build API url.
     * @param url
     * @returns {string}
     */
    HttpService.prototype.getFullUrl = function (url) {
        // return full URL to API here
        return url;
    };
    /**
     * Request interceptor.
     */
    HttpService.prototype.requestInterceptor = function () {
        if (this.online) {
            // console.log("Network Connected");
            return true;
        }
        else {
            // console.log("Network Disconnected");
            return false;
        }
    };
    /**
     * Response interceptor.
     */
    HttpService.prototype.responseInterceptor = function () {
        //// console.log('In responseInterceptor');
        // this.loaderService.hidePreloader();
    };
    /**
     * Error handler.
     * @param error
     * @param caught
     * @returns {ErrorObservable}
     */
    HttpService.prototype.onCatch = function (error, caught) {
        return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__["Observable"].throw(error);
    };
    /**
     * onSubscribeSuccess
     * @param res
     */
    HttpService.prototype.onSubscribeSuccess = function (res) {
        // // console.log('In onSubscribeSuccess', res);
    };
    /**
     * onSubscribeError
     * @param error
     */
    HttpService.prototype.onSubscribeError = function (error) {
        //  // console.log('In onSubscribeError', error);
    };
    /**
     * onFinally
     */
    HttpService.prototype.onFinally = function () {
        this.responseInterceptor();
    };
    return HttpService;
}(__WEBPACK_IMPORTED_MODULE_1__angular_http__["c" /* Http */]));
HttpService = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* Injectable */])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* ConnectionBackend */], __WEBPACK_IMPORTED_MODULE_1__angular_http__["e" /* RequestOptions */], __WEBPACK_IMPORTED_MODULE_6__ngx_translate_core__["c" /* TranslateService */]])
], HttpService);

//# sourceMappingURL=http-service.js.map

/***/ }),

/***/ 54:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChatBox; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_media_capture__ = __webpack_require__(298);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ionic_native_transfer__ = __webpack_require__(103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_camera__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_forms__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_debounceTime__ = __webpack_require__(315);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_debounceTime___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_debounceTime__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__conversations_conversations__ = __webpack_require__(110);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__base_chat_box__ = __webpack_require__(829);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__conversation_setting_conversation_setting__ = __webpack_require__(459);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__show_image_show_image__ = __webpack_require__(460);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__shared_environment__ = __webpack_require__(34);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



















var ChatBox = (function (_super) {
    __extends(ChatBox, _super);
    function ChatBox(pubNubService, navCtrl, userService, navParams, events, element, translateService, chatService, actionSheetCtrl, platform, analyticsService, loaderService, transfer, camera, mediaCapture) {
        var _this = _super.call(this, pubNubService, userService, chatService, loaderService, translateService, events, element) || this;
        _this.pubNubService = pubNubService;
        _this.navCtrl = navCtrl;
        _this.userService = userService;
        _this.navParams = navParams;
        _this.events = events;
        _this.translateService = translateService;
        _this.chatService = chatService;
        _this.actionSheetCtrl = actionSheetCtrl;
        _this.platform = platform;
        _this.analyticsService = analyticsService;
        _this.loaderService = loaderService;
        _this.transfer = transfer;
        _this.camera = camera;
        _this.mediaCapture = mediaCapture;
        _this.writeMessage = new __WEBPACK_IMPORTED_MODULE_5__angular_forms__["b" /* FormControl */]();
        _this.groupType = __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP;
        _this.systemSenderId = "Rezility";
        _this.connectionStatus = __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS;
        _this.placeholderIamges = __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].PLACEHOLDER_IMAGES;
        _this.isSettingsDisabled = false;
        _this.messageContentType = __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].MESSAGE_CONTENT_TYPE_ID;
        _this.selectedUser = _this.navParams.get('user');
        _this.mergeConversationExtraData(_this.selectedUser.shared_channel);
        _this.resetMessageModel();
        return _this;
    }
    ChatBox.prototype.ionViewDidLoad = function () {
        //console.log("Chat-Box - ionViewDidLoad", this.selectedUser);
        this.pubNubService.setConversationLastState(this.selectedUser.shared_channel, 0, this.selectedUser.timetoken);
        if (this.selectedUser && this.selectedUser.type !== __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP) {
            this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].PAGES.CHAT_BOX, this.selectedUser.shared_channel);
            var contactObj = {
                user_id: this.selectedUser.receiver_id,
                user_name: this.selectedUser.user_name,
                profile_pic: this.selectedUser.profile_pic
            };
            this.setContactIdDetailMap([contactObj]);
            //this.initTypingDetection();
            if (this.selectedUser && this.selectedUser.shared_channel
                && (this.selectedUser.connection_status === __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED || this.selectedUser.connection_status === __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED_BLOCKED)) {
                this.initChatBox();
            }
            else if (this.selectedUser.connection_status === __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.INVITED) {
            }
            else if (this.selectedUser.connection_status === __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.INVITATION_RECEIVED) {
                this.selectedUser.connection_status = __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED;
                this.initChatBox();
            }
        }
        else {
            this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].PAGES.GROUP_CHAT, this.selectedUser.shared_channel);
            this.setContactIdDetailMap(this.selectedUser.members);
            this.initChatBox();
        }
    };
    ChatBox.prototype.ionViewWillLeave = function () {
        if (this.selectedUser && this.selectedUser.type === undefined || this.selectedUser.type != __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP) {
            this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].PAGES.CHAT_BOX, "");
        }
        else {
            this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].PAGES.GROUP_CHAT, "");
        }
        // console.log("Chat-Box - Looks like I'm about to leave :(");
    };
    ChatBox.prototype.ionViewWillUnload = function () {
        // console.log("Chat-box- Looks like I'm about to ionViewWillUnload :(");
        this.pubNubService.historyEventEmitter = new __WEBPACK_IMPORTED_MODULE_4__angular_core__["w" /* EventEmitter */]();
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].APP_EVENTS.NEW_MESSAGE);
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].APP_EVENTS.KEYBOARD);
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].APP_EVENTS.CHAT_BOX_PRESENCE_EVENT);
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].APP_EVENTS.CLOSE_IMAGE_PREVIEW);
        this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].APP_EVENTS.CHAT_BOX_CONNECTION_STATUS_CHANGED);
    };
    ChatBox.prototype.ionViewDidEnter = function () {
        // console.log("Chat-Box - ionViewDidEnter");
        this.content.resize();
        var that = this;
        that.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].PAGES.CHAT_BOX);
        if ((this.selectedUser.connection_status === __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.INVITED &&
            this.selectedUser.type !== __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP) ||
            this.selectedUser.group_type === __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].USER_TYPE.SERVICE_PROVIDER ||
            this.selectedUser.group_type === __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].USER_TYPE.HOUSING_PROVIDER) {
            this.isSettingsDisabled = true;
        }
        // console.log("Chat-Box - Looks like I'm about to enter :(");
    };
    ChatBox.prototype.initChatBox = function () {
        var _this = this;
        this.initCloseImagePreview();
        this.initNewMesssageEvent();
        this.initPresenceEvent();
        this.initKeyboardEvent();
        this.initConnectionStatusEvent();
        this.pageState = null;
        this.loadSelectedUserHistory(this.selectedUser.shared_channel, function (error, isAllMessageLoaded) {
            if (isAllMessageLoaded === void 0) { isAllMessageLoaded = true; }
            if (!error) {
                _this.scrollToBottom();
                _this.chatBoxInfiniteScrollEnabled = !isAllMessageLoaded;
            }
            else {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            }
        });
    };
    ChatBox.prototype.mergeConversationExtraData = function (shared_channel) {
        var _this = this;
        this.chatService.getConversationExtraData({ shared_channel: shared_channel }).subscribe(function (response) {
            if (response.status === __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                Object.assign(_this.selectedUser, { languages: response.languages });
            }
        });
    };
    ChatBox.prototype.initTypingDetection = function () {
        var that = this, instance = null;
        that.writeMessage.valueChanges.debounceTime(400).subscribe(function (writeMessage) {
            // When to start Typing ?, Content is not empty and was not typing before
            if (that.messageModel.trim().length != 0 && !that.pubNubService.isCurrentUserTyping) {
                that.pubNubService.startTyping(that.selectedUser.receiver_id);
                stopTypingScheduler();
                //// console.log("Typing 1 check")
            }
            else if (that.messageModel.trim().length != 0 && that.pubNubService.isCurrentUserTyping) {
                stopTypingScheduler();
                //// console.log("Typing 2 check")
            }
            else if (that.pubNubService.isCurrentUserTyping && that.messageModel.trim().length == 0) {
                stopTypingScheduler();
                //// console.log("Typing 3 check")
            }
            else {
                // console.log("Typing 4 check")
            }
        });
        function stopTypingScheduler() {
            if (instance != null) {
                clearTimeout(instance);
            }
            instance = setTimeout(function () {
                that.pubNubService.stopTyping(that.selectedUser.receiver_id);
            }, 5000);
        }
    };
    ChatBox.prototype.initKeyboardEvent = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].APP_EVENTS.KEYBOARD, function () {
            // console.log('ChatBox In Event CONSTANTS.APP_EVENTS.KEYBOARD subscribe');
            _this.scrollToBottom();
        });
    };
    ChatBox.prototype.initCloseImagePreview = function () {
        var _this = this;
        // console.log('In initCloseImagePreview');
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].APP_EVENTS.CLOSE_IMAGE_PREVIEW, function (data) {
            _this.onClosePresentShowImageModal(data);
        });
    };
    ChatBox.prototype.initNewMesssageEvent = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].APP_EVENTS.NEW_MESSAGE, function (message) {
            // console.log('ChatBox In Event APP_CONFIG.APP_EVENTS.NEW_MESSAGE subscribe', message);
            //let page: string = this.userService.getCurrentPage().currentPage;
            // If user is sending message on group then avoid duplicate message      
            var shared_channel = message.shared_channel || message.shared_channel_id;
            if (_this.selectedUser.shared_channel == shared_channel) {
                _this.messages.push(_this.createMessage(message));
                _this.scrollToBottom();
            }
        });
    };
    ChatBox.prototype.initPresenceEvent = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].APP_EVENTS.CHAT_BOX_PRESENCE_EVENT, function (presence) {
            //let presenceObj = presence[0];
            console.log('In Chat box subscribePresenceEvent[ action - ' + presence.action + ']', presence.channel, '-', _this.userData.user_id);
            if (_this.selectedUser !== undefined) {
                if (presence.uuid === _this.selectedUser.user_id && presence.state != undefined && presence.state.isTyping !== undefined) {
                    _this.selectedUser.isTyping = presence.state.isTyping;
                    // console.log("Typing status changed ", this.selectedUser.isTyping);
                }
                if (presence.uuid === _this.selectedUser.user_id && presence.actualChannel === _this.selectedUser.user_id + "present-pnpres") {
                    if (presence.action == "join") {
                        _this.selectedUser.presence = "online";
                    }
                    else if (presence.action == "leave") {
                        _this.selectedUser.presence = "";
                    }
                }
                if (presence.action == 'state-change' && presence.state !== undefined && presence.state.action == __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].USER_STATES.GROUP_REMOVE
                    && _this.selectedUser.shared_channel === presence.state.groupName && presence.channel === _this.userData.user_id) {
                    console.log("Update removed user in chatbox ", presence.state.leaving_time_token);
                    _this.selectedUser.leaving_time_token = presence.state.leaving_time_token;
                }
            }
        });
    };
    ChatBox.prototype.initConnectionStatusEvent = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].APP_EVENTS.CHAT_BOX_CONNECTION_STATUS_CHANGED, function (event) {
            //console.log('In app.component CONNECTION_STATUS_CHANGED', event);
            var stateObj = event.state;
            if (stateObj && stateObj.action == __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].USER_STATES.CONNECTION_STATUS_CHANGED) {
                if (stateObj.connection_status === __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED_BLOCKED) {
                    //console.log(stateObj.name + " has  Blocked You");
                    _this.selectedUser.connection_status = __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED_BLOCKED;
                }
                else if (stateObj.connection_status === __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED) {
                    //console.log(stateObj.name + " has  UnBlocked You");
                    _this.selectedUser.connection_status = __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED;
                }
            }
        });
    };
    ChatBox.prototype.navigateBack = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_8__conversations_conversations__["a" /* Conversations */]);
    };
    ChatBox.prototype.scrollToBottom = function () {
        var that = this;
        setTimeout(function () {
            if (that.content) {
                that.content.scrollTo(0, that.content.getContentDimensions().scrollHeight, 10);
            }
        });
    };
    ChatBox.prototype.navigatetoConversationSetting = function () {
        var _this = this;
        this.isSettingsDisabled = true;
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_10__conversation_setting_conversation_setting__["a" /* ConversationSetting */], { selectedUser: this.selectedUser }).then(function () {
            _this.isSettingsDisabled = false;
        });
    };
    ChatBox.prototype.uploadFileOnserver = function (fileURI, callback) {
        var fileUploadOptions = {
            fileKey: 'file',
            fileName: getFileName(fileURI),
            httpMethod: 'POST'
        };
        if (fileUploadOptions.fileName.split('.').pop() == 'mp4') {
            Object.assign(fileUploadOptions, { mimeType: 'video/mp4' });
        }
        this.proceedUploadOnServer(fileURI, fileUploadOptions, callback);
        function getFileName(fileURI) {
            var fileName, fileExt;
            //// console.log(fileURI, "fileURI in getfile name");
            fileExt = fileURI.split('.').pop();
            fileName = new Date().getTime() + '.' + fileExt;
            return fileName;
        }
    };
    ChatBox.prototype.uploadVideoOnserver = function (fileURI, callback) {
        var fileUploadOptions = {
            fileKey: 'file',
            fileName: fileURI.name,
            mimeType: fileURI.type,
            httpMethod: 'POST'
        };
        this.proceedUploadOnServer(fileURI, fileUploadOptions, callback);
    };
    ChatBox.prototype.proceedUploadOnServer = function (fileURI, fileUploadOptions, callback) {
        var _this = this;
        var uploadEndpoint;
        var fileTransfer = this.transfer.create();
        uploadEndpoint = __WEBPACK_IMPORTED_MODULE_18__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/listing/uploadImage';
        if (!fileUploadOptions.headers) {
            fileUploadOptions.headers = {
                'Authorization': 'Bearer ' + this.userService.http.token,
                source: __WEBPACK_IMPORTED_MODULE_17__shared_config__["a" /* CONSTANTS */].UPLOAD_IMAGE_SOURCE.CHATS, user_id: this.userData.user_id
            };
        }
        // // console.log('In uploadFileOnserver fileUrl', fileURI, uploadEndpoint, fileUploadOptions);
        fileTransfer.upload(fileURI, uploadEndpoint, fileUploadOptions).then(function (data) {
            //   // console.log('In uploadFileOnserver success', data)
            if (callback) {
                callback(null, JSON.parse(data.response));
            }
        }, function (err) {
            // console.log('In uploadFileOnserver err', err);
            _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.NO_NETWORK'));
            if (callback) {
                callback(err);
            }
        });
        fileTransfer.onProgress(function (state) {
            // console.log(state);
        });
    };
    ChatBox.prototype.presentShowImageModal = function (image, isAttachment, enableZoom) {
        if (enableZoom === void 0) { enableZoom = false; }
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__show_image_show_image__["a" /* ShowImage */], { image_content: image, enableSendButton: isAttachment, enableZoom: enableZoom });
    };
    ChatBox.prototype.onClosePresentShowImageModal = function (data) {
        //// console.log('In onClosePresentShowImageModal', data);
        if (data.attachement) {
            this.messageModel = data.caption;
            if (data.caption && data.caption.trim().length > 0) {
                this.fileUpload(data.image, data.caption);
            }
            else {
                this.fileUpload(data.image, this.translateService.instant('MISC.IMAGE'));
            }
        }
    };
    ChatBox.prototype.fileUpload = function (imageData, caption) {
        var _this = this;
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.UPLOADING'));
        this.uploadFileOnserver(imageData, function (error, response) {
            if (!error) {
                if (response.file_type == 'image/jpeg') {
                    _this.pictureModel = response.image_url;
                    _this.messageModel = caption;
                    _this.sendMessage(_this.messageModel);
                }
                else if (response.file_type == 'video/mp4') {
                    _this.videoPath = response.image_url;
                }
            }
            else {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            }
            _this.loaderService.dismissLoader();
        });
    };
    //NSPhotoLibraryAddUsageDescription
    ChatBox.prototype.takeFromCamera = function (source) {
        var _this = this;
        var options = {
            quality: 100,
            destinationType: this.camera.DestinationType.FILE_URI,
            sourceType: source,
            allowEdit: false,
            encodingType: this.camera.EncodingType.JPEG,
            targetWidth: 1062,
            targetHeight: 600,
            mediaType: this.camera.MediaType.PICTURE,
            correctOrientation: true
        };
        if (source === this.camera.PictureSourceType.PHOTOLIBRARY) {
            options['saveToPhotoAlbum'] = false;
        }
        else {
            options['saveToPhotoAlbum'] = true;
        }
        this.camera.getPicture(options).then(function (imageData) {
            _this.presentShowImageModal(imageData, true, false);
        }, function (error) {
            //this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
        });
    };
    ChatBox.prototype.takevideoCamera = function (source) {
        var _this = this;
        var options = {
            sourceType: this.camera.PictureSourceType.SAVEDPHOTOALBUM,
            mediaType: this.camera.MediaType.ALLMEDIA,
            destinationType: this.camera.DestinationType.FILE_URI
        };
        this.mediaCapture.captureVideo(options).then(function (videodata) {
            _this.loaderService.createLoader(_this.translateService.instant('ERROR_MESSAGES.UPLOADING'));
            _this.uploadVideoOnserver(videodata[0], function (error, video_url) {
                if (!error) {
                    _this.videoPath = video_url;
                }
                else {
                    _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                }
                _this.loaderService.dismissLoader();
            });
        }, function (err) {
            //this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
        });
    };
    ChatBox.prototype.showActionSheet = function () {
        var _this = this;
        var buttons = [
            {
                text: this.translateService.instant("CONVERSATIONS.NEW_MSG.TAKE_PHOTO"),
                role: 'Take a photo',
                cssClass: 'take-photo',
                icon: 'icons-camera',
                handler: function () {
                    _this.takeFromCamera(_this.camera.PictureSourceType.CAMERA);
                }
            },
            {
                text: this.translateService.instant("CONVERSATIONS.NEW_MSG.ATTACH_PHOTO"),
                cssClass: 'take-photo',
                icon: 'icons-image-photo',
                handler: function () {
                    _this.takeFromCamera(_this.camera.PictureSourceType.PHOTOLIBRARY);
                }
            }
            // ,
            // {
            //     text: 'Take a  video',
            //     role: 'Take a  video',
            //     cssClass: 'take-photo',
            //     icon: 'icons-camera',
            //     handler: () => {
            //         this.takevideoCamera(Camera.PictureSourceType.PHOTOLIBRARY);
            //     }
            // }
        ];
        var actionSheet = this.actionSheetCtrl.create({
            cssClass: 'photo-sheet',
            buttons: buttons
        });
        actionSheet.present();
    };
    return ChatBox;
}(__WEBPACK_IMPORTED_MODULE_9__base_chat_box__["a" /* BaseChatBox */]));
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_4__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_3_ionic_angular__["c" /* Content */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["c" /* Content */])
], ChatBox.prototype, "content", void 0);
ChatBox = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_4__angular_core__["n" /* Component */])({
        selector: 'page-chat-box',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\conversations\chat-box\chat-box.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>\n\n            <span active-user [ngClass]="{\'active\': (selectedUser.presence && selectedUser.type!==groupType \n\n                                                    && (selectedUser.connection_status === connectionStatus.CONNECTED || selectedUser.connection_status === connectionStatus.CONNECTED_BLOCKED) ),\n\n                                        \'de-active\':(!selectedUser.presence && selectedUser.type!==groupType \n\n                                                    && (selectedUser.connection_status === connectionStatus.CONNECTED || selectedUser.connection_status === connectionStatus.CONNECTED_BLOCKED))}">\n\n             {{selectedUser.user_name}}\n\n         <cite *ngIf="selectedUser.isTyping"> {{\'CONVERSATIONS.IS_TYPING\' | translate}}</cite> </span>\n\n        </ion-title>\n\n        <ion-buttons end>\n\n            <button [disabled]="isSettingsDisabled" (tap)="navigatetoConversationSetting()" ion-button clear outline-btn><ion-icon class="icons-more"></ion-icon></button>\n\n        </ion-buttons>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content #content>\n\n    <ion-infinite-scroll *ngIf="chatBoxInfiniteScrollShow" (ionInfinite)="loadMoreMessage($event)" position="top" [enabled]="chatBoxInfiniteScrollEnabled" >\n\n        <ion-infinite-scroll-content loadingSpinner="bubbles" loadingText="{{\'ERROR_MESSAGES.LOADING_MORE_DATA_TO_LOAD\' | translate}}"></ion-infinite-scroll-content>\n\n    </ion-infinite-scroll>\n\n\n\n    <ion-list *ngIf="selectedUser.type!==groupType && selectedUser.connection_status === connectionStatus.INVITED" class="invitation-block">\n\n        <ion-item class="invitation-msg">\n\n            <ion-avatar item-left>                 \n\n                <lazy-img  *ngIf="selectedUser.profile_pic" [inputSrc]="selectedUser.profile_pic" alt=""></lazy-img>\n\n                <lazy-img  *ngIf="!selectedUser.profile_pic" [inputSrc]="placeholderIamges.PROFILE_PIC" alt=""></lazy-img>\n\n            </ion-avatar>\n\n            <h2><span *ngIf="selectedUser.user_name"> </span> <span *ngIf="selectedUser.joining_time_token">{{ selectedUser.joining_time_token/10000 | localizedDate: \'MM/dd/yy hh:mm a\' }}</span></h2>\n\n            <p>{{selectedUser.first_name}} {{\'ERROR_MESSAGES.INVITATION_INVITED_POSTFIX\' | translate}}</p>\n\n        </ion-item>\n\n    </ion-list>\n\n\n\n    <ion-list *ngIf="selectedUser.type!==groupType && selectedUser.connection_status === connectionStatus.CONNECTED" class="invitation-block">\n\n        <ion-item class="invitation-msg">\n\n            <ion-avatar item-left>\n\n                <lazy-img  *ngIf="selectedUser.profile_pic" [inputSrc]="selectedUser.profile_pic" alt=""></lazy-img>\n\n                <lazy-img  *ngIf="!selectedUser.profile_pic" [inputSrc]="placeholderIamges.PROFILE_PIC" alt=""></lazy-img>\n\n            </ion-avatar>\n\n            <h2><span *ngIf="selectedUser.user_name"></span> <span *ngIf="selectedUser.joining_time_token">{{ selectedUser.joining_time_token/10000 | localizedDate: \'MM/dd/yy hh:mm a\' }}</span></h2>\n\n            <p>{{\'ERROR_MESSAGES.INVITATION_ACCEPTED_PREFIX\' | translate}} {{selectedUser.user_name}}</p>\n\n        </ion-item>\n\n    </ion-list>\n\n\n\n    <div class="bottom-space">\n\n        <ion-list *ngFor="let message of messages" class="conversation-chat" [ngClass]="{\'chat-img-text\': message.image && message.content !== \'image\'}">\n\n            <ion-item *ngIf="!message.content_type_id  || message.content_type_id === messageContentType.SYSTEM_MESSAGE_TO_ALL || this.userData.user_type === usertype.HOUSING_PROVIDER "\n\n             [ngClass]="{\'chat-property-img\': message.image && message.content !== \'image\', \'no-img-text\': message.content === \'image\'}">\n\n                <ion-avatar item-left>\n\n                    <lazy-img  *ngIf="message.profile_pic" [inputSrc]="message.profile_pic" alt=""></lazy-img>\n\n                    <lazy-img  *ngIf="!message.profile_pic" [inputSrc]="placeholderIamges.PROFILE_PIC" alt=""></lazy-img>\n\n                </ion-avatar>\n\n                <h4>\n\n                    <span *ngIf="message.user_name">{{message.user_name}}</span>                    \n\n                    <ion-note class="datetime">{{ message.timetoken | localizedDate: \'MM/dd/yy hh:mm a\'}}</ion-note>\n\n                </h4>\n\n\n\n                <div *ngIf="message.image">\n\n                    <lazy-img  name="image" [inputSrc]="message.image" (tap)="presentShowImageModal(message.image, false)" alt=""></lazy-img>\n\n                </div>\n\n                <h3>{{message.content}}</h3>\n\n            </ion-item>\n\n        </ion-list>\n\n    </div>\n\n</ion-content>\n\n<ion-footer *ngIf="selectedUser.connection_status !== connectionStatus.INVITED" [keyboardAttach]="content" footer-full id="chat-box-footer">\n\n    <ion-toolbar>\n\n        <button ion-button icon-only clear (click)="showActionSheet()">\n\n            <ion-icon class="icons-attachement"></ion-icon>\n\n        </button>\n\n        <ion-list class="chat-type-msg" id="chat-text">\n\n            <ion-item>\n\n                <ion-textarea autoresize autocomplete="true" spellcheck="true" autocorrect="true" [(ngModel)]="messageModel" col="55" placeholder="{{\'PLACEORDER.MESSAGE\' | translate}}" [formControl]="writeMessage" name="writeMessage"></ion-textarea>\n\n            </ion-item>\n\n        </ion-list>\n\n        <button ion-button icon-only clear [ngClass]="{\'active-btn\': !(messageModel && !pictureModel && messageModel.trim().length > 0)}" (click)="sendMessage(messageModel);">\n\n        <ion-icon class="icons-upload"></ion-icon>\n\n    </button>\n\n    </ion-toolbar>\n\n</ion-footer>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\conversations\chat-box\chat-box.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_13__providers_pubnub_service__["a" /* PubNubService */], __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["j" /* NavController */],
        __WEBPACK_IMPORTED_MODULE_12__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_4__angular_core__["u" /* ElementRef */],
        __WEBPACK_IMPORTED_MODULE_6__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_14__chat_service__["a" /* ChatService */], __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["a" /* ActionSheetController */], __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["m" /* Platform */],
        __WEBPACK_IMPORTED_MODULE_15__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_16__providers_loader_service__["a" /* LoaderService */],
        __WEBPACK_IMPORTED_MODULE_1__ionic_native_transfer__["a" /* Transfer */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_camera__["a" /* Camera */], __WEBPACK_IMPORTED_MODULE_0__ionic_native_media_capture__["a" /* MediaCapture */]])
], ChatBox);

//# sourceMappingURL=chat-box.js.map

/***/ }),

/***/ 544:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RezApp; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ionic_native_splash_screen__ = __webpack_require__(293);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_status_bar__ = __webpack_require__(294);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_push__ = __webpack_require__(295);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_keyboard__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_deeplinks__ = __webpack_require__(296);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_network__ = __webpack_require__(165);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_device__ = __webpack_require__(303);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__pages_home_tabs_home_tabs__ = __webpack_require__(304);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__pages_login_login__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__pages_get_started_get_started__ = __webpack_require__(187);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__pages_conversations_connection_list__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__pages_conversations_chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__providers_http_service__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__shared_environment__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__providers_image_cache_service__ = __webpack_require__(188);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};























Object(__WEBPACK_IMPORTED_MODULE_8__angular_core__["_21" /* enableProdMode */])();
var RezApp = (function () {
    function RezApp(platform, events, userService, httpService, analyticsService, translateService, alertCtrl, pubNubService, chatService, loaderService, imageCacheService, splashScreen, statusBar, push, keyboard, device, deeplinks, network) {
        this.platform = platform;
        this.userService = userService;
        this.httpService = httpService;
        this.analyticsService = analyticsService;
        this.translateService = translateService;
        this.alertCtrl = alertCtrl;
        this.pubNubService = pubNubService;
        this.chatService = chatService;
        this.loaderService = loaderService;
        this.imageCacheService = imageCacheService;
        this.splashScreen = splashScreen;
        this.statusBar = statusBar;
        this.push = push;
        this.keyboard = keyboard;
        this.device = device;
        this.deeplinks = deeplinks;
        this.network = network;
        this.isRootPageSet = false;
        this.events = events;
        this.initPages();
        this.initializeApp();
        this.listenToLoginEvents();
        if (!this.platform.is('cordova')) {
            this.initializeTranslateServiceConfig();
        }
    }
    RezApp.prototype.ngOnInit = function () {
        this.inItAppState();
    };
    RezApp.prototype.initPages = function () {
        this.pages = [
            { title: 'Find', component: __WEBPACK_IMPORTED_MODULE_10__pages_home_tabs_home_tabs__["a" /* HomeTabs */], index: 0 },
            { title: 'Conversations', component: __WEBPACK_IMPORTED_MODULE_10__pages_home_tabs_home_tabs__["a" /* HomeTabs */], index: 1 },
            { title: 'Connect', component: __WEBPACK_IMPORTED_MODULE_10__pages_home_tabs_home_tabs__["a" /* HomeTabs */], index: 2 },
            { title: 'My Stuff', component: __WEBPACK_IMPORTED_MODULE_10__pages_home_tabs_home_tabs__["a" /* HomeTabs */], index: 3 }
        ];
    };
    RezApp.prototype.initializeApp = function () {
        var _this = this;
        var that = this;
        that.platform.ready().then(function () {
            // Okay, so the platform is ready and our plugins are available.
            // Here you can do any higher level native things you might need.
            that.initNetwork();
            that.initPlatform();
            that.statusBar.styleDefault();
            that.initCache();
            //Splashscreen.hide();
            if (that.platform.is('cordova')) {
                that.hideSplashScreen(_this.splashScreen);
                that.keyboard.disableScroll(true);
                that.keyboard.hideKeyboardAccessoryBar(true);
                that.initAnalyticsServiceConfig();
                that.initPush();
                that.inItDeeplinksRoute();
                that.initializeTranslateServiceConfig();
            }
            that.verifyForceUpdate();
            if (typeof cordova !== 'undefined' && cordova.platformId == 'android') {
                that.statusBar.styleLightContent();
            }
        });
    };
    RezApp.prototype.initCache = function () {
        this.imageCacheService.initImageCache();
    };
    RezApp.prototype.initPlatform = function () {
        var platform = null;
        if (this.platform.is('android')) {
            platform = "android";
        }
        else if (this.platform.is('ios')) {
            platform = "ios";
        }
        else {
            platform = "web";
        }
        // Set device type into http service .
        this.userService.http.defaultRequestParams.device_type = platform;
        this.userService.http.defaultRequestParams.device_model = this.device.model;
        this.userService.http.defaultRequestParams.os_version = this.device.version;
    };
    RezApp.prototype.hideSplashScreen = function (splashScreen) {
        if (splashScreen) {
            // console.log('Called hideSplashScreen.............');
            setTimeout(function () {
                splashScreen.hide();
            }, 200);
        }
    };
    RezApp.prototype.inItAppState = function () {
        var _this = this;
        if (!this.userService.isAppStarted()) {
            this.nav.setRoot(__WEBPACK_IMPORTED_MODULE_13__pages_get_started_get_started__["a" /* GetStarted */]);
            this.isRootPageSet = true;
        }
        else {
            this.userService.hasLoggedIn().then(function (hasLoggedIn) {
                if (hasLoggedIn) {
                    _this.userService.loadUser(function (isUserLoaded) {
                        _this.enableMenu(hasLoggedIn == isUserLoaded);
                    });
                }
                else {
                    _this.enableMenu(hasLoggedIn == true);
                }
                _this.isRootPageSet = true;
            });
        }
    };
    RezApp.prototype.inItDeeplinksRoute = function () {
        this.deeplinks.routeWithNavController(this.nav, {
            '/onboard/:userId': __WEBPACK_IMPORTED_MODULE_13__pages_get_started_get_started__["a" /* GetStarted */],
            '/onboard/resetpassword/:resetpassword_userId': __WEBPACK_IMPORTED_MODULE_13__pages_get_started_get_started__["a" /* GetStarted */]
        }).subscribe(function (match) {
            // console.log('Successfully routed', match);
        }, function (nomatch) {
            console.warn('Unmatched Route', nomatch);
        });
        // console.log('Called inItDeeplinksRoute');
    };
    RezApp.prototype.initializeTranslateServiceConfig = function () {
        var that = this;
        var userLang;
        if (this.userService.userObj && this.userService.userObj.device_lang) {
            console.log('User Language');
            userLang = this.userService.userObj.device_lang;
        }
        else if (navigator.language.split('-')[0] === 'zh') {
            console.log('Device Chinese');
            userLang = navigator.language;
            //this.updateUserDeviceLang();
        }
        else {
            console.log('Other Device Languages');
            userLang = navigator.language.split('-')[0];
            //this.updateUserDeviceLang();
        }
        console.log('In initializeTranslateServiceConfig', userLang);
        userLang = __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].AVAILABLE_LANGUAGE.indexOf(userLang) !== -1 ? userLang : __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].DEFAULT_LANGUAGE;
        that.translateService.use(userLang);
        that.userService.setCurrentLang(userLang);
        that.translateService.setDefaultLang(__WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].DEFAULT_LANGUAGE);
        that.pubNubService.setUserLang(userLang);
    };
    RezApp.prototype.initAnalyticsServiceConfig = function () {
        if (typeof ga !== 'undefined') {
            // console.log("Calling start tracker");
            this.analyticsService.startTracker(__WEBPACK_IMPORTED_MODULE_21__shared_environment__["a" /* ENVIRONMENT */].GOOGLE_ANALYTICS_TRACKING_ID);
            this.analyticsService.enableExceptionReporting(true);
            this.analyticsService.enableDebugMode();
        }
        else {
            // console.log("Google Analytics Unavailable");
        }
    };
    RezApp.prototype.listenToLoginEvents = function () {
        var _this = this;
        this.events.subscribe('user:login', function () {
            _this.enableMenu(true);
        });
        this.events.subscribe('user:signup', function () {
            _this.enableMenu(true);
        });
        this.events.subscribe('user:logout', function () {
            _this.loaderService.dismissLoader();
            _this.events.unsubscribe(__WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].APP_EVENTS.GROUP_EVENTS);
            _this.imageCacheService.clearCache();
            _this.enableMenu(false);
        });
        // this.events.subscribe('user:dataLoaded', (user) => {
        //     // console.log('[User dataLoaded.]', user);
        // });
    };
    RezApp.prototype.enableMenu = function (LoggedIn) {
        var _this = this;
        var channelGroups = [];
        //If user is loggged in App then set TabsPage as a home page otherwise LoginPage
        if (LoggedIn) {
            this.userService.setAppStarted();
            this.nav.setRoot(__WEBPACK_IMPORTED_MODULE_10__pages_home_tabs_home_tabs__["a" /* HomeTabs */], { tabIndex: 0 });
            // register device
            this.userService.registerDeviceOnServer();
            if (this.platform.is('cordova')) {
                // Changed property_owner_id to user_id
                //this.analyticsService.setUserId(this.userService.userObj.user_id);
                this.analyticsService.addCustomDimension(this.userService.userObj.user_id);
            }
            //this.pubNubService.addChanneltoMyGroup([this.userService.userObj.user_id],this.userService.userObj.user_id + '_group');
            this.pubNubService.subscribe([this.userService.userObj.user_id], true);
            this.pubNubService.subscribe([this.userService.userObj.user_id + '_present'], true);
            this.pubNubService.setPushNotificationChannels([this.userService.userObj.user_id]);
            if (!!this.userService.userObj.notification_enabled) {
                this.pubNubService.registerDevice([this.userService.userObj.user_id], this.userService.deviceToken, this.userService.pushPlatform);
            }
            this.chatService.getUserGroups(this.userService.userObj.user_id).subscribe(function (res) {
                if (res && res.incident_conversations) {
                    //this.pubNubService.subscribe(res.all_user_groups, true);
                    //this.pubNubService.addChanneltoMyGroup([res.incident_conversations], this.userService.userObj.user_id + '_group');
                    channelGroups = channelGroups.concat(res.incident_conversations);
                }
                if (res && res.groups) {
                    channelGroups = channelGroups.concat(res.groups);
                }
                if (!!_this.userService.userObj.notification_enabled) {
                    _this.pubNubService.registerDevice(channelGroups, _this.userService.deviceToken, _this.userService.pushPlatform);
                }
                _this.pubNubService.setPushNotificationChannels(channelGroups);
                // We do not need mute groups in push notification.
                if (res && res.mute_groups) {
                    channelGroups = channelGroups.concat(res.mute_groups);
                }
                _this.pubNubService.addChanneltoMyGroup(channelGroups, _this.userService.userObj.user_id + '_group');
                _this.pubNubService.subscribeGroup([_this.userService.userObj.user_id + '_group'], false);
                //this.pubNubService.subscribe(res.all_user_groups,true);
            }, function (error) {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            });
            //this.updateUserDeviceLang();
            this.initConversationCount();
            this.initGroupEvents();
            this.setUserDataForCrashlytics();
            this.initializeTranslateServiceConfig();
        }
        else {
            this.nav.setRoot(__WEBPACK_IMPORTED_MODULE_11__pages_login_login__["a" /* LoginPage */]).then(function () {
                _this.userService.resetUserObj();
                _this.initializeTranslateServiceConfig();
            });
        }
    };
    RezApp.prototype.setUserDataForCrashlytics = function () {
        if (this.platform.is('cordova')) {
            fabric.Crashlytics.setUserIdentifier(this.userService.userObj.user_id);
            fabric.Crashlytics.setUserName(this.userService.userObj.user_name);
            fabric.Crashlytics.setUserEmail(this.userService.userObj.email);
        }
    };
    RezApp.prototype.initConversationCount = function () {
        var _this = this;
        var that = this, startTimeToken = null, endTimeToken = null, historyLimit, params, connectionList;
        var friendsList = [];
        connectionList = new __WEBPACK_IMPORTED_MODULE_14__pages_conversations_connection_list__["a" /* ConnectionList */](this.chatService, this.pubNubService, this.translateService, this.loaderService);
        params = { user_id: this.userService.userObj.user_id, is_group_data_needed: true };
        connectionList.getUserList(params, function (error, response) {
            var conversations = [];
            conversations = conversations.concat(response.connected);
            conversations.forEach(function (conversation) {
                endTimeToken = null;
                startTimeToken = null;
                endTimeToken = that.pubNubService.getConversationLastReadTimetoken(conversation.shared_channel);
                //// console.log('[Before Calling history api]', conversation.shared_channel, endTimeToken);
                // If last read timestamp is null then  get only single record otherwise get as per timestamp                     
                if (!endTimeToken && conversation.joining_time_token) {
                    endTimeToken = conversation.joining_time_token;
                    //  // console.log('Case#1');
                }
                if (conversation.joining_time_token && endTimeToken && conversation.joining_time_token > endTimeToken) {
                    endTimeToken = conversation.joining_time_token;
                    // // console.log('Case#2');
                    //// console.log('In case of edit group if user added some oneone They should not be see the last conversation message which was there before adding to them');
                }
                if (conversation.leaving_time_token && conversation.leaving_time_token > 0) {
                    startTimeToken = endTimeToken;
                    endTimeToken = conversation.leaving_time_token;
                    // // console.log('Case#3');
                }
                if (conversation.type === __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.SINGLE) {
                    friendsList = friendsList.concat(conversation.receiver_id + '_present');
                }
                historyLimit = (endTimeToken) ? __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].CONVERSATION_MAX_UNREAD_COUNT : 1;
                //// console.log('[Calling history api joining_time_token, historyLimit,endTimeToken]', conversation.shared_channel, conversation.joining_time_token, conversation.leaving_time_token, startTimeToken, endTimeToken);
                that.pubNubService.history(conversation.shared_channel, false, historyLimit, startTimeToken, endTimeToken).subscribe(function (event) {
                    if (event.value && event.value.messages && event.value.messages.length > 0) {
                        var lastMsgIndex = event.value.messages.length - 1;
                        if (!that.pubNubService.getConversationLastReadTimetoken(conversation.shared_channel)) {
                            that.pubNubService.setConversationLastState(conversation.shared_channel, 0, event.value.messages[lastMsgIndex].timetoken);
                        }
                        else {
                            that.pubNubService.setConversationLastState(conversation.shared_channel, lastMsgIndex);
                        }
                    }
                }, function (error) {
                    _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                });
            });
            that.pubNubService.addChanneltoMyGroup(friendsList, that.userService.userObj.user_id + '_friends');
            that.pubNubService.subscribeGroup([that.userService.userObj.user_id + '_friends-pnpres'], false);
        });
    };
    RezApp.prototype.initGroupEvents = function () {
        var _this = this;
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].APP_EVENTS.GROUP_EVENTS, function (groupEvent) {
            //let groupEvent = groupEvents[0];
            // console.log("App Component Group Event", groupEvent);
            if (groupEvent.state !== undefined && groupEvent.state.action == __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].USER_STATES.GROUP_ADD) {
                var shared_channel_1 = groupEvent.state.groupName;
                _this.pubNubService.addChanneltoMyGroup([shared_channel_1], _this.userService.userObj.user_id + '_group');
                _this.pubNubService.setPushNotificationChannels([shared_channel_1]);
                if (_this.platform.is('cordova')) {
                    if (!!_this.userService.userObj.notification_enabled) {
                        _this.pubNubService.registerDevice([shared_channel_1], _this.userService.deviceToken, _this.userService.pushPlatform);
                    }
                    _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.ADDED_GROUP') + ' ' + groupEvent.state.displayName);
                }
                if (!_this.pubNubService.getConversationLastReadTimetoken(shared_channel_1)) {
                    _this.pubNubService.getTimeToken(function (timetoken) {
                        _this.pubNubService.setConversationLastState(shared_channel_1, 0, timetoken);
                    });
                }
                else {
                    _this.pubNubService.setConversationLastState(shared_channel_1, 0);
                }
                // console.log('You have been added to the group' + groupEvent.state.displayName);
            }
            else if (groupEvent.state !== undefined && groupEvent.state.action == __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].USER_STATES.GROUP_REMOVE) {
                _this.pubNubService.removeChannelFromMyGroup([groupEvent.state.groupName], _this.userService.userObj.user_id + '_group');
                if (_this.platform.is('cordova')) {
                    _this.pubNubService.unRegisterDevice([groupEvent.state.groupName], _this.userService.deviceToken, _this.userService.pushPlatform);
                    _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.NO_LONGER_PARTICIPANT') + ' ' + groupEvent.state.displayName);
                }
                // console.log('You have been removed from the group' + groupEvent.state.displayName);
            }
            else if (groupEvent.state !== undefined && groupEvent.state.action == __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].USER_STATES.VERIFICATION_REQUEST && groupEvent.channel === _this.userService.userObj.user_id) {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.VERIFICATION_MESSAGE'));
            }
            else if (groupEvent.state !== undefined && groupEvent.state.action == __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].USER_STATES.VERIFICATION_CANCEL && groupEvent.channel === _this.userService.userObj.user_id) {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.VERIFICATION_CANCEL_MESSAGE'));
            }
            else if (groupEvent.state !== undefined && groupEvent.state.action == __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].USER_STATES.SERVICE_REQUEST_REPORTED) {
                var shared_channel = groupEvent.state.groupName;
                _this.pubNubService.addChanneltoMyGroup([shared_channel], _this.userService.userObj.user_id + '_group');
                _this.pubNubService.setPushNotificationChannels([shared_channel]);
                if (_this.platform.is('cordova')) {
                    if (!!_this.userService.userObj.notification_enabled) {
                        _this.pubNubService.registerDevice([shared_channel], _this.userService.deviceToken, _this.userService.pushPlatform);
                    }
                }
            }
        });
        this.events.subscribe(__WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].APP_EVENTS.CONNECTION_STATUS_CHANGED, function (event) {
            //console.log('In app.component CONNECTION_STATUS_CHANGED', event);
            var stateObj = event.state;
            if (stateObj && stateObj.action == __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].USER_STATES.CONNECTION_STATUS_CHANGED) {
                if (stateObj.connection_status === __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.INVITED) {
                    _this.loaderService.showToaster(stateObj.name + ' ' + _this.translateService.instant('ERROR_MESSAGES.INVITED_YOU'));
                    //console.log(stateObj.name + ' ' + this.translateService.instant('ERROR_MESSAGES.INVITED_YOU'));
                }
                else if (stateObj.connection_status === __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.IGNORE || stateObj.connection_status === __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED) {
                    //console.log("Profile update", stateObj);
                    _this.userService.isProfileUpdate = true;
                    // Added check on connection_type since we don't want to subscribe single conversation
                    // (When Resident click on Approve and connect request) that will be subscribe under _friends
                    if (stateObj.connection_status === __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED &&
                        (!stateObj.connection_type || stateObj.connection_type && stateObj.connection_type === __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP)) {
                        _this.pubNubService.addChanneltoMyGroup([stateObj._id], _this.userService.userObj.user_id + '_group');
                        _this.pubNubService.registerDevice([stateObj._id], _this.userService.deviceToken, _this.userService.pushPlatform);
                    }
                }
            }
        });
    };
    // Register push notification
    RezApp.prototype.initPush = function () {
        var _this = this;
        var that = this;
        var pushOptions = {
            android: {
                senderID: __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].GCM_SENDER_ID,
                icon: "icon",
                clearNotifications: "true"
            },
            ios: {
                alert: "true",
                badge: "true",
                sound: "true",
                clearBadge: "true"
            },
            windows: {}
        };
        var pushObject = that.push.init(pushOptions);
        pushObject.on('registration').subscribe(function (data) {
            // console.log('registration ---', data);
            that.userService.storeDeviceToken(data.registrationId);
        });
        pushObject.on('notification').subscribe(onNotification);
        pushObject.on('error').subscribe(function (e) {
            that.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.DEVICE_REGISTRATION_FAILED'));
        });
        function onNotification(data) {
            // console.log("Push Message Data", JSON.stringify(data));
            if (data.additionalData.foreground === false) {
                if (that.platform.is('ios')) {
                    pushObject.getApplicationIconBadgeNumber().then(function (n) {
                        // console.log('Current badge number', n);
                        var number = n + 1;
                        pushObject.setApplicationIconBadgeNumber(number).then(function () {
                            // console.log('setApplicationIconBadgeNumber - success', number);                        
                        });
                    }, function () {
                        // console.log('error - getApplicationIconBadgeNumber');
                    });
                }
            }
            else {
                pushObject.setApplicationIconBadgeNumber(0).then(function () {
                    // console.log('setApplicationIconBadgeNumber - success', number);                        
                });
            }
            if (that.platform.is('ios')) {
                if (data.additionalData['coldstart'] == false && data.additionalData["source"] === "rezility") {
                    // console.log('data.additionalData coldstart', data);
                    that.events.publish('reLoadActivityFeed', data);
                }
                else {
                    // console.log('Chat Notification Received');
                }
            }
            else {
                //Push notification filter on coldstart property to handle duplicate feeds
                if (data.additionalData["source"] === "rezility") {
                    that.events.publish('reLoadActivityFeed', data);
                }
                else {
                    // console.log('Chat Notification Received');
                }
            }
        }
    };
    RezApp.prototype.initNetwork = function () {
        var _this = this;
        this.connectSubscription = this.network.onConnect().subscribe(function () {
            // console.log('network connected!');
            // We just got a connection but we need to wait briefly
            // before we determine the connection type.  Might need to wait
            // prior to doing any api requests as well.
            _this.httpService.online = true;
            setTimeout(function () {
                // console.log("Current Network is ", Network.connection);
            }, 3000);
        });
        this.dissconnectSubscription = this.network.onDisconnect().subscribe(function () {
            // console.log('network disconnected !', this.isRootPageSet);
            if (_this.httpService.online) {
                _this.onDisconnect();
            }
            _this.httpService.online = false;
        });
    };
    RezApp.prototype.onDisconnect = function () {
        var _this = this;
        //console.log("Current Page", this.userService.getCurrentPage().currentPage);
        if (this.userService.getCurrentPage().currentPage !== __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].PAGES.AROUND_YOU) {
            var alert_1 = this.alertCtrl.create({
                title: this.translateService.instant('ERROR_MESSAGES.NO_NETWORK_TITLE'),
                message: this.translateService.instant('ERROR_MESSAGES.NO_NETWORK_MSG'),
                buttons: [{
                        'text': this.translateService.instant('MISC.OK'), handler: function () {
                            if (!_this.isRootPageSet) {
                                _this.platform.exitApp();
                            }
                        }
                    }],
                cssClass: 'alert-single'
            });
            alert_1.present();
        }
        else {
            this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.NO_NETWORK_MSG'));
        }
    };
    RezApp.prototype.verifyForceUpdate = function () {
        var _this = this;
        var deviceType = '', appVersion = __WEBPACK_IMPORTED_MODULE_21__shared_environment__["a" /* ENVIRONMENT */].APP_VERSION, appUpdateURL = '';
        if (this.platform.is('android')) {
            deviceType = 'android';
            appUpdateURL = __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].APP_UPDATE_URL.ANDROID;
        }
        else if (this.platform.is('ios')) {
            deviceType = 'ios';
            appUpdateURL = __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].APP_UPDATE_URL.IOS;
        }
        var updateHandler = function () {
            window.open(appUpdateURL, "_system");
            return false;
        };
        if (appVersion && deviceType) {
            this.userService.verifyForceUpdate(appVersion, deviceType).subscribe(function (response) {
                if (response.status === __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                    if (response.app_status_code === __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].APP_UPDATE_STATUS_CODE.NO_UPDATE) {
                        return;
                    }
                    var alert_2 = _this.alertCtrl.create({
                        title: response.title,
                        message: response.message,
                        buttons: [{
                                text: _this.translateService.instant('ERROR_MESSAGES.OK_BTN'),
                                handler: updateHandler,
                            }],
                        enableBackdropDismiss: false
                    });
                    if (response.app_status_code === __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].APP_UPDATE_STATUS_CODE.NORMAL_UPDATE) {
                        alert_2.addButton({
                            text: _this.translateService.instant('ERROR_MESSAGES.CANCEL_BTN'),
                            role: 'cancel'
                        });
                    }
                    else if (response.app_status_code === __WEBPACK_IMPORTED_MODULE_20__shared_config__["a" /* CONSTANTS */].APP_UPDATE_STATUS_CODE.FORCE_UPDATE) {
                        alert_2.setCssClass('alert-single');
                        //TODO - Need to remove this in version 1.7 
                        if (_this.userService.userObj && _this.userService.userObj.user_id) {
                            _this.pubNubService.deleteGroup(_this.userService.userObj.user_id + '_friends');
                            _this.pubNubService.deleteGroup(_this.userService.userObj.user_id + '_group');
                        }
                    }
                    alert_2.present();
                }
            });
        }
    };
    return RezApp;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_8__angular_core__["_14" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_0_ionic_angular__["i" /* Nav */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0_ionic_angular__["i" /* Nav */])
], RezApp.prototype, "nav", void 0);
RezApp = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_8__angular_core__["n" /* Component */])({template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\app\app.html"*/'<ion-nav [root]="rootPage" #content swipe-back-enabled="false" [keyboard-tab-handler]></ion-nav> '/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\app\app.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0_ionic_angular__["m" /* Platform */], __WEBPACK_IMPORTED_MODULE_0_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_12__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_18__providers_http_service__["a" /* HttpService */],
        __WEBPACK_IMPORTED_MODULE_15__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_9__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_0_ionic_angular__["b" /* AlertController */],
        __WEBPACK_IMPORTED_MODULE_17__providers_pubnub_service__["a" /* PubNubService */], __WEBPACK_IMPORTED_MODULE_16__pages_conversations_chat_service__["a" /* ChatService */], __WEBPACK_IMPORTED_MODULE_19__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_22__providers_image_cache_service__["a" /* ImageCacheService */],
        __WEBPACK_IMPORTED_MODULE_1__ionic_native_splash_screen__["a" /* SplashScreen */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_status_bar__["a" /* StatusBar */], __WEBPACK_IMPORTED_MODULE_3__ionic_native_push__["a" /* Push */], __WEBPACK_IMPORTED_MODULE_4__ionic_native_keyboard__["a" /* Keyboard */], __WEBPACK_IMPORTED_MODULE_7__ionic_native_device__["a" /* Device */],
        __WEBPACK_IMPORTED_MODULE_5__ionic_native_deeplinks__["a" /* Deeplinks */], __WEBPACK_IMPORTED_MODULE_6__ionic_native_network__["a" /* Network */]])
], RezApp);

//# sourceMappingURL=app.component.js.map

/***/ }),

/***/ 6:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CONSTANTS; });
var CONSTANTS = {
    LOCAL_TOKEN_KEY: 'LTK',
    HAS_LOGGED_IN: 'HLI',
    HAS_APP_STARTED: 'HAS',
    DEVICE_TOKEN_KEY: 'DTK',
    LOCAL_CONVERSATION_COUNT_MAP: 'LCCM',
    AUTH_EVENTS: {
        notAuthenticated: 'auth-not-authenticated',
        notAuthorized: 'auth-not-authorized'
    },
    APP_ID: '22062016',
    DEVICE_ID: 'web-dev1',
    DEFAULT_LANGUAGE: 'en',
    AVAILABLE_LANGUAGE: ['en', 'es', 'ko', 'ht', 'ru', 'zh-CN', 'zh-TW', 'pt'],
    GCM_SENDER_ID: '975547819683',
    ALL_USER_GROUP: 'rezility_all',
    APP_UPDATE_URL: {
        ANDROID: 'https://play.google.com/store/apps/details?id=com.enterprise.rezility',
        IOS: 'https://itunes.apple.com/us/app/rezility/id1209975627?ls=1&mt=8'
    },
    APP_UPDATE_STATUS_CODE: {
        NO_UPDATE: 0,
        NORMAL_UPDATE: 1,
        FORCE_UPDATE: 2
    },
    GOOGLE_MAP_DEFAULT_MARKER: {
        ICON: './assets/img/blue-pin.png',
        DROP_PIN_ICON: './assets/img/grey-pin.png'
    },
    CONVERSATION_MAX_UNREAD_COUNT: 25,
    ACTIVITY_FEED_SCROLL_TO_TOP_DURATION: 500,
    PLACE_NEAR_BY_SEARCH_MAP_RADIUS: 1000,
    APP_EVENTS: {
        NEW_MESSAGE: "newmessage",
        UPDATE_CONVERSATION: "updateconversation",
        SENT_MESSAGE: "sentmessage",
        ARROUND_YOU_ACTIONS: "arroundyouactions",
        NEW_MSG_PRESENCE_EVENT: "presence_new_msg",
        CHAT_BOX_PRESENCE_EVENT: "presence_chat_box",
        CONV_PRESENCE_EVENT: "presence_conversation",
        GROUP_SETTING_PRESENCE_EVENT: "presence_grp_settings",
        GROUP_CREATED: 'groupcreated',
        KEYBOARD: "keyboard",
        GROUP_EVENTS: "groupevents",
        CLOSE_IMAGE_PREVIEW: 'closeimagepreview',
        CONNECTION_STATUS_CHANGED: 'connectionstatuschanged',
        CHAT_BOX_CONNECTION_STATUS_CHANGED: 'chatboxconnectionstatuschanged',
        REFRESH_CONVERSATION: 'refreshconversation',
        REFRESH_GROUP_DETAILS: 'refreshgroupdetails',
        AROUND_YOU_COACH_MARK_GOT_IT_CLICK: 'aroundyoucoachmarkgotitclick',
        PROVIDER_PRESENCE_EVENT: "presence_provider",
        SERVICE_REQUEST_REPORTED: "servicerequestreported",
        SERVICE_REQUEST_MESSAGE: 'servierequestmessage',
        STOP_TTS: "stoptexttospeech",
        LANGUAGE_UPDATE: "languagerefresh"
    },
    ARROUND_YOU_ACTIONS: {
        SELECT_SAVED_PIN: 'selectsavepin',
        SAVE_FILTER: 'savefilter'
    },
    PAGES: {
        ACTIVITY_FEED: "ACTIVITY_FEED",
        CONVERSATION: "CONVERSATION",
        AROUND_YOU: "AROUND_YOU",
        MY_STUFF: "MY_STUFF",
        CHAT_BOX: "CHAT_BOX",
        GROUP_CHAT: "GROUP_CHAT",
        SERVICE_REQUESTS: "SERVICE_REQUESTS",
        MY_PINNED_LOCATION: "MY_PINNED_LOCATION",
        EDIT_PINNED_LOCATION: "EDIT_PINNED_LOCATION",
        SET_PIN_LOCATION: "SET_PINNED_LOCATION",
        MAP_OVERLAYS: "MAP_OVERLAYS",
        LOGIN: "LOGIN",
        DISCONTINUE_PROPERTY: "DISCONTINUE_PROPERTY",
        HOUSING_TYPES: "HOUSING_TYPES",
        HOUSING_UNIT: "SELECT UNIT",
        PENDING_CONFIRMATION: "PENDING_CONFIRMATION",
        PROVIDER_DETAIL: "PROVIDER_DETAIL",
        PROVIDER_OPTIONS: "PROVIDER_OPTIONS",
        VERIFY_ADDRESS: "VERIFY_ADDRESS",
        CONVERSATION_SETTINGS: "CONVERSATION_SETTINGS",
        NEW_MESSAGE: "NEW_MESSAGE",
        PUBLIC_PROFILE: "PUBLIC_PROFILE",
        VIEW_IMAGE: "VIEW_IMAGE",
        EDIT_PROFILE: "EDIT_PROFILE",
        ADDRESS_UPDATE: "ADDRESS_UPDATE",
        MY_STUFF_PROFILE: "MY_STUFF_PROFILE",
        MY_STUFF_SETTINGS: "MY_STUFF_SETTINGS",
        MY_STUFF_CHANGE_PASSWORD: "MY_STUFF_CHANGE_PASSWORD",
        MY_STUFF_BLOCKED_USERS: "MY_STUFF_BLOCKED_USERS",
        FEEDBACK: "FEEDBACK",
        REQUEST_PASSWORD: "REQUEST_PASSWORD",
        REQUEST_PASSWORD_ERROR: "REQUEST_PASSWORD_ERROR",
        REQUEST_PASSWORD_SUCCESS: "REQUEST_PASSWORD_SUCCESS",
        GET_STARTED: "GET_STARTED",
        SELECT_PASSWORD: "SELECT_PASSWORD",
        SIGN_UP: "SIGN_UP",
        CHOOSE_PASSWORD: "CHOOSE_PASSWORD",
        APP_ONBOARDING: "APP_ONBOARDING"
    },
    NETWORK: {
        UNKNOWN: "unknown",
        ETHERNET: "ethernet",
        WIFI: "wifi",
        TWOG: "2g",
        THREEG: "3g",
        FOURG: "4g",
        CELLULAR: "cellular",
        NONE: "none"
    },
    CONVERSATION_TYPE: {
        GROUP: 'group',
        SINGLE: 'single'
    },
    GROUP_TYPE: {
        NORMAL: 'normal',
        SERVICE_PROVIDER: 'service_provider',
        HOUSING_PROVIDER: 'housing_provider'
    },
    CONNECTION_STATUS: {
        NOT_CONNECTED: 0,
        INVITED: 1,
        INVITATION_RECEIVED: 2,
        CONNECTED: 3,
        BLOCKED: 4,
        IGNORE: 5,
        UNBLOCKED: 6,
        CONNECTED_BLOCKED: 7
    },
    MESSAGE_CONTENT_TYPE_ID: {
        SYSTEM_MESSAGE_TO_ADMIN: 1,
        SYSTEM_MESSAGE_TO_ALL: 2,
        SERVICE_REQUEST: 3
    },
    CONVERSATION_STATUS: {
        OPEN: 'open',
        ARCHIVE: 'archived'
    },
    DEFAULT_PAGE_SIZE: {
        CHAT_BOX: 100,
        FEED: 10,
        SERVICE_LIST: 25
    },
    USER_STATES: {
        GROUP_ADD: 'add',
        GROUP_REMOVE: 'remove',
        GROUP_RENAME: 'rename',
        CONNECTION_STATUS_CHANGED: 'connectionstatuschanged',
        VERIFICATION_REQUEST: 'verificatonrequest',
        VERIFICATION_CANCEL: 'verificatoncancel',
        SERVICE_REQUEST_REPORTED: 'servicerequestreported'
    },
    ANALYTICS_EVENT: {
        EVENT_CATEGORY_LINK: "Link",
        EVENT_ACTION: "Click",
        EVENT_CATEGORY_START_CONVERSATION: 'Start Conversation',
        SUBMIT_POLL_ANSWER: 'Submit Poll Answer'
    },
    GOOGLE_MAP_PLACE_DETAIL: {
        POSTAL_CODE: 'postal_code',
        STATE: 'administrative_area_level_1',
        CITY: 'locality'
    },
    NETWORK_TIMEOUT: 30000,
    LOADER_MESSAGE: {
        DURATION: 10000
    },
    RESPONSE_STATUS: {
        SUCCESS: 'SUCCESS',
        ERROR: 'ERROR'
    },
    TOASTER: {
        DURATION: '2000',
        POSITION_BOTTOM: 'bottom',
        POSITION_CENTER: 'center'
    },
    PLACEHOLDER_IMAGES: {
        PROFILE_PIC: "./assets/img/image-placeholder.jpg"
    },
    CHANGE_PASSWORD_MESSAGES: {
        MEDIUM_REGX: '^(((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]))((?=.*[a-z]))((?=.*[A-Z]))(?=.*[0-9]))(?=.{8,100})',
    },
    NOTIFICATION_ICON: 'ic_noti',
    NOTIFICATION_COLOR: 'black',
    PRIVACY_NOTICE_URL: "https://rezility.com/privacy-notice/",
    TERM_OF_USE_URL: "https://rezility.com/terms-of-use/",
    FAQ_URL: "https://rezility.com/about-us/faq/",
    CRYPTO_SALT: "#R@z!L!tY",
    USER_TYPE: {
        RESIDENT: 'resident',
        SERVICE_PROVIDER: 'service_provider',
        HOUSING_PROVIDER: 'housing_provider',
        ADMIN: 'rezility_admin',
        ORG_ADMIN: 'org_admin',
        ADVERTISEMENT_MANAGER: 'advertisement_manager',
    },
    UPLOAD_IMAGE_SOURCE: {
        PROFILE: 'profile',
        CHATS: 'chats',
        FEEDS: 'feeds',
        PROPERTIES: 'properties',
        INCIDENTS: 'incidents'
    },
    VERIFICATION_STATUS: {
        VERIFIED: 'verified',
        UNVERIFIED: 'unverified'
    },
    FEED_ACTIONS: {
        POLL: 'poll',
        FB_SHARE: 'fb_share',
        TWITTER_SHARE: 'twitter_share',
        CHAT: 'chat',
        MORE_INFO: 'more_info',
        PROFILE: 'profile',
        PROVIDER: 'provider'
    },
    FACEBOOk_PROFILE_URL: {
        PREFIX: 'https://graph.facebook.com/',
        POSTFIX: '/picture'
    },
    GOOGLE_TRANSLATION_BASE_URL: "https://translation.googleapis.com/language/translate/v2?format=text&key=AIzaSyDrij8RehiEZdbYRarCB9JHEjSye8J_5p4&&model=base",
    MESSAGES: {
        SERVICE_REQUEST_CREATED: "Service request has been created.",
        ADVOCATE_VERIFICATION_PREFIX: "Resident Advocate Requested: ",
        VERIFICATION_PREFIX: "Verification Requested: ",
        ACCEPTED_POSTFIX: "has been verified. You are connected. ",
        DENY_PREFIX: "Verification Denied: ",
        SENT_INVITE_NOT_POSTFIX: "has invited you to connect."
    },
    TEMPLATE: {
        POLL: 'Poll',
        PROFILE: 'Profile',
        PLACEMENT: 'Placement'
    },
    FEED_IMAGE_TYPES: {
        BG_IMAGES: 'images',
        LOGO: 'logos'
    },
    DELIVERY_TYPE: {
        NOW: "now",
        SCHEDULE: "schedule"
    }
};
//# sourceMappingURL=config.js.map

/***/ }),

/***/ 62:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AroundMeService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__providers_http_service__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_environment__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var AroundMeService = (function () {
    function AroundMeService(http) {
        this.http = http;
        this.mapOverlays = { google_places: null, service_interest: null, provider_overlay: null };
    }
    AroundMeService.prototype.getUserAroundmeSettings = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/getuseraroundmesettings';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    AroundMeService.prototype.updateUserAroundmeSettings = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/updateuseraroundmesettings';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    AroundMeService.prototype.placeDetailById = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/getplacedetails';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    AroundMeService.prototype.getNearByPlaces = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/getnearbyplaces';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    AroundMeService.prototype.getPlacePredictions = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/googleplacesautocomplete';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    AroundMeService.prototype.getPinedLocations = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/getpinlocations';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    AroundMeService.prototype.addDropPinLocation = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/savepinlocation';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    AroundMeService.prototype.deletePinLocation = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/deletepinlocations';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    return AroundMeService;
}());
AroundMeService = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* Injectable */])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__providers_http_service__["a" /* HttpService */]])
], AroundMeService);

//# sourceMappingURL=aroundme-service.js.map

/***/ }),

/***/ 63:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProviderService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_environment__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_http_service__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_loader_service__ = __webpack_require__(10);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var ProviderService = (function () {
    function ProviderService(http, pubNubService, loaderService, translateService) {
        this.http = http;
        this.pubNubService = pubNubService;
        this.loaderService = loaderService;
        this.translateService = translateService;
        // console.log('[ In UserService ]');
    }
    ProviderService.prototype.connectToPropertyManager = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/servicelocations/connecttopropertymanager';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ProviderService.prototype.getNearByProperties = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/getnearbyproperties';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ProviderService.prototype.getBuildingsByPropertyId = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/servicelocations/getbuildingslist';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ProviderService.prototype.getUnitDetailsByBuildingId = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/getnearbyproperties';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ProviderService.prototype.findPropertyById = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/serviceLocations/findbypropertyid';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ProviderService.prototype.toggleFollowStatus = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/servicelocations/followproviders';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ProviderService.prototype.toggleFavoriteStatus = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/servicelocations/favproviders';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ProviderService.prototype.updatePeopleLiveInProperty = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_2__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/servicelocations/updatepeopleliveinproperty';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    ProviderService.prototype.sendInvitationMessageToAdmin = function (groupObject, messagePrefixStr, addressStr) {
        var _this = this;
        this.pubNubService.getSupportedLanguageMsg(messagePrefixStr).subscribe(function (msgContent) {
            // Concat original address and translated message for all supported languages (REZ-2392)
            for (var langKey in msgContent) {
                if (msgContent.hasOwnProperty(langKey)) {
                    msgContent[langKey] += addressStr;
                }
            }
            var coreMessageObj = {
                content: msgContent,
                sender_uuid: groupObject.user_id,
                image: '',
                receiver_uuid: groupObject.shared_channel,
                shared_channel: groupObject.shared_channel,
                timetoken: groupObject.joining_time_token,
                tags_array: [],
                video: '',
                is_group: true,
                content_type_id: __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].MESSAGE_CONTENT_TYPE_ID.SYSTEM_MESSAGE_TO_ADMIN
            };
            _this.pubNubService.publish(coreMessageObj.shared_channel, coreMessageObj).subscribe(function (event) {
            });
        }, function (error) {
            _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
        });
    };
    return ProviderService;
}());
ProviderService = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* Injectable */])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__providers_http_service__["a" /* HttpService */], __WEBPACK_IMPORTED_MODULE_4__providers_pubnub_service__["a" /* PubNubService */],
        __WEBPACK_IMPORTED_MODULE_6__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_1__ngx_translate_core__["c" /* TranslateService */]])
], ProviderService);

//# sourceMappingURL=provider-service.js.map

/***/ }),

/***/ 64:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ConnectionList; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_config__ = __webpack_require__(6);

var ConnectionList = (function () {
    function ConnectionList(chatService, pubNubService, translateService, loaderService) {
        this.chatService = chatService;
        this.pubNubService = pubNubService;
        this.translateService = translateService;
        this.loaderService = loaderService;
    }
    ConnectionList.prototype.getUserList = function (params, callback) {
        var _this = this;
        this.chatService.getUserConversation(params).subscribe(function (result) {
            if (result.status === __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                _this.processConversationResult(result, callback);
            }
            else {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            }
        }, function (error) {
            _this.loaderService.showToaster(error);
        });
    };
    ConnectionList.prototype.searchConversation = function (params, callback) {
        var _this = this;
        this.chatService.searchConversation(params).subscribe(function (result) {
            if (result.status === __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                _this.processConversationResult(result, callback);
            }
            else {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            }
        }, function (error) {
            _this.loaderService.showToaster(error);
        });
    };
    ConnectionList.prototype.processConversationResult = function (result, callback) {
        var connected, invitation_sent, invitation_received;
        var otherUsersList, not_connected;
        connected = updateDisplayName(result.connected || []);
        invitation_sent = updateDisplayName(result.invitation_sent || []);
        invitation_received = updateDisplayName(result.invitation_received || []);
        not_connected = updateDisplayName(result.not_connected || []);
        otherUsersList = result.invitation_sent || [];
        otherUsersList = otherUsersList.concat(invitation_received);
        otherUsersList = otherUsersList.concat(not_connected);
        if (callback) {
            callback(null, { otherUsersList: otherUsersList, connected: connected, invitation_sent: invitation_sent, invitation_received: invitation_received, not_connected: not_connected });
        }
        function updateDisplayName(users) {
            users.map(function (item) {
                if (item.type !== __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP) {
                    item['user_id'] = item.receiver_id;
                }
                else {
                    item['user_name'] = item.name;
                    item['user_id'] = item.shared_channel;
                    item['receiver_id'] = item.shared_channel;
                }
                return item;
            });
            return users;
        }
    };
    ConnectionList.prototype.updatePresenceStatus = function (connectedUsersList, callback) {
        var channels = [];
        connectedUsersList.forEach(function (user) {
            if (user.type === __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.SINGLE) {
                channels.push(user.user_id);
            }
        });
        if (channels && channels.length > 0) {
            this.pubNubService.getUsersState(channels).then(function (data) {
                if (data && data.channels) {
                    connectedUsersList.map(function (user, index) {
                        user['presence'] = data.channels[user.user_id] ? "online" : "";
                    });
                }
                if (callback) {
                    callback();
                }
            });
        }
        else {
            if (callback) {
                callback();
            }
        }
    };
    return ConnectionList;
}());

//# sourceMappingURL=connection-list.js.map

/***/ }),

/***/ 65:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoginPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__request_login_link_request_login_link__ = __webpack_require__(480);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__get_started_get_started__ = __webpack_require__(187);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__shared_validationService__ = __webpack_require__(186);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__base_login__ = __webpack_require__(483);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__ngx_translate_core__ = __webpack_require__(8);
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







//import { CONSTANTS } from '../../shared/config';





var LoginPage = (function (_super) {
    __extends(LoginPage, _super);
    function LoginPage(userService, navCtrl, alertCtrl, navParams, analyticsService, events, platform, loaderService, translateService, formBuilder) {
        var _this = _super.call(this, userService, alertCtrl, events, translateService, loaderService) || this;
        _this.userService = userService;
        _this.navCtrl = navCtrl;
        _this.alertCtrl = alertCtrl;
        _this.navParams = navParams;
        _this.analyticsService = analyticsService;
        _this.events = events;
        _this.platform = platform;
        _this.loaderService = loaderService;
        _this.translateService = translateService;
        _this.formBuilder = formBuilder;
        _this.showPasswordIsChecked = false;
        _this.isEmailExist = false;
        _this.navCtrl = navCtrl;
        _this.userService = userService;
        _this.user = {
            password: '',
            email: ''
            //password: 'Rezility123',
            //email: 'babu@yopmail.com'
        };
        _this.events = events;
        _this.submitted = false;
        _this.loginForm = formBuilder.group({
            'username': ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["g" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_1__angular_forms__["g" /* Validators */].maxLength(150), __WEBPACK_IMPORTED_MODULE_6__shared_validationService__["a" /* ValidationService */].emailValidator, __WEBPACK_IMPORTED_MODULE_1__angular_forms__["g" /* Validators */].required])],
            'password': ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["g" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_1__angular_forms__["g" /* Validators */].required])]
            // 'password': ['', Validators.compose([Validators.maxLength(50), ValidationService.strongPasswordValidator, Validators.required])]
        });
        if (navParams.get('email')) {
            _this.user.email = navParams.get('email');
            _this.isEmailExist = true;
        }
        else if (navParams.get('loginLinkSentEmail')) {
            _this.user.email = navParams.get('loginLinkSentEmail');
        }
        return _this;
    }
    LoginPage.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].PAGES.LOGIN);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_10__shared_config__["a" /* CONSTANTS */].PAGES.LOGIN);
        this.userService.userObj["show_coach_marks"] = { all: true, feed: true, conversation: true, around_me: true, profile: true };
    };
    LoginPage.prototype.onLogin = function (user) {
        var _this = this;
        this.submitted = true;
        if (this.loginForm.valid) {
            this.proceedLogin(user, function (errorMsg) {
                //console.log(errorMsg);
                _this.invalidLoginError = errorMsg;
            });
        }
        else {
            this.invalidLoginError = this.translateService.instant('ERROR_MESSAGES.INVALID_USERNAME_PASSWORD');
        }
    };
    LoginPage.prototype.navigateToSignupLandingPage = function () {
        // if (this.navCtrl.length() > 1) {
        //   console.log('navigateToSignupLandingPage1');
        //   this.navCtrl.pop();
        // } else {
        //   console.log('navigateToSignupLandingPage2');
        //   this.navCtrl.setRoot(GetStarted);
        // }
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_5__get_started_get_started__["a" /* GetStarted */]);
    };
    LoginPage.prototype.onRequestLoginLink = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__request_login_link_request_login_link__["a" /* RequestLoginLink */]);
    };
    LoginPage.prototype.showPassword = function () {
        // console.log('hiii showPassword');
        this.showPasswordIsChecked = !this.showPasswordIsChecked;
    };
    return LoginPage;
}(__WEBPACK_IMPORTED_MODULE_8__base_login__["a" /* BaseLoginClass */]));
LoginPage = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'login',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\login\login.html"*/'<ion-header labelHeader *ngIf="isEmailExist=== true">\n\n    <ion-navbar>\n\n        <ion-title>{{\'LOGIN.SIGN_IN\' | translate}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content grey-background class="log-in" [ngClass]="{\'dark-grey-background\': isEmailExist=== true}">\n\n    <div class="wrapper">\n\n        <ion-list>\n\n            <p class="login-logo" *ngIf="isEmailExist=== false"><img src="./assets/img/rezility.png" alt=""/></p>\n\n            <h2 *ngIf="isEmailExist=== true">\n\n                {{\'LOGIN.ACCOUNT_EXIST\' | translate }}\n\n                <span></span>\n\n            </h2>\n\n            <form [formGroup]="loginForm" novalidate>\n\n                <ion-item>\n\n                    <ion-input formControlName="username" class="input14px-black" [(ngModel)]="user.email" name="email" type="email" novalidate placeholder="{{\'LOGIN.EMAIL_ADDRESS\' | translate}}" ngControl="email"></ion-input>\n\n                </ion-item>\n\n                <div class="pwd-field">\n\n                    <ion-item>\n\n                        <ion-input formControlName="password" *ngIf="!showPasswordIsChecked" class="input14px-black" [(ngModel)]="user.password" name="password" ngControl="password" type="password" placeholder="{{\'LOGIN.PASSWORD\' | translate }}"></ion-input>\n\n                        <ion-input formControlName="password" *ngIf="showPasswordIsChecked" class="input14px-black" [(ngModel)]="user.password" name="password" ngControl="password" type="text" placeholder="{{\'LOGIN.PASSWORD\' | translate }}"></ion-input>\n\n                    </ion-item>\n\n                    <ion-icon (click)="showPassword()" class="icons-preview" item-right></ion-icon>\n\n                </div>\n\n                <ion-label class="error-msg" *ngIf="submitted">{{invalidLoginError}}</ion-label>\n\n                <p><span class="button-blue-link" (click)="onRequestLoginLink()">{{\'LOGIN.FORGOT_PASSWORD_BTN\' | translate}} </span></p>\n\n                <div>\n\n                    <button ion-button block round class="button-light-blue" (click)="onLogin(user)">{{\'LOGIN.LOGIN_BTN\' | translate}} </button>\n\n                    <button ion-button block round class="button-contrast-blue" (click)="onFLogin()">{{\'LOGIN.LOGIN_WITH_FB_BTN\' | translate}} </button>\n\n                </div>\n\n            </form>\n\n        </ion-list>\n\n        <ion-card toolbar-bg *ngIf="isEmailExist=== false">\n\n            <p (click)="navigateToSignupLandingPage()">{{\'LOGIN.CREATE_ACC\' | translate}}</p>\n\n        </ion-card>\n\n    </div>\n\n</ion-content>\n\n<ion-nav *ngIf=isLoggedUser [root]="OwnerHubPage" #content swipeBackEnabled="true"></ion-nav>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\login\login.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__providers_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["k" /* NavParams */],
        __WEBPACK_IMPORTED_MODULE_9__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["m" /* Platform */], __WEBPACK_IMPORTED_MODULE_7__providers_loader_service__["a" /* LoaderService */],
        __WEBPACK_IMPORTED_MODULE_11__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_1__angular_forms__["a" /* FormBuilder */]])
], LoginPage);

//# sourceMappingURL=login.js.map

/***/ }),

/***/ 66:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CoreModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var CoreModule = (function () {
    function CoreModule() {
    }
    return CoreModule;
}());
CoreModule = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["L" /* NgModule */])({
        imports: [__WEBPACK_IMPORTED_MODULE_1__angular_forms__["c" /* FormsModule */], __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* ReactiveFormsModule */], __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["f" /* IonicModule */], __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__["b" /* TranslateModule */]],
        exports: [__WEBPACK_IMPORTED_MODULE_1__angular_forms__["c" /* FormsModule */], __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* ReactiveFormsModule */], __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["f" /* IonicModule */], __WEBPACK_IMPORTED_MODULE_3__ngx_translate_core__["b" /* TranslateModule */]],
        declarations: [],
        providers: [],
    })
], CoreModule);

//# sourceMappingURL=core.module.js.map

/***/ }),

/***/ 72:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImageCacheModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives_lazy_load_directive__ = __webpack_require__(834);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_lazy_img_lazy_img_component__ = __webpack_require__(835);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_image_cache_service__ = __webpack_require__(188);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__directives_keyboard_attach_directive__ = __webpack_require__(836);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__directives_auto_resize_directive__ = __webpack_require__(837);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__directives_localized_date_pipe_directive__ = __webpack_require__(838);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};








var ImageCacheModule = (function () {
    function ImageCacheModule() {
    }
    return ImageCacheModule;
}());
ImageCacheModule = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["L" /* NgModule */])({
        imports: [
            __WEBPACK_IMPORTED_MODULE_1__angular_common__["b" /* CommonModule */]
        ],
        declarations: [
            __WEBPACK_IMPORTED_MODULE_2__directives_lazy_load_directive__["a" /* LazyLoadDirective */],
            __WEBPACK_IMPORTED_MODULE_3__components_lazy_img_lazy_img_component__["a" /* LazyImgComponent */],
            __WEBPACK_IMPORTED_MODULE_5__directives_keyboard_attach_directive__["a" /* KeyboardAttachDirective */],
            __WEBPACK_IMPORTED_MODULE_7__directives_localized_date_pipe_directive__["a" /* LocalizedDatePipe */],
            __WEBPACK_IMPORTED_MODULE_6__directives_auto_resize_directive__["a" /* Autoresize */]
        ],
        providers: [__WEBPACK_IMPORTED_MODULE_4__providers_image_cache_service__["a" /* ImageCacheService */]],
        exports: [
            __WEBPACK_IMPORTED_MODULE_3__components_lazy_img_lazy_img_component__["a" /* LazyImgComponent */],
            __WEBPACK_IMPORTED_MODULE_5__directives_keyboard_attach_directive__["a" /* KeyboardAttachDirective */],
            __WEBPACK_IMPORTED_MODULE_7__directives_localized_date_pipe_directive__["a" /* LocalizedDatePipe */],
            __WEBPACK_IMPORTED_MODULE_6__directives_auto_resize_directive__["a" /* Autoresize */]
        ]
    })
], ImageCacheModule);

//# sourceMappingURL=image-cache.module.js.map

/***/ }),

/***/ 827:
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 339,
	"./af.js": 339,
	"./ar": 340,
	"./ar-dz": 341,
	"./ar-dz.js": 341,
	"./ar-kw": 342,
	"./ar-kw.js": 342,
	"./ar-ly": 343,
	"./ar-ly.js": 343,
	"./ar-ma": 344,
	"./ar-ma.js": 344,
	"./ar-sa": 345,
	"./ar-sa.js": 345,
	"./ar-tn": 346,
	"./ar-tn.js": 346,
	"./ar.js": 340,
	"./az": 347,
	"./az.js": 347,
	"./be": 348,
	"./be.js": 348,
	"./bg": 349,
	"./bg.js": 349,
	"./bm": 350,
	"./bm.js": 350,
	"./bn": 351,
	"./bn.js": 351,
	"./bo": 352,
	"./bo.js": 352,
	"./br": 353,
	"./br.js": 353,
	"./bs": 354,
	"./bs.js": 354,
	"./ca": 355,
	"./ca.js": 355,
	"./cs": 356,
	"./cs.js": 356,
	"./cv": 357,
	"./cv.js": 357,
	"./cy": 358,
	"./cy.js": 358,
	"./da": 359,
	"./da.js": 359,
	"./de": 360,
	"./de-at": 361,
	"./de-at.js": 361,
	"./de-ch": 362,
	"./de-ch.js": 362,
	"./de.js": 360,
	"./dv": 363,
	"./dv.js": 363,
	"./el": 364,
	"./el.js": 364,
	"./en-au": 365,
	"./en-au.js": 365,
	"./en-ca": 366,
	"./en-ca.js": 366,
	"./en-gb": 367,
	"./en-gb.js": 367,
	"./en-ie": 368,
	"./en-ie.js": 368,
	"./en-nz": 369,
	"./en-nz.js": 369,
	"./eo": 370,
	"./eo.js": 370,
	"./es": 371,
	"./es-do": 372,
	"./es-do.js": 372,
	"./es-us": 373,
	"./es-us.js": 373,
	"./es.js": 371,
	"./et": 374,
	"./et.js": 374,
	"./eu": 375,
	"./eu.js": 375,
	"./fa": 376,
	"./fa.js": 376,
	"./fi": 377,
	"./fi.js": 377,
	"./fo": 378,
	"./fo.js": 378,
	"./fr": 379,
	"./fr-ca": 380,
	"./fr-ca.js": 380,
	"./fr-ch": 381,
	"./fr-ch.js": 381,
	"./fr.js": 379,
	"./fy": 382,
	"./fy.js": 382,
	"./gd": 383,
	"./gd.js": 383,
	"./gl": 384,
	"./gl.js": 384,
	"./gom-latn": 385,
	"./gom-latn.js": 385,
	"./gu": 386,
	"./gu.js": 386,
	"./he": 387,
	"./he.js": 387,
	"./hi": 388,
	"./hi.js": 388,
	"./hr": 389,
	"./hr.js": 389,
	"./hu": 390,
	"./hu.js": 390,
	"./hy-am": 391,
	"./hy-am.js": 391,
	"./id": 392,
	"./id.js": 392,
	"./is": 393,
	"./is.js": 393,
	"./it": 394,
	"./it.js": 394,
	"./ja": 395,
	"./ja.js": 395,
	"./jv": 396,
	"./jv.js": 396,
	"./ka": 397,
	"./ka.js": 397,
	"./kk": 398,
	"./kk.js": 398,
	"./km": 399,
	"./km.js": 399,
	"./kn": 400,
	"./kn.js": 400,
	"./ko": 401,
	"./ko.js": 401,
	"./ky": 402,
	"./ky.js": 402,
	"./lb": 403,
	"./lb.js": 403,
	"./lo": 404,
	"./lo.js": 404,
	"./lt": 405,
	"./lt.js": 405,
	"./lv": 406,
	"./lv.js": 406,
	"./me": 407,
	"./me.js": 407,
	"./mi": 408,
	"./mi.js": 408,
	"./mk": 409,
	"./mk.js": 409,
	"./ml": 410,
	"./ml.js": 410,
	"./mr": 411,
	"./mr.js": 411,
	"./ms": 412,
	"./ms-my": 413,
	"./ms-my.js": 413,
	"./ms.js": 412,
	"./mt": 414,
	"./mt.js": 414,
	"./my": 415,
	"./my.js": 415,
	"./nb": 416,
	"./nb.js": 416,
	"./ne": 417,
	"./ne.js": 417,
	"./nl": 418,
	"./nl-be": 419,
	"./nl-be.js": 419,
	"./nl.js": 418,
	"./nn": 420,
	"./nn.js": 420,
	"./pa-in": 421,
	"./pa-in.js": 421,
	"./pl": 422,
	"./pl.js": 422,
	"./pt": 423,
	"./pt-br": 424,
	"./pt-br.js": 424,
	"./pt.js": 423,
	"./ro": 425,
	"./ro.js": 425,
	"./ru": 426,
	"./ru.js": 426,
	"./sd": 427,
	"./sd.js": 427,
	"./se": 428,
	"./se.js": 428,
	"./si": 429,
	"./si.js": 429,
	"./sk": 430,
	"./sk.js": 430,
	"./sl": 431,
	"./sl.js": 431,
	"./sq": 432,
	"./sq.js": 432,
	"./sr": 433,
	"./sr-cyrl": 434,
	"./sr-cyrl.js": 434,
	"./sr.js": 433,
	"./ss": 435,
	"./ss.js": 435,
	"./sv": 436,
	"./sv.js": 436,
	"./sw": 437,
	"./sw.js": 437,
	"./ta": 438,
	"./ta.js": 438,
	"./te": 439,
	"./te.js": 439,
	"./tet": 440,
	"./tet.js": 440,
	"./th": 441,
	"./th.js": 441,
	"./tl-ph": 442,
	"./tl-ph.js": 442,
	"./tlh": 443,
	"./tlh.js": 443,
	"./tr": 444,
	"./tr.js": 444,
	"./tzl": 445,
	"./tzl.js": 445,
	"./tzm": 446,
	"./tzm-latn": 447,
	"./tzm-latn.js": 447,
	"./tzm.js": 446,
	"./uk": 448,
	"./uk.js": 448,
	"./ur": 449,
	"./ur.js": 449,
	"./uz": 450,
	"./uz-latn": 451,
	"./uz-latn.js": 451,
	"./uz.js": 450,
	"./vi": 452,
	"./vi.js": 452,
	"./x-pseudo": 453,
	"./x-pseudo.js": 453,
	"./yo": 454,
	"./yo.js": 454,
	"./zh-cn": 455,
	"./zh-cn.js": 455,
	"./zh-hk": 456,
	"./zh-hk.js": 456,
	"./zh-tw": 457,
	"./zh-tw.js": 457
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 827;

/***/ }),

/***/ 828:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BaseConversations; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__connection_list__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_util_date__ = __webpack_require__(181);



var BaseConversations = (function () {
    function BaseConversations(userService, pubNubService, translateService, chatService, loaderService) {
        this.userService = userService;
        this.pubNubService = pubNubService;
        this.translateService = translateService;
        this.chatService = chatService;
        this.loaderService = loaderService;
        this.isConversationsAPICall = false;
        this.usertypeConstant = __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].USER_TYPE;
        this.connectionList = new __WEBPACK_IMPORTED_MODULE_0__connection_list__["a" /* ConnectionList */](chatService, pubNubService, translateService, loaderService);
        //this.userData = this.userService.getUser();
        //// console.log("Conversations - constructor",this.userData );
        this.sharedChannelConversationIdMap = new Map();
        this.sharedChannelIdConversationIndexMap = new Map();
        this.conversations = [];
        this.userType = this.userService.userObj.user_type;
    }
    BaseConversations.prototype.refreshConversationDone = function () {
        var _this = this;
        //// console.log('In refreshConversationDone')
        this.loaderService.dismissLoader();
        setTimeout(function () {
            _this.isConversationsAPICall = true;
        }, 500);
    };
    BaseConversations.prototype.refreshConversation = function (refreshConversationCB, showLoader) {
        var _this = this;
        if (showLoader === void 0) { showLoader = true; }
        var params = {
            user_id: this.userService.userObj.user_id,
            is_group_data_needed: true
        };
        this.isConversationsAPICall = false;
        this.conversations = [];
        this.sharedChannelConversationIdMap = new Map();
        this.sharedChannelIdConversationIndexMap = new Map();
        if (showLoader) {
            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        }
        this.connectionList.getUserList(params, function (error, response) {
            if (response) {
                var connections_1 = response.connected || [];
                var invitation_sent = response.invitation_sent.filter(function (self) {
                    return (self.status === __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].CONVERSATION_STATUS.OPEN) ? true : false;
                });
                connections_1 = connections_1.concat(response.invitation_received);
                connections_1 = connections_1.concat(invitation_sent);
                _this.getLastConversationFromPubNub(connections_1, function (sharedChannelConversationIdMap) {
                    _this.updateLastConversation(connections_1, sharedChannelConversationIdMap, function (conversations1) {
                        _this.sortConversation(conversations1, function (conversations2) {
                            _this.conversations = conversations2;
                            _this.updatePresenceStatus();
                            if (refreshConversationCB) {
                                refreshConversationCB.call(_this);
                            }
                        });
                    });
                });
            }
            else {
                if (refreshConversationCB) {
                    refreshConversationCB.call(_this);
                }
            }
        });
    };
    BaseConversations.prototype.updateSubscribeChannels = function () {
        var _this = this;
        var newChnnelsForSubscibe = [];
        this.pubNubService.getSubscribedChannelsByUUID(this.userService.userObj.user_id).then(function (response) {
            //// console.log('In getSubscribedChannels response', response);
            if (response && response.channels) {
                _this.conversations.forEach(function (conversation) {
                    if (conversation.type === __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP && !conversation.leaving_time_token && response.channels.indexOf(conversation.shared_channel) === -1) {
                        newChnnelsForSubscibe.push(conversation.shared_channel);
                    }
                });
                // console.log('In updateSubscribeChannels newChnnelsForSubscibe', newChnnelsForSubscibe);
                if (newChnnelsForSubscibe && newChnnelsForSubscibe.length > 0) {
                    //this.pubNubService.subscribe(newChnnelsForSubscibe, true);
                    _this.pubNubService.addChanneltoMyGroup(newChnnelsForSubscibe, _this.userService.userObj.user_id + '_group');
                    _this.pubNubService.setPushNotificationChannels(newChnnelsForSubscibe);
                }
            }
        });
    };
    BaseConversations.prototype.sortConversation = function (conversations, sortConversationCallback) {
        var _this = this;
        var _conversations = JSON.parse(JSON.stringify(conversations));
        _conversations.sort(function (a, b) {
            if (a.timetoken == undefined) {
                return 1;
            }
            else if (b.timetoken == undefined) {
                return -1;
            }
            else {
                return b.timetoken - a.timetoken;
            }
        });
        // Update sharedChannelIdConversationIndexMap as per index value
        _conversations.forEach(function (self, index) {
            _this.sharedChannelIdConversationIndexMap[self.shared_channel] = index;
        });
        if (sortConversationCallback) {
            sortConversationCallback(_conversations);
        }
    };
    BaseConversations.prototype.getLastConversationFromPubNub = function (conversations, callback) {
        var _this = this;
        var that = this, lastObject = null, conversationIndex = 0, endTimeToken = null, startTimeToken = null, historyLimit;
        if (conversations && conversations.length > 0) {
            conversations.forEach(function (conversation) {
                endTimeToken = null;
                startTimeToken = null;
                endTimeToken = _this.pubNubService.getConversationLastReadTimetoken(conversation.shared_channel);
                //// console.log('[Before Calling history api]', conversation.shared_channel, endTimeToken);
                // TODO 
                // In case of edit group if user added some oneone
                // They shouldn't be see the last conversation message which was there before adding to them            
                if (conversation.joining_time_token && endTimeToken && conversation.joining_time_token > endTimeToken) {
                    endTimeToken = conversation.joining_time_token;
                    //// console.log('Case#1');
                    //// console.log('In case of edit group if user added some oneone They should not be see the last conversation message which was there before adding to them');
                }
                if (conversation.leaving_time_token !== undefined && conversation.leaving_time_token > 0) {
                    startTimeToken = endTimeToken;
                    endTimeToken = conversation.leaving_time_token;
                    //// console.log('Case#2');
                }
                // If last read timestamp is null then  get only single record otherwise get as per timestamp             
                historyLimit = (endTimeToken) ? __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].CONVERSATION_MAX_UNREAD_COUNT : 1;
                //// console.log('[Calling history api joining_time_token, historyLimit,endTimeToken]', historyLimit, conversation.shared_channel, conversation.joining_time_token, conversation.leaving_time_token, startTimeToken, endTimeToken);
                that.pubNubService.history(conversation.shared_channel, false, historyLimit, startTimeToken, endTimeToken).subscribe(function (event) {
                    ++conversationIndex;
                    if (event.value && event.value.messages && event.value.messages.length > 0) {
                        var lastMsgIndex = event.value.messages.length - 1, shared_channel = null;
                        lastObject = event.value.messages[lastMsgIndex].entry;
                        lastObject.content = _this.chatService.getMessageContent(lastObject.content);
                        lastObject['timetoken'] = event.value.messages[lastMsgIndex].timetoken;
                        shared_channel = lastObject.shared_channel || lastObject.shared_channel_id;
                        that.sharedChannelConversationIdMap[shared_channel] = lastObject;
                        // Increase lastMsgIndex by 1 only when user received message on new conversation or group
                        if (lastMsgIndex === 0 && that.pubNubService.getConversationLastReadTimetoken(shared_channel) < lastObject.timetoken
                            && _this.userService.userObj.user_id != lastObject.sender_uuid) {
                            lastMsgIndex += 1;
                        }
                        // Reset badgecount as per conversation metadata
                        that.pubNubService.setConversationLastState(conversation.shared_channel, lastMsgIndex);
                    }
                    if ((conversations.length === conversationIndex) && callback) {
                        callback(that.sharedChannelConversationIdMap);
                    }
                }, function (error) {
                    // console.log(JSON.stringify(error));
                    callback(that.sharedChannelConversationIdMap);
                });
            });
        }
        else {
            callback([]);
        }
    };
    BaseConversations.prototype.updateLastConversation = function (conversations, sharedChannelConversationIdMap, callback) {
        var _this = this;
        var lastObject = null;
        conversations.map(function (conversation, index) {
            // set user_name on outer object from receiver_data            
            lastObject = {};
            if (sharedChannelConversationIdMap[conversation.shared_channel] !== undefined) {
                lastObject = sharedChannelConversationIdMap[conversation.shared_channel];
                conversation['latestMessage'] = lastObject.content;
                conversation['timetoken'] = lastObject.timetoken;
                conversation['latestMessageTimestamp'] = Object(__WEBPACK_IMPORTED_MODULE_2__shared_util_date__["b" /* formatDate */])(_this.pubNubService.getDateTime(lastObject.timetoken), _this.translateService);
                //conversation['channel_id'] = conversation.shared_channel;
                // get existing badgeCount count
                conversation['badgeCount'] = _this.pubNubService.getConversationBadgeCount(conversation.shared_channel);
            }
            // This block is to handle group addition and removal of user             
            if (conversation['leaving_time_token']) {
                conversation['latestMessage'] = _this.translateService.instant('ERROR_MESSAGES.GRP_REMOVED');
                conversation['timetoken'] = conversation['leaving_time_token'];
                conversation['latestMessageTimestamp'] = Object(__WEBPACK_IMPORTED_MODULE_2__shared_util_date__["b" /* formatDate */])(_this.pubNubService.getDateTime(conversation['leaving_time_token']), _this.translateService);
            }
            else if (!conversation['latestMessage'] && !conversation['leaving_time_token'] && conversation['joining_time_token']) {
                var latestMessage = '';
                if (conversation.type === __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.SINGLE && (conversation.connection_status === __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED || conversation.connection_status === __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED_BLOCKED)) {
                    latestMessage = _this.translateService.instant('ERROR_MESSAGES.INVITATION_ACCEPTED_PREFIX') + conversation.user_name + ".";
                }
                else if (conversation.type === __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP) {
                    if (conversation.group_type === __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].GROUP_TYPE.NORMAL) {
                        latestMessage = _this.translateService.instant('ERROR_MESSAGES.GRP_JOINED');
                    }
                    else if (conversation.group_type === __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].GROUP_TYPE.SERVICE_PROVIDER) {
                        latestMessage = _this.translateService.instant('ERROR_MESSAGES.INVITATION_ACCEPTED_PREFIX') + conversation.user_name + ".";
                    }
                    else if (conversation.group_type === __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].GROUP_TYPE.HOUSING_PROVIDER) {
                        latestMessage = _this.translateService.instant('ERROR_MESSAGES.INVITATION_ACCEPTED_PREFIX') + conversation.user_name + ".";
                    }
                }
                conversation['latestMessage'] = latestMessage;
                conversation['timetoken'] = conversation['joining_time_token'];
                conversation['latestMessageTimestamp'] = Object(__WEBPACK_IMPORTED_MODULE_2__shared_util_date__["b" /* formatDate */])(_this.pubNubService.getDateTime(conversation['joining_time_token']), _this.translateService);
                // Added conversation object in sharedChannelConversationIdMap of those conversation which doesn't has message
                if (!_this.sharedChannelConversationIdMap[conversation.shared_channel]) {
                    _this.sharedChannelConversationIdMap[conversation.shared_channel] = conversation;
                }
            }
            // // console.log('updateLastConversation', conversation);
            if (conversation.status === __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].CONVERSATION_STATUS.ARCHIVE && conversation.badgeCount > 0) {
                conversation.status = __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].CONVERSATION_STATUS.OPEN;
                _this.updateConversationStatus(conversation);
            }
            return conversation;
        });
        if (callback) {
            callback(conversations);
        }
    };
    BaseConversations.prototype.updateConversations = function (message, timetoken) {
        var _this = this;
        var shared_channel = message.shared_channel || message.shared_channel_id;
        var conversation = null, conversationIndex;
        if (this.sharedChannelIdConversationIndexMap[shared_channel] !== undefined) {
            conversationIndex = this.sharedChannelIdConversationIndexMap[shared_channel];
            conversation = this.conversations[conversationIndex];
            // Resident sent second subsequent request for address verification then don't increment/show count, refresh page so that 
            if (message.content_type_id) {
                this.refreshConversation(this.refreshConversationDone, false);
            }
            else if (shared_channel !== this.userService.getCurrentPage().userid) {
                conversation.badgeCount = (conversation.badgeCount === undefined) ? 1 : conversation.badgeCount + 1;
                // Update badgeCount into localstorage
                this.pubNubService.setConversationLastState(shared_channel, conversation.badgeCount);
            }
            else {
                //// console.log('Updated timetoken for shared_channel,', shared_channel, message.timetoken);
                this.pubNubService.setConversationLastState(shared_channel, 0, timetoken);
            }
            conversation.latestMessage = this.chatService.getMessageContent(message.content);
            conversation.timetoken = timetoken;
            conversation.latestMessageTimestamp = Object(__WEBPACK_IMPORTED_MODULE_2__shared_util_date__["b" /* formatDate */])(this.pubNubService.getDateTime(timetoken), this.translateService);
            if (conversation.status === __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].CONVERSATION_STATUS.ARCHIVE) {
                conversation.status = __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].CONVERSATION_STATUS.OPEN;
                this.updateConversationStatus(conversation);
            }
            this.sortConversation(this.conversations, function (conversations) {
                _this.conversations = conversations;
            });
        }
        else {
            //console.log('In updateConversations, refreshConversation for new chat.', message);
            // Resident sent first request for address verification then don't increment/show count 
            if (!message.content_type_id) {
                timetoken -= 10;
                this.pubNubService.setConversationLastState(shared_channel, 1, timetoken);
                this.refreshConversation(this.refreshConversationDone, false);
            }
        }
    };
    BaseConversations.prototype.updatePresenceStatus = function () {
        var _this = this;
        var channels = [];
        this.conversations.forEach(function (conversation) {
            if (conversation.type === __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.SINGLE) {
                channels.push(conversation.user_id);
            }
        });
        this.pubNubService.getUsersState(channels).then(function (data) {
            if (data.channels) {
                _this.conversations.map(function (conversation, index) {
                    conversation.presence = data.channels[conversation.user_id] ? "online" : "";
                });
            }
        });
    };
    BaseConversations.prototype.updateSentConversations = function (message) {
        var _this = this;
        var conversation = null, conversationIndex;
        var shared_channel = message.shared_channel || message.shared_channel_id;
        if (this.sharedChannelConversationIdMap[shared_channel] && this.sharedChannelIdConversationIndexMap[shared_channel] !== undefined) {
            conversationIndex = this.sharedChannelIdConversationIndexMap[shared_channel];
            conversation = this.conversations[conversationIndex];
            //// console.log(conversation.user_id, "-", message.receiver_uuid, "-", message)
            if (conversation.user_id == message.receiver_uuid) {
                conversation.latestMessage = this.chatService.getMessageContent(message.content);
                //conversation.channel_id = conversation.shared_channel;
                conversation.timetoken = message.timetoken;
                conversation.latestMessageTimestamp = Object(__WEBPACK_IMPORTED_MODULE_2__shared_util_date__["b" /* formatDate */])(this.pubNubService.getDateTime(message.timetoken), this.translateService);
            }
            this.sortConversation(this.conversations, function (conversations) {
                _this.conversations = conversations;
            });
        }
        else {
            // console.log('refreshConversation for sent  chat.');
            this.refreshConversation(this.refreshConversationDone, false);
        }
    };
    BaseConversations.prototype.exitGroup = function (conversation) {
        var _this = this;
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        var that = this;
        this.pubNubService.getTimeToken(function (pubnubtimetoken) {
            var userid = _this.userService.userObj.user_id;
            var removeRequest = {
                user_id: userid,
                shared_channel: conversation.shared_channel,
                name: conversation.name,
                member_id: userid,
                leaving_time_token: pubnubtimetoken
            };
            that.chatService.removeMemberFromGroup(removeRequest).subscribe(function (result) {
                if (result.status === __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                    that.pubNubService.removeChannelFromGroup([userid], conversation.shared_channel, conversation.name, pubnubtimetoken);
                }
                else {
                    _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                    _this.loaderService.dismissLoader();
                }
            }, function (error) {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                _this.loaderService.dismissLoader();
            });
        });
    };
    BaseConversations.prototype.updateConversationStatus = function (conversation) {
        var _this = this;
        var params = {
            user_id: this.userService.userObj.user_id,
            shared_channel: conversation.shared_channel,
            status: conversation.status
        };
        this.chatService.updateConversationStatus(params).subscribe(function (result) {
            //console.log('Inside updateConversationStatus', result);
            _this.loaderService.dismissLoader();
            if (result.status !== __WEBPACK_IMPORTED_MODULE_1__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            }
        });
    };
    return BaseConversations;
}());

//# sourceMappingURL=base-conversations.js.map

/***/ }),

/***/ 829:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BaseChatBox; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_config__ = __webpack_require__(6);

var BaseChatBox = (function () {
    function BaseChatBox(pubNubService, userService, chatService, loaderService, translateService, events, element) {
        this.pubNubService = pubNubService;
        this.userService = userService;
        this.chatService = chatService;
        this.loaderService = loaderService;
        this.translateService = translateService;
        this.events = events;
        this.element = element;
        this.messages = [];
        this.usertype = __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].USER_TYPE;
        this.chatBoxInfiniteScrollEnabled = false;
        this.chatBoxInfiniteScrollShow = true;
        this.userData = this.userService.getUser();
        this.messageModel = '';
        this.contactIdDetailMap = new Map();
        this.contactIdDetailMap[this.userData.user_id] = { user_name: this.userData.user_name, profile_pic: this.userData.profile.profile_pic };
    }
    BaseChatBox.prototype.setContactIdDetailMap = function (userList) {
        var _this = this;
        userList.forEach(function (element) {
            _this.contactIdDetailMap[element.user_id] = { profile_pic: element.profile_pic, user_name: element.user_name };
        });
    };
    BaseChatBox.prototype.loadMoreMessage = function (infiniteScroll) {
        var _this = this;
        this.loadSelectedUserHistory(this.selectedUser.shared_channel, function (error, isAllMessageLoaded) {
            if (isAllMessageLoaded === void 0) { isAllMessageLoaded = true; }
            infiniteScroll.complete();
            _this.chatBoxInfiniteScrollEnabled = !isAllMessageLoaded;
            if (!_this.chatBoxInfiniteScrollEnabled) {
                _this.chatBoxInfiniteScrollShow = false;
            }
            //s console.log('chatBoxInfiniteScrollEnabled', this.chatBoxInfiniteScrollEnabled);
        });
    };
    BaseChatBox.prototype.loadSelectedUserHistory = function (shared_channel, callback) {
        var that = this;
        var startTimeToken = null, endTimeToken = that.selectedUser.joining_time_token;
        if (!this.pageState) {
            startTimeToken = new Date().getTime() * 10000;
            if (that.selectedUser.leaving_time_token !== undefined && that.selectedUser.leaving_time_token > 0) {
                startTimeToken = that.selectedUser.leaving_time_token;
            }
            this.pageState = {
                messages: [],
                startTimeToken: startTimeToken,
                endTimeToken: endTimeToken
            };
        }
        that.pubNubService.loadChathistory(shared_channel, true, __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].CONVERSATION_MAX_UNREAD_COUNT, this.pageState.startTimeToken, endTimeToken, true, function (error, response) {
            if (!error) {
                that.pageState['messages'] = that.formatMessages(response.messages).concat(that.pageState.messages);
                that.pageState['endTimeToken'] = response.endTimeToken;
                that.pageState['startTimeToken'] = response.startTimeToken;
                that.messages = that.pageState.messages || [];
                if (response.messages.length < __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].CONVERSATION_MAX_UNREAD_COUNT) {
                    console.log('End of the messages!');
                    if (callback) {
                        callback(null, true);
                    }
                }
                else {
                    if (callback) {
                        callback(null, false);
                    }
                }
            }
        });
    };
    BaseChatBox.prototype.formatMessages = function (messages) {
        var _this = this;
        var tempmessages = [];
        messages = messages || [];
        messages.forEach(function (element) {
            if (element.entry) {
                tempmessages.push(_this.createMessage(element.entry));
            }
        });
        return tempmessages;
    };
    BaseChatBox.prototype.createMessage = function (message) {
        var messageObj, contactObj = {}, senderObj = this.contactIdDetailMap[message.sender_uuid];
        if (senderObj) {
            contactObj = { user_name: senderObj.user_name, profile_pic: senderObj.profile_pic };
        }
        //console.log(contactObj);
        messageObj = {
            content: this.chatService.getMessageContent(message.content),
            shared_channel: message.shared_channel,
            image: message.image,
            sender_uuid: message.sender_uuid,
            receiver_uuid: message.receiver_uuid,
            video: message.video,
            timetoken: message.timetoken / 10000
        };
        if (message.content_type_id) {
            messageObj['content_type_id'] = message.content_type_id;
        }
        Object.assign(messageObj, contactObj);
        return messageObj;
    };
    BaseChatBox.prototype.sendMessage = function (messageStr) {
        var _this = this;
        this.messageModel = '';
        if (this.selectedUser.leaving_time_token !== undefined && this.selectedUser.leaving_time_token > 0) {
            this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.GRP_SEND_ERROR_MSG'), 'center');
            // console.log(this.translateService.instant('ERROR_MESSAGES.GRP_SEND_ERROR_MSG'));
        }
        else {
            this.pubNubService.getTimeToken(function (pubnubtimestoken) {
                if (_this.selectedUser.shared_channel) {
                    _this.pubNubService.getSupportedLanguageMsg(messageStr, _this.selectedUser.languages, false).subscribe(function (msgContent) {
                        var coreMessageObj = {
                            content: msgContent,
                            sender_uuid: _this.userData.user_id,
                            image: _this.pictureModel,
                            receiver_uuid: _this.selectedUser.receiver_id,
                            shared_channel: _this.selectedUser.shared_channel,
                            timetoken: pubnubtimestoken,
                            tags_array: [],
                            video: _this.videoPath,
                            is_group: false
                        };
                        _this.sendMessageToPubnub(coreMessageObj);
                    }, function (error) {
                        _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                    });
                }
            });
        }
        this.resetFocus();
    };
    BaseChatBox.prototype.getPushNotificationTitle = function () {
        var title = '';
        if (this.userService.userName != '') {
            title = this.userService.userName;
        }
        else {
            title = this.userData.profile.first_name + ' ' + this.userData.profile.last_name;
        }
        //Update title to include group name 
        if (this.selectedUser.type && this.selectedUser.type === __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP) {
            title = title + '@' + this.selectedUser.user_name;
        }
        return title;
    };
    BaseChatBox.prototype.getMessageTagsArray = function (message) {
        var tagslistArray = [], tags_array = [];
        tagslistArray = message.split(' ');
        for (var i = 0; i < tagslistArray.length; i++) {
            if (tagslistArray[i].indexOf('#') == 0) {
                tags_array.push(tagslistArray[i]);
            }
        }
        return tags_array;
    };
    BaseChatBox.prototype.sendMessageToPubnub = function (messageObj) {
        var _this = this;
        var that = this, coreMessageObj, sharedChannelObj, receiverObj;
        var pushNotificationMsg, pushNotificationObj, isMessagePublishOnPubnub = false;
        this.resizeWriteMsgTextArea();
        coreMessageObj = messageObj;
        coreMessageObj.tags_array = this.getMessageTagsArray(this.chatService.getMessageContent(coreMessageObj.content));
        coreMessageObj['is_group'] = (this.selectedUser.type && this.selectedUser.type === __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP) ? true : false;
        //message object for shared channel
        sharedChannelObj = coreMessageObj;
        pushNotificationMsg = {
            title: this.getPushNotificationTitle(),
            message: this.chatService.getMessageContent(coreMessageObj.content, this.chatService.getNotificationLang(this.selectedUser.languages)),
            sender: this.userData.user_name
        };
        pushNotificationObj = this.pubNubService.getPushNotificationMessage(pushNotificationMsg);
        if (this.selectedUser.type && this.selectedUser.type == __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP) {
            sharedChannelObj = Object.assign(sharedChannelObj, pushNotificationObj);
        }
        //message object for receiver channel         
        receiverObj = Object.assign({}, pushNotificationObj, coreMessageObj);
        //Change status to open for archived 
        if (this.selectedUser.status === __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].CONVERSATION_STATUS.ARCHIVE) {
            this.selectedUser.status = __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].CONVERSATION_STATUS.OPEN;
            this.events.publish(__WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].APP_EVENTS.REFRESH_CONVERSATION);
            this.updateConversationStatus(this.selectedUser);
        }
        this.pubNubService.publish(coreMessageObj.shared_channel, sharedChannelObj).subscribe(function (event) {
            //console.log('Publish message to on channel', coreMessageObj.shared_channel, sharedChannelObj, event);
            if (!isMessagePublishOnPubnub) {
                isMessagePublishOnPubnub = true;
                var timetoken = event.value.timetoken;
                // update last read timestamp
                receiverObj['timetoken'] = timetoken;
                coreMessageObj['timetoken'] = timetoken;
                if (_this.selectedUser.type === __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP) {
                    _this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].PAGES.GROUP_CHAT, that.selectedUser.receiver_id);
                }
                else if (_this.selectedUser.connection_status && _this.selectedUser.connection_status !== __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED_BLOCKED) {
                    sendToSelectedUser.call(_this, receiverObj);
                }
                else {
                    // Do not send 1:1 message to received if they have blocked you. Just update the chat window
                    _this.messages.push(_this.createMessage(coreMessageObj));
                    _this.events.publish(__WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].APP_EVENTS.KEYBOARD);
                }
                _this.pubNubService.setConversationLastState(coreMessageObj.shared_channel, 0, timetoken);
                _this.events.publish(__WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].APP_EVENTS.SENT_MESSAGE, coreMessageObj);
                _this.archiveChat(coreMessageObj);
                // Reset the messageStr input
                _this.resetMessageModel();
            }
        }, function (error) {
            _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
        });
        function sendToSelectedUser(receiverObj) {
            var _this = this;
            that.pubNubService.publish(coreMessageObj.receiver_uuid, receiverObj).subscribe(function (event) {
                // console.log('Publish message to reciever. ', coreMessageObj.receiver_uuid, event, coreMessageObj, receiverObj);
            }, function (error) {
                that.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            });
            that.messages.push(that.createMessage(coreMessageObj));
            that.events.publish(__WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].APP_EVENTS.KEYBOARD);
        }
    };
    BaseChatBox.prototype.resizeWriteMsgTextArea = function () {
        //let textareaEle = this.element.nativeElement.querySelector("textarea");
        this.element.nativeElement.querySelector("textarea").style.height = '15px';
    };
    BaseChatBox.prototype.archiveChat = function (coreMessageObj) {
        var _this = this;
        var archiveObj = {
            user_id: this.userData.user_id,
            content: coreMessageObj.content,
            sender_uuid: coreMessageObj.sender_uuid,
            shared_channel: coreMessageObj.shared_channel,
            date: coreMessageObj.date,
            image: this.pictureModel,
            video: this.videoPath,
            tags: coreMessageObj.tagsArray
        };
        if (this.selectedUser.type !== __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP) {
            archiveObj.receiver_uuid = coreMessageObj.receiver_uuid;
        }
        this.chatService.chatArchives(archiveObj).subscribe(function (res) {
            //// console.log('In chatArchives response', res);
        }, function (error) {
            _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
        });
    };
    BaseChatBox.prototype.resetMessageModel = function () {
        this.messageModel = '';
        this.pictureModel = '';
        this.videoPath = '';
    };
    BaseChatBox.prototype.resetFocus = function () {
        var textareaEle = this.element.nativeElement.querySelector("textarea");
        textareaEle.focus();
    };
    BaseChatBox.prototype.updateConversationStatus = function (conversation) {
        var _this = this;
        var params = {
            user_id: this.userService.userObj.user_id,
            shared_channel: conversation.shared_channel,
            status: conversation.status
        };
        this.chatService.updateConversationStatus(params).subscribe(function (result) {
            //console.log('Inside updateConversationStatus', result);
            _this.loaderService.dismissLoader();
            if (result.status !== __WEBPACK_IMPORTED_MODULE_0__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                _this.loaderService.showToaster(_this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
            }
        });
    };
    return BaseChatBox;
}());

//# sourceMappingURL=base-chat-box.js.map

/***/ }),

/***/ 833:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ActivityFeedModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_core_module__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__activity_feed__ = __webpack_require__(179);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__activity_service__ = __webpack_require__(42);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_image_cache_module__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__contact_list_contact_list__ = __webpack_require__(462);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__create_feed_create_feed__ = __webpack_require__(463);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__create_placement_feed_create_placement_feed__ = __webpack_require__(182);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__shared_modals_crop_image_crop_image__ = __webpack_require__(465);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__create_placement_feed_description_feed_description_feed__ = __webpack_require__(464);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__create_placement_feed_selectImage_select_image__ = __webpack_require__(466);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__create_poll_feed_create_poll_feed__ = __webpack_require__(467);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__create_poll_feed_poll_description_poll_description__ = __webpack_require__(468);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__shared_modals_set_delivery_feed_set_delivery_feed__ = __webpack_require__(183);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};














var ActivityFeedModule = (function () {
    function ActivityFeedModule() {
    }
    return ActivityFeedModule;
}());
ActivityFeedModule = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["L" /* NgModule */])({
        imports: [__WEBPACK_IMPORTED_MODULE_1__shared_core_module__["a" /* CoreModule */], __WEBPACK_IMPORTED_MODULE_4__shared_image_cache_module__["a" /* ImageCacheModule */]],
        exports: [],
        entryComponents: [__WEBPACK_IMPORTED_MODULE_2__activity_feed__["a" /* ActivityPage */], __WEBPACK_IMPORTED_MODULE_5__contact_list_contact_list__["a" /* ContactListPage */], __WEBPACK_IMPORTED_MODULE_6__create_feed_create_feed__["a" /* CreateFeedPage */], __WEBPACK_IMPORTED_MODULE_7__create_placement_feed_create_placement_feed__["a" /* CreatePlacementFeedPage */], __WEBPACK_IMPORTED_MODULE_9__create_placement_feed_description_feed_description_feed__["a" /* DescriptionFeedPage */], __WEBPACK_IMPORTED_MODULE_8__shared_modals_crop_image_crop_image__["a" /* CropImageModal */], __WEBPACK_IMPORTED_MODULE_10__create_placement_feed_selectImage_select_image__["a" /* SelectImage */], __WEBPACK_IMPORTED_MODULE_11__create_poll_feed_create_poll_feed__["a" /* CreatePollFeedPage */], __WEBPACK_IMPORTED_MODULE_12__create_poll_feed_poll_description_poll_description__["a" /* PollDescriptionPage */], __WEBPACK_IMPORTED_MODULE_13__shared_modals_set_delivery_feed_set_delivery_feed__["a" /* SetDeliveryFeedModal */]],
        declarations: [__WEBPACK_IMPORTED_MODULE_2__activity_feed__["a" /* ActivityPage */], __WEBPACK_IMPORTED_MODULE_5__contact_list_contact_list__["a" /* ContactListPage */], __WEBPACK_IMPORTED_MODULE_6__create_feed_create_feed__["a" /* CreateFeedPage */], __WEBPACK_IMPORTED_MODULE_7__create_placement_feed_create_placement_feed__["a" /* CreatePlacementFeedPage */], __WEBPACK_IMPORTED_MODULE_9__create_placement_feed_description_feed_description_feed__["a" /* DescriptionFeedPage */], __WEBPACK_IMPORTED_MODULE_8__shared_modals_crop_image_crop_image__["a" /* CropImageModal */], __WEBPACK_IMPORTED_MODULE_10__create_placement_feed_selectImage_select_image__["a" /* SelectImage */], __WEBPACK_IMPORTED_MODULE_11__create_poll_feed_create_poll_feed__["a" /* CreatePollFeedPage */], __WEBPACK_IMPORTED_MODULE_12__create_poll_feed_poll_description_poll_description__["a" /* PollDescriptionPage */], __WEBPACK_IMPORTED_MODULE_13__shared_modals_set_delivery_feed_set_delivery_feed__["a" /* SetDeliveryFeedModal */]],
        providers: [__WEBPACK_IMPORTED_MODULE_3__activity_service__["a" /* ActivityService */]],
        schemas: [__WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* CUSTOM_ELEMENTS_SCHEMA */]]
    })
], ActivityFeedModule);

//# sourceMappingURL=activity-feed.module.js.map

/***/ }),

/***/ 834:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LazyLoadDirective; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__providers_image_cache_service__ = __webpack_require__(188);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_config__ = __webpack_require__(6);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/**
 * This directive is charge of cache the images and emit a loaded event
 */
var LazyLoadDirective = (function () {
    function LazyLoadDirective(el, imgCacheService, renderer) {
        this.el = el;
        this.imgCacheService = imgCacheService;
        this.renderer = renderer;
        this.src = '';
        this.loaded = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["w" /* EventEmitter */]();
    }
    LazyLoadDirective.prototype.ngOnInit = function () {
        var _this = this;
        // get img element
        var nativeElement = this.el.nativeElement;
        var render = this.renderer;
        // add load listener
        this.loadEvent = render.listen(nativeElement, 'load', function () {
            render.addClass(nativeElement, 'loaded');
            _this.loaded.emit();
        });
        this.errorEvent = render.listen(nativeElement, 'error', function () {
            nativeElement.remove();
        });
        if (this.src === __WEBPACK_IMPORTED_MODULE_2__shared_config__["a" /* CONSTANTS */].PLACEHOLDER_IMAGES.PROFILE_PIC) {
            render.setAttribute(nativeElement, 'src', this.src);
        }
        else {
            this.imgCacheService.isCached(this.src).then(function (value) {
                if (value) {
                    console.log("===Load cached image");
                    _this.imgCacheService.cacheImage(_this.src).then(function (value) {
                        render.setAttribute(nativeElement, 'src', value);
                    });
                }
                else if (_this.lowData) {
                    console.log("===Low Data Image");
                }
                else {
                    console.log("===Low Normal Image");
                    _this.imgCacheService.cacheImage(_this.src).then(function (value) {
                        render.setAttribute(nativeElement, 'src', value);
                    });
                }
            });
        }
    };
    LazyLoadDirective.prototype.ngOnDestroy = function () {
        // remove listeners
        this.loadEvent();
        this.errorEvent();
    };
    return LazyLoadDirective;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["E" /* Input */])('inputSrc'),
    __metadata("design:type", Object)
], LazyLoadDirective.prototype, "src", void 0);
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["E" /* Input */])('lowData'),
    __metadata("design:type", Boolean)
], LazyLoadDirective.prototype, "lowData", void 0);
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["S" /* Output */])(),
    __metadata("design:type", Object)
], LazyLoadDirective.prototype, "loaded", void 0);
LazyLoadDirective = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* Directive */])({
        selector: '[lazy-load]'
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ElementRef */],
        __WEBPACK_IMPORTED_MODULE_1__providers_image_cache_service__["a" /* ImageCacheService */],
        __WEBPACK_IMPORTED_MODULE_0__angular_core__["_1" /* Renderer2 */]])
], LazyLoadDirective);

//# sourceMappingURL=lazy-load.directive.js.map

/***/ }),

/***/ 835:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LazyImgComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

/**
 * Component in charge of lazy load images and cache them
 */
var LazyImgComponent = (function () {
    function LazyImgComponent() {
        this.lowData = false;
        this.placeholderActive = true;
    }
    return LazyImgComponent;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["E" /* Input */])(),
    __metadata("design:type", String)
], LazyImgComponent.prototype, "inputSrc", void 0);
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["E" /* Input */])(),
    __metadata("design:type", Boolean)
], LazyImgComponent.prototype, "lowData", void 0);
LazyImgComponent = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'lazy-img',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\components\lazy-img\lazy-img.html"*/'  <div text-center [ngClass]="{ \'download-placeholder\': placeholderActive }">\n\n    <img [inputSrc]="inputSrc" [lowData]="lowData" lazy-load (loaded)="placeholderActive = false"/>\n\n  </div>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\components\lazy-img\lazy-img.html"*/
    })
], LazyImgComponent);

//# sourceMappingURL=lazy-img.component.js.map

/***/ }),

/***/ 836:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return KeyboardAttachDirective; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_keyboard__ = __webpack_require__(41);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/**
 * @name KeyboardAttachDirective
 * @description
 * The `keyboardAttach` directive will cause an element to float above the
 * keyboard when the keyboard shows. Currently only supports the `ion-footer` element.
 *
 * ### Notes
 * - This directive requires [Ionic Native](https://github.com/driftyco/ionic-native)
 * and the [Ionic Keyboard Plugin](https://github.com/driftyco/ionic-plugin-keyboard).
 * - Currently only tested to work on iOS.
 * - If there is an input in your footer, you will need to set
 *   `Keyboard.disableScroll(true)`.
 *
 * @usage
 *
 * ```html
 * <ion-content #content>
 * </ion-content>
 *
 * <ion-footer [keyboardAttach]="content">
 *   <ion-toolbar>
 *     <ion-item>
 *       <ion-input></ion-input>
 *     </ion-item>
 *   </ion-toolbar>
 * </ion-footer>
 * ```
 */
var KeyboardAttachDirective = (function () {
    // private tabHeight: number;
    function KeyboardAttachDirective(elementRef, platform, events, keyboard) {
        var _this = this;
        this.elementRef = elementRef;
        this.platform = platform;
        this.events = events;
        this.keyboard = keyboard;
        if (this.platform.is('cordova')) {
            this.onShowSubscription = this.keyboard.onKeyboardShow().subscribe(function (e) { return _this.onShow(e); });
            this.onHideSubscription = this.keyboard.onKeyboardHide().subscribe(function () { return _this.onHide(); });
        }
    }
    KeyboardAttachDirective.prototype.ngOnDestroy = function () {
        if (this.onShowSubscription) {
            this.onShowSubscription.unsubscribe();
        }
        if (this.onHideSubscription) {
            this.onHideSubscription.unsubscribe();
        }
    };
    KeyboardAttachDirective.prototype.onShow = function (e) {
        var _this = this;
        if (this.platform.is('cordova') && this.platform.is('ios')) {
            var keyboardHeight = e.keyboardHeight || (e.detail && e.detail.keyboardHeight);
            this.setElementPosition(keyboardHeight);
        }
        setTimeout(function () {
            window.scrollTo(0, 0);
            _this.content.scrollToBottom(0);
            _this.keyboard.disableScroll(true);
        }, 100);
        //this.events.publish(CONSTANTS.APP_EVENTS.KEYBOARD);
    };
    ;
    KeyboardAttachDirective.prototype.onHide = function () {
        this.setElementPosition(0);
    };
    ;
    KeyboardAttachDirective.prototype.setElementPosition = function (pixels) {
        if (this.elementRef.nativeElement) {
            this.elementRef.nativeElement.style.paddingBottom = pixels + 'px';
        }
        if (this.content) {
            this.content.resize();
        }
    };
    return KeyboardAttachDirective;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["E" /* Input */])('keyboardAttach'),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
], KeyboardAttachDirective.prototype, "content", void 0);
KeyboardAttachDirective = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* Directive */])({
        selector: '[keyboardAttach]'
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ElementRef */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Platform */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_keyboard__["a" /* Keyboard */]])
], KeyboardAttachDirective);

//# sourceMappingURL=keyboard-attach.directive.js.map

/***/ }),

/***/ 837:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Autoresize; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
// An autoresize directive that works with ion-textarea in Ionic 2
// Usage example: <ion-textarea autoresize [(ngModel)]="body"></ion-textarea>
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var Autoresize = (function () {
    function Autoresize(element) {
        this.element = element;
    }
    Autoresize.prototype.onInput = function (textArea) {
        //if (this.platform.is('cordova')) {
        this.adjust();
        //}
    };
    Autoresize.prototype.ngOnInit = function () {
        // if (this.platform.is('cordova')) {
        // 	this.adjust();
        // }
    };
    Autoresize.prototype.adjust = function () {
        //let textareaEle = this.element.nativeElement.querySelector("textarea");
        this.element.nativeElement.querySelector('textarea').style.height = '0';
        if (this.element) {
            this.element.nativeElement.querySelector('textarea').style.height = this.element.nativeElement.querySelector('textarea').scrollHeight + "px";
            // document.getElementById("chat-text").style.height = (textareaEle.scrollHeight + 16 + "px");
        }
    };
    return Autoresize;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["z" /* HostListener */])("input", ["$event.target"]),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [HTMLTextAreaElement]),
    __metadata("design:returntype", void 0)
], Autoresize.prototype, "onInput", null);
Autoresize = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* Directive */])({
        selector: "ion-textarea[autoresize]" // Attribute selector
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ElementRef */]])
], Autoresize);

//# sourceMappingURL=auto-resize.directive.js.map

/***/ }),

/***/ 838:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LocalizedDatePipe; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var LocalizedDatePipe = (function () {
    function LocalizedDatePipe(translateService) {
        this.translateService = translateService;
    }
    LocalizedDatePipe.prototype.transform = function (value, pattern) {
        if (pattern === void 0) { pattern = 'yMdhm'; }
        var datePipe = new __WEBPACK_IMPORTED_MODULE_0__angular_common__["d" /* DatePipe */](this.translateService.currentLang);
        if (this.translateService.currentLang.split('-')[0] === 'zh') {
            pattern = 'MM/dd/yy hh:mm';
        }
        return datePipe.transform(value, pattern);
    };
    return LocalizedDatePipe;
}());
LocalizedDatePipe = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["W" /* Pipe */])({
        name: 'localizedDate',
        pure: true
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__ngx_translate_core__["c" /* TranslateService */]])
], LocalizedDatePipe);

//# sourceMappingURL=localized-date-pipe.directive.js.map

/***/ }),

/***/ 839:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AroundMeModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ionic_native_google_maps__ = __webpack_require__(168);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__map_overlays_map_overlays__ = __webpack_require__(333);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pinned_location_pinned_location__ = __webpack_require__(306);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__set_pinned_location_set_pinned_location__ = __webpack_require__(334);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_core_module__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__aroundme__ = __webpack_require__(305);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__provider_details_provider_details__ = __webpack_require__(176);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__provider_options_provider_options__ = __webpack_require__(840);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__housing_types_housing_types__ = __webpack_require__(841);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__housing_unit_housing_unit__ = __webpack_require__(178);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__aroundme_service__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__pending_confirmation_pending_confirmation__ = __webpack_require__(177);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__edit_location_edit_location__ = __webpack_require__(332);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__verify_address_verify_address__ = __webpack_require__(335);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__discontinued_property_discontinued_property__ = __webpack_require__(336);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__provider_service__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__shared_image_cache_module__ = __webpack_require__(72);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

















//import { VerifyAddressDirective } from "../../directives/verify-address.directive";

var AroundMeModule = (function () {
    function AroundMeModule() {
    }
    return AroundMeModule;
}());
AroundMeModule = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["L" /* NgModule */])({
        imports: [__WEBPACK_IMPORTED_MODULE_5__shared_core_module__["a" /* CoreModule */], __WEBPACK_IMPORTED_MODULE_17__shared_image_cache_module__["a" /* ImageCacheModule */]],
        exports: [],
        entryComponents: [__WEBPACK_IMPORTED_MODULE_6__aroundme__["a" /* AroundmePage */], __WEBPACK_IMPORTED_MODULE_2__map_overlays_map_overlays__["a" /* MapOverlays */], __WEBPACK_IMPORTED_MODULE_3__pinned_location_pinned_location__["a" /* PinnedLocation */], __WEBPACK_IMPORTED_MODULE_4__set_pinned_location_set_pinned_location__["a" /* SetPinnedLocation */], __WEBPACK_IMPORTED_MODULE_7__provider_details_provider_details__["a" /* ProviderDetails */], __WEBPACK_IMPORTED_MODULE_9__housing_types_housing_types__["a" /* HousingTypes */], __WEBPACK_IMPORTED_MODULE_10__housing_unit_housing_unit__["a" /* HousingUnit */], __WEBPACK_IMPORTED_MODULE_8__provider_options_provider_options__["a" /* ProviderOptions */], __WEBPACK_IMPORTED_MODULE_12__pending_confirmation_pending_confirmation__["a" /* PendingConfirmation */], __WEBPACK_IMPORTED_MODULE_13__edit_location_edit_location__["a" /* EditLocation */], __WEBPACK_IMPORTED_MODULE_14__verify_address_verify_address__["a" /* VerifyAddress */], __WEBPACK_IMPORTED_MODULE_15__discontinued_property_discontinued_property__["a" /* DiscontinuedProperty */]],
        declarations: [__WEBPACK_IMPORTED_MODULE_6__aroundme__["a" /* AroundmePage */], __WEBPACK_IMPORTED_MODULE_2__map_overlays_map_overlays__["a" /* MapOverlays */], __WEBPACK_IMPORTED_MODULE_3__pinned_location_pinned_location__["a" /* PinnedLocation */], __WEBPACK_IMPORTED_MODULE_4__set_pinned_location_set_pinned_location__["a" /* SetPinnedLocation */], __WEBPACK_IMPORTED_MODULE_7__provider_details_provider_details__["a" /* ProviderDetails */], __WEBPACK_IMPORTED_MODULE_9__housing_types_housing_types__["a" /* HousingTypes */], __WEBPACK_IMPORTED_MODULE_10__housing_unit_housing_unit__["a" /* HousingUnit */], __WEBPACK_IMPORTED_MODULE_8__provider_options_provider_options__["a" /* ProviderOptions */], __WEBPACK_IMPORTED_MODULE_12__pending_confirmation_pending_confirmation__["a" /* PendingConfirmation */], __WEBPACK_IMPORTED_MODULE_13__edit_location_edit_location__["a" /* EditLocation */], __WEBPACK_IMPORTED_MODULE_14__verify_address_verify_address__["a" /* VerifyAddress */], __WEBPACK_IMPORTED_MODULE_15__discontinued_property_discontinued_property__["a" /* DiscontinuedProperty */]],
        providers: [__WEBPACK_IMPORTED_MODULE_1__ionic_native_google_maps__["b" /* GoogleMaps */], __WEBPACK_IMPORTED_MODULE_11__aroundme_service__["a" /* AroundMeService */], __WEBPACK_IMPORTED_MODULE_16__provider_service__["a" /* ProviderService */], __WEBPACK_IMPORTED_MODULE_1__ionic_native_google_maps__["a" /* Geocoder */]],
        schemas: [__WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* CUSTOM_ELEMENTS_SCHEMA */]]
    })
], AroundMeModule);

//# sourceMappingURL=aroundme.module.js.map

/***/ }),

/***/ 840:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProviderOptions; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_in_app_browser__ = __webpack_require__(300);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_call_number__ = __webpack_require__(167);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__conversations_chat_box_chat_box__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__conversations_chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var ProviderOptions = (function () {
    function ProviderOptions(inAppBrowser, callNumber, analyticsService, loaderService, navCtrl, userService, translateService, chatService, pubNubService) {
        this.inAppBrowser = inAppBrowser;
        this.callNumber = callNumber;
        this.analyticsService = analyticsService;
        this.loaderService = loaderService;
        this.navCtrl = navCtrl;
        this.userService = userService;
        this.translateService = translateService;
        this.chatService = chatService;
        this.pubNubService = pubNubService;
        this.userData = this.userService.getUser();
    }
    ProviderOptions.prototype.ionViewDidLoad = function () {
    };
    ProviderOptions.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].PAGES.PROVIDER_OPTIONS);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].PAGES.PROVIDER_OPTIONS);
    };
    ProviderOptions.prototype.sendMessageToProvider = function (providerDetails) {
        if (providerDetails.conversation !== undefined) {
            providerDetails.conversation.user_name = providerDetails.conversation.name;
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__conversations_chat_box_chat_box__["a" /* ChatBox */], { user: providerDetails.conversation });
        }
        else {
            this.openGroupChatBox(providerDetails);
        }
    };
    ProviderOptions.prototype.openGroupChatBox = function (providerDetails) {
        var that = this, groupObject, conversationObj, memberIds = [];
        that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        that.pubNubService.getTimeToken(function (timestamp) {
            if (providerDetails.provider_details) {
                providerDetails.provider_details.map(function (self) {
                    memberIds.push(self._id);
                    self['user_id'] = self._id;
                    return self;
                });
            }
            groupObject = {
                user_id: that.userData.user_id,
                name: providerDetails.public_name,
                shared_channel: that.userData.user_id + '_' + providerDetails._id,
                members: memberIds,
                type: __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].CONVERSATION_TYPE.GROUP,
                joining_time_token: timestamp,
                leaving_time_token: null,
                group_type: __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].USER_TYPE.SERVICE_PROVIDER,
                user_name: that.userData.user_name,
                created_by: that.userData.user_id,
                profile_pic: providerDetails.profile_pic,
                resident_profile_pic: that.userData.profile.profile_pic,
                location_id: providerDetails._id
            };
            that.chatService.createOrEditConversation(groupObject, false).subscribe(function (result) {
                if (result.status === __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                    conversationObj = {
                        name: groupObject.name,
                        user_name: groupObject.name,
                        user_id: groupObject.shared_channel,
                        shared_channel: groupObject.shared_channel,
                        receiver_id: groupObject.shared_channel,
                        members: providerDetails.provider_details,
                        type: groupObject.type,
                        timetoken: timestamp,
                        group_type: groupObject.group_type,
                        connection_status: __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].CONNECTION_STATUS.CONNECTED
                    };
                    if (that.pubNubService.pushNotificationChannels.indexOf(groupObject.shared_channel) === -1) {
                        if (groupObject.members && groupObject.members.length > 0) {
                            that.pubNubService.addChanneltoGroup(groupObject.members, groupObject.shared_channel, groupObject.name, that.userService.userObj.user_id, that.userService.deviceToken, that.userService.pushPlatform);
                        }
                        that.pubNubService.setPushNotificationChannels([groupObject.shared_channel]);
                        if (!!that.userService.userObj.notification_enabled) {
                            that.pubNubService.registerDevice([groupObject.shared_channel], that.userService.deviceToken, that.userService.pushPlatform);
                        }
                    }
                    conversationObj['joining_time_token'] = result.chat[0].joining_time_token;
                    that.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__conversations_chat_box_chat_box__["a" /* ChatBox */], { user: conversationObj }).then(function () {
                        that.loaderService.dismissLoader();
                    });
                }
                else {
                    that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                    that.loaderService.dismissLoader();
                }
            }, function (error) {
                that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                that.loaderService.dismissLoader();
            });
        });
    };
    ProviderOptions.prototype.makeCall = function (providerDetails) {
        if (providerDetails.contacts && providerDetails.contacts.phone_number !== '') {
            this.callNumber.callNumber(providerDetails.contacts.phone_number, true).then(function () {
            }).catch(function (error) {
                //console.log('Error launching dialer', error);
            });
        }
    };
    ProviderOptions.prototype.openWebsite = function (providerDetails) {
        //console.log('3 providerDetails=>', providerDetails);
        if (providerDetails.website) {
            this.inAppBrowser.create(providerDetails.website, "_blank", { location: 'no' });
        }
    };
    return ProviderOptions;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["E" /* Input */])(),
    __metadata("design:type", Object)
], ProviderOptions.prototype, "providerDetails", void 0);
ProviderOptions = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'provider-options',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\provider-options\provider-options.html"*/'<button ion-button icon-only class="button-square-blueicon"[ngClass]="{\'button-disable\':!providerDetails.verification_status && providerDetails.location_type === \'housing_provider\' || providerDetails.verification_status === \'unverified\'}" (click)="sendMessageToProvider(providerDetails)">\n\n        <ion-icon class="icons-conversion"></ion-icon>\n\n    </button>\n\n<button ion-button icon-only class="button-square-blueicon" [ngClass]="{\'button-disable\':providerDetails.contacts && providerDetails.contacts.phone_number ===\'\'}"\n\n    (click)="makeCall(providerDetails)">\n\n        <ion-icon class="icons-contact"></ion-icon>\n\n    </button>\n\n<button ion-button icon-only class="button-square-blueicon" [ngClass]="{\'button-disable\':providerDetails.website ===\'\'}"\n\n    (click)="openWebsite(providerDetails)">\n\n        <ion-icon class="icons-world"></ion-icon>\n\n    </button>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\provider-options\provider-options.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__ionic_native_in_app_browser__["a" /* InAppBrowser */], __WEBPACK_IMPORTED_MODULE_3__ionic_native_call_number__["a" /* CallNumber */], __WEBPACK_IMPORTED_MODULE_10__providers_analytics_service__["a" /* AnalyticsService */],
        __WEBPACK_IMPORTED_MODULE_4__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_7__providers_user_service__["a" /* UserService */],
        __WEBPACK_IMPORTED_MODULE_11__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_8__conversations_chat_service__["a" /* ChatService */], __WEBPACK_IMPORTED_MODULE_9__providers_pubnub_service__["a" /* PubNubService */]])
], ProviderOptions);

//# sourceMappingURL=provider-options.js.map

/***/ }),

/***/ 841:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HousingTypes; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__housing_unit_housing_unit__ = __webpack_require__(178);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__provider_service__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_analytics_service__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var HousingTypes = (function () {
    function HousingTypes(loaderService, providerService, translateService, navCtrl, navParams, analyticsService, userService) {
        this.loaderService = loaderService;
        this.providerService = providerService;
        this.translateService = translateService;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.analyticsService = analyticsService;
        this.userService = userService;
        this.providerDetails = this.navParams.get('providerDetails');
        this.getBuildingList(this.providerDetails._id);
    }
    HousingTypes.prototype.ionViewDidEnter = function () {
        this.userService.setCurrentPage(__WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].PAGES.HOUSING_TYPES);
        this.analyticsService.trackScreenView(__WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].PAGES.HOUSING_TYPES);
    };
    HousingTypes.prototype.getBuildingList = function (property_id) {
        var _this = this;
        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));
        this.providerService.getBuildingsByPropertyId({ property_id: this.providerDetails._id }).subscribe(function (response) {
            if (response.status === __WEBPACK_IMPORTED_MODULE_4__shared_config__["a" /* CONSTANTS */].RESPONSE_STATUS.SUCCESS) {
                //console.log("---", response);
                _this.buildings = response.buildings;
            }
            _this.loaderService.dismissLoader();
        }, function (error) {
            _this.loaderService.dismissLoader();
            _this.loaderService.showToaster(error);
        });
    };
    HousingTypes.prototype.selectUnit = function (selectedBuilding) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__housing_unit_housing_unit__["a" /* HousingUnit */], { buildingName: selectedBuilding.public_name, units: selectedBuilding.units, providerDetails: this.providerDetails });
    };
    return HousingTypes;
}());
HousingTypes = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
        selector: 'page-housing-types',template:/*ion-inline-start:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\housing-types\housing-types.html"*/'<ion-header labelHeader>\n\n    <ion-navbar>\n\n        <ion-title>{{\'AROUND_ME.HOUSING_TYPES.TITLE\' | translate}}</ion-title>\n\n    </ion-navbar>\n\n</ion-header>\n\n<ion-content>\n\n    <ion-list>\n\n         <button ion-item detail-none class="list-grid-136" *ngFor="let building of buildings" (click)="selectUnit(building)">\n\n            <h2>\n\n                <span class="text14px-black">{{building.public_name}}</span>\n\n            </h2>\n\n        </button>\n\n    </ion-list>\n\n</ion-content>'/*ion-inline-end:"C:\Workspace\Rezility\ionic-webiste-heroku\src\pages\aroundme\housing-types\housing-types.html"*/
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__providers_loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_5__provider_service__["a" /* ProviderService */], __WEBPACK_IMPORTED_MODULE_8__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* NavParams */], __WEBPACK_IMPORTED_MODULE_7__providers_analytics_service__["a" /* AnalyticsService */], __WEBPACK_IMPORTED_MODULE_6__providers_user_service__["a" /* UserService */]])
], HousingTypes);

//# sourceMappingURL=housing-types.js.map

/***/ }),

/***/ 842:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MyStuffModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_core_module__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__my_stuff__ = __webpack_require__(471);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__settings_settings__ = __webpack_require__(476);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__profile_profile__ = __webpack_require__(472);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__profile_edit_profile_edit_profile__ = __webpack_require__(473);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__tell_feedback_tell_feedback__ = __webpack_require__(479);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__profile_edit_profile_verifications_verifications__ = __webpack_require__(474);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__profile_edit_profile_address_address__ = __webpack_require__(475);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__settings_change_password_change_password__ = __webpack_require__(477);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__settings_blocked_users_blocked_users__ = __webpack_require__(478);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__shared_image_cache_module__ = __webpack_require__(72);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};












//import { LocalizedDatePipe } from "../../directives/localized-date-pipe.directive";
var MyStuffModule = (function () {
    function MyStuffModule() {
    }
    return MyStuffModule;
}());
MyStuffModule = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["L" /* NgModule */])({
        imports: [__WEBPACK_IMPORTED_MODULE_1__shared_core_module__["a" /* CoreModule */], __WEBPACK_IMPORTED_MODULE_11__shared_image_cache_module__["a" /* ImageCacheModule */]],
        exports: [],
        entryComponents: [__WEBPACK_IMPORTED_MODULE_2__my_stuff__["a" /* MyStuff */], __WEBPACK_IMPORTED_MODULE_3__settings_settings__["a" /* Settings */], __WEBPACK_IMPORTED_MODULE_4__profile_profile__["a" /* Profile */], __WEBPACK_IMPORTED_MODULE_8__profile_edit_profile_address_address__["a" /* Address */], __WEBPACK_IMPORTED_MODULE_5__profile_edit_profile_edit_profile__["a" /* EditProfile */], __WEBPACK_IMPORTED_MODULE_6__tell_feedback_tell_feedback__["a" /* TellFeedback */],
            __WEBPACK_IMPORTED_MODULE_7__profile_edit_profile_verifications_verifications__["a" /* Verifications */], __WEBPACK_IMPORTED_MODULE_9__settings_change_password_change_password__["a" /* ChangePassword */], __WEBPACK_IMPORTED_MODULE_10__settings_blocked_users_blocked_users__["a" /* BlockedUsers */]],
        declarations: [__WEBPACK_IMPORTED_MODULE_2__my_stuff__["a" /* MyStuff */], __WEBPACK_IMPORTED_MODULE_3__settings_settings__["a" /* Settings */], __WEBPACK_IMPORTED_MODULE_4__profile_profile__["a" /* Profile */], __WEBPACK_IMPORTED_MODULE_8__profile_edit_profile_address_address__["a" /* Address */], __WEBPACK_IMPORTED_MODULE_5__profile_edit_profile_edit_profile__["a" /* EditProfile */], __WEBPACK_IMPORTED_MODULE_6__tell_feedback_tell_feedback__["a" /* TellFeedback */],
            __WEBPACK_IMPORTED_MODULE_7__profile_edit_profile_verifications_verifications__["a" /* Verifications */], __WEBPACK_IMPORTED_MODULE_9__settings_change_password_change_password__["a" /* ChangePassword */], __WEBPACK_IMPORTED_MODULE_10__settings_blocked_users_blocked_users__["a" /* BlockedUsers */]],
        providers: [],
        schemas: [__WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* CUSTOM_ELEMENTS_SCHEMA */]]
    })
], MyStuffModule);

//# sourceMappingURL=my-stuff.module.js.map

/***/ }),

/***/ 843:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ConversationModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_core_module__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__conversations__ = __webpack_require__(110);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__new_message_new_message__ = __webpack_require__(338);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__chat_box_chat_box__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__group_chat_group_chat__ = __webpack_require__(180);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__conversation_setting_conversation_setting__ = __webpack_require__(459);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__show_image_show_image__ = __webpack_require__(460);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__public_profile_public_profile__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__chat_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__shared_image_cache_module__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__housing_provider_options_housing_provider_options__ = __webpack_require__(458);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};









//import { Autoresize } from '../../directives/auto-resize.directive';
//import { KeyboardAttachDirective } from '../../directives/keyboard-attach.directive';



var ConversationModule = (function () {
    function ConversationModule() {
    }
    return ConversationModule;
}());
ConversationModule = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["L" /* NgModule */])({
        imports: [__WEBPACK_IMPORTED_MODULE_1__shared_core_module__["a" /* CoreModule */], __WEBPACK_IMPORTED_MODULE_10__shared_image_cache_module__["a" /* ImageCacheModule */]],
        exports: [],
        entryComponents: [__WEBPACK_IMPORTED_MODULE_2__conversations__["a" /* Conversations */], __WEBPACK_IMPORTED_MODULE_3__new_message_new_message__["a" /* NewMessage */], __WEBPACK_IMPORTED_MODULE_4__chat_box_chat_box__["a" /* ChatBox */], __WEBPACK_IMPORTED_MODULE_5__group_chat_group_chat__["a" /* GroupChat */], __WEBPACK_IMPORTED_MODULE_6__conversation_setting_conversation_setting__["a" /* ConversationSetting */], __WEBPACK_IMPORTED_MODULE_7__show_image_show_image__["a" /* ShowImage */], __WEBPACK_IMPORTED_MODULE_8__public_profile_public_profile__["a" /* PublicProfile */], __WEBPACK_IMPORTED_MODULE_11__housing_provider_options_housing_provider_options__["a" /* HousingProviderOptions */]],
        declarations: [__WEBPACK_IMPORTED_MODULE_2__conversations__["a" /* Conversations */], __WEBPACK_IMPORTED_MODULE_3__new_message_new_message__["a" /* NewMessage */], __WEBPACK_IMPORTED_MODULE_4__chat_box_chat_box__["a" /* ChatBox */], __WEBPACK_IMPORTED_MODULE_5__group_chat_group_chat__["a" /* GroupChat */], __WEBPACK_IMPORTED_MODULE_6__conversation_setting_conversation_setting__["a" /* ConversationSetting */], __WEBPACK_IMPORTED_MODULE_7__show_image_show_image__["a" /* ShowImage */], __WEBPACK_IMPORTED_MODULE_8__public_profile_public_profile__["a" /* PublicProfile */], __WEBPACK_IMPORTED_MODULE_11__housing_provider_options_housing_provider_options__["a" /* HousingProviderOptions */]],
        providers: [__WEBPACK_IMPORTED_MODULE_9__chat_service__["a" /* ChatService */]],
        schemas: [__WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* CUSTOM_ELEMENTS_SCHEMA */]]
    })
], ConversationModule);

//# sourceMappingURL=conversations.module.js.map

/***/ }),

/***/ 844:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoginModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_core_module__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__login__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__request_login_link_request_login_link__ = __webpack_require__(480);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__login_link_sent_login_link_sent__ = __webpack_require__(481);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__request_login_error_request_login_error__ = __webpack_require__(482);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






var LoginModule = (function () {
    function LoginModule() {
    }
    return LoginModule;
}());
LoginModule = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["L" /* NgModule */])({
        imports: [__WEBPACK_IMPORTED_MODULE_1__shared_core_module__["a" /* CoreModule */]],
        exports: [],
        entryComponents: [__WEBPACK_IMPORTED_MODULE_2__login__["a" /* LoginPage */], __WEBPACK_IMPORTED_MODULE_3__request_login_link_request_login_link__["a" /* RequestLoginLink */], __WEBPACK_IMPORTED_MODULE_4__login_link_sent_login_link_sent__["a" /* LoginLinkSent */], __WEBPACK_IMPORTED_MODULE_5__request_login_error_request_login_error__["a" /* RequestLoginError */]],
        declarations: [__WEBPACK_IMPORTED_MODULE_2__login__["a" /* LoginPage */], __WEBPACK_IMPORTED_MODULE_3__request_login_link_request_login_link__["a" /* RequestLoginLink */], __WEBPACK_IMPORTED_MODULE_4__login_link_sent_login_link_sent__["a" /* LoginLinkSent */], __WEBPACK_IMPORTED_MODULE_5__request_login_error_request_login_error__["a" /* RequestLoginError */]],
        providers: [],
        schemas: [__WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* CUSTOM_ELEMENTS_SCHEMA */]]
    })
], LoginModule);

//# sourceMappingURL=login.module.js.map

/***/ }),

/***/ 845:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GetStartedModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_core_module__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__get_started__ = __webpack_require__(187);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__app_info_app_info__ = __webpack_require__(484);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__select_password_choose_password_choose_password__ = __webpack_require__(487);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__select_password_select_password__ = __webpack_require__(486);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__sign_up_sign_up__ = __webpack_require__(485);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__shared_image_cache_module__ = __webpack_require__(72);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};







//import { SelectPasswordDirective } from "../../directives/select-password.directive";
//import { KeyboardGetstartedDirective } from '../../directives/keyboard-getstarted.directive';

var GetStartedModule = (function () {
    function GetStartedModule() {
    }
    return GetStartedModule;
}());
GetStartedModule = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["L" /* NgModule */])({
        imports: [__WEBPACK_IMPORTED_MODULE_1__shared_core_module__["a" /* CoreModule */], __WEBPACK_IMPORTED_MODULE_7__shared_image_cache_module__["a" /* ImageCacheModule */]],
        exports: [],
        entryComponents: [__WEBPACK_IMPORTED_MODULE_2__get_started__["a" /* GetStarted */], __WEBPACK_IMPORTED_MODULE_3__app_info_app_info__["a" /* AppInfo */], __WEBPACK_IMPORTED_MODULE_4__select_password_choose_password_choose_password__["a" /* ChoosePassword */], __WEBPACK_IMPORTED_MODULE_5__select_password_select_password__["a" /* SelectPassword */], __WEBPACK_IMPORTED_MODULE_6__sign_up_sign_up__["a" /* SignUp */]],
        declarations: [__WEBPACK_IMPORTED_MODULE_2__get_started__["a" /* GetStarted */], __WEBPACK_IMPORTED_MODULE_3__app_info_app_info__["a" /* AppInfo */], __WEBPACK_IMPORTED_MODULE_4__select_password_choose_password_choose_password__["a" /* ChoosePassword */], __WEBPACK_IMPORTED_MODULE_5__select_password_select_password__["a" /* SelectPassword */], __WEBPACK_IMPORTED_MODULE_6__sign_up_sign_up__["a" /* SignUp */]],
        providers: [],
        schemas: [__WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* CUSTOM_ELEMENTS_SCHEMA */]]
    })
], GetStartedModule);

//# sourceMappingURL=get-started.module.js.map

/***/ }),

/***/ 846:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ServiceRequestModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_core_module__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_image_cache_module__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__service_request__ = __webpack_require__(184);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__create_request_request_reported_request_reported__ = __webpack_require__(470);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__create_request_create_request__ = __webpack_require__(469);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__service_request_service__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_upload_service__ = __webpack_require__(85);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__service_request_details_service_request_details__ = __webpack_require__(185);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};









var ServiceRequestModule = (function () {
    function ServiceRequestModule() {
    }
    return ServiceRequestModule;
}());
ServiceRequestModule = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["L" /* NgModule */])({
        imports: [__WEBPACK_IMPORTED_MODULE_1__shared_core_module__["a" /* CoreModule */], __WEBPACK_IMPORTED_MODULE_2__shared_image_cache_module__["a" /* ImageCacheModule */]],
        exports: [],
        entryComponents: [__WEBPACK_IMPORTED_MODULE_3__service_request__["a" /* ServiceRequest */], __WEBPACK_IMPORTED_MODULE_4__create_request_request_reported_request_reported__["a" /* ServiceRequestReported */], __WEBPACK_IMPORTED_MODULE_5__create_request_create_request__["a" /* CreateRequest */], __WEBPACK_IMPORTED_MODULE_8__service_request_details_service_request_details__["a" /* ServiceRequestDetails */]],
        declarations: [__WEBPACK_IMPORTED_MODULE_3__service_request__["a" /* ServiceRequest */], __WEBPACK_IMPORTED_MODULE_4__create_request_request_reported_request_reported__["a" /* ServiceRequestReported */], __WEBPACK_IMPORTED_MODULE_5__create_request_create_request__["a" /* CreateRequest */], __WEBPACK_IMPORTED_MODULE_8__service_request_details_service_request_details__["a" /* ServiceRequestDetails */]],
        providers: [__WEBPACK_IMPORTED_MODULE_6__service_request_service__["a" /* ServiceRequestService */], __WEBPACK_IMPORTED_MODULE_7__providers_upload_service__["a" /* UploadService */]],
        schemas: [__WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* CUSTOM_ELEMENTS_SCHEMA */]]
    })
], ServiceRequestModule);

//# sourceMappingURL=service-request.module.js.map

/***/ }),

/***/ 847:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return StorageService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
//import { SecureStorage } from 'ionic-native';


//import { Storage } from '@ionic/storage'

var StorageService = (function () {
    function StorageService(platform) {
        // console.log('In StorageService constructor created  SecureStorage instance.',platform.is('ios'), platform.is('android'))
        if (platform.is('ios') || platform.is('android')) {
            //   this.storage = new SecureStorage();
            // console.log('In StorageService constructor created  SecureStorage instance.')
        }
        else {
            //   this.storage = new Storage();
            // console.log('In StorageService constructor created  Storage instance.')
        }
    }
    StorageService.prototype.create = function (key) {
        this.storage.create(key).then(function () {
            // console.log('Storage is ready!')
        }, this.error);
    };
    StorageService.prototype.set = function (key, value) {
        this.storage.set(key, value).then(function (data) {
            // console.log('StorageService, In set', key, data);
        }, this.error);
    };
    StorageService.prototype.get = function (key) {
        this.storage.get(key).then(function (data) {
            // console.log('StorageService, In get', key, data);
        }, this.error);
    };
    StorageService.prototype.remove = function (key) {
        this.storage.remove(key).then(function () {
            // console.log('StorageService, In remove', key);
        }, this.error);
    };
    StorageService.prototype.error = function (error) {
        // console.log('Error in StorageService');
    };
    return StorageService;
}());
StorageService = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["B" /* Injectable */])()
    // TODO - not in use
    ,
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0_ionic_angular__["m" /* Platform */]])
], StorageService);

//# sourceMappingURL=storage-service.js.map

/***/ }),

/***/ 848:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return KeyboardTabHandler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_keyboard__ = __webpack_require__(41);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var KeyboardTabHandler = (function () {
    // private tabHeight: number;
    function KeyboardTabHandler(platform, keyboard) {
        var _this = this;
        this.platform = platform;
        this.keyboard = keyboard;
        if (this.platform.is('cordova')) {
            this.onShowSubscription = this.keyboard.onKeyboardShow().subscribe(function (e) { return _this.onShow(e); });
            this.onHideSubscription = this.keyboard.onKeyboardHide().subscribe(function () { return _this.onHide(); });
        }
    }
    KeyboardTabHandler.prototype.ngOnDestroy = function () {
        if (this.onShowSubscription) {
            this.onShowSubscription.unsubscribe();
        }
        if (this.onHideSubscription) {
            this.onHideSubscription.unsubscribe();
        }
        // console.log("keyboard-open' ngOnDestroy")
    };
    KeyboardTabHandler.prototype.onShow = function (e) {
        // let keyboardHeight: number = e.keyboardHeight || (e.detail && e.detail.keyboardHeight);
        // this.setElementPosition(keyboardHeight);
        // console.log("Keyboard Show");
        document.body.classList.add('keyboard-open');
    };
    ;
    KeyboardTabHandler.prototype.onHide = function () {
        // this.setElementPosition(0);
        // console.log("Keyboard Hide");
        if (document.body.classList.contains('keyboard-open')) {
            document.body.classList.remove('keyboard-open');
        }
        else {
            // console.log("keyboard-open' does not exist")
        }
    };
    ;
    return KeyboardTabHandler;
}());
__decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["E" /* Input */])('keyboard-tab-handler'),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
], KeyboardTabHandler.prototype, "content", void 0);
KeyboardTabHandler = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["t" /* Directive */])({
        selector: '[keyboard-tab-handler]'
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Platform */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_keyboard__["a" /* Keyboard */]])
], KeyboardTabHandler);

//# sourceMappingURL=keyboard-tab-handler-directive.js.map

/***/ }),

/***/ 85:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UploadService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_transfer__ = __webpack_require__(103);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ionic_native_camera__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_crop__ = __webpack_require__(166);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ngx_translate_core__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__user_service__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__shared_environment__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__shared_modals_crop_image_crop_image__ = __webpack_require__(465);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var UploadService = (function () {
    function UploadService(userService, loaderService, transfer, camera, crop, translateService, modalCtrl) {
        this.userService = userService;
        this.loaderService = loaderService;
        this.transfer = transfer;
        this.camera = camera;
        this.crop = crop;
        this.translateService = translateService;
        this.modalCtrl = modalCtrl;
        this.userData = this.userService.getUser();
    }
    UploadService.prototype.uploadFileOnserver = function (fileURI, uploadOptions, callback) {
        var fileTransfer = this.transfer.create();
        var fileUploadOptions = {
            fileKey: 'file',
            fileName: this.getFileName(fileURI),
            httpMethod: 'POST'
        };
        if (!fileUploadOptions.headers) {
            fileUploadOptions.headers = {
                'Authorization': 'Bearer ' + this.userService.http.token,
                source: uploadOptions.bucketSource, user_id: this.userData.user_id,
                image_category: uploadOptions.imageCategory,
                organization_id: uploadOptions.organizationId,
                branch_id: uploadOptions.branchId
            };
        }
        var uploadEndpoint = __WEBPACK_IMPORTED_MODULE_8__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/listing/uploadImage';
        // // console.log('In uploadFileOnserver fileUrl', fileURI, uploadEndpoint, fileUploadOptions);
        if (!this.userService.isOnline()) {
            callback(this.translateService.instant('ERROR_MESSAGES.NO_NETWORK'));
        }
        else {
            fileTransfer.upload(fileURI, uploadEndpoint, fileUploadOptions).then(function (data) {
                // // console.log('In uploadFileOnserver success', data)
                if (callback) {
                    var response = JSON.parse(data.response);
                    // // console.log("Image respinse", response);
                    callback(null, response.image_url);
                }
            }, function (err) {
                if (callback) {
                    callback(err);
                }
            });
            // fileTransfer.onProgress((state: ProgressEvent) => {
            //     // console.log(state);
            // });
        }
    };
    UploadService.prototype.getFileName = function (fileURI) {
        var fileNameTemp, fileExt = 'jpg', fileName;
        if (fileURI.indexOf('.') !== -1 && fileURI.indexOf('?') !== -1) {
            fileNameTemp = fileURI.split('.').pop();
            fileExt = fileNameTemp.split('?')[0];
        }
        fileName = this.userData.user_id + new Date().getTime() + '.' + fileExt;
        return fileName;
    };
    UploadService.prototype.takeFromCamera = function (uploadOptions, callback) {
        var _this = this;
        var options = {
            quality: 100,
            destinationType: this.camera.DestinationType.FILE_URI,
            sourceType: uploadOptions.sourceType,
            allowEdit: false,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            correctOrientation: true
        };
        if (uploadOptions.sourceType === this.camera.PictureSourceType.PHOTOLIBRARY) {
            options['saveToPhotoAlbum'] = false;
        }
        else {
            options['saveToPhotoAlbum'] = true;
        }
        this.camera.getPicture(options).then(function (imageData) {
            if (uploadOptions.cropImage) {
                var cropModal = _this.modalCtrl.create(__WEBPACK_IMPORTED_MODULE_10__shared_modals_crop_image_crop_image__["a" /* CropImageModal */], { "imageBase64": imageData, "width": uploadOptions.targetWidth, "height": uploadOptions.targetHeight });
                cropModal.onDidDismiss(function (croppedImage) {
                    if (croppedImage) {
                        proceedUpload.call(_this, croppedImage);
                    }
                });
                cropModal.present();
            }
            else {
                proceedUpload.call(_this, imageData);
            }
        });
        function proceedUpload(imageData) {
            var _this = this;
            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.UPLOADING'));
            this.uploadFileOnserver(imageData, uploadOptions, function (error, image_url) {
                if (callback) {
                    callback(error, image_url);
                }
                _this.loaderService.dismissLoader();
            });
        }
    };
    return UploadService;
}());
UploadService = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_3__angular_core__["B" /* Injectable */])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_6__user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_7__loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_0__ionic_native_transfer__["a" /* Transfer */], __WEBPACK_IMPORTED_MODULE_1__ionic_native_camera__["a" /* Camera */],
        __WEBPACK_IMPORTED_MODULE_2__ionic_native_crop__["a" /* Crop */], __WEBPACK_IMPORTED_MODULE_4__ngx_translate_core__["c" /* TranslateService */], __WEBPACK_IMPORTED_MODULE_9_ionic_angular__["h" /* ModalController */]])
], UploadService);

//# sourceMappingURL=upload-service.js.map

/***/ }),

/***/ 9:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_storage__ = __webpack_require__(289);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_facebook__ = __webpack_require__(299);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_config__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__shared_environment__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__http_service__ = __webpack_require__(53);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_pubnub_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_crypto_js__ = __webpack_require__(802);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_crypto_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_crypto_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_catch__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__loader_service__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__ngx_translate_core__ = __webpack_require__(8);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














var UserService = (function () {
    function UserService(events, http, platform, storage, pubNubService, translateService, loaderService, facebook) {
        this.storage = storage;
        this.pubNubService = pubNubService;
        this.translateService = translateService;
        this.loaderService = loaderService;
        this.facebook = facebook;
        this.isProfileUpdate = true;
        this.isCoachSettingsUpdated = false;
        var that = this;
        that.events = events;
        that.http = http;
        that.storage = new __WEBPACK_IMPORTED_MODULE_2__ionic_storage__["b" /* Storage */]({});
        that.pageDetails = { currentPage: "", userid: "" };
        that.platform = platform;
        that.http.token = null;
        that.http.defaultRequestParams.sys_user_id = null;
        that.http.defaultRequestParams.sys_user_type = null;
        that.resetUserObj();
        that.hasLoggedIn().then(function (hasLoggedIn) {
            if (hasLoggedIn) {
                that.loadUser();
            }
        });
        // console.log('[ In UserService ]');
    }
    UserService.prototype.isOnline = function () {
        return this.http.isOnline();
    };
    UserService.prototype.setCurrentLang = function (lang) {
        this.currentLang = lang;
        if (this.userObj) {
            this.userObj.device_lang = lang;
        }
        if (this.userProfile) {
            this.userProfile.device_lang = lang;
        }
        // set current language so that it will share with each request at backend.
        this.http.userLangHeader = lang;
    };
    UserService.prototype.getCurrentLang = function () {
        return this.currentLang;
    };
    UserService.prototype.login = function (user) {
        var that = this;
        //// console.log('In AuthService, login ');
        //This is used to identify source of login to block non admin users on mobile. 
        user.source = "mobile";
        if (!user.authType) {
            user = JSON.parse(JSON.stringify(user));
            user.password = __WEBPACK_IMPORTED_MODULE_9_crypto_js___default.a.PBKDF2(user.password, __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].CRYPTO_SALT, { keySize: 256 / 32 }).toString();
        }
        Object.assign(user, { user_type: __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].USER_TYPE.RESIDENT });
        //console.log('user', user);
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/user/signin';
        //// console.log(url);
        return that.http.post(url, user).map(function (res) { return res.json(); });
    };
    UserService.prototype.signup = function (user, isSignupwithsocial) {
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/residentsignup';
        user = JSON.parse(JSON.stringify(user));
        if (user.password) {
            user.password = __WEBPACK_IMPORTED_MODULE_9_crypto_js___default.a.PBKDF2(user.password, __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].CRYPTO_SALT, { keySize: 256 / 32 }).toString();
        }
        Object.assign(user, { user_type: __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].USER_TYPE.RESIDENT });
        return this.http.post(url, user).map(function (res) { return res.json(); });
    };
    UserService.prototype.forgotpassword = function (emailId) {
        // // console.log('In user, forgotpassword ', emailId);
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/user/forgotpassword';
        var params = { emailId: emailId };
        Object.assign(params);
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    UserService.prototype.verifyEmailId = function (email) {
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/user/verifyemail';
        var params = { email: email };
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    UserService.prototype.verifyAuthorizationToken = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/user/verifyauthorizationtoken';
        Object.assign(params);
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    UserService.prototype.loadUser = function (loadUserCB) {
        var that = this, token = null;
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].HAS_LOGGED_IN)) {
            token = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].LOCAL_TOKEN_KEY);
            // Set the token value into http service, It's passed for each request
            that.http.token = token;
            that.getUserInfoByToken(token, function (userInfoFromToken) {
                //// console.log('[ In UserService, user :' + JSON.stringify(user) + ']');
                // Set the defaultRequestParams.user_id into http service, It's passed for each request
                that.http.defaultRequestParams.sys_user_id = userInfoFromToken.user_id;
                that.getUserById(userInfoFromToken.user_id).subscribe(function (userObj) {
                    if (userObj.status !== 'ERROR') {
                        Object.assign(that.userObj, userInfoFromToken, userObj.user);
                        that.http.defaultRequestParams.sys_user_type = that.userObj.user_type;
                        that.userName = that.userObj.profile.first_name + ' ' + that.userObj.profile.last_name;
                        // console.log('[ In UserService, userObj :', that.userObj);
                        if (loadUserCB) {
                            loadUserCB(true);
                        }
                    }
                    else {
                        if (loadUserCB) {
                            loadUserCB(false);
                        }
                    }
                });
            });
        }
    };
    UserService.prototype.isAppStarted = function () {
        var hasAppStarted = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].HAS_APP_STARTED);
        if (hasAppStarted !== null && hasAppStarted === 'true') {
            return true;
        }
        {
            return false;
        }
    };
    UserService.prototype.setAppStarted = function () {
        //// console.log('In setAppStarted');
        //// console.log("Init pubNubService");
        var userlogin = this.getUser();
        this.pubNubService.initializePubnub(userlogin.user_id);
        localStorage.setItem(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].HAS_APP_STARTED, '' + true);
    };
    UserService.prototype.getUser = function () {
        return this.userObj;
    };
    UserService.prototype.storeUserCredentials = function (data, storeUserCredentialsCB) {
        var that = this;
        var token = data.token;
        if (data.user && data.user.groups) {
            that.channelGroups = data.user.groups;
        }
        if (token) {
            localStorage.setItem(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].LOCAL_TOKEN_KEY, token);
            localStorage.setItem(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].HAS_LOGGED_IN, '' + true);
            that.storage.set(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].LOCAL_TOKEN_KEY, token).then(function () {
                that.storage.set(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].HAS_LOGGED_IN, true).then(function () {
                    that.loadUser(function () {
                        if (storeUserCredentialsCB)
                            storeUserCredentialsCB(token);
                    });
                });
            });
        }
        else {
            // console.log('In storeUserCredentials no token found');
        }
    };
    UserService.prototype.storeDeviceToken = function (token) {
        var that = this;
        this.storage.set(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].DEVICE_TOKEN_KEY, token).then(function () {
            that.deviceToken = token;
            // console.log('In storeDeviceToken, DeviceId is stored into LocalStorage');
        });
    };
    UserService.prototype.getUserInfoByToken = function (token, getUserInfoByTokenCB) {
        var user = {};
        if (typeof token !== 'undefined') {
            var encoded = token.split('.')[1];
            var tmp_user = JSON.parse(this.urlBase64Decode(encoded));
            //// console.log(tmp_user, "------userToken Info------");
            user = {
                user_id: tmp_user.user_id,
                user_email: tmp_user.user_email
            };
        }
        if (getUserInfoByTokenCB)
            getUserInfoByTokenCB(user);
    };
    ;
    UserService.prototype.registerDeviceOnServer = function () {
        var that = this;
        var platform = '', params = {};
        if (!this.platform.is('cordova')) {
            return;
        }
        if (this.platform.is('android')) {
            platform = "google";
            this.pushPlatform = "gcm";
        }
        else if (this.platform.is('ios')) {
            platform = "apple";
            this.pushPlatform = "apns";
        }
        that.storage.get(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].DEVICE_TOKEN_KEY).then(function (deviceId) {
            params = {
                'register_token': deviceId,
                'emailId': that.userObj.user_email,
                'platform': platform || 'google'
            };
            // // console.log('In registerDeviceOnServer request obj ');
            // // console.log(params);
            var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/user/registertoken';
            that.http.post(url, JSON.stringify(params)).map(function (res) { return res.json(); })
                .subscribe(function (data) {
                // console.log(data);
            }, function (error) {
                that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.NETWORK'));
            });
            //Commented push notification registration for user id to add channel wise enable disable push 
            // that.pubNubService.unRegisterDevice(that.userObj.user_id, deviceId, this.pushPlatform);
        });
    };
    UserService.prototype.urlBase64Decode = function (str) {
        var output = str.replace('-', '+').replace('_', '/');
        switch (output.length % 4) {
            case 0:
                break;
            case 2:
                output += '==';
                break;
            case 3:
                output += '=';
                break;
            default:
                throw 'Illegal base64url string!';
        }
        return window.atob(output);
    };
    UserService.prototype.logout = function () {
        var that = this;
        var platform = '', params = {}, pushPlatform = '';
        that.clearPubnub();
        //that.pubNubService.removeChannelFromGroup([this.userObj.user_id]);
        if (this.platform.is('android')) {
            platform = "google";
            pushPlatform = 'gcm';
        }
        else if (this.platform.is('ios')) {
            pushPlatform = 'apns';
            platform = "apple";
        }
        else {
            platform = "web";
        }
        if (platform != "web") {
            that.storage.get(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].DEVICE_TOKEN_KEY).then(function (device_Id) {
                //// console.log("params", device_Id, "---", JSON.stringify(that.userObj), '----', platform, '----', that.userObj.email);
                params = {
                    'register_token': device_Id,
                    'emailId': that.userObj.email,
                    'user_id': that.userObj.user_id,
                    'platform': platform || 'google'
                };
                // // console.log(params, "parasm on logout");
                var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/user/signout';
                that.http.post(url, params).map(function (res) { return res.json(); })
                    .subscribe(function (data) {
                    // console.log(data, "user signedOut");
                    if (data.status === 'SUCCESS') {
                        if (that.userObj.facebook) {
                            that.fbLogout();
                        }
                        that.clearUserState();
                    }
                    else {
                        //TODO - Need to add callback for error
                        that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));
                        that.loaderService.dismissLoader();
                    }
                });
                that.pubNubService.unRegisterAllChannels(device_Id, pushPlatform);
            });
            //Logout from facebook 
        }
        else {
            that.clearUserState();
        }
        //localStorage.removeItem(APP_CONFIG.LOCAL_CONVERSATION_COUNT_MAP + '-' + this.userObj.user_id);
    };
    UserService.prototype.resetUserObj = function () {
        this.userObj = {};
        this.userObj["show_coach_marks"] = { all: false, feed: false, conversation: false, around_me: false, profile: false };
    };
    UserService.prototype.clearPubnub = function () {
        var that = this;
        that.pubNubService.unsubscribe();
        that.pubNubService.deleteGroup(that.userObj.user_id + '_friends');
        that.pubNubService.deleteGroup(that.userObj.user_id + '_group');
    };
    UserService.prototype.clearUserState = function () {
        var that = this;
        that.setCurrentPage(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].PAGES.LOGIN);
        that.storage.remove(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].LOCAL_TOKEN_KEY);
        that.storage.remove(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].HAS_LOGGED_IN);
        that.events.publish('user:logout');
        localStorage.removeItem(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].LOCAL_TOKEN_KEY);
        localStorage.removeItem(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].HAS_LOGGED_IN);
        //that.resetUserObj();
        that.userProfile = null;
        that.isProfileUpdate = false;
        that.isCoachSettingsUpdated = false;
        that.tempUserProfileObj = null;
        that.channelGroups = [];
        that.userName = '';
        that.http.token = null;
        that.http.defaultRequestParams.sys_user_id = null;
        that.http.defaultRequestParams.sys_user_type = null;
    };
    UserService.prototype.fbLogout = function () {
        if (this.facebook) {
            this.facebook.logout().then(function () {
                // console.log('Facebook logout called.');
            });
        }
    };
    UserService.prototype.hasLoggedIn = function () {
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].HAS_LOGGED_IN)) {
            return this.storage.get(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].HAS_LOGGED_IN).then(function (value) {
                //  // console.log(value, 'storage value');
                return value;
            });
        }
        else {
            return this.storage.get(__WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].HAS_LOGGED_IN).then(function (value) {
                //   // console.log(value, 'storage value');
                return false;
            });
        }
    };
    UserService.prototype.fbLogin = function () {
        var _this = this;
        try {
            if (this.platform.is('cordova')) {
                if (this.http.online) {
                    return this.facebook.login(['email']).then(function (success) {
                        return success;
                    }, function (error) {
                        _this.loaderService.showToaster(error.errorMessage);
                        return error.errorMessage;
                    });
                }
                else {
                    return Promise.reject(this.translateService.instant('ERROR_MESSAGES.NO_NETWORK'));
                    ;
                }
            }
            else {
                return Promise.reject('Please run me on a device');
            }
        }
        catch (error) {
            // // console.log(error);
            return Promise.reject(error.errorMessage);
        }
    };
    UserService.prototype.getUserFacebookProfile = function () {
        try {
            return this.facebook.api('me?fields=email,name,picture.width(600).height(600)', []).then(function (profileData) {
                // // console.log(JSON.stringify(profileData));
                return profileData;
            }, function (error) {
                // // console.log(JSON.stringify(error));
                return error;
            });
        }
        catch (error) {
            // console.log(JSON.stringify(error));
        }
    };
    UserService.prototype.getAllUsers = function () {
        var userObj = this.getUser();
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/user/all';
        return this.http.post(url, { "email": userObj.user_email }).map(function (res) { return res.json(); });
    };
    UserService.prototype.getCurrentPage = function () {
        //// console.log("Current Page is - ", this.pageDetails);
        return this.pageDetails;
    };
    UserService.prototype.setCurrentPage = function (newPage, userid) {
        // // console.log("Current Page to", this.pageDetails.currentPage, "=>", newPage, "=>", userid);
        this.pageDetails.currentPage = newPage;
        this.pageDetails.userid = userid;
    };
    UserService.prototype.updateUserInfo = function (userData) {
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/updateUserProfile';
        return this.http.post(url, userData).map(function (res) { return res.json(); });
    };
    UserService.prototype.changePassword = function (userData) {
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/user/changepassword';
        if (userData && userData.password) {
            userData.password = __WEBPACK_IMPORTED_MODULE_9_crypto_js___default.a.PBKDF2(userData.password, __WEBPACK_IMPORTED_MODULE_5__shared_config__["a" /* CONSTANTS */].CRYPTO_SALT, { keySize: 256 / 32 }).toString();
        }
        return this.http.post(url, userData).map(function (res) { return res.json(); });
    };
    UserService.prototype.getUserById = function (userId) {
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/user/findbyid';
        return this.http.post(url, { "_id": userId }).map(function (res) { return res.json(); });
    };
    UserService.prototype.verifyPhoneNumber = function (code) {
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/verifymobilenumber';
        var userObj = this.getUser();
        return this.http.post(url, { "_id": userObj.user_id, "verification_code": code }).map(function (res) { return res.json(); });
    };
    UserService.prototype.sendVerificationCode = function (mob_number) {
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/sendverificationcode';
        var userObj = this.getUser();
        return this.http.post(url, { "_id": userObj.user_id, "mobile_number": mob_number }).map(function (res) { return res.json(); });
    };
    UserService.prototype.getDataFromUserMaster = function () {
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/usermaster/all';
        return this.http.post(url, {}).map(function (res) { return res.json(); });
    };
    UserService.prototype.saveFeedBack = function (feedbackObj) {
        feedbackObj.user_id = this.userObj.user_id;
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/feedback';
        return this.http.post(url, feedbackObj).map(function (res) { return res.json(); });
    };
    UserService.prototype.setTempUserProfileObj = function (params) {
        this.tempUserProfileObj = params;
    };
    UserService.prototype.getTempUserProfileObj = function () {
        return this.tempUserProfileObj;
    };
    UserService.prototype.getUserProfile = function () {
        return this.userProfile;
    };
    UserService.prototype.setUserProfile = function (user) {
        this.userProfile = user;
        this.userName = user.profile.first_name + ' ' + user.profile.last_name;
        this.isProfileUpdate = false;
        this.userObj.profile.profile_pic = user.profile.profile_pic;
    };
    UserService.prototype.verifyForceUpdate = function (appVersion, deviceType) {
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/verifyversion';
        return this.http.post(url, { app_version: appVersion, device_type: deviceType }).map(function (res) { return res.json(); });
    };
    UserService.prototype.updateUserDeviceLang = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/user/updateuserdevicelang';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    UserService.prototype.acceptPolicy = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/user/settermsandprivacy';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    UserService.prototype.getBlockedUsers = function (userId) {
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/user/getblockuserslist';
        return this.http.post(url, { "user_id": userId }).map(function (res) { return res.json(); });
    };
    UserService.prototype.setCoachMarkSettings = function (params) {
        var url = __WEBPACK_IMPORTED_MODULE_6__shared_environment__["a" /* ENVIRONMENT */].APP_BASE_URL + '/api/user/setcoachmarksettings';
        return this.http.post(url, params).map(function (res) { return res.json(); });
    };
    UserService.prototype.shareOnFacebook = function (url, caption, imageUrl, callback) {
        var options;
        options = {
            method: "share",
            quote: caption,
            hashtag: '#Rezility',
            href: url,
            picture: imageUrl
        };
        this.facebook.showDialog(options).then(function (success) {
            if (callback) {
                callback(true);
            }
            //console.log(JSON.stringify(success));
        }, function (error) {
            if (callback) {
                callback(false);
            }
        });
    };
    return UserService;
}());
UserService = __decorate([
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* Injectable */])(),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */], __WEBPACK_IMPORTED_MODULE_7__http_service__["a" /* HttpService */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* Platform */], __WEBPACK_IMPORTED_MODULE_2__ionic_storage__["b" /* Storage */], __WEBPACK_IMPORTED_MODULE_8__providers_pubnub_service__["a" /* PubNubService */],
        __WEBPACK_IMPORTED_MODULE_12__ngx_translate_core__["c" /* TranslateService */],
        __WEBPACK_IMPORTED_MODULE_11__loader_service__["a" /* LoaderService */], __WEBPACK_IMPORTED_MODULE_3__ionic_native_facebook__["a" /* Facebook */]])
], UserService);

//# sourceMappingURL=user-service.js.map

/***/ })

},[488]);
//# sourceMappingURL=main.js.map