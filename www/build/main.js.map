{"version":3,"sources":["../../src/providers/loader-service.ts","../../src/providers/analytics-service.ts","../../src/pages/conversations/conversations.ts","../../src/pages/conversations/public-profile/public-profile.ts","../../src/pages/service-request/service-request-service.ts","../../src/pages/aroundme/provider-details/provider-details.ts","../../src/pages/aroundme/pending-confirmation/pending-confirmation.ts","../../src/pages/aroundme/housing-unit/housing-unit.ts","../../src/pages/activity/activity-feed.ts","../../src/pages/conversations/group-chat/group-chat.ts","../../src/shared/util/date.ts","../../src/pages/activity/create-placement-feed/create-placement-feed.ts","../../src/shared/modals/set-delivery-feed/set-delivery-feed.ts","../../src/pages/service-request/service-request.ts","../../src/pages/service-request/service-request-details/service-request-details.ts","../../src/shared/validationService.ts","../../src/pages/get-started/get-started.ts","../../src/providers/image-cache-service.ts","../../src/providers/pubnub-service.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/conversations/chat-service.ts","../../src/pages/home-tabs/home-tabs.ts","../../src/pages/aroundme/aroundme.ts","../../src/pages/aroundme/pinned-location/pinned-location.ts","../../src/pages/aroundme/edit-location/edit-location.ts","../../src/pages/aroundme/map-overlays/map-overlays.ts","../../src/pages/aroundme/set-pinned-location/set-pinned-location.ts","../../src/pages/aroundme/verify-address/verify-address.ts","../../src/pages/aroundme/discontinued-property/discontinued-property.ts","../../src/pages/conversations/new-message/new-message.ts","../../src/shared/environment.ts","../../src/pages/activity/activity-service.ts","../../src/pages/conversations/housing-provider-options/housing-provider-options.ts","../../src/pages/conversations/conversation-setting/conversation-setting.ts","../../src/pages/conversations/show-image/show-image.ts","../../src/pages/activity/contact-list/contact-list.ts","../../src/pages/activity/create-feed/create-feed.ts","../../src/pages/activity/create-placement-feed/description-feed/description-feed.ts","../../src/shared/modals/crop-image/crop-image.ts","../../src/pages/activity/create-placement-feed/selectImage/select-image.ts","../../src/pages/activity/create-poll-feed/create-poll-feed.ts","../../src/pages/activity/create-poll-feed/poll-description/poll-description.ts","../../src/pages/service-request/create-request/create-request.ts","../../src/pages/service-request/create-request/request-reported/request-reported.ts","../../src/pages/my-stuff/my-stuff.ts","../../src/pages/my-stuff/profile/profile.ts","../../src/pages/my-stuff/profile/edit-profile/edit-profile.ts","../../src/pages/my-stuff/profile/edit-profile/verifications/verifications.ts","../../src/pages/my-stuff/profile/edit-profile/address/address.ts","../../src/pages/my-stuff/settings/settings.ts","../../src/pages/my-stuff/settings/change-password/change-password.ts","../../src/pages/my-stuff/settings/blocked-users/blocked-users.ts","../../src/pages/my-stuff/tell-feedback/tell-feedback.ts","../../src/pages/login/request-login-link/request-login-link.ts","../../src/pages/login/login-link-sent/login-link-sent.ts","../../src/pages/login/request-login-error/request-login-error.ts","../../src/pages/login/base-login.ts","../../src/pages/get-started/app-info/app-info.ts","../../src/pages/get-started/sign-up/sign-up.ts","../../src/pages/get-started/select-password/select-password.ts","../../src/pages/get-started/select-password/choose-password/choose-password.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/providers/http-service.ts","../../src/pages/conversations/chat-box/chat-box.ts","../../src/app/app.component.ts","../../src/shared/config.ts","../../src/pages/aroundme/aroundme-service.ts","../../src/pages/aroundme/provider-service.ts","../../src/pages/conversations/connection-list.ts","../../src/pages/login/login.ts","../../src/shared/core.module.ts","../../src/shared/image-cache.module.ts","../../node_modules/moment/locale ^/.*$","../../src/pages/conversations/base-conversations.ts","../../src/pages/conversations/chat-box/base-chat-box.ts","../../src/pages/activity/activity-feed.module.ts","../../src/directives/lazy-load.directive.ts","../../src/components/lazy-img/lazy-img.component.ts","../../src/directives/keyboard-attach.directive.ts","../../src/directives/auto-resize.directive.ts","../../src/directives/localized-date-pipe.directive.ts","../../src/pages/aroundme/aroundme.module.ts","../../src/pages/aroundme/provider-options/provider-options.ts","../../src/pages/aroundme/housing-types/housing-types.ts","../../src/pages/my-stuff/my-stuff.module.ts","../../src/pages/conversations/conversations.module.ts","../../src/pages/login/login.module.ts","../../src/pages/get-started/get-started.module.ts","../../src/pages/service-request/service-request.module.ts","../../src/providers/storage-service.ts","../../src/directives/keyboard-tab-handler-directive.ts","../../src/providers/upload-service.ts","../../src/providers/user-service.ts"],"names":[],"mappings":"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;;;;;;;;;;;ACVkB;AACM;AACuB;AACO;AACR;AACa;AACjB;AACe;AAwBhF,IAAa,gBAAgB;IAA7B;IAAgC,CAAC;IAAD,uBAAC;AAAD,CAAC;AAApB,gBAAgB;IArB5B,uEAAQ,CAAC;QACN,OAAO,EAAE;YACL,qEAAY;SACf;QACD,YAAY,EAAE;YACV,0FAAiB;YACjB,iGAAgB;YAChB,sGAAuB;YACvB,oGAAiB;YACjB,qFAAU;SAEb;QACD,SAAS,EAAE,CAAC,yFAAiB,CAAC;QAC9B,OAAO,EAAE;YACL,iGAAgB;YAChB,sGAAuB;YACvB,oGAAiB;YACjB,qFAAU;SACb;KACJ,CAAC;GAEW,gBAAgB,CAAI;AAAJ;;;;;;;;AC/B7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { LoadingController, Loading, Platform } from 'ionic-angular';\r\nimport { Toast } from '@ionic-native/toast'\r\nimport 'rxjs/add/operator/map';\r\nimport { CONSTANTS } from '../shared/config';\r\n\r\n@Injectable()\r\nexport class LoaderService {\r\n  private loader: Loading;\r\n\r\n  constructor(private loadingCtrl: LoadingController, private platform: Platform, private toast: Toast) {\r\n    // console.log('Hello LoaderService Provider');\r\n  }\r\n\r\n  createLoader(message: string, duration: number = CONSTANTS.LOADER_MESSAGE.DURATION): void {\r\n    this.loader = this.loadingCtrl.create({ content: message, duration: duration });\r\n    this.loader.present();\r\n  }\r\n\r\n  dismissLoader(): void {\r\n    if (this.loader) {\r\n      this.loader.dismiss();\r\n    }\r\n  }\r\n\r\n\r\n  showToaster(message: string, position?: string): void {\r\n    if (this.platform.is('cordova')) {\r\n      if (!position) {\r\n        position = CONSTANTS.TOASTER.POSITION_BOTTOM\r\n      }\r\n      this.toast.show(message, CONSTANTS.TOASTER.DURATION, position).subscribe(\r\n        toast => {\r\n          // console.log(\"Toast message\", message);\r\n        });\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/loader-service.ts","import { Injectable } from '@angular/core';\r\nimport { Platform } from 'ionic-angular';\r\nimport { GoogleAnalytics } from '@ionic-native/google-analytics';\r\n\r\n// import { GoogleAnalytics } from 'ionic-native';\r\n\r\n@Injectable()\r\nexport class AnalyticsService {\r\n  isCordovaPlatform: boolean = false;\r\n  constructor(private platform: Platform, private ga: GoogleAnalytics) {\r\n    // console.log('Hello AnalyticsService Provider');\r\n    if (this.platform.is('cordova')) {\r\n      this.isCordovaPlatform = true;\r\n    }\r\n  }\r\n\r\n  startTracker(key: string) {\r\n    // console.log('startTracker begin');\r\n    this.ga.startTrackerWithId(key).then(() => {\r\n      //console.log('Google analytics is ready now');\r\n    });\r\n  }\r\n\r\n  addCustomDimension(userId: string) {\r\n    if (this.ga && this.isCordovaPlatform) {\r\n      // console.log(\"addCustomDimension\", propertyManager);\r\n      this.ga.addCustomDimension(1, userId).then(() => {\r\n      }).catch(e => console.log('Error addCustomDimension GoogleAnalytics', e));\r\n    }\r\n  }\r\n\r\n  enableExceptionReporting(shouldEnable: boolean) {\r\n    if (this.isCordovaPlatform) {\r\n      this.ga.enableUncaughtExceptionReporting(shouldEnable);\r\n    }\r\n  }\r\n\r\n  enableDebugMode() {\r\n    if (this.isCordovaPlatform) {\r\n      this.ga.debugMode();\r\n    }\r\n  }\r\n  trackScreenView(title: string, campaignUrl?: string) {\r\n    if (this.isCordovaPlatform) {\r\n      this.ga.trackView(title, campaignUrl).then(() => {\r\n      }).catch(e => console.log('Error trackScreenView GoogleAnalytics', e));\r\n    }\r\n  }\r\n\r\n  trackMetric(key: number, value: any) {\r\n    if (this.isCordovaPlatform) {\r\n      this.ga.trackMetric(key, value).then(() => {\r\n      }).catch(e => console.log('Error trackMetric GoogleAnalytics', e));\r\n    }\r\n  }\r\n\r\n  trackEvent(category: string, action: string, label?: string, value?: number) {\r\n    if (this.isCordovaPlatform) {\r\n      this.ga.trackEvent(category, action, label, value).then(() => {\r\n      }).catch(e => console.log('Error trackEvent GoogleAnalytics', e));\r\n    }\r\n  }\r\n\r\n  setUserId(userId: string) {\r\n    if (this.isCordovaPlatform) {\r\n      this.ga.setUserId(userId).then(() => {\r\n      }).catch(e => console.log('Error setUserId GoogleAnalytics', e));\r\n    }\r\n  }\r\n\r\n  setAllowIDFACollection(allow: boolean) {\r\n    if (this.isCordovaPlatform) {\r\n      this.ga.setAllowIDFACollection(allow).then(() => {\r\n      }).catch(e => console.log('Error setAllowIDFACollection GoogleAnalytics', e));\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/analytics-service.ts","import { Component, NgZone, OnDestroy, ViewChild } from '@angular/core';\r\nimport { NavController, Events, LoadingController, Platform, AlertController, ItemSliding, Content } from 'ionic-angular';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\n\r\nimport { NewMessage } from '../conversations/new-message/new-message';\r\nimport { PublicProfile } from './public-profile/public-profile';\r\nimport { ChatBox } from '../conversations/chat-box/chat-box';\r\nimport { BaseConversations } from './base-conversations';\r\nimport { UserService } from '../../providers/user-service';\r\nimport { PubNubService } from '../../providers/pubnub-service';\r\nimport { ChatService, IConversation } from './chat-service';\r\nimport { AnalyticsService } from '../../providers/analytics-service';\r\nimport { LoaderService } from '../../providers/loader-service'\r\nimport { CONSTANTS } from '../../shared/config';\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { HousingProviderOptions } from \"./housing-provider-options/housing-provider-options\";\r\n\r\n@Component({\r\n  selector: 'page-conversations',\r\n  templateUrl: 'conversations.html'\r\n})\r\n\r\nexport class Conversations extends BaseConversations implements OnDestroy {\r\n  private zone: NgZone;\r\n  public placeholderIamges = CONSTANTS.PLACEHOLDER_IMAGES;\r\n  public connectionStatus = CONSTANTS.CONNECTION_STATUS;\r\n  public groupType: string = CONSTANTS.CONVERSATION_TYPE.GROUP;\r\n  @ViewChild(Content) content: Content;\r\n  constructor(public navCtrl: NavController, public userService: UserService,\r\n    public pubNubService: PubNubService, public chatService: ChatService, public events: Events, public loadingCtrl: LoadingController,\r\n    public analyticsService: AnalyticsService, public platform: Platform, public loaderService: LoaderService, public translateService: TranslateService,\r\n    private alertCtrl: AlertController, private keyboard: Keyboard) {\r\n\r\n    super(userService, pubNubService, translateService, chatService, loaderService);\r\n    this.zone = new NgZone({ enableLongStackTrace: false });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.ionViewWillUnload();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // TODO - Need to move from here\r\n    let elem = <HTMLElement>document.querySelector('.tabbar');\r\n    elem.style.display = 'flex';\r\n    // TODO - Need to move from here once Keyboard issue fixed \r\n    this.keyboard.close();\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    //console.log(\"Conversations ionViewDidEnter\");\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.CONVERSATION);\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.CONVERSATION);\r\n    this.content.resize();\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    //console.log(\"Conversations ionViewDidLoad\");\r\n    this.initUpdateConversationEvent();\r\n    this.initSentConversationEvent();\r\n    this.initPresenceEvent();\r\n    this.initGroupCreatedEvent();\r\n    this.initConversation();\r\n    this.initUnBlockEvent();\r\n    this.pubNubService.isConversationVist = true;\r\n  }\r\n\r\n  ionViewWillUnload() {\r\n    //console.log(\"Conversations - Looks like I'm about to ionViewWillUnload :(\");\r\n    this.events.unsubscribe(CONSTANTS.APP_EVENTS.UPDATE_CONVERSATION);\r\n    this.events.unsubscribe(CONSTANTS.APP_EVENTS.SENT_MESSAGE);\r\n    this.events.unsubscribe(CONSTANTS.APP_EVENTS.CONV_PRESENCE_EVENT);\r\n    this.events.unsubscribe(CONSTANTS.APP_EVENTS.GROUP_CREATED);\r\n    this.events.unsubscribe(CONSTANTS.APP_EVENTS.REFRESH_CONVERSATION);\r\n\r\n  }\r\n\r\n  initConversation(): void {\r\n    let showLoader = (this.userService.userObj.show_coach_marks.conversation) ? false : true;\r\n    this.refreshConversation(this.refreshConversationDone, showLoader);\r\n  }\r\n\r\n  initUpdateConversationEvent(): void {\r\n    this.events.subscribe(CONSTANTS.APP_EVENTS.UPDATE_CONVERSATION, (message, time) => {\r\n      // console.log('In UPDATE_CONVERSATION Event Type ', event[1]);\r\n      let timetoken = null;\r\n      if (time && message.is_group) {\r\n        timetoken = time;\r\n      } else {\r\n        // console.log('Using message timetoken');\r\n        timetoken = message.timetoken;\r\n      }\r\n      this.updateConversations(message, timetoken);\r\n    });\r\n  }\r\n\r\n  initSentConversationEvent(): void {\r\n    this.events.subscribe(CONSTANTS.APP_EVENTS.SENT_MESSAGE, (event) => {\r\n      // console.log('In initSentConversationEvent SENT_MESSAGE Type ', event[0]);\r\n      this.updateSentConversations(event);\r\n\r\n    });\r\n  }\r\n\r\n  initGroupCreatedEvent(): void {\r\n    this.events.subscribe(CONSTANTS.APP_EVENTS.GROUP_CREATED, (event) => {\r\n      // console.log('Inside GROUP_CREATED subscribe>', event);\r\n      let conversation = event;\r\n      if (!this.sharedChannelConversationIdMap[conversation.shared_channel]) {\r\n        this.conversations.push(conversation);\r\n      } else {\r\n        this.sharedChannelConversationIdMap[conversation.shared_channel] = conversation;\r\n        if (this.sharedChannelIdConversationIndexMap[conversation.shared_channel] !== undefined) {\r\n          this.conversations[this.sharedChannelIdConversationIndexMap[conversation.shared_channel]].user_name = conversation.user_name;\r\n        }\r\n      }\r\n      this.sortConversation(this.conversations, (conversations) => {\r\n        this.conversations = conversations;\r\n      });\r\n    });\r\n  }\r\n\r\n  initUnBlockEvent(): void {\r\n    this.events.subscribe(CONSTANTS.APP_EVENTS.REFRESH_CONVERSATION, () => {\r\n      this.refreshConversation(this.refreshConversationDone, false);\r\n    });\r\n  }\r\n\r\n\r\n  initPresenceEvent(): void {\r\n    this.events.subscribe(CONSTANTS.APP_EVENTS.CONV_PRESENCE_EVENT, (presence) => {\r\n      //Set user online status.\r\n      //let presenceObj = presence[0];\r\n      //console.log('In subscribePresenceEvent[ action - ' + presence.action + ']', presence);\r\n      this.handlePresenceUpdate(presence);\r\n      // If someone added you in group,someone accepted user invitation  \r\n      this.handleStateupdate(presence);\r\n    });\r\n  }\r\n\r\n  handleStateupdate(presenceObj) {\r\n    if (presenceObj.action == 'state-change' && presenceObj.state !== undefined && presenceObj.channel === this.userService.userObj.user_id) {\r\n      let showLoader = this.userService.getCurrentPage().currentPage === CONSTANTS.PAGES.CONVERSATION && !this.userService.userObj.show_coach_marks.conversation;\r\n      \r\n      switch (presenceObj.state.action) {\r\n        case CONSTANTS.USER_STATES.GROUP_ADD:\r\n        case CONSTANTS.USER_STATES.GROUP_REMOVE:\r\n        case CONSTANTS.USER_STATES.GROUP_RENAME:\r\n        case CONSTANTS.USER_STATES.VERIFICATION_REQUEST:\r\n        case CONSTANTS.USER_STATES.VERIFICATION_CANCEL: {\r\n          this.refreshConversation(this.refreshConversationDone, showLoader);\r\n          break;\r\n        }\r\n        case CONSTANTS.USER_STATES.CONNECTION_STATUS_CHANGED: {\r\n          this.handleConnectionStatusUpdate(presenceObj);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleConnectionStatusUpdate(presenceObj) {\r\n    let showLoader = this.userService.getCurrentPage().currentPage === CONSTANTS.PAGES.CONVERSATION && !this.userService.userObj.show_coach_marks.conversation;\r\n    \r\n    switch (presenceObj.state.connection_status) {      \r\n      case CONSTANTS.CONNECTION_STATUS.INVITED:\r\n      case CONSTANTS.CONNECTION_STATUS.IGNORE: {\r\n        this.refreshConversation(this.refreshConversationDone,showLoader);\r\n        break;\r\n      }\r\n      case CONSTANTS.CONNECTION_STATUS.CONNECTED: {\r\n        if (presenceObj.state.connection_action &&\r\n          (presenceObj.state.connection_action === CONSTANTS.CONNECTION_STATUS.BLOCKED ||\r\n            presenceObj.state.connection_action === CONSTANTS.CONNECTION_STATUS.UNBLOCKED)) {\r\n          this.updateConnectionStatus(presenceObj.uuid, presenceObj.state.connection_status);\r\n        } else {\r\n          this.refreshConversation(this.refreshConversationDone, showLoader);\r\n        }\r\n        break;\r\n      }\r\n      case CONSTANTS.CONNECTION_STATUS.CONNECTED_BLOCKED: {\r\n        //Just update the status to connected blocked \r\n        this.updateConnectionStatus(presenceObj.uuid, presenceObj.state.connection_status);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  updateConnectionStatus(userId: string, connectionStatus: number) {\r\n    this.conversations.map((conversation, index) => {\r\n      if (userId === conversation.user_id) {\r\n        conversation.connection_status = connectionStatus;\r\n      }\r\n    });\r\n  }\r\n\r\n  handlePresenceUpdate(presenceObj) {\r\n    if (this.conversations !== undefined) {\r\n      this.conversations.map((conversation, index) => {\r\n        // if (presenceObj.uuid === conversation.user_id && presenceObj.state != undefined) {\r\n        //   conversation.isTyping = presenceObj.state.isTyping;\r\n        //   // // console.log(\"Typing status changed \", conversation.isTyping);\r\n        // }\r\n        if (presenceObj.uuid === conversation.user_id && presenceObj.actualChannel === conversation.user_id + \"present-pnpres\") {\r\n          if (presenceObj.action == \"join\") {\r\n            conversation.presence = \"online\";\r\n          }\r\n          else if (presenceObj.action == \"leave\") {\r\n            conversation.presence = \"\";\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  doRefreshConversation(refresher): void {\r\n    // console.log('In doRefreshConversation');\r\n    this.refreshConversation(() => {\r\n      refresher.complete();\r\n      this.updateSubscribeChannels();\r\n      this.refreshConversationDone();\r\n    });\r\n  }\r\n\r\n  openConversation(user): void {\r\n    //console.log(\"In openConversation User object is \", user);\r\n    user.badgeCount = 0;\r\n    if (user.connection_status === CONSTANTS.CONNECTION_STATUS.INVITATION_RECEIVED) {\r\n      this.viewInvite(user);\r\n    } else if (user.connection_status === CONSTANTS.CONNECTION_STATUS.CONNECTED || user.connection_status === CONSTANTS.CONNECTION_STATUS.CONNECTED_BLOCKED || user.connection_status === CONSTANTS.CONNECTION_STATUS.INVITED) {\r\n      this.navCtrl.push(ChatBox, { user: user });\r\n    }\r\n  }\r\n\r\n  navigateToNewMessagePage(): void {\r\n    this.navCtrl.push(NewMessage);\r\n  }\r\n\r\n  viewInvite(user) {\r\n    if (user.group_type !== CONSTANTS.GROUP_TYPE.HOUSING_PROVIDER) {\r\n      this.navCtrl.push(PublicProfile, { user: user });\r\n    } else {\r\n      this.navCtrl.push(HousingProviderOptions, { user: user });\r\n    }\r\n  }\r\n\r\n  leaveGroup(conversation: IConversation, slidingItem: ItemSliding) {\r\n    let alert = this.alertCtrl.create({\r\n      title: this.translateService.instant('CONVERSATIONS.LEAVE_GROUP'),\r\n      buttons: [{\r\n        text: this.translateService.instant('CONVERSATIONS.OK'),\r\n        handler: () => {\r\n          slidingItem.close();\r\n          this.exitGroup(conversation);\r\n          alert.dismiss();\r\n          return false;\r\n        }\r\n      },\r\n      {\r\n        text: this.translateService.instant('CONVERSATIONS.CANCEL'),\r\n        role: 'cancel',\r\n        handler: () => {\r\n          slidingItem.close();\r\n        }\r\n      }],\r\n      enableBackdropDismiss: false\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  deleteConversation(conversation: IConversation, slidingItem: ItemSliding, position: number) {\r\n    let that = this;\r\n    let alert = that.alertCtrl.create({\r\n      title: this.translateService.instant('CONVERSATIONS.DELETE_GROUP'),\r\n      buttons: [{\r\n        text: this.translateService.instant('CONVERSATIONS.OK'),\r\n        handler: () => {\r\n          slidingItem.close();\r\n          that.chatService.deleteGroupConversation(conversation.shared_channel, that.userService.userObj.user_id).subscribe((response: any) => {\r\n            //console.log(\"Success\", response);\r\n            if (response.status !== 'ERROR') {\r\n            }\r\n          });\r\n          that.conversations.splice(position, 1);\r\n          alert.dismiss();\r\n          return false;\r\n        }\r\n      },\r\n      {\r\n        text: this.translateService.instant('CONVERSATIONS.CANCEL'),\r\n        role: 'cancel',\r\n        handler: () => {\r\n          slidingItem.close();\r\n        }\r\n      }],\r\n      enableBackdropDismiss: false\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  archiveConversation(conversation: IConversation, index: number) {\r\n    let that = this;\r\n    //Archive Conversation\r\n    that.conversations[index].status = CONSTANTS.CONVERSATION_STATUS.ARCHIVE;\r\n    that.pubNubService.getTimeToken((pubnubtimetoken) => {\r\n      that.pubNubService.setConversationLastState(conversation.shared_channel, 0, pubnubtimetoken);\r\n      that.updateConversationStatus(conversation);\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversations/conversations.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams, Events, AlertController } from 'ionic-angular';\r\nimport { IConversation } from '../chat-service';\r\nimport { ChatBox } from '../chat-box/chat-box';\r\nimport { UserService, IUser } from '../../../providers/user-service';\r\nimport { ConnectionList } from '../connection-list';\r\nimport { ChatService, IUpdateConnectionStatusRequestParams, IGroupRemoveRequest } from '../chat-service';\r\nimport { PubNubService, IConnectionStatusChangeState, ISendPushNotificationRequest } from '../../../providers/pubnub-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: 'page-public-profile',\r\n  templateUrl: 'public-profile.html'\r\n})\r\nexport class PublicProfile {\r\n  public selectedUser: IConversation;\r\n  public groupDetails: IConversation;\r\n  public userData: IUser;\r\n  public groupChannel: string;\r\n  public groupName: string;\r\n  public groupOwner: string;\r\n  public memberIndex: number;\r\n  public connectionStatus = CONSTANTS.CONNECTION_STATUS;\r\n  public usertype = CONSTANTS.USER_TYPE;\r\n  private connectionList: ConnectionList;\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, private userService: UserService,\r\n    private chatService: ChatService, private loaderService: LoaderService, private pubNubService: PubNubService,\r\n    private translateService: TranslateService,\r\n    private analyticsService: AnalyticsService, private events: Events, private alertCtrl: AlertController) {\r\n    this.connectionList = new ConnectionList(chatService, pubNubService, translateService, loaderService);\r\n    this.userData = this.userService.getUser();\r\n    this.selectedUser = this.navParams.get('user');\r\n    this.groupDetails = this.navParams.get('groupDetails');\r\n    this.memberIndex = this.navParams.get('memberIndex');\r\n\r\n    if (this.groupDetails) {\r\n      this.groupChannel = this.groupDetails.shared_channel;\r\n      this.groupName = this.groupDetails.name;\r\n      this.groupOwner = this.groupDetails.created_by;\r\n      this.selectedUser.receiver_id = this.selectedUser.user_id;\r\n    }\r\n\r\n    //console.log('In ViewInvite this.selectedUser ', this.selectedUser);\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.PUBLIC_PROFILE);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.PUBLIC_PROFILE);\r\n  }\r\n\r\n\r\n  onAcceptAndconnect() {\r\n    this.updateConnectionStatus(CONSTANTS.CONNECTION_STATUS.CONNECTED, () => {\r\n      this.pubNubService.getTimeToken((pubnubtimestoken) => {\r\n        // Update Joining date as accepted date\r\n        this.selectedUser.joining_time_token = pubnubtimestoken;\r\n        this.navCtrl.push(ChatBox, { user: this.selectedUser }).then(() => {\r\n          this.navCtrl.remove((this.navCtrl.length() - 2), 1);\r\n          this.selectedUser.connection_status = CONSTANTS.CONNECTION_STATUS.CONNECTED;\r\n          this.events.publish(CONSTANTS.APP_EVENTS.REFRESH_CONVERSATION);\r\n          let stateObj: IConnectionStatusChangeState = {\r\n            _id: this.selectedUser.shared_channel,\r\n            name: this.selectedUser.user_name,\r\n            connection_status: CONSTANTS.CONNECTION_STATUS.CONNECTED,\r\n            action: CONSTANTS.USER_STATES.CONNECTION_STATUS_CHANGED,\r\n            connection_type: this.selectedUser.type\r\n          };\r\n          this.pubNubService.setConnectionStatusChangeState(stateObj, [this.selectedUser.receiver_id]);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  onIgnoreClick() {\r\n    //console.log('In onIgnoreClick');\r\n    this.updateConnectionStatus(CONSTANTS.CONNECTION_STATUS.IGNORE, () => {\r\n      this.events.publish(CONSTANTS.APP_EVENTS.REFRESH_CONVERSATION);\r\n      this.selectedUser.connection_status = CONSTANTS.CONNECTION_STATUS.IGNORE;\r\n      let stateObj: IConnectionStatusChangeState = {\r\n        _id: this.selectedUser.shared_channel,\r\n        name: this.selectedUser.user_name,\r\n        connection_status: CONSTANTS.CONNECTION_STATUS.IGNORE,\r\n        action: CONSTANTS.USER_STATES.CONNECTION_STATUS_CHANGED\r\n      };\r\n      this.pubNubService.setConnectionStatusChangeState(stateObj, [this.selectedUser.receiver_id]);\r\n      this.events.publish(CONSTANTS.APP_EVENTS.REFRESH_GROUP_DETAILS);\r\n      this.navCtrl.pop();\r\n    });\r\n\r\n  }\r\n\r\n  onBlockClick() {\r\n    //console.log('In onBlockClick');\r\n    let that = this;\r\n    if (that.selectedUser.user_type && that.selectedUser.user_type === CONSTANTS.USER_TYPE.ADMIN) {\r\n      that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.ADMIN_BLOCK'));\r\n    } else {\r\n\r\n      that.updateConnectionStatus(CONSTANTS.CONNECTION_STATUS.BLOCKED, () => {\r\n        let receiver_uuid;\r\n        that.events.publish(CONSTANTS.APP_EVENTS.REFRESH_CONVERSATION);\r\n        let alert = that.alertCtrl.create({\r\n          title: that.translateService.instant('ERROR_MESSAGES.BLOCK_SUCCESS'),\r\n          buttons: [{\r\n            text: this.translateService.instant('CONVERSATIONS.OK'),\r\n            handler: () => {\r\n              if (that.memberIndex !== undefined) {\r\n                receiver_uuid = that.selectedUser.user_id;\r\n                that.navCtrl.pop();\r\n                that.events.publish(CONSTANTS.APP_EVENTS.REFRESH_GROUP_DETAILS);\r\n              } else {\r\n                receiver_uuid = that.selectedUser.receiver_id\r\n                that.navCtrl.remove(1, (that.navCtrl.length() - 1));\r\n              }\r\n              that.selectedUser.connection_status = CONSTANTS.CONNECTION_STATUS.BLOCKED;\r\n              let stateObj: IConnectionStatusChangeState = {\r\n                _id: that.selectedUser.shared_channel,\r\n                name: that.selectedUser.user_name,\r\n                connection_status: CONSTANTS.CONNECTION_STATUS.CONNECTED_BLOCKED,\r\n                action: CONSTANTS.USER_STATES.CONNECTION_STATUS_CHANGED,\r\n                connection_action: CONSTANTS.CONNECTION_STATUS.BLOCKED\r\n              };\r\n              that.pubNubService.setConnectionStatusChangeState(stateObj, [receiver_uuid]);\r\n              alert.dismiss();\r\n              return false;\r\n            }\r\n          }],\r\n          enableBackdropDismiss: false,\r\n          cssClass: 'alert-single'\r\n        });\r\n        alert.present();\r\n      });\r\n    }\r\n  }\r\n\r\n  inviteOrCancelInvite(conversation: IConversation, hasCalledFromNewMessage = false, callback?) {\r\n    if (conversation.connection_status === CONSTANTS.CONNECTION_STATUS.NOT_CONNECTED) {\r\n      this.sendInvite(conversation, hasCalledFromNewMessage);\r\n    } else if (conversation.connection_status === CONSTANTS.CONNECTION_STATUS.INVITED) {\r\n      this.cancelInvite(conversation, hasCalledFromNewMessage, callback);\r\n    }\r\n  }\r\n\r\n  viewSentInvite(conversation: IConversation) {\r\n    this.navCtrl.push(ChatBox, { user: conversation });\r\n  }\r\n\r\n  cancelInvite(conversation: IConversation, hasCalledFromNewMessage: boolean, callback?) {\r\n    //console.log('cancelInvite', conversation);\r\n    let params: IUpdateConnectionStatusRequestParams = {\r\n      user_id: this.userData.user_id,\r\n      shared_channel: conversation.shared_channel,\r\n      connection_status: CONSTANTS.CONNECTION_STATUS.IGNORE,\r\n      receiver_id: conversation.receiver_id,\r\n      receiver_username: conversation.user_name,\r\n      is_advocate: conversation.is_advocate\r\n    };\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    this.chatService.updateConnectionStatus(params).subscribe((result) => {\r\n      this.loaderService.dismissLoader();\r\n      if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        conversation.connection_status = CONSTANTS.CONNECTION_STATUS.NOT_CONNECTED;\r\n        let stateObj: IConnectionStatusChangeState = {\r\n          _id: conversation.shared_channel,\r\n          name: conversation.user_name,\r\n          connection_status: CONSTANTS.CONNECTION_STATUS.IGNORE,\r\n          action: CONSTANTS.USER_STATES.CONNECTION_STATUS_CHANGED\r\n        };\r\n        this.pubNubService.setConnectionStatusChangeState(stateObj, [conversation.receiver_id]);\r\n        if (!hasCalledFromNewMessage) {\r\n          this.navCtrl.pop();\r\n        }\r\n        if (callback) {\r\n          callback();\r\n        }\r\n      } else {\r\n        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n      }\r\n    });\r\n  }\r\n\r\n  viewReceivedInvite(conversation: IConversation) {\r\n    this.navCtrl.push(PublicProfile, { user: conversation });\r\n  }\r\n\r\n  sendInvite(conversation: IConversation, hasCalledFromNewMessage: boolean) {\r\n    this.pubNubService.getTimeToken((pubnubtimestoken) => {\r\n      let obj = {\r\n        user_id: this.userData.user_id,\r\n        created_by: this.userData.user_id,\r\n        receiver_id: conversation.receiver_id || conversation.user_id,\r\n        receiver_username: conversation.user_name,\r\n        joining_time_token: pubnubtimestoken\r\n      };\r\n\r\n      if (conversation.user_type !== CONSTANTS.USER_TYPE.RESIDENT) {\r\n        obj['connection_status'] = CONSTANTS.CONNECTION_STATUS.CONNECTED;\r\n      }\r\n\r\n      this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n      this.chatService.createOrEditConversation(obj).subscribe((result) => {\r\n        this.loaderService.dismissLoader();\r\n        if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS\r\n          && result.chat[0] && result.chat[0].shared_channel) {\r\n          conversation.shared_channel = result.chat[0].shared_channel;\r\n\r\n          if (conversation.user_type === CONSTANTS.USER_TYPE.RESIDENT) {\r\n            conversation.connection_status = CONSTANTS.CONNECTION_STATUS.INVITED;\r\n            conversation.joining_time_token = pubnubtimestoken;\r\n\r\n            //  Share invite state and push notification to recevier only if receiver is not blocked. \r\n            if (!result.is_blocked) {\r\n              let stateObj: IConnectionStatusChangeState = {\r\n                _id: result.chat[0].shared_channel,\r\n                name: this.userData.user_name,\r\n                connection_status: CONSTANTS.CONNECTION_STATUS.INVITED,\r\n                action: CONSTANTS.USER_STATES.CONNECTION_STATUS_CHANGED\r\n              };\r\n              this.pubNubService.setConnectionStatusChangeState(stateObj, [conversation.receiver_id]);\r\n              this.chatService.getConversationExtraData({ shared_channel: result.chat[0].shared_channel }).subscribe((response) => {\r\n                if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n                  Object.assign(conversation, { languages: response.languages });\r\n                  this.sendPushNotificationToReceiver(conversation);\r\n                }\r\n              });\r\n            }\r\n            if (!hasCalledFromNewMessage) {\r\n              this.navCtrl.pop();\r\n            }\r\n          } else {\r\n            // If invited user is other then resident then open conversation directly.\r\n            conversation.connection_status = CONSTANTS.CONNECTION_STATUS.CONNECTED;\r\n            this.pubNubService.getTimeToken((pubnubtimestoken) => {\r\n              // Update Joining date as invitation sent date\r\n              conversation['joining_time_token'] = pubnubtimestoken;\r\n              this.connectionList.updatePresenceStatus([conversation], () => {\r\n                this.openChatBox(conversation);\r\n              });\r\n              this.events.publish(CONSTANTS.APP_EVENTS.REFRESH_CONVERSATION);\r\n            });\r\n          }\r\n        } else {\r\n          this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  openChatBox(conversation: IConversation) {\r\n    this.navCtrl.push(ChatBox, { user: conversation }).then(() => {\r\n      this.navCtrl.remove((this.navCtrl.length() - 2), 1);\r\n    });\r\n  }\r\n\r\n  updateConnectionStatus(connectionStatus, callback) {\r\n    let params: IUpdateConnectionStatusRequestParams = {\r\n      user_id: this.userData.user_id,\r\n      shared_channel: this.selectedUser.shared_channel,\r\n      connection_status: connectionStatus,\r\n      receiver_id: this.selectedUser.user_id,\r\n      receiver_username: this.selectedUser.user_name,\r\n      is_advocate: this.selectedUser.is_advocate\r\n    };\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    this.chatService.updateConnectionStatus(params).subscribe((result) => {\r\n      //console.log('Inside updateConnectionStatus callback', result);\r\n      this.loaderService.dismissLoader();\r\n      if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        if (callback) {\r\n          callback();\r\n        }\r\n      } else {\r\n        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n      }\r\n    });\r\n  }\r\n\r\n  onMessageClick() {\r\n    let that = this;\r\n    if (this.selectedUser.connection_status === CONSTANTS.CONNECTION_STATUS.CONNECTED || this.selectedUser.connection_status === CONSTANTS.CONNECTION_STATUS.CONNECTED_BLOCKED) {\r\n      this.selectedUser.type = CONSTANTS.CONVERSATION_TYPE.SINGLE;\r\n      this.selectedUser.receiver_id = this.selectedUser.user_id;\r\n      this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n      that.navCtrl.remove(1, that.navCtrl.length() - 1, { animate: false, progressAnimation: false }).then(() => {\r\n        that.navCtrl.push(ChatBox, { user: that.selectedUser }).then(() => {\r\n          that.loaderService.dismissLoader();\r\n        });\r\n      });\r\n    } else {\r\n      //console.log(CONSTANTS.ERROR_MESSAGES.UNINVITED_MESSAGE);\r\n      this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.UNINVITED_MESSAGE'));\r\n    }\r\n  }\r\n\r\n  onRemoveClick(isLeave: boolean) {\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    let that = this;\r\n    this.pubNubService.getTimeToken((pubnubtimetoken) => {\r\n      let removeRequest: IGroupRemoveRequest = {\r\n        user_id: that.userData.user_id,\r\n        shared_channel: that.groupChannel,\r\n        name: that.groupName,\r\n        member_id: that.selectedUser.user_id,\r\n        leaving_time_token: pubnubtimetoken\r\n      };\r\n      that.chatService.removeMemberFromGroup(removeRequest).subscribe((result) => {\r\n        if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n          //console.log(pubnubtimetoken, '---', that.groupOwner, \"--\", that.userData.user_id, [that.selectedUser.user_id], that.groupChannel, that.groupName);\r\n          that.pubNubService.removeChannelFromGroup([that.selectedUser.user_id], that.groupChannel, that.groupName, pubnubtimetoken);\r\n          that.groupDetails.members.splice(that.memberIndex, 1);\r\n        } else {\r\n          that.loaderService.showToaster(result.message);\r\n          that.loaderService.dismissLoader();\r\n        }\r\n        if (isLeave) {\r\n          that.navCtrl.remove(1, that.navCtrl.length() - 1);\r\n        } else {\r\n          that.navCtrl.pop();\r\n        }\r\n      }, error => {\r\n        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n        this.loaderService.dismissLoader();\r\n      });\r\n      //this.pubNubService.removeChannelFromGroup([this.selectedUser._id], this.group_channel,this.group_name, timestamp); \r\n    });\r\n  }\r\n\r\n  onUnBlockClick() {\r\n    let that = this;\r\n    let params: IUpdateConnectionStatusRequestParams = {\r\n      user_id: that.userData.user_id,\r\n      shared_channel: that.selectedUser.shared_channel,\r\n      connection_status: CONSTANTS.CONNECTION_STATUS.UNBLOCKED,\r\n      receiver_id: that.selectedUser.user_id,\r\n      receiver_username: that.selectedUser.user_name,\r\n      is_advocate: that.selectedUser.is_advocate\r\n    };\r\n\r\n    that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    that.chatService.updateConnectionStatus(params).subscribe((result) => {\r\n      if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n\r\n        let alert = that.alertCtrl.create({\r\n          title: that.translateService.instant('ERROR_MESSAGES.UNBLOCK_SUCCESS'),\r\n          buttons: [{\r\n            text: this.translateService.instant('CONVERSATIONS.OK'),\r\n            handler: () => {\r\n              let stateObj: IConnectionStatusChangeState = {\r\n                _id: that.selectedUser.shared_channel,\r\n                name: that.userData.profile.first_name,\r\n                connection_status: CONSTANTS.CONNECTION_STATUS.CONNECTED,\r\n                action: CONSTANTS.USER_STATES.CONNECTION_STATUS_CHANGED,\r\n                connection_action: CONSTANTS.CONNECTION_STATUS.UNBLOCKED\r\n              };\r\n              that.pubNubService.setConnectionStatusChangeState(stateObj, [that.selectedUser.user_id]);\r\n              that.navCtrl.pop();\r\n              that.events.publish(CONSTANTS.APP_EVENTS.REFRESH_CONVERSATION);\r\n              that.events.publish(CONSTANTS.APP_EVENTS.REFRESH_GROUP_DETAILS);\r\n              alert.dismiss();\r\n              return false;\r\n            }\r\n          }],\r\n          enableBackdropDismiss: false,\r\n          cssClass: 'alert-single'\r\n        });\r\n        alert.present();\r\n      } else {\r\n        that.loaderService.dismissLoader();\r\n        that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n      }\r\n      that.loaderService.dismissLoader();\r\n    });\r\n  }\r\n\r\n  sendPushNotificationToReceiver(conversation) {\r\n    let pushObj: ISendPushNotificationRequest;\r\n    pushObj = {\r\n      title: this.userData.user_name + \" \" + CONSTANTS.MESSAGES.SENT_INVITE_NOT_POSTFIX,\r\n      message: '',\r\n      sender: this.userData.user_name,\r\n      receiver_uuid: conversation.receiver_id,\r\n    };\r\n    this.pubNubService.getSupportedLanguageMsg(pushObj.title, conversation.languages, false).subscribe((msgContent) => {\r\n      pushObj.title = this.chatService.getMessageContent(msgContent, this.chatService.getNotificationLang(conversation.languages));\r\n      this.pubNubService.sendPushNotification(pushObj);\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversations/public-profile/public-profile.ts","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '../../providers/http-service';\r\nimport { IConversation } from '../conversations/chat-service';\r\nimport { ENVIRONMENT } from '../../shared/environment';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch'\r\n\r\n@Injectable()\r\nexport class ServiceRequestService {\r\n    // This is fixed for all domains so have to update this when we add/remove types\r\n    public serviceRequestTypeClassMap = {\r\n        \"5859382a4cce7614b8b0bd66_39\": \"icons-appliances\",\r\n        \"5859382a4cce7614b8b0bd66_42\": \"icons-commonarea\",\r\n        \"5859382a4cce7614b8b0bd66_38\": \"icons-plug\",\r\n        \"5859382a4cce7614b8b0bd66_43\": \"icons-general\",\r\n        \"5859382a4cce7614b8b0bd66_40\": \"icons-thermometer\",\r\n        \"5859382a4cce7614b8b0bd66_44\": \"icons-general\",\r\n        \"5859382a4cce7614b8b0bd66_41\": \"icons-plumbing\"\r\n    };\r\n    constructor(public http: HttpService) {\r\n       //console.log('Hello ServiceRequestService Provider');\r\n    }\r\n\r\n    getServiceRequestTypes() {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/getservicerequesttypes';\r\n        return this.http.post(url, {}).map((res: any) => res.json());\r\n    }\r\n\r\n    reportServiceRequest(params: IServiceRequest) {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/incidents';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n    getServiceRequestList(params: IGetServiceRequestListRequest) {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/incidents/getuserservicerequests';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    getServiceRequestDetails(params: { _id: string }) {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/incidents/getservicerequestdetails';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    checkForResidences(params: { user_id: string }) {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/servicelocations/checkforresidences';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    getIncidentDateString() {\r\n        let date = new Date(), dateStr = '';\r\n        dateStr = date.getFullYear() % 100 + '' + numberInTwoDigit(date.getMonth() + 1) + '' + numberInTwoDigit(date.getDate());\r\n\r\n        function numberInTwoDigit(input) {\r\n            let outputstr = (input < 10) ? 0 + '' + input : input;\r\n            return outputstr;\r\n        }\r\n        return dateStr;\r\n    }\r\n\r\n    createConversation(params: ICreateConversation) {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/incidentconversations';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    saveMessage(params: ISaveMessage) {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/incidentmessages';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n}\r\n\r\nexport interface IServiceRequest {\r\n    user_id: string;\r\n    user_name: string;\r\n    property_id: string;\r\n    type: string;\r\n    address: string;\r\n    description: string;\r\n    incident_date_string: string;\r\n    photos: Array<string>;\r\n    building_id: string;\r\n    unit?: string;\r\n}\r\n\r\nexport interface IServiceRequestDetails {\r\n    _id: string;\r\n    incident_number: string;\r\n    user_name: string;\r\n    status: string;\r\n    status_translated?: string;\r\n    property_id: string;\r\n    photos: Array<string>;\r\n    address: string;\r\n    description: string;\r\n    type: string;\r\n    type_id: string;\r\n    providers?: Array<any>;\r\n    created_at?: string;\r\n    conversation?: IConversation;\r\n}\r\n\r\nexport interface IGetServiceRequestListRequest {\r\n    user_id: string;\r\n    per_page: number;\r\n    page_number: number;\r\n}\r\n\r\nexport interface IResidentProperty {\r\n    public_name: string;\r\n    property_id: string;\r\n    building_id: string;\r\n    unit: string;\r\n    is_advocate: boolean;\r\n    allow_service_requests: boolean;\r\n}\r\n\r\nexport interface ICreateConversation {\r\n    user_id: string;\r\n    shared_channel: string;\r\n    name: string;\r\n    joining_time_token: string;\r\n    leaving_time_token?: string;\r\n    incident_id: string;\r\n    members: Array<string>;\r\n}\r\n\r\nexport interface ISaveMessage {\r\n    user_id: string;\r\n    shared_channel: string;\r\n    content: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/service-request/service-request-service.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams, Events } from 'ionic-angular';\r\n\r\nimport { IGenericResponse } from '../aroundme-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { UserService } from \"../../../providers/user-service\";\r\nimport { VerifyAddress } from \"../verify-address/verify-address\";\r\nimport { HousingUnit } from \"../housing-unit/housing-unit\";\r\nimport { DiscontinuedProperty } from '../discontinued-property/discontinued-property';\r\nimport { IProviderDetails, IFollowProviderRequest, ProviderService, IFavProviderRequest } from \"../provider-service\";\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: 'page-provider-details',\r\n  templateUrl: 'provider-details.html'\r\n})\r\nexport class ProviderDetails {\r\n  private providerId: string;\r\n  private buildingId: string;\r\n  private buildingAddress: string;\r\n  public providerDetails: IProviderDetails;\r\n  public isClosed: boolean = false;\r\n  public isFollowing: boolean = false;\r\n  public isFavorite: boolean = false;\r\n  public showConnect: boolean = true;\r\n  public hoursOfOperationCount: number = 0;\r\n  public userType = CONSTANTS.USER_TYPE;\r\n  constructor(private loaderService: LoaderService, private providerService: ProviderService,\r\n    private analyticsService: AnalyticsService, private navCtrl: NavController, private navParams: NavParams,\r\n    public events: Events, private translateService: TranslateService, private userService: UserService) {\r\n    this.providerId = this.navParams.get('providerId');\r\n    this.buildingId = this.navParams.get('buildingId');\r\n    this.buildingAddress = this.navParams.get('buildingAddress')\r\n    this.showConnect = this.navParams.get('showConnect');\r\n    this.providerDetails = {\r\n      _id: '',\r\n      about: '',\r\n      public_name: '',\r\n      profile_pic: '',\r\n      location_type: '',\r\n      banners: null,\r\n      location: null,\r\n      hours_of_operation: null,\r\n      service_interests: null,\r\n      is_favorite: false,\r\n      is_following: false,\r\n      is_advocate: false,\r\n      resident_unit: ''\r\n    };\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    //console.log('Hello ProviderDetails Page');\r\n    if (this.providerId) {\r\n      this.getProviderDetails(this.providerId);\r\n    }\r\n    this.initPresenceEvent();\r\n  }\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.PROVIDER_DETAIL);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.PROVIDER_DETAIL, this.providerDetails.location_type);\r\n  }\r\n\r\n  ionViewWillUnload() {\r\n    this.events.unsubscribe(CONSTANTS.APP_EVENTS.PROVIDER_PRESENCE_EVENT);\r\n  }\r\n\r\n  initPresenceEvent(): void {\r\n    this.events.subscribe(CONSTANTS.APP_EVENTS.PROVIDER_PRESENCE_EVENT, (presence) => {\r\n      if (presence.state.connection_action) {\r\n        this.handleProviderConnectionStatus(presence);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleProviderConnectionStatus(presence) {\r\n    if (presence.state.connection_action === CONSTANTS.CONNECTION_STATUS.CONNECTED) {\r\n      this.loaderService.showToaster(this.translateService.instant(\"ERROR_MESSAGES.VERIFY_ADDRESS_SUCCESS\"));\r\n      this.getProviderDetails(this.providerId);\r\n      //console.log(this.translateService.instant(\"ERROR_MESSAGES.VERIFY_ADDRESS_SUCCESS\"));\r\n    } else if (presence.state.connection_action === CONSTANTS.CONNECTION_STATUS.IGNORE) {\r\n      this.loaderService.showToaster(this.translateService.instant(\"ERROR_MESSAGES.VERIFY_ADDRESS_DENY\"));\r\n      this.getProviderDetails(this.providerId);\r\n      //console.log(this.translateService.instant(\"ERROR_MESSAGES.VERIFY_ADDRESS_DENY\"));\r\n    }\r\n  }\r\n\r\n  getProviderDetails(providerId: string) {\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    this.providerService.findPropertyById({ _id: providerId, user_id: this.userService.userObj.user_id, building_id: this.buildingId }).subscribe((response) => {\r\n      this.loaderService.dismissLoader();\r\n      if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        this.providerDetails = response.property[0];\r\n        //Set default value\r\n        this.isFavorite = this.providerDetails.is_favorite || false;\r\n        this.isFollowing = this.providerDetails.is_following || false;\r\n        this.updateWorkingStatus(this.providerDetails);\r\n      }\r\n    }, error => {\r\n      this.loaderService.dismissLoader();\r\n      this.loaderService.showToaster(error);\r\n    });\r\n  }\r\n\r\n  updateWorkingStatus(providerDetails: IProviderDetails) {\r\n    let hours_of_operation = providerDetails.hours_of_operation;\r\n    let today, weekday, currentDate, statDate, endDate;\r\n    let start_time, start_hour, start_min, start_period;\r\n    let end_time, end_hour, end_min, end_period;\r\n\r\n    currentDate = new Date();\r\n    statDate = new Date();\r\n    endDate = new Date();\r\n\r\n    weekday = [\"SUNDAY\", \"MONDAY\", \"TUESDAY\", \"WEDNESDAY\", \"THURSDAY\", \"FRIDAY\", \"SATURDAY\"];\r\n    today = weekday[currentDate.getDay()].toLowerCase();\r\n\r\n    if (hours_of_operation && hours_of_operation[today] !== undefined) {\r\n      start_time = hours_of_operation[today].start_time;\r\n      start_hour = parseInt(start_time.substring(0, 2));\r\n      start_min = start_time.substring(3, 5);\r\n      start_period = start_time.substring(5, 7).toUpperCase();\r\n\r\n      end_time = hours_of_operation[today].end_time;\r\n      end_hour = parseInt(end_time.substring(0, 2));\r\n      end_min = end_time.substring(3, 5);\r\n      end_period = end_time.substring(5, 7).toUpperCase();\r\n\r\n      if (start_period === 'PM') {\r\n        start_hour += 12;\r\n      }\r\n\r\n      if (end_period === 'PM') {\r\n        end_hour += 12;\r\n      }\r\n\r\n      statDate.setHours(start_hour);\r\n      statDate.setMinutes(start_min);\r\n\r\n      endDate.setHours(end_hour);\r\n      endDate.setMinutes(end_min);\r\n\r\n      if (statDate.getTime() <= currentDate.getTime() && currentDate.getTime() <= endDate.getTime()) {\r\n        this.isClosed = false;\r\n      } else {\r\n        this.isClosed = true;\r\n      }\r\n      this.hoursOfOperationCount = Object.keys(this.providerDetails.hours_of_operation).length;\r\n    }\r\n  }\r\n\r\n  addressVerification(isAdvocate: boolean) {\r\n    // case 1 - Select Building \r\n    if (this.providerDetails.is_single_house_owner) {\r\n      //case 2 - Single home \r\n      this.navCtrl.push(VerifyAddress, { providerDetails: this.providerDetails, buildingId: this.buildingId, isAdvocate: isAdvocate, buildingAddress: this.buildingAddress });\r\n    } else {\r\n      //case 3 - sigle building / property multiple unit.          \r\n      this.navCtrl.push(HousingUnit, { buildingId: this.buildingId, providerDetails: this.providerDetails, units: this.providerDetails.units, isAdvocate: isAdvocate, buildingAddress: this.buildingAddress });\r\n    }\r\n  }\r\n\r\n\r\n  toggleFollow(isFollowing) {\r\n    let request: IFollowProviderRequest = {\r\n      user_id: this.userService.userObj.user_id,\r\n      provider_location_id: this.providerDetails._id,\r\n      is_following: !isFollowing,\r\n      provider_name: this.providerDetails.public_name\r\n    };\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    this.providerService.toggleFollowStatus(request).subscribe((response: IGenericResponse) => {\r\n      if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        this.isFollowing = this.providerDetails.is_following = !isFollowing;\r\n      } else if (response.status === CONSTANTS.RESPONSE_STATUS.ERROR) {\r\n\r\n      }\r\n      this.loaderService.dismissLoader();\r\n    });\r\n  }\r\n\r\n  toggleFavorite() {\r\n    if (this.isFavorite !== this.providerDetails.is_favorite) {\r\n      let request: IFavProviderRequest = {\r\n        user_id: this.userService.userObj.user_id,\r\n        provider_location_id: this.providerDetails._id,\r\n        is_favorite: this.isFavorite,\r\n        provider_name: this.providerDetails.public_name\r\n      }\r\n\r\n      this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n      this.providerService.toggleFavoriteStatus(request).subscribe((response: IGenericResponse) => {\r\n        if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n\r\n        } else if (response.status === CONSTANTS.RESPONSE_STATUS.ERROR) {\r\n\r\n        }\r\n        this.loaderService.dismissLoader();\r\n      });\r\n    }\r\n  }\r\n\r\n  discontinued() {\r\n    this.navCtrl.push(DiscontinuedProperty, { providerDetails: this.providerDetails, buildingId: this.buildingId, buildingAddress: this.buildingAddress });\r\n  }\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/aroundme/provider-details/provider-details.ts","import { Component } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\nimport { UserService } from \"../../../providers/user-service\";\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { CONSTANTS } from \"../../../shared/config\";\r\n\r\n\r\n@Component({\r\n  selector: 'page-pending-confirmation',\r\n  templateUrl: 'pending-confirmation.html'\r\n})\r\nexport class PendingConfirmation {\r\n  constructor(public navCtrl: NavController, private analyticsService: AnalyticsService, public userService: UserService) {\r\n    this.userService.isProfileUpdate = true;\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.PENDING_CONFIRMATION);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.PENDING_CONFIRMATION);\r\n  }\r\n  navigatetoNextPage() {\r\n    const startIndex = this.navCtrl.getActive().index - 1;\r\n    this.navCtrl.remove(startIndex, 2);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/aroundme/pending-confirmation/pending-confirmation.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { PendingConfirmation } from '../pending-confirmation/pending-confirmation';\r\nimport { CONSTANTS } from \"../../../shared/config\";\r\nimport { PubNubService } from \"../../../providers/pubnub-service\";\r\nimport { ChatService, IGroup } from \"../../conversations/chat-service\";\r\nimport { IUser, UserService } from \"../../../providers/user-service\";\r\nimport { ProviderService, IConnectPMRequest, IProviderDetails } from \"../provider-service\";\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n\r\n@Component({\r\n  selector: 'page-housing-unit',\r\n  templateUrl: 'housing-unit.html'\r\n})\r\nexport class HousingUnit {\r\n  isAdvocate: boolean;\r\n  providerDetails: IProviderDetails;\r\n  buildingId: string;\r\n  buildingAddress: string;\r\n  buildingName: string;\r\n  unit: string;\r\n  units: Array<string>;\r\n  unfilteredUnits: Array<string>;\r\n  public userData: IUser;\r\n\r\n  constructor(private loaderService: LoaderService, private navCtrl: NavController, private navParams: NavParams, public chatService: ChatService,\r\n    private providerService: ProviderService, private translateService: TranslateService,\r\n    private userService: UserService, private analyticsService: AnalyticsService, public pubNubService: PubNubService) {\r\n    this.buildingId = this.navParams.get('buildingId');\r\n    this.buildingAddress = this.navParams.get('buildingAddress');\r\n    this.providerDetails = this.navParams.get('providerDetails');\r\n    this.unfilteredUnits = this.navParams.get('units');\r\n    this.isAdvocate = this.navParams.get('isAdvocate') || false;\r\n\r\n    this.buildingName = this.providerDetails.location.street_address1\r\n    this.userData = this.userService.getUser();\r\n    //this.units = this.unfilteredUnits;\r\n    this.unit = '';\r\n    //console.log(\"HousingUnit\", this.providerDetails);\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.HOUSING_UNIT);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.HOUSING_UNIT);\r\n  }\r\n\r\n  autoCompleteUnitSearch() {\r\n    let unit = this.unit.trim();\r\n    let units = [];\r\n    if (unit && unit.length > 0 && this.unfilteredUnits !== undefined) {\r\n      units = JSON.parse(JSON.stringify(this.unfilteredUnits));\r\n      units = units.filter((unit) => {\r\n        return (unit.indexOf(this.unit) !== -1);\r\n      });\r\n    }\r\n    this.units = units.sort(this.sortAlphaNum);\r\n    //this.units = units.sort();\r\n    // console.log(this.unit);\r\n    // console.log(this.units);\r\n  }\r\n\r\n  onUnitSelect(unit) {\r\n    this.unit = unit;\r\n    this.units = [];\r\n  }\r\n\r\n  sortAlphaNum(a, b) {\r\n    var reA = '/[^a-zA-Z]/g';\r\n    var reN = '/[^0-9]/g';\r\n    var AInt = parseInt(a, 10);\r\n    var BInt = parseInt(b, 10);\r\n\r\n    if (isNaN(AInt) && isNaN(BInt)) {\r\n      var aA = a.replace(reA, \"\");\r\n      var bA = b.replace(reA, \"\");\r\n      if (aA === bA) {\r\n        var aN = parseInt(a.replace(reN, \"\"), 10);\r\n        var bN = parseInt(b.replace(reN, \"\"), 10);\r\n        return aN === bN ? 0 : aN > bN ? 1 : -1;\r\n      } else {\r\n        return aA > bA ? 1 : -1;\r\n      }\r\n    } else if (isNaN(AInt)) {//A is not an Int\r\n      return 1;//to make alphanumeric sort first return -1 here\r\n    } else if (isNaN(BInt)) {//B is not an Int\r\n      return -1;//to make alphanumeric sort first return 1 here\r\n    } else {\r\n      return AInt > BInt ? 1 : -1;\r\n    }\r\n  }\r\n  verifyHomeAddress() {\r\n    let that = this;\r\n    if (this.unfilteredUnits.indexOf(this.unit) !== -1) {\r\n      this.providerDetails.verification_status = CONSTANTS.VERIFICATION_STATUS.UNVERIFIED;\r\n      this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n      this.openGroupChatBox(this.providerDetails, () => {\r\n        let request: IConnectPMRequest;\r\n        request = {\r\n          user_id: that.userData.user_id,\r\n          provider_location_id: that.providerDetails._id,\r\n          building_id: that.buildingId,\r\n          building_address: this.buildingAddress,\r\n          unit: that.unit,\r\n          first_name: that.userData.profile.first_name,\r\n          last_name: that.userData.profile.last_name,\r\n          is_advocate: this.isAdvocate\r\n        }\r\n        that.providerService.connectToPropertyManager(request).subscribe((response) => {\r\n          if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n            that.loaderService.dismissLoader();\r\n            that.navCtrl.push(PendingConfirmation);\r\n          } else {\r\n            that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.INVALID_UNIT_MESSAGE'), CONSTANTS.TOASTER.POSITION_CENTER);\r\n    }\r\n\r\n  }\r\n\r\n  openGroupChatBox(providerDetails: IProviderDetails, connectToPropertyManagerCallback) {\r\n    let that = this, groupObject: IGroup, memberIds: Array<string> = [];\r\n    that.pubNubService.getTimeToken((timestamp) => {\r\n\r\n      if (providerDetails.provider_details) {\r\n        providerDetails.provider_details.forEach(provider => {\r\n          memberIds.push(provider._id);\r\n        });\r\n      }\r\n      groupObject = {\r\n        user_id: that.userData.user_id,\r\n        name: providerDetails.public_name,\r\n        shared_channel: that.userData.user_id + '_' + providerDetails._id,\r\n        members: memberIds,\r\n        type: CONSTANTS.CONVERSATION_TYPE.GROUP,\r\n        joining_time_token: timestamp,\r\n        leaving_time_token: null,\r\n        group_type: CONSTANTS.USER_TYPE.HOUSING_PROVIDER,\r\n        user_name: that.userData.user_name,\r\n        created_by: that.userData.user_id,\r\n        profile_pic: providerDetails.profile_pic,\r\n        resident_profile_pic: that.userData.profile.profile_pic,\r\n        is_advocate: this.isAdvocate,\r\n        verification_address: this.providerDetails.location.street_address1 + ' . Unit: ' + this.unit,\r\n        location_id: providerDetails._id\r\n      };\r\n      that.chatService.createOrEditConversation(groupObject, false).subscribe((result) => {\r\n        if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n          let messagePrefixStr = CONSTANTS.MESSAGES.VERIFICATION_PREFIX;\r\n          let addressStr = that.providerDetails.location.street_address1;\r\n          if (this.isAdvocate) {\r\n            messagePrefixStr = CONSTANTS.MESSAGES.ADVOCATE_VERIFICATION_PREFIX;\r\n          }\r\n          if (that.unit.trim().length > 0) {\r\n            addressStr += ' . Unit: ' + that.unit;\r\n          }\r\n\r\n          that.providerService.sendInvitationMessageToAdmin(groupObject, messagePrefixStr, addressStr);\r\n          if (groupObject.members && groupObject.members.length > 0) {\r\n            that.pubNubService.setUserStateGroup(groupObject.members, CONSTANTS.USER_STATES.VERIFICATION_REQUEST,\r\n              groupObject.shared_channel, groupObject.name);\r\n          }\r\n          if (that.pubNubService.pushNotificationChannels.indexOf(groupObject.shared_channel) === -1) {\r\n            that.pubNubService.setPushNotificationChannels([groupObject.shared_channel]);\r\n            if (!!that.userService.userObj.notification_enabled) {\r\n              that.pubNubService.registerDevice([groupObject.shared_channel], that.userService.deviceToken, that.userService.pushPlatform);\r\n            }\r\n          }\r\n          if (connectToPropertyManagerCallback) {\r\n            connectToPropertyManagerCallback();\r\n          }\r\n        } else {\r\n          that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n          that.loaderService.dismissLoader();\r\n        }\r\n      }, error => {\r\n        that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n        that.loaderService.dismissLoader();\r\n      });\r\n    });\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/aroundme/housing-unit/housing-unit.ts","import { Component, NgZone, ViewChild, OnDestroy } from '@angular/core';\r\nimport { NavController, Platform, Events, Content, FabContainer, NavParams } from 'ionic-angular';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\nimport { TextToSpeech, TTSOptions } from '@ionic-native/text-to-speech';\r\nimport { ChatBox } from '../conversations/chat-box/chat-box';\r\nimport { UserService, IUser } from '../../providers/user-service';\r\nimport { ActivityService, IPageState, IActivityFeed, IActivityFeedOption, IGetActivityFeedsParams, IGetActivityFeedsResponse, ISubmitPollParams, IUpdateActionTakenCountParams, ILikeFeedParams, ILikeFeedResponse } from './activity-service';\r\nimport { ChatService } from '../conversations/chat-service';\r\nimport { CONSTANTS } from '../../shared/config';\r\nimport { PubNubService } from '../../providers/pubnub-service';\r\nimport { AnalyticsService } from '../../providers/analytics-service';\r\nimport { LoaderService } from '../../providers/loader-service';\r\nimport { IConversation } from '../conversations/chat-service';\r\nimport { CallNumber } from \"@ionic-native/call-number\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { SocialSharing } from '@ionic-native/social-sharing';\r\nimport { ProviderDetails } from \"../aroundme/provider-details/provider-details\";\r\nimport { ContactListPage } from \"./contact-list/contact-list\";\r\nimport { CreateFeedPage } from './create-feed/create-feed';\r\nimport { ServiceRequest } from '../service-request/service-request';\r\nimport { ServiceRequestDetails } from '../service-request/service-request-details/service-request-details';\r\n\r\ndeclare let cordova;\r\n\r\n@Component({\r\n    selector: 'activity-feed',\r\n    templateUrl: 'activity-feed.html',\r\n    providers: [ActivityService]\r\n})\r\n\r\nexport class ActivityPage implements OnDestroy {\r\n    private userInfo: IUser;\r\n    private zone: NgZone;\r\n    private activityPageState: IPageState;\r\n    private isCordovaPlatform: boolean;\r\n    private isFavorites: boolean = false;\r\n    public activityFeeds: Array<IActivityFeed>;\r\n    public expandFeedCollection: Map<string, boolean> = new Map();\r\n    public activityTemplates: Array<string>;\r\n    public isActivityAPICall: boolean = false;\r\n    public activityInfiniteScrollEnabled: boolean = true;\r\n    private notificationID: number = 0;\r\n    private favoriteFeedChanges: Map<string, IActivityFeed> = new Map<string, IActivityFeed>();\r\n    public usertype = CONSTANTS.USER_TYPE;\r\n    private feedPosition: number;\r\n\r\n\r\n    @ViewChild(Content) activityFeedContent: Content;\r\n\r\n    constructor(private activityService: ActivityService, private navCtrl: NavController, public navParams: NavParams, private userService: UserService,\r\n        private platform: Platform, public events: Events, private pubNubService: PubNubService,\r\n        private analyticsService: AnalyticsService, private translateService: TranslateService,\r\n        private callNumber: CallNumber, private socialSharing: SocialSharing, private tts: TextToSpeech,\r\n        private loaderService: LoaderService, private chatService: ChatService, private keyboard: Keyboard) {\r\n\r\n        this.activityService = activityService;\r\n        this.navCtrl = navCtrl;\r\n        this.activityFeeds = [];\r\n        this.activityPageState = {\r\n            pageNumber: 0,\r\n            pageSize: CONSTANTS.DEFAULT_PAGE_SIZE.FEED,\r\n            total: 0\r\n        };\r\n        this.userInfo = userService.getUser();\r\n        this.zone = new NgZone({ enableLongStackTrace: false });\r\n        this.activityTemplates = ['Alert', 'Advertisement', 'Crime Alert', 'Article/Blog/Info', 'System Announcement', 'Property Manager Announcement', 'Poll', 'Incident', \"Profile\", \"Placement\", \"Residency Connect\", \"Residency Deny\", \"Residency Accept\", \"Explor Rezility\"];\r\n        this.isCordovaPlatform = this.platform.is('cordova');\r\n        this.isFavorites = this.navParams.get('favorites');\r\n        if (!this.isFavorites) {\r\n            this.initReLoadActivityFeedEvent();\r\n            this.initUpdateFavoriteFeedEvent();\r\n        }\r\n        this.initTextToSpeechEvent();\r\n        // TODO - Need to move from here once Keyboard issue fixed \r\n        this.keyboard.close();\r\n    }\r\n\r\n    ionViewDidLoad() {\r\n        if (this.isFavorites) {\r\n            this.favoriteFeedChanges = new Map<string, IActivityFeed>();\r\n        }\r\n        this.loadActivityFeed(null, this.loadActivityFeedCallback);\r\n    }\r\n\r\n    ionViewDidEnter() {\r\n        this.userInfo = this.userService.getUser();\r\n        this.userService.setCurrentPage(CONSTANTS.PAGES.ACTIVITY_FEED);\r\n\r\n        // Scroll to top on user tap on feed \r\n        if (this.pubNubService.feedBadgeCount !== \"\") {\r\n            this.activityFeedContent.scrollToTop(CONSTANTS.ACTIVITY_FEED_SCROLL_TO_TOP_DURATION);\r\n        }\r\n        this.analyticsService.trackScreenView(CONSTANTS.PAGES.ACTIVITY_FEED);\r\n        this.pubNubService.feedBadgeCount = \"\";\r\n        // console.log(\"In ActivityPage:ionViewDidEnter Current page is \", this.userService.getCurrentPage().currentPage);\r\n    }\r\n\r\n\r\n    initTextToSpeechEvent(): void {\r\n        this.events.subscribe(CONSTANTS.APP_EVENTS.STOP_TTS, () => {\r\n            this.stopSpeech();\r\n        });\r\n    }\r\n\r\n    stopSpeech() {\r\n        if (this.feedPosition !== undefined) {\r\n            this.activityFeeds[this.feedPosition].isReading = false;\r\n            this.tts.stop();\r\n            this.feedPosition = undefined;\r\n        }\r\n    }\r\n    initReLoadActivityFeedEvent(): void {\r\n        this.events.subscribe('reLoadActivityFeed', (userEventData) => {\r\n            this.reLoadNewActivityFeed(userEventData);\r\n        });\r\n    }\r\n\r\n    initUpdateFavoriteFeedEvent(): void {\r\n        this.events.subscribe('updateFavoriteFeedEvent', (favoriteFeedUpdates: Map<string, IActivityFeed>) => {\r\n            let isProfileUpdated: boolean = false;\r\n            this.activityFeeds.forEach(function (activity) {\r\n                if (favoriteFeedUpdates[activity._id]) {\r\n                    Object.assign(activity, favoriteFeedUpdates[activity._id]);\r\n                    if (activity.template === \"Profile\") {\r\n                        isProfileUpdated = true;\r\n                    }\r\n                }\r\n            });\r\n            //Remove profile update feeds. \r\n            if (isProfileUpdated) {\r\n                this.activityFeeds = this.activityFeeds.filter(function (activity) {\r\n                    if (favoriteFeedUpdates[activity._id]) {\r\n                        return (activity.template !== \"Profile\");\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        // console.log(\"Activity Feed page is destroyed!!\");\r\n    }\r\n\r\n    reLoadNewActivityFeed(userEventData): void {\r\n        // console.log('In Event reLoadActivityFeed subscribe', userEventData, '----', this.notificationID);\r\n        let feedId: number = userEventData.additionalData['notificationId'];\r\n        if (this.notificationID !== feedId) {\r\n            this.notificationID = feedId;\r\n            if (this.userService.getCurrentPage().currentPage != CONSTANTS.PAGES.ACTIVITY_FEED) {\r\n                // console.log('In Event reLoadActivityFeed subscribe', userEventData);\r\n                this.pubNubService.feedBadgeCount = \"1\";\r\n                this.activityPageState.pageNumber = 0;\r\n                this.activityFeeds = [];\r\n                // console.log('In IF reLoadNewActivityFeed on different page');\r\n                this.loadActivityFeed(null, this.loadActivityFeedCallback);\r\n            } else {\r\n                // TODO \r\n                // TBD, What should happen if user scrolled more than one page            \r\n                //// console.log('In reLoadNewActivityFeed on same page');\r\n                // console.log('In else reLoadNewActivityFeed on different page');\r\n                this.getLatestFeed();\r\n            }\r\n        }\r\n    }\r\n\r\n    loadActivityFeed(showLoader: boolean = true, loadActivityCB?): void {\r\n        // console.log('In ActivityPage:loadActivityFeed');\r\n        let that = this, activityParams: IGetActivityFeedsParams;\r\n        that.isActivityAPICall = false;\r\n\r\n        if (this.userService.getCurrentPage().currentPage === CONSTANTS.PAGES.ACTIVITY_FEED && showLoader || this.isFavorites) {\r\n            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n\r\n        }\r\n        if (that.activityPageState.pageNumber === 0 ||\r\n            (that.activityPageState.pageNumber * that.activityPageState.pageSize) < that.activityPageState.total) {\r\n            that.activityPageState.pageNumber += 1;\r\n\r\n            activityParams = {\r\n                user_id: that.userInfo.user_id,\r\n                per_page: CONSTANTS.DEFAULT_PAGE_SIZE.FEED,\r\n                page_number: that.activityPageState.pageNumber\r\n            };\r\n            if (this.isFavorites) {\r\n                activityParams[\"is_favorite\"] = true;\r\n            }\r\n            that.activityService.getActivityFeeds(activityParams).subscribe((responseObj: IGetActivityFeedsResponse) => {\r\n                //// console.log('data getActivityFeeds', responseObj);\r\n                that.zone.run(() => {\r\n                    that.activityFeeds = that.activityFeeds.concat(responseObj.activityfeed);\r\n                    that.activityPageState.total = responseObj.total;\r\n                });\r\n                that.loaderService.dismissLoader();\r\n                if (loadActivityCB) {\r\n                    loadActivityCB.call(that);\r\n                }\r\n            }, error => {\r\n                that.loaderService.showToaster(error);\r\n                that.loaderService.dismissLoader();\r\n                if (loadActivityCB) {\r\n                    loadActivityCB.call(that);\r\n                }\r\n            });\r\n        } else {\r\n\r\n            that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.NO_MORE_DATA_TO_LOAD'));\r\n            that.loaderService.dismissLoader();\r\n            if (loadActivityCB) {\r\n                loadActivityCB.call(that, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    getLatestFeed(): void {\r\n        let that = this, activityParams: IGetActivityFeedsParams;\r\n        activityParams = { user_id: that.userInfo.user_id, per_page: 1, page_number: 1 };\r\n        that.isActivityAPICall = false;\r\n        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n        that.activityService.getActivityFeeds(activityParams).subscribe((response: IGetActivityFeedsResponse) => {\r\n            if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n                let duplicateFeeds = that.activityFeeds.filter((feed) => {\r\n                    return feed._id == response.activityfeed[0]._id;\r\n                });\r\n                if (duplicateFeeds && duplicateFeeds.length === 0) {\r\n                    // console.log('There is no dupliate feed');\r\n                    that.activityFeeds.splice(0, 0, response.activityfeed[0]);\r\n                    that.activityPageState.total = response.total;\r\n                } else {\r\n                    // console.log('There is duplicate feed');\r\n                }\r\n            }\r\n            that.isActivityAPICall = true;\r\n            this.loaderService.dismissLoader();\r\n        });\r\n    }\r\n\r\n    trackActivityFeed(index: number, activity: IActivityFeed) {\r\n        //// console.log('In trackActivityFeed',activity._id);\r\n        return activity ? activity._id : undefined;\r\n    }\r\n\r\n    isTemplateNo1345(activity: IActivityFeed): boolean {\r\n        return (activity.template === this.activityTemplates[1] || activity.template === this.activityTemplates[3] || activity.template === this.activityTemplates[4] || activity.template === this.activityTemplates[5]);\r\n    }\r\n\r\n    loadActivityFeedCallback(): void {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.isActivityAPICall = true;\r\n        }, 500);\r\n    }\r\n\r\n    doRefresh(refresher): void {\r\n        this.isActivityAPICall = false;\r\n        this.activityPageState.pageNumber = 0;\r\n        this.activityInfiniteScrollEnabled = true;\r\n        this.activityFeeds = [];\r\n        this.loadActivityFeed(false, () => {\r\n            refresher.complete();\r\n            this.loadActivityFeedCallback();\r\n        });\r\n    }\r\n\r\n    setAnswerOption(pollObj: IActivityFeed, option: IActivityFeedOption, isCheckBox: boolean): void {\r\n        if (!pollObj.body.temp_answer) {\r\n            pollObj.body.temp_answer = [];\r\n        }\r\n        if (isCheckBox) {\r\n            option.selected = !option.selected;\r\n        } else {\r\n            pollObj.body.temp_answer = [];\r\n            pollObj.body.options.forEach((obj) => {\r\n                if (obj.name === option.name) {\r\n                    option.selected = !option.selected;\r\n                } else {\r\n                    obj.selected = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (option.selected) {\r\n            if (pollObj.template === this.activityTemplates[8] || pollObj.template === this.activityTemplates[6]) {\r\n                pollObj.body.temp_answer.push(option.id);\r\n            } else {\r\n                pollObj.body.temp_answer.push(option.name);\r\n            }\r\n        } else {\r\n            if (pollObj.template === this.activityTemplates[8] || pollObj.template === this.activityTemplates[6]) {\r\n                pollObj.body.temp_answer.splice(pollObj.body.temp_answer.indexOf(option.id), 1);\r\n            } else {\r\n                pollObj.body.temp_answer.splice(pollObj.body.temp_answer.indexOf(option.name), 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    submitPoll(pollObj: IActivityFeed, cardIndex: number): void {\r\n        let that = this, voteTotal: number = 0, submitPollParams: ISubmitPollParams;\r\n\r\n        pollObj.body.options.forEach((option) => {\r\n            if (option.selected) {\r\n                option.vote += 1;\r\n            }\r\n            if (option.vote) {\r\n                voteTotal += option.vote;\r\n            }\r\n        });\r\n\r\n        pollObj.body.options.map((option) => {\r\n            let voteInPer = 0;\r\n            if (option.vote) {\r\n                voteInPer = Math.round((option.vote / voteTotal) * 100);\r\n            }\r\n            option['voteInPer'] = voteInPer + '%';\r\n            return option;\r\n        });\r\n\r\n        pollObj.body.answer = pollObj.body.temp_answer;\r\n        submitPollParams = {\r\n            _id: pollObj._id,\r\n            user_id: that.userInfo.user_id,\r\n            answer_option: pollObj.body.answer,\r\n            template: pollObj.template,\r\n            profile_attributes: pollObj.profile_attributes,\r\n            action_type: (pollObj.profile_attributes) ? CONSTANTS.FEED_ACTIONS.PROFILE : CONSTANTS.FEED_ACTIONS.POLL,\r\n            feed_title: pollObj.body.question\r\n        };\r\n\r\n        that.activityService.submitPoll(submitPollParams).subscribe(function (data) {\r\n            pollObj.body.temp_answer = [];\r\n            if (that.isFavorites) {\r\n                that.favoriteFeedChanges[pollObj._id] = pollObj;\r\n            }\r\n            if (pollObj.template === that.activityTemplates[8]) {\r\n                that.activityFeeds.splice(cardIndex, 1);\r\n                that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.PROFILE_SAVE_DONE'));\r\n            } else {\r\n                that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.POLL_SAVE_DONE'));\r\n            }\r\n            if (pollObj.profile_attributes) {\r\n                that.userService.isProfileUpdate = true;\r\n            }\r\n        }, error => {\r\n            that.loaderService.showToaster(error);\r\n        });\r\n\r\n        that.analyticsService.trackEvent(CONSTANTS.ANALYTICS_EVENT.SUBMIT_POLL_ANSWER, CONSTANTS.ANALYTICS_EVENT.EVENT_ACTION, pollObj._id);\r\n    }\r\n\r\n    openInAppBrowser(activity: IActivityFeed): void {\r\n        //this.shareVia(activity);\r\n        // console.log('In openInAppBrowser opening url in InAppBrowser', activity.openInUrl);\r\n        let updateActionTakenCountParams: IUpdateActionTakenCountParams;\r\n\r\n        updateActionTakenCountParams = {\r\n            rezfeed_id: activity.rezfeed_id,\r\n            user_id: this.userInfo.user_id,\r\n            action_type: CONSTANTS.FEED_ACTIONS.MORE_INFO,\r\n            feed_title: activity.header.title\r\n        };\r\n        if (this.userInfo.user_type === CONSTANTS.USER_TYPE.RESIDENT) {\r\n            this.activityService.updateActionTakenCount(updateActionTakenCountParams).subscribe((res) => {\r\n                // console.log('In updateActionTakenCount success', res);\r\n            }, (error) => {\r\n                // console.log('In updateActionTakenCount error', error);\r\n            });\r\n\r\n        }\r\n        if (activity.openInUrl !== '' && this.isCordovaPlatform) {\r\n            this.analyticsService.trackEvent(CONSTANTS.ANALYTICS_EVENT.EVENT_CATEGORY_LINK, CONSTANTS.ANALYTICS_EVENT.EVENT_ACTION, activity.openInUrl);\r\n            this.platform.ready().then(() => {\r\n                cordova.InAppBrowser.open(activity.openInUrl, \"_blank\", \"location=no\");\r\n            });\r\n        } else {\r\n            // console.log('Open me in mobile app', activity.openInUrl);\r\n        }\r\n    }\r\n\r\n    startConversation(activity: IActivityFeed): void {\r\n        let receiverObj: IConversation, sender_ref_id: string;\r\n        let that = this;\r\n        if (activity.sender_ref_id) {\r\n            sender_ref_id = activity.sender_ref_id;\r\n            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n            let requestObj = { user_id: this.userInfo.user_id, receiver_id: sender_ref_id };\r\n            this.chatService.checkForSharedChannel(requestObj).subscribe((response: any) => {\r\n                if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n                    let userObj = response.user;\r\n                    if (response.is_blocked === true) {\r\n                        this.loaderService.showToaster(userObj.user_name + \" \" + this.translateService.instant('ERROR_MESSAGES.BLOCKED_USER_POSTFIX'));\r\n                        //console.log(userObj.user_name + \" \" + this.translateService.instant('ERROR_MESSAGES.BLOCKED_USER_POSTFIX'));\r\n                        this.loaderService.dismissLoader();\r\n                    } else {\r\n                        // Prepare receiverObj for start chat \r\n                        receiverObj = {\r\n                            connection_status: CONSTANTS.CONNECTION_STATUS.CONNECTED,\r\n                            receiver_id: sender_ref_id,\r\n                            user_id: sender_ref_id,\r\n                            user_name: userObj.user_name,\r\n                            first_name: userObj.first_name,\r\n                            last_name: userObj.last_name,\r\n                            presence: '',\r\n                            timetoken: null,\r\n                            joining_time_token: null,\r\n                            user_type: userObj.user_type\r\n                        };\r\n                        if (!response.shared_channel) {\r\n                            this.pubNubService.getTimeToken((pubnubtimestoken) => {\r\n                                let obj = {\r\n                                    user_id: this.userInfo.user_id,\r\n                                    created_by: this.userInfo.user_id,\r\n                                    receiver_id: activity.sender_ref_id,\r\n                                    joining_time_token: pubnubtimestoken,\r\n                                    connection_status: CONSTANTS.CONNECTION_STATUS.CONNECTED\r\n                                };\r\n\r\n                                this.chatService.createOrEditConversation(obj).subscribe((result) => {\r\n                                    //console.log('Inside changeConnectionStatus callback', result);\r\n                                    if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS\r\n                                        && result.chat[0] && result.chat[0].shared_channel) {\r\n                                        receiverObj['timetoken'] = receiverObj['joining_time_token'] = obj.joining_time_token;\r\n                                        receiverObj.shared_channel = result.chat[0].shared_channel;\r\n                                        openChatbox(receiverObj);\r\n                                    }\r\n                                });\r\n                            });\r\n                        } else {\r\n                            receiverObj.shared_channel = response.shared_channel;\r\n                            receiverObj['joining_time_token'] = response.joining_time_token;\r\n                            receiverObj['type'] = response.type\r\n                            receiverObj['group_type'] = response.group_type\r\n\r\n                            openChatbox(receiverObj);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.loaderService.showToaster(response.message);\r\n                    this.loaderService.dismissLoader();\r\n                }\r\n                this.analyticsService.trackEvent(CONSTANTS.ANALYTICS_EVENT.EVENT_CATEGORY_START_CONVERSATION, CONSTANTS.ANALYTICS_EVENT.EVENT_ACTION, activity.rezfeed_id);\r\n            });\r\n        }\r\n        if (this.userInfo.user_type === CONSTANTS.USER_TYPE.RESIDENT) {\r\n            this.activityService.updateActionTakenCount({ rezfeed_id: activity.rezfeed_id, user_id: this.userInfo.user_id, action_type: CONSTANTS.FEED_ACTIONS.CHAT, feed_title: activity.header.title }).subscribe((res) => {\r\n                // console.log('In updateActionTakenCount success', res);\r\n            }, (error) => {\r\n                // console.log('In updateActionTakenCount error', error);\r\n            });\r\n        }\r\n\r\n        function openChatbox(conversationObj: IConversation) {\r\n            that.pubNubService.getUsersState([conversationObj.receiver_id]).then((data: any) => {\r\n                if (data.channels) {\r\n                    if (data.channels[conversationObj.receiver_id]) {\r\n                        conversationObj.presence = \"online\";\r\n                    } else {\r\n                        conversationObj.presence = \"\";\r\n                    }\r\n                }\r\n                that.navCtrl.push(ChatBox, { user: conversationObj });\r\n                that.loaderService.dismissLoader();\r\n            });\r\n        }\r\n    }\r\n\r\n    loadMore(infiniteScroll): void {\r\n        // console.log('Begin async operation');\r\n        this.loadActivityFeed(null, (isMoreDataNotFound) => {\r\n            // console.log('isMoreDataFound', isMoreDataNotFound);\r\n            infiniteScroll.complete();\r\n            if (!!isMoreDataNotFound) {\r\n                this.activityInfiniteScrollEnabled = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    navigateToAroundMe(activity: IActivityFeed): void {\r\n        this.navCtrl.parent.select(2);\r\n    }\r\n\r\n    callToPM(activity: IActivityFeed): void {\r\n        if (activity.sender_contact && activity.sender_contact !== '') {\r\n            this.callNumber.callNumber(activity.sender_contact, true).then(() => {\r\n            }).catch((error) => {\r\n                //console.log('Error launching dialer', error);\r\n            })\r\n        }\r\n    }\r\n\r\n    shareVia(activity: IActivityFeed) {\r\n        let options: any = {\r\n            message: activity.body.detailText,\r\n            subject: activity.body.headLineText,\r\n            file: activity.body.imageUrl\r\n            //url: activity.openInUrl\r\n        }\r\n        this.socialSharing.shareWithOptions(options);\r\n        //this.socialSharing.shareViaFacebookWithPasteMessageHint(activity.body.detailText,activity.body.imageUrl,\"\",\"Say something about this post......\");\r\n    }\r\n\r\n    shareOnFacebook(activity: IActivityFeed, fab: FabContainer) {\r\n        // this.socialSharing.shareViaFacebookWithPasteMessageHint(activity.body.detailText, \"\", activity.openInUrl, \"Say something about this post......\");\r\n        fab.close();\r\n        //Temp fix for existing data \r\n        if (!activity.openInUrl.includes(\"http\")) {\r\n            activity.openInUrl = activity.openInUrl.concat(\"http://\");\r\n        }\r\n        this.userService.shareOnFacebook(activity.openInUrl, activity.header.title, activity.header.bgImageUrl, (success) => {\r\n            if (success) {\r\n                if (this.userInfo.user_type === CONSTANTS.USER_TYPE.RESIDENT) {\r\n                    this.activityService.updateActionTakenCount({ rezfeed_id: activity.rezfeed_id, user_id: this.userInfo.user_id, action_type: CONSTANTS.FEED_ACTIONS.FB_SHARE, feed_title: activity.header.title }).subscribe((res) => {\r\n                    }, (error) => {\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    shareOnTwitter(activity: IActivityFeed, fab: FabContainer) {\r\n        fab.close();\r\n        let title: string;\r\n        let that = this;\r\n        if (this.platform.is('android')) {\r\n            title = \"#Rezility \" + activity.header.title;\r\n        } else {\r\n            title = activity.header.title;\r\n        }\r\n        this.socialSharing.shareViaTwitter(title, activity.header.bgImageUrl, activity.openInUrl).then(() => {\r\n            //Save the twitter share action\r\n            if (this.userInfo.user_type === CONSTANTS.USER_TYPE.RESIDENT) {\r\n                this.activityService.updateActionTakenCount({ rezfeed_id: activity.rezfeed_id, user_id: this.userInfo.user_id, action_type: CONSTANTS.FEED_ACTIONS.TWITTER_SHARE, feed_title: activity.header.title }).subscribe((res) => {\r\n                }, (error) => {\r\n                });\r\n            }\r\n        }).catch(() => {\r\n            that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.TWITTER_ERROR'));\r\n        });\r\n\r\n    }\r\n\r\n    toggleLike(activity: IActivityFeed, position: number) {\r\n\r\n        let request: ILikeFeedParams = {\r\n            user_id: this.userService.userObj.user_id,\r\n            rezfeed_id: activity.rezfeed_id,\r\n            is_like: !activity.is_like,\r\n            action_type: '', // Temp set blank\r\n            feed_title: ''\r\n        }\r\n        if (activity.template === CONSTANTS.TEMPLATE.POLL || activity.template === CONSTANTS.TEMPLATE.PROFILE) {\r\n            request.feed_title = activity.body.question;\r\n        } else {\r\n            request.feed_title = activity.header.title;\r\n        }\r\n\r\n        if (request.is_like) {\r\n            activity.total_likes = activity.total_likes + 1;\r\n        } else {\r\n            activity.total_likes = activity.total_likes - 1;\r\n        }\r\n\r\n        if (this.isFavorites) {\r\n            this.favoriteFeedChanges[activity._id] = activity;\r\n            this.activityFeeds.splice(position, 1);\r\n        }\r\n        activity.is_like = !activity.is_like;\r\n        //this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n        this.activityService.updateFeedLike(request).subscribe((response: ILikeFeedResponse) => {\r\n            if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n                activity.total_likes = response.total_likes;\r\n            } else if (response.status === CONSTANTS.RESPONSE_STATUS.ERROR) {\r\n                activity.is_like = !activity.is_like;\r\n            }\r\n            //this.loaderService.dismissLoader();\r\n        });\r\n    }\r\n\r\n    ionViewWillUnload() {\r\n        this.stopSpeech();\r\n        if (Object.keys(this.favoriteFeedChanges).length > 0) {\r\n            this.events.publish('updateFavoriteFeedEvent', this.favoriteFeedChanges);\r\n        }\r\n    }\r\n\r\n    navigateToProviderDetails(activity: IActivityFeed) {\r\n        //this.navCtrl.push(ProviderDetails, { providerId: \"59705ed675372e327c92984f\", buildingId: \"59831d0b48ee58001106b3bb\" });\r\n        this.navCtrl.push(ProviderDetails, { providerId: activity.branch_id, buildingId: activity.building_id || '', showConnect: false });\r\n\r\n        //Save the provider action\r\n        if (activity.rezfeed_id && this.userInfo.user_type === CONSTANTS.USER_TYPE.RESIDENT) {\r\n            this.activityService.updateActionTakenCount({ rezfeed_id: activity.rezfeed_id, user_id: this.userInfo.user_id, action_type: CONSTANTS.FEED_ACTIONS.PROVIDER, feed_title: activity.header.title }).subscribe((res) => {\r\n            }, (error) => {\r\n            });\r\n        }\r\n    }\r\n\r\n    readFeed(activity: IActivityFeed, position: number) {\r\n\r\n        if (this.feedPosition !== undefined) {\r\n            this.activityFeeds[this.feedPosition].isReading = false;\r\n        }\r\n        this.feedPosition = position;\r\n        this.tts.stop();\r\n        if (activity.isReading == undefined || (activity.isReading !== undefined && activity.isReading == false)) {\r\n            activity.isReading = true;\r\n            if (this.userService.currentLang.indexOf(\"-\") == -1) {\r\n                this.userService.currentLang = this.userService.currentLang.concat(\"-us\");\r\n            }\r\n            let speechText = '';\r\n            if (activity.template === this.activityTemplates[6] || activity.template === this.activityTemplates[8]) {\r\n                speechText = activity.body.question;\r\n                for (let i = 0; i < activity.body.options.length; i++) {\r\n                    speechText = speechText.concat(\"    \");\r\n                    speechText = speechText.concat(activity.body.options[i].name);\r\n                };\r\n            } else {\r\n                speechText = activity.header.title + \" \" + activity.body.detailText;\r\n            }\r\n            let options: TTSOptions = {\r\n                text: speechText,\r\n                locale: this.userService.currentLang,\r\n                rate: 0.75\r\n            }\r\n            // console.log(options);\r\n            this.tts.speak(options)\r\n                .then(() => {\r\n                    activity.isReading = false;\r\n                })\r\n                .catch((reason: any) => console.log(reason));\r\n        } else {\r\n            activity.isReading = false;\r\n        }\r\n    }\r\n\r\n    muteFeed(activity: IActivityFeed) {\r\n        activity.isReading = false;\r\n        this.tts.stop();\r\n        this.feedPosition = undefined;\r\n    }\r\n\r\n    downloadImage(activity: IActivityFeed) {\r\n        console.log(this.userInfo.low_data);\r\n        activity.lowData = false;\r\n    }\r\n\r\n    shareUser(activity: IActivityFeed, fab: FabContainer) {\r\n        fab.close();\r\n        this.navCtrl.push(ContactListPage, { rezfeed_id: activity.rezfeed_id, feed_title: activity.header.title });\r\n    }\r\n\r\n    navigateToCreateFeedPage() {\r\n        this.navCtrl.push(CreateFeedPage);\r\n    }\r\n\r\n    manageServiceRequest(activity: IActivityFeed) {\r\n        if (activity.template === this.activityTemplates[7]) {\r\n            if (activity.service_request_id) {\r\n                this.navCtrl.push(ServiceRequestDetails, { _id: activity.service_request_id });\r\n            } else {\r\n                this.navCtrl.push(ServiceRequest);\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/activity/activity-feed.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { NavController, NavParams, Events, Content } from 'ionic-angular';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\nimport { ChatBox } from '../chat-box/chat-box';\r\nimport { UserService, IUser } from '../../../providers/user-service';\r\nimport { ChatService, IConversation, IGroup, IGroupMember, IManageGroup, IGetUserConversationRequest, IGetUserConversationResponse } from '../chat-service';\r\nimport { ConnectionList } from '../connection-list';\r\nimport { PubNubService } from '../../../providers/pubnub-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { formatDate } from '../../../shared/util/date';\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n    selector: 'page-group-chat',\r\n    templateUrl: 'group-chat.html',\r\n})\r\n\r\nexport class GroupChat {\r\n    public conversationType = CONSTANTS.CONVERSATION_TYPE;\r\n    public usersListCopy: IUser;\r\n    public connectedUsersList: Array<IConversation>;\r\n    public pageCount: number;\r\n    public placeholderIamges = CONSTANTS.PLACEHOLDER_IMAGES;\r\n    public group: {\r\n        searchStr: string;\r\n        name: string,\r\n        members: Array<IGroupMember>,\r\n        memberIds: Array<string>,\r\n        profile_pic: string,\r\n        isEditAction: boolean\r\n    };\r\n    private userData: IUser;\r\n    private connectionList: ConnectionList;\r\n    public selectedGroup: any;\r\n    @ViewChild(Content) content: Content;\r\n    constructor(public navCtrl: NavController, private navParams: NavParams, private userService: UserService,\r\n        private analyticsService: AnalyticsService, public chatService: ChatService, public pubNubService: PubNubService, private events: Events,\r\n        private translateService: TranslateService,\r\n        public loaderService: LoaderService, private keyboard: Keyboard) {\r\n\r\n        this.selectedGroup = this.navParams.get('selectedGroup');\r\n        this.connectionList = new ConnectionList(chatService, pubNubService, translateService, loaderService);\r\n        this.userData = this.userService.getUser();\r\n        this.connectedUsersList = [];\r\n        this.group = { searchStr: '', name: '', members: [], memberIds: [], profile_pic: '', isEditAction: false };\r\n    }\r\n\r\n    ionViewDidEnter() {\r\n        this.analyticsService.trackScreenView(CONSTANTS.PAGES.GROUP_CHAT);\r\n        this.initSearchMembers();\r\n        this.initGroupMembers();\r\n        this.content.resize();\r\n    }\r\n\r\n    initSearchMembers() {\r\n        let members = [], memberIds = [];\r\n        if (this.selectedGroup) {\r\n            //Navigation from Conversation Settings\r\n            this.pageCount = 3;\r\n            if (this.selectedGroup.type === CONSTANTS.CONVERSATION_TYPE.GROUP) {\r\n                this.group.isEditAction = true;\r\n                this.group.profile_pic = this.selectedGroup.profile_pic;\r\n                if (this.selectedGroup.name !== undefined) {\r\n                    this.group.name = this.selectedGroup.user_name;\r\n                }\r\n                if (this.selectedGroup.members && this.selectedGroup.members.length > 0) {\r\n                    this.selectedGroup.members.forEach(user => {\r\n                        if (this.selectedGroup.user_id !== user.user_id) {\r\n                            members.push(user);\r\n                            memberIds.push(user.user_id);\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                let tempUser = {\r\n                    user_id: this.selectedGroup.user_id,\r\n                    user_name: this.selectedGroup.user_name,\r\n                    profile_pic: this.selectedGroup.profile_pic\r\n                };\r\n                members.push(tempUser);\r\n                memberIds.push(tempUser.user_id);\r\n            }\r\n            this.group.members = members;\r\n            this.group.memberIds = memberIds;\r\n        } else {\r\n            //Navigation from Create New Group\r\n            this.pageCount = 2;\r\n        }\r\n    }\r\n\r\n    initGroupMembers() {\r\n        let params: IGetUserConversationRequest = { user_id: this.userData.user_id, is_group_data_needed: false };\r\n        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n        this.connectionList.getUserList(params, (error, response: IGetUserConversationResponse) => {\r\n            this.connectionList.updatePresenceStatus(response.connected, () => {\r\n                this.usersListCopy = JSON.parse(JSON.stringify(response.connected));\r\n                this.searchUser('');\r\n                this.loaderService.dismissLoader();\r\n            });\r\n        });\r\n    }\r\n\r\n    selectUser(user) {\r\n        this.content.resize();\r\n        user.selected = true;\r\n        if (user.selected) {\r\n            this.group.members.push(user);\r\n            this.group.memberIds.push(user.user_id)\r\n        }\r\n    }\r\n\r\n    unSelectUser(user, index) {\r\n        user.selected = false;\r\n        this.group.members.splice(index, 1);\r\n        this.group.memberIds.splice(index, 1);\r\n        this.searchUser(this.group.searchStr);\r\n        this.content.resize();\r\n    }\r\n\r\n\r\n    searchUser(searchString): void {\r\n        // Reset items back to all of the items    \r\n        this.connectedUsersList = JSON.parse(JSON.stringify(this.usersListCopy));\r\n        // if the value is an empty string don't filter the items\r\n        this.connectedUsersList = this.connectedUsersList.filter((item) => {\r\n            return ((item.user_name.toLowerCase().indexOf(searchString.toLowerCase()) > -1) && (this.group.memberIds.indexOf(item.receiver_id) === -1));\r\n        });\r\n    }\r\n\r\n    createGroup() {\r\n        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n        this.pubNubService.getTimeToken((pubnubtimestoken) => {\r\n            this.createGroupPubnub(pubnubtimestoken);\r\n        });\r\n    }\r\n\r\n    createGroupPubnub(timestamp: number): void {\r\n        let that = this, groupObject: IGroup, sharedChannel: string, conversationObj: IConversation;\r\n        let joining_time_token = timestamp;\r\n        if (this.selectedGroup && this.selectedGroup.type === CONSTANTS.CONVERSATION_TYPE.GROUP) {\r\n            sharedChannel = this.selectedGroup.shared_channel;\r\n            joining_time_token = this.selectedGroup.joining_time_token;\r\n        } else {\r\n            sharedChannel = that.userData.user_id + '_' + new Date().getTime();\r\n        }\r\n\r\n        groupObject = {\r\n            user_id: that.userData.user_id,\r\n            name: that.group.name,\r\n            shared_channel: sharedChannel,\r\n            members: that.group.memberIds,\r\n            created_by: that.userData.user_id,\r\n            type: CONSTANTS.CONVERSATION_TYPE.GROUP,\r\n            joining_time_token: timestamp,\r\n            leaving_time_token: null\r\n        };\r\n\r\n        if (groupObject.name.trim().length > 0 && groupObject.members.length > 0) {\r\n\r\n            that.chatService.createOrEditConversation(groupObject, this.group.isEditAction).subscribe((result) => {\r\n\r\n                if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n                    let groupUpdates: IManageGroup = { addedMembers: [], removedMembers: [] };\r\n                    if (this.group.isEditAction) {\r\n                        groupUpdates = that.manageGroupUpdates(groupObject.members);\r\n                    } else {\r\n                        groupUpdates.addedMembers = groupObject.members;\r\n                    }\r\n\r\n                    if (groupUpdates.removedMembers && groupUpdates.removedMembers.length > 0) {\r\n                        this.pubNubService.removeChannelFromGroup(groupUpdates.removedMembers, groupObject.shared_channel, groupObject.name, timestamp);\r\n                    }\r\n                    if ((groupUpdates.addedMembers && groupUpdates.addedMembers.length > 0) || groupObject.name !== this.selectedGroup.name) {\r\n                        that.pubNubService.addChanneltoGroup(groupUpdates.addedMembers, groupObject.shared_channel, groupObject.name, that.userService.userObj.user_id, that.userService.deviceToken, that.userService.pushPlatform);\r\n                    }\r\n\r\n                    // Notify group name change to members except addedMembers and removedMembers\r\n                    if (this.group.isEditAction && this.group.name !== this.selectedGroup.user_name) {\r\n                        let remainingMembers = [];\r\n                        if (groupUpdates.addedMembers.length > 0 || groupUpdates.removedMembers.length > 0) {\r\n                            groupObject.members.forEach((memberId) => {\r\n                                if (groupUpdates.addedMembers.indexOf(memberId) === -1\r\n                                    && groupUpdates.removedMembers.indexOf(memberId) === -1) {\r\n                                    remainingMembers.push(memberId);\r\n                                }\r\n                            });\r\n                        } else {\r\n                            remainingMembers = groupObject.members;\r\n                        }\r\n                        // console.log('remainingMembers', remainingMembers);\r\n                        if (remainingMembers.length > 0) {\r\n                            this.pubNubService.setUserStateGroup(remainingMembers, CONSTANTS.USER_STATES.GROUP_RENAME,\r\n                                groupObject.shared_channel, groupObject.name);\r\n                        }\r\n                    }\r\n\r\n\r\n                    conversationObj = {\r\n                        name: groupObject.name,\r\n                        user_id: groupObject.shared_channel,\r\n                        user_name: groupObject.name,\r\n                        user_email: groupObject.name,\r\n                        shared_channel: groupObject.shared_channel,\r\n                        receiver_id: groupObject.shared_channel,\r\n                        members: this.group.members,\r\n                        type: groupObject.type,\r\n                        timetoken: timestamp,\r\n                        joining_time_token: joining_time_token,\r\n                        leaving_time_token: null\r\n                    };\r\n\r\n                    if (!this.group.isEditAction) {\r\n                        this.pubNubService.setPushNotificationChannels([sharedChannel]);\r\n                        if (!!this.userService.userObj.notification_enabled) {\r\n                            this.pubNubService.registerDevice([sharedChannel], this.userService.deviceToken, this.userService.pushPlatform);\r\n                        }\r\n                        conversationObj[\"joining_time_token\"] = timestamp;\r\n                        conversationObj[\"latestMessage\"] = this.translateService.instant('ERROR_MESSAGES.GRP_JOINED');\r\n                        conversationObj[\"latestMessageTimestamp\"] = formatDate(this.pubNubService.getDateTime(timestamp), this.translateService);\r\n                        conversationObj[\"connection_status\"] = CONSTANTS.CONNECTION_STATUS.CONNECTED;\r\n                        conversationObj[\"leaving_time_token\"] = null;\r\n                    }\r\n\r\n                    that.navCtrl.remove((that.navCtrl.length() - this.pageCount), this.pageCount, { animate: false, progressAnimation: false }).then(() => {\r\n                        that.navCtrl.push(ChatBox, { user: conversationObj }).then(() => {\r\n                            that.events.publish(CONSTANTS.APP_EVENTS.GROUP_CREATED, conversationObj, \"Group Created\");\r\n                            that.loaderService.dismissLoader();\r\n                        });\r\n                    });\r\n\r\n                } else {\r\n                    this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n                    this.loaderService.dismissLoader();\r\n                }\r\n            }, error => {\r\n                this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n                this.loaderService.dismissLoader();\r\n            });\r\n        } else {\r\n            this.loaderService.dismissLoader();\r\n        }\r\n    }\r\n\r\n    manageGroupUpdates(memberIds: Array<string>): IManageGroup {\r\n        let removedMembers: Array<string> = [];\r\n        let existingMembers: Array<string> = [];\r\n        let addedMembers: Array<string> = [];\r\n        this.selectedGroup.members.forEach((member) => {\r\n            if (memberIds.indexOf(member.user_id) == -1 && member.user_id !== this.userData.user_id) {\r\n                removedMembers.push(member.user_id);\r\n            }\r\n            existingMembers.push(member.user_id);\r\n        });\r\n\r\n        memberIds.forEach((memberId) => {\r\n            if (existingMembers.indexOf(memberId) == -1 && memberId !== this.userData.user_id) {\r\n                addedMembers.push(memberId);\r\n            }\r\n        });\r\n        return { addedMembers: addedMembers, removedMembers: removedMembers };\r\n    }\r\n\r\n    changeProfile() {\r\n        // TODO \r\n    }\r\n    hideKeyboard() {\r\n        this.keyboard.close();\r\n    }\r\n}\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversations/group-chat/group-chat.ts","'use strict';\r\nimport * as moment from 'moment';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport let formatDate = function (inPutDate: any, translateService: any): string {\r\n    let givenDate: Date, currentDate: Date, dayDiff: number, responseStr: string, monthsInShort: Array<string>, periods: string;\r\n    monthsInShort = [\r\n        translateService.instant('MONTHS_IN_SHORT.JAN'),\r\n        translateService.instant('MONTHS_IN_SHORT.FEB'),\r\n        translateService.instant('MONTHS_IN_SHORT.MAR'),\r\n        translateService.instant('MONTHS_IN_SHORT.APR'),\r\n        translateService.instant('MONTHS_IN_SHORT.MAY'),\r\n        translateService.instant('MONTHS_IN_SHORT.JUN'),\r\n        translateService.instant('MONTHS_IN_SHORT.JUL'),\r\n        translateService.instant('MONTHS_IN_SHORT.AUG'),\r\n        translateService.instant('MONTHS_IN_SHORT.SEP'),\r\n        translateService.instant('MONTHS_IN_SHORT.OCT'),\r\n        translateService.instant('MONTHS_IN_SHORT.NOV'),\r\n        translateService.instant('MONTHS_IN_SHORT.DEC'),\r\n    ];\r\n    periods = translateService.instant('TIMESTAMP.AM');\r\n    givenDate = new Date(inPutDate);\r\n    currentDate = new Date();\r\n    // var a = moment(givenDate);\r\n    // var b = moment(currentDate);\r\n    // console.log(a.diff(b, 'days'));\r\n    dayDiff = moment(currentDate).diff(moment(givenDate), 'days');\r\n            \r\n    if (dayDiff === 0 && (currentDate.getDate() - givenDate.getDate() === 0)) {\r\n        responseStr = localDate(givenDate,translateService.currentLang);\r\n    } else if (dayDiff <= 1) {\r\n        responseStr = translateService.instant('TIMESTAMP.DAY_AGO');\r\n    }\r\n    else {\r\n        responseStr = monthsInShort[givenDate.getMonth()] + ' ' + givenDate.getDate();\r\n    }\r\n    return responseStr;\r\n}\r\n\r\nexport function localDate(value: any, currentLang: any){\r\n    const datePipe: DatePipe = new DatePipe(currentLang);\r\n    let pattern = 'hh:mm a';\r\n    if (currentLang.split('-')[0] === 'zh'){\r\n      pattern = 'hh:mm';\r\n    }\r\n    return datePipe.transform(value, pattern);\r\n}\r\n\r\nexport let dateDifference = function(currentDate:any,givenDate:any) : number {\r\n    return moment(currentDate).diff(moment(givenDate), 'days')\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/util/date.ts","import { Component } from \"@angular/core\";\r\nimport { NavController, NavParams, Events, ActionSheetController, ModalController } from \"ionic-angular\";\r\nimport { UserService, IBranch } from \"../../../providers/user-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { LoaderService } from \"../../../providers/loader-service\";\r\nimport { ActivityService, IGetUserSegmentRequest, IUserSegment, IFeedTemplate, ICreateFeed, IPlacementInfo, IScheduledInfo } from \"../activity-service\";\r\nimport { DescriptionFeedPage } from './../create-placement-feed/description-feed/description-feed';\r\nimport { Camera } from \"@ionic-native/camera\";\r\nimport { UploadService, IUploadOptions } from \"../../../providers/upload-service\";\r\nimport { CropImageModal } from \"../../../shared/modals/crop-image/crop-image\";\r\nimport { ShowImage } from \"../../conversations/show-image/show-image\";\r\nimport { SelectImage } from \"./selectImage/select-image\";\r\nimport { CONSTANTS } from \"../../../shared/config\";\r\nimport { SetDeliveryFeedModal } from \"../../../shared/modals/set-delivery-feed/set-delivery-feed\";\r\n\r\n\r\n@Component({\r\n    selector: 'create-placement-feed',\r\n    templateUrl: 'create-placement-feed.html',\r\n})\r\nexport class CreatePlacementFeedPage {\r\n    singleSelectRows = [];\r\n    multiSelectRows = [];\r\n    private selectedBranch: IBranch;\r\n    private selectedSegment: string;\r\n    private selectedTemplate: string;\r\n    private feedInfo: IFeedTemplate;\r\n    private placementInfo: IPlacementInfo;\r\n    private scheduledInfo: IScheduledInfo;\r\n    private createFeedRequest: ICreateFeed\r\n\r\n    constructor(private activityService: ActivityService, public navCtrl: NavController, private navParams: NavParams, private userService: UserService,\r\n        private events: Events, public actionSheetCtrl: ActionSheetController, private camera: Camera,\r\n        private translateService: TranslateService, private uploadService: UploadService,\r\n        public loaderService: LoaderService, public modalCtrl: ModalController) {\r\n        this.feedInfo = this.getDefaultActivityModel(this.navParams.get('selectedTemplate'), this.navParams.get('selectedSegment'));\r\n        this.selectedBranch = this.navParams.get('selectedBranch');\r\n    }\r\n\r\n    ionViewDidEnter() {\r\n    }\r\n\r\n\r\n    uploadDone(error, url: string, imageCategory: string) {\r\n        if (!error) {\r\n            //this.serviceRequestObj.photos.push(url);\r\n            if (imageCategory === CONSTANTS.FEED_IMAGE_TYPES.LOGO) {\r\n                this.feedInfo.header.leftIconUrl = url;\r\n            } else {\r\n                this.feedInfo.header.bgImageUrl = url;\r\n            }\r\n        }\r\n        console.log(error, url);\r\n    }\r\n\r\n    presentActionSheet(imageCategory: string) {\r\n        let that = this;\r\n        let uploadOptions: IUploadOptions = {\r\n            sourceType: that.camera.PictureSourceType.CAMERA, bucketSource: \"feeds\", cropImage: true,\r\n            targetHeight: imageCategory === CONSTANTS.FEED_IMAGE_TYPES.LOGO ? 100 : 168,\r\n            targetWidth: imageCategory === CONSTANTS.FEED_IMAGE_TYPES.LOGO ? 100 : 312,\r\n            organizationId: this.selectedBranch.organization_id,\r\n            branchId: this.selectedBranch._id,\r\n            imageCategory: imageCategory\r\n        };\r\n        let actionSheet = that.actionSheetCtrl.create({\r\n            cssClass: 'photo-sheet',\r\n            buttons: [\r\n                {\r\n                    text: this.translateService.instant(\"CONVERSATIONS.NEW_MSG.TAKE_PHOTO\"),\r\n                    role: 'Take a photo',\r\n                    cssClass: 'take-photo',\r\n                    icon: 'icons-camera',\r\n                    handler: () => {\r\n                        that.uploadService.takeFromCamera(uploadOptions, (error, image) => {\r\n                            that.uploadDone.call(that, error, image, imageCategory);\r\n                        });\r\n                    }\r\n                }, {\r\n                    text: this.translateService.instant(\"CONVERSATIONS.NEW_MSG.ATTACH_PHOTO\"),\r\n                    cssClass: 'take-photo',\r\n                    icon: 'icons-image-photo',\r\n                    handler: () => {\r\n                        uploadOptions.sourceType = that.camera.PictureSourceType.PHOTOLIBRARY;\r\n                        that.uploadService.takeFromCamera(uploadOptions, (error, image) => {\r\n                            that.uploadDone.call(that, error, image, imageCategory)\r\n                        });\r\n                    }\r\n                },\r\n                {\r\n                    text: this.translateService.instant(\"CONVERSATIONS.NEW_MSG.LIB_PHOTO\"),\r\n                    role: 'Load',\r\n                    cssClass: 'take-photo',\r\n                    icon: 'icons-grid',\r\n                    handler: () => {\r\n                        this.showImageGallery(imageCategory);\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n        actionSheet.present();\r\n    }\r\n\r\n\r\n    getDefaultActivityModel(template: string, userSegment?: string) {\r\n        return {\r\n            template: template,\r\n            header: {\r\n                leftIconUrl: '',\r\n                leftIconName: '',\r\n                title: '',\r\n                bgImageUrl: ''\r\n            },\r\n            body: {\r\n                headLineText: '',\r\n                detailText: '',\r\n                imageUrl: ''\r\n            },\r\n            openInUrl: '',\r\n            user_segment: userSegment !== undefined ? userSegment : '',\r\n            poll: {\r\n                question: '',\r\n                answer_options: [],\r\n                is_multiselect: false\r\n            },\r\n            is_allow_conversation: false\r\n        };\r\n    }\r\n\r\n    presentDescriptionModal() {\r\n        this.placementInfo = {};\r\n        this.placementInfo.title = this.feedInfo.header.title;\r\n        this.placementInfo.description = this.feedInfo.body.detailText;\r\n        this.placementInfo.allowConversation = this.feedInfo.is_allow_conversation;\r\n        this.placementInfo.url = this.feedInfo.openInUrl;\r\n        let descriptionModal = this.modalCtrl.create(DescriptionFeedPage, {\r\n            placementInfo: this.placementInfo, organisationId: this.selectedBranch.organization_id\r\n        });\r\n        descriptionModal.onDidDismiss(data => {\r\n            //console.log(data);\r\n            if (data !== null) {\r\n                this.feedInfo.header.title = data.title;\r\n                this.feedInfo.body.headLineText = data.title;\r\n                this.feedInfo.body.detailText = data.description;\r\n                this.feedInfo.openInUrl = data.url;\r\n                this.feedInfo.is_allow_conversation = data.allowConversation;\r\n            }\r\n        });\r\n        descriptionModal.present();\r\n    }\r\n\r\n    showImageGallery(imageCategory: string) {\r\n        let imageModel = this.modalCtrl.create(SelectImage, {\r\n            organisationId: this.selectedBranch.organization_id,\r\n            imageCategory: imageCategory\r\n        });\r\n        imageModel.onDidDismiss(data => {\r\n            if (data) {\r\n                if (data.imageType === CONSTANTS.FEED_IMAGE_TYPES.LOGO) {\r\n                    this.feedInfo.header.leftIconUrl = data.selectedImage;\r\n                } else {\r\n                    this.feedInfo.header.bgImageUrl = data.selectedImage;\r\n                }\r\n            }\r\n        });\r\n        imageModel.present();\r\n    }\r\n\r\n    // submitCard() {\r\n    //     let that = this;\r\n    //     let params: ICreateFeed = this.activity;\r\n    //     that.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    //     params.branch_id = this.selectedBranch;\r\n    //     params.scheduled_date = undefined;\r\n    //     params.organization_id = this.selectedBranch.organization_id;\r\n    //     params.feed_owner_id = this.userService.userObj.user_id;\r\n    //     params.sender_ref_id = this.userService.userObj.user_id;\r\n    //     params.created_by = this.userService.userObj.user_id;\r\n    //     params.is_campaign_feed = false;\r\n    //     //console.log(\"Data model \", params)\r\n    //     that.activityService.createFeed(params).subscribe((response: any) => {\r\n    //         that.loaderService.dismissLoader();\r\n    //         const startIndex = that.navCtrl.getActive().index - 1;\r\n    //         that.navCtrl.remove(startIndex, 2);\r\n    //     });\r\n    // }\r\n\r\n\r\n    setDelivery() {\r\n        let params: ICreateFeed = this.feedInfo;\r\n        this.feedInfo.is_edit_feed = false;\r\n        params.branch_id = this.selectedBranch;\r\n        //params.scheduled_date = undefined;\r\n        params.organization_id = this.selectedBranch.organization_id;\r\n        params.feed_owner_id = this.userService.userObj.user_id;\r\n        params.sender_ref_id = this.userService.userObj.user_id;\r\n        params.created_by = this.userService.userObj.user_id;\r\n        params.is_campaign_feed = false;\r\n\r\n        this.scheduledInfo = { isSubmit: false }\r\n        if (this.feedInfo.scheduled_date !== undefined) {\r\n            this.scheduledInfo.scheduledDate = this.feedInfo.scheduled_date;\r\n            this.scheduledInfo.selectedScheduled = \"schedule\";\r\n        } else {\r\n            this.scheduledInfo.scheduledDate = new Date().toISOString();\r\n            this.scheduledInfo.selectedScheduled = \"now\";\r\n        }\r\n        this.scheduledInfo.scheduledTime = this.scheduledInfo.scheduledDate;\r\n        let setDeliveryModal = this.modalCtrl.create(SetDeliveryFeedModal, {\r\n            scheduledInfo: this.scheduledInfo, placementFeedRequest: params, feedType: this.feedInfo.template\r\n        });\r\n        setDeliveryModal.onDidDismiss(data => {\r\n            if (data && data.isSubmit) {\r\n                const startIndex = this.navCtrl.getActive().index - 1;\r\n                this.navCtrl.remove(startIndex, 2);\r\n            } else if (data) {\r\n                this.scheduledInfo.selectedScheduled = data.selectedScheduled;\r\n                this.feedInfo.scheduled_date = data.scheduledDate;\r\n            }\r\n        });\r\n        setDeliveryModal.present();\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/activity/create-placement-feed/create-placement-feed.ts","import { Component } from \"@angular/core\";\r\nimport { NavController, NavParams, Events, ViewController, } from \"ionic-angular\";\r\nimport { ActivityService, IScheduledInfo, ICreateFeed, ICreatePollFeed } from \"../../../pages/activity/activity-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport moment from 'moment';\r\nimport { CONSTANTS } from \"../../config\";\r\nimport { LoaderService } from \"../../../providers/loader-service\";\r\n\r\n@Component({\r\n    selector: 'set-delivery-feed',\r\n    templateUrl: 'set-delivery-feed.html',\r\n})\r\n\r\nexport class SetDeliveryFeedModal {\r\n    private scheduledInfo: IScheduledInfo;\r\n    private placementFeedRequest: ICreateFeed;\r\n    private pollFeedRequest: ICreatePollFeed;\r\n    private feedType: string;\r\n    private deliveryDate: Date;\r\n    constructor(private activityService: ActivityService, public navCtrl: NavController, private params: NavParams,\r\n        private loaderService: LoaderService,\r\n        private events: Events, private translateService: TranslateService, public viewCtrl: ViewController) {\r\n        this.scheduledInfo = params.get('scheduledInfo');\r\n        this.placementFeedRequest = params.get('placementFeedRequest');\r\n        this.pollFeedRequest = params.get('pollFeedRequest');\r\n        this.feedType = params.get('feedType');\r\n        this.scheduledInfo.scheduledDate = moment(this.scheduledInfo.scheduledDate).format();\r\n        this.scheduledInfo.scheduledTime = moment(this.scheduledInfo.scheduledDate).format();\r\n    }\r\n\r\n    dismiss() {\r\n        if (this.scheduledInfo.selectedScheduled == CONSTANTS.DELIVERY_TYPE.NOW) {\r\n            this.scheduledInfo.scheduledDate = undefined\r\n        }\r\n        this.viewCtrl.dismiss(this.scheduledInfo);\r\n    }\r\n\r\n    validate() {\r\n        if (this.scheduledInfo.selectedScheduled !== CONSTANTS.DELIVERY_TYPE.NOW) {\r\n            let selectedDate = new Date(this.scheduledInfo.scheduledDate);\r\n            let selectedTime = new Date(this.scheduledInfo.scheduledTime);\r\n            let currentDate = new Date();\r\n            selectedDate.setHours(selectedTime.getHours());\r\n            selectedDate.setMinutes(selectedTime.getMinutes());\r\n            selectedDate.setSeconds(selectedTime.getSeconds());\r\n            selectedDate.setMilliseconds(selectedTime.getMilliseconds());\r\n\r\n            if (currentDate > selectedDate) {\r\n                this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.INVALID_TIME'));\r\n                return false;\r\n            }\r\n            this.deliveryDate = selectedDate;\r\n        } else {\r\n            this.deliveryDate = undefined;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    submitCard() {\r\n        if (this.validate()) {\r\n            let that = this;            \r\n            that.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n            if (that.feedType === CONSTANTS.TEMPLATE.PLACEMENT) {\r\n                that.placementFeedRequest.scheduled_date = that.deliveryDate;\r\n                that.activityService.createFeed(that.placementFeedRequest).subscribe((response: any) => {\r\n                    that.loaderService.dismissLoader();\r\n                    this.scheduledInfo.isSubmit = true;\r\n                    that.viewCtrl.dismiss(this.scheduledInfo);\r\n                });\r\n            } else {\r\n                that.pollFeedRequest.scheduled_date = that.deliveryDate;\r\n                that.activityService.createPollFeed(this.pollFeedRequest).subscribe((response: any) => {\r\n                    this.scheduledInfo.isSubmit = true;\r\n                    that.loaderService.dismissLoader();\r\n                    that.viewCtrl.dismiss(this.scheduledInfo);\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/modals/set-delivery-feed/set-delivery-feed.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { NavController, Events, Content } from 'ionic-angular';\r\nimport { ServiceRequestService, IResidentProperty } from './service-request-service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UserService, IUser } from '../../providers/user-service';\r\nimport { LoaderService } from '../../providers/loader-service';\r\nimport { CONSTANTS } from '../../shared/config';\r\nimport { CreateRequest } from './create-request/create-request';\r\nimport { ServiceRequestDetails } from './service-request-details/service-request-details';\r\nimport { IPinLocation } from '../aroundme/aroundme-service';\r\n\r\n@Component({\r\n  selector: 'service-request',\r\n  templateUrl: 'service-request.html'\r\n})\r\nexport class ServiceRequest {\r\n  public selectedTab: string = 'active';\r\n  private userInfo: IUser;\r\n  public serviceRequestsPageState: any;\r\n  public infiniteScrollEnabled: boolean = true;\r\n  public serviceRequests: Array<any> = [];\r\n  public residentProperties: Array<IResidentProperty>;\r\n  public selectedProperty: IResidentProperty = null;\r\n  public isServiceRequestAPICall: boolean = false;\r\n  private showToolbar: boolean = false;\r\n  @ViewChild(Content) content: Content;\r\n  constructor(public navCtrl: NavController, private serviceRequestService: ServiceRequestService, private events: Events,\r\n    private translateService: TranslateService, private userService: UserService, private loaderService: LoaderService, ) {\r\n    this.selectedTab = 'active';\r\n    this.serviceRequestsPageState = {\r\n      pageNumber: 0,\r\n      pageSize: CONSTANTS.DEFAULT_PAGE_SIZE.SERVICE_LIST,\r\n      total: 0\r\n    };\r\n    this.userInfo = this.userService.getUser();\r\n    this.initResidentProperties();\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    //console.log('Hello IncidentSetting Page');\r\n    this.serviceRequestsPageState.pageNumber = 0;\r\n    this.loadServiceRequestList();\r\n    this.events.subscribe(CONSTANTS.APP_EVENTS.SERVICE_REQUEST_REPORTED, (incident) => {\r\n      this.serviceRequests.splice(0, 0, incident);\r\n    });\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.content.resize();\r\n  }\r\n\r\n  ionViewWillUnload() {\r\n    this.events.unsubscribe(CONSTANTS.APP_EVENTS.SERVICE_REQUEST_REPORTED);\r\n  }\r\n\r\n  loadServiceRequestList(showLoader: boolean = true, callback?) {\r\n    this.isServiceRequestAPICall = false;\r\n    if (this.serviceRequestsPageState.pageNumber === 0 ||\r\n      (this.serviceRequestsPageState.pageNumber * this.serviceRequestsPageState.pageSize) < this.serviceRequestsPageState.total) {\r\n      this.serviceRequestsPageState.pageNumber += 1;\r\n\r\n      let params = {\r\n        user_id: this.userInfo.user_id,\r\n        per_page: this.serviceRequestsPageState.pageSize,\r\n        page_number: this.serviceRequestsPageState.pageNumber\r\n      };\r\n      let that = this;\r\n      if (showLoader) {\r\n        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n      }\r\n      this.serviceRequestService.getServiceRequestList(params).subscribe((response) => {\r\n        if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n          that.serviceRequests = that.serviceRequests.concat(response.service_requests || []);\r\n          that.serviceRequestsPageState.total = response.total;\r\n          if (callback) {\r\n            callback();\r\n          }\r\n        }\r\n        this.isServiceRequestAPICall = true;\r\n        this.loaderService.dismissLoader();\r\n      })\r\n    } else {\r\n      this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.NO_MORE_DATA_TO_LOAD'));\r\n      if (callback) {\r\n        callback(true);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  loadServiceRequestCallback(): void {\r\n    let that = this;\r\n    setTimeout(() => {\r\n      that.isServiceRequestAPICall = true;\r\n    }, 500);\r\n  }\r\n\r\n  doRefresh(refresher): void {\r\n    this.isServiceRequestAPICall = false;\r\n    this.serviceRequestsPageState.pageNumber = 0;\r\n    this.infiniteScrollEnabled = true;\r\n    this.serviceRequests = [];\r\n    this.loadServiceRequestList(false, () => {\r\n      refresher.complete();\r\n      this.loadServiceRequestCallback();\r\n    });\r\n  }\r\n\r\n  loadMore(infiniteScroll): void {\r\n    this.loadServiceRequestList(true, (isMoreDataNotFound) => {\r\n      infiniteScroll.complete();\r\n      if (!!isMoreDataNotFound) {\r\n        this.infiniteScrollEnabled = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  initResidentProperties() {\r\n    let that = this;\r\n    that.serviceRequestService.checkForResidences({ user_id: that.userInfo.user_id }).subscribe((response) => {\r\n      //console.log('In initResidentProperties response', response);\r\n      if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        that.residentProperties = response.resident_properties || [];\r\n        if (that.residentProperties && that.residentProperties.length > 0) {\r\n          // TODO, Have to show popup modal to select properties for reporting request\r\n          that.selectedProperty = that.residentProperties.filter((property) => {\r\n            return property.is_advocate === false;\r\n          })[0];\r\n          if (!that.selectedProperty) {\r\n            that.selectedProperty = that.residentProperties[0];\r\n          }\r\n        }\r\n      }\r\n      this.showToolbar = true;\r\n    });\r\n  }\r\n\r\n  serviceRequest() {\r\n    this.navCtrl.push(CreateRequest, { selectedProperty: this.selectedProperty });\r\n  }\r\n\r\n  viewRequestDetails(request) {\r\n    //console.log('viewRequestDetails', request);\r\n    this.navCtrl.push(ServiceRequestDetails, { _id: request._id });\r\n  }\r\n\r\n  navigateToAroundYou() {\r\n    if (this.userService.userObj.profile.home_address.street_address1.length > 0) {\r\n      let data: IPinLocation = {};\r\n      data.address = this.userService.userObj.profile.home_address.street_address1;\r\n      data.position = { lat: 0, lng: 0 };\r\n      if (this.userService.userObj.profile.home_address.lat) {\r\n        data.position.lat = parseFloat(this.userService.userObj.profile.home_address.lat);\r\n        data.position.lng = parseFloat(this.userService.userObj.profile.home_address.long);\r\n      }\r\n      this.events.publish(CONSTANTS.APP_EVENTS.ARROUND_YOU_ACTIONS, CONSTANTS.ARROUND_YOU_ACTIONS.SELECT_SAVED_PIN, data);\r\n    }\r\n    this.navCtrl.pop();\r\n    this.navCtrl.parent.select(2);\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/service-request/service-request.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { NavController, NavParams, ActionSheetController, Events, Content } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { ChatService, IMessage } from '../../conversations/chat-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { ServiceRequestService, IServiceRequestDetails, ISaveMessage } from './../service-request-service';\r\nimport { UserService, IUser } from '../../../providers/user-service';\r\nimport { PubNubService, PubNubEvent } from '../../../providers/pubnub-service';\r\nimport { UploadService, IUploadOptions } from '../../../providers/upload-service';\r\n@Component({\r\n  selector: 'service-request-details',\r\n  templateUrl: 'service-request-details.html'\r\n})\r\nexport class ServiceRequestDetails {\r\n  private serviceRequestId: string;\r\n  public selectedTab: string = 'details';\r\n  public serviceRequestDetails: IServiceRequestDetails;\r\n  public userData: IUser;\r\n  public messages: Array<any> = [];\r\n  public messageModel: string;\r\n  public pictureModel: string;\r\n  public placeholderIamges = CONSTANTS.PLACEHOLDER_IMAGES;\r\n  public messageContentType = CONSTANTS.MESSAGE_CONTENT_TYPE_ID;\r\n  public contactIdDetailMap: Map<string, any>;\r\n  @ViewChild(Content) content: Content;\r\n  constructor(public navCtrl: NavController, private serviceRequestService: ServiceRequestService, private navParams: NavParams, private camera: Camera,\r\n    private translateService: TranslateService, private userService: UserService, private loaderService: LoaderService, public events: Events,\r\n    private pubNubService: PubNubService, public actionSheetCtrl: ActionSheetController, private uploadService: UploadService, private chatService: ChatService) {\r\n    this.selectedTab = 'details';\r\n    this.serviceRequestId = this.navParams.get('_id');\r\n    this.userData = this.userService.getUser();\r\n    this.serviceRequestDetails = {\r\n      _id: '',\r\n      address: '',\r\n      description: '',\r\n      incident_number: '',\r\n      photos: [],\r\n      property_id: '',\r\n      status: '',\r\n      type: '',\r\n      type_id: '',\r\n      user_name: ''\r\n    };\r\n    this.contactIdDetailMap = new Map<string, any>();\r\n    this.contactIdDetailMap[this.userData.user_id] = { user_name: this.userData.user_name, profile_pic: this.userData.profile.profile_pic };\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.init();\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    this.initServiceRequestMessageEvent();\r\n  }\r\n\r\n  ionViewWillUnload() {\r\n    this.events.unsubscribe(CONSTANTS.APP_EVENTS.SERVICE_REQUEST_MESSAGE);\r\n  }\r\n\r\n  initServiceRequestMessageEvent() {\r\n    this.events.subscribe(CONSTANTS.APP_EVENTS.SERVICE_REQUEST_MESSAGE, (message, time) => {\r\n      //console.log('In SERVICE_REQUEST_MESSAGE Event Type ', message);\r\n      if (this.serviceRequestDetails.conversation && this.serviceRequestDetails.conversation.shared_channel === message.shared_channel\r\n        && this.userData.user_id !== message.sender_uuid) {\r\n        this.messages.push(this.createMessage(message));\r\n        this.scrollToBottom();\r\n      }\r\n    });\r\n  }\r\n\r\n  init() {\r\n    if (this.serviceRequestId) {\r\n      this.loaderService.createLoader(this.translateService.instant(\"ERROR_MESSAGES.PLEASE_WAIT\"));\r\n      this.serviceRequestService.getServiceRequestDetails({ _id: this.serviceRequestId }).subscribe((response) => {\r\n        if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n          //console.log(response.service_request[0]);\r\n          this.serviceRequestDetails = response.service_request[0];\r\n          this.serviceRequestDetails.status_translated = this.translateService.instant(\"SERVICE_REQUESTS.REQUEST_LIST.\" + this.serviceRequestDetails.status.toUpperCase());\r\n        }\r\n        this.loaderService.dismissLoader();\r\n      });\r\n    }\r\n  }\r\n\r\n  onDetailsClick() {\r\n    this.content.resize();\r\n  }\r\n  onConversationClick() {\r\n    // Init contactIdDetailMap for display members picture\r\n    if (this.serviceRequestDetails.providers) {\r\n      this.setContactIdDetailMap(this.serviceRequestDetails.providers);\r\n    }\r\n\r\n    // Load existing history of selected incident\r\n    if (this.serviceRequestDetails.conversation) {\r\n      let languages = [this.userService.getCurrentLang()];\r\n      this.serviceRequestDetails.providers.forEach((self) => {\r\n        if (self.device_lang && languages.indexOf(self.device_lang) === -1) {\r\n          languages.push(self.device_lang);\r\n        }\r\n      });\r\n      this.serviceRequestDetails.conversation.languages = languages;\r\n      this.loadSelectedIncidentHistory(this.serviceRequestDetails.conversation);\r\n    }\r\n    this.content.resize();\r\n  }\r\n\r\n  setContactIdDetailMap(userList: Array<any>) {\r\n    userList.forEach(element => {\r\n      this.contactIdDetailMap[element.user_id] = { profile_pic: element.profile_pic || '', user_name: element.user_name || '' };\r\n    });\r\n  }\r\n\r\n  loadSelectedIncidentHistory(conversationObj) {\r\n    let that = this;\r\n    let leaving_time_token = null;\r\n    if (conversationObj.leaving_time_token !== undefined && conversationObj.leaving_time_token > 0) {\r\n      leaving_time_token = conversationObj.leaving_time_token;\r\n    }\r\n    this.pubNubService.historyresponse = null;\r\n    this.pubNubService.chathistory(conversationObj.shared_channel, true, CONSTANTS.CONVERSATION_MAX_UNREAD_COUNT, conversationObj.joining_time_token, leaving_time_token).subscribe((event: PubNubEvent) => {\r\n      let messages: Array<any> = [];\r\n      for (let i = 0; i < event.value.messages.length; i++) {\r\n        if (event.value.messages[i].entry !== undefined) {\r\n          messages.push(that.createMessage(event.value.messages[i].entry));\r\n        }\r\n      }\r\n      //console.log(messages);\r\n      that.messages = messages;\r\n      this.scrollToBottom();\r\n    });\r\n  }\r\n\r\n  createMessage(message: IMessage): any {\r\n    let messageObj, contactObj = {}, senderObj = this.contactIdDetailMap[message.sender_uuid];\r\n    if (senderObj) {\r\n      contactObj = { user_name: senderObj.user_name, profile_pic: senderObj.profile_pic };\r\n    }\r\n    messageObj = {\r\n      content: this.chatService.getMessageContent(message.content),\r\n      shared_channel: message.shared_channel,\r\n      image: message.image,\r\n      sender_uuid: message.sender_uuid,\r\n      receiver_uuid: message.receiver_uuid,\r\n      video: message.video,\r\n      timetoken: message.timetoken / 10000,\r\n      is_sys_msg: message.is_sys_msg || false,\r\n      content_type_id: message.content_type_id || ''\r\n    };\r\n\r\n\r\n    Object.assign(messageObj, contactObj);\r\n    return messageObj;\r\n  }\r\n\r\n  scrollToBottom() {\r\n    let that = this;\r\n    setTimeout(() => {\r\n      if (that.content && that.content._scroll) {\r\n        that.content.scrollTo(0, that.content.getContentDimensions().scrollHeight, 10);\r\n      }\r\n    });\r\n  }\r\n\r\n  sendMessage() {\r\n    let conversation = this.serviceRequestDetails.conversation;\r\n    if (conversation) {\r\n      this.pubNubService.getTimeToken((pubnubtimestoken) => {\r\n        let coreMessageObj = {\r\n          content: null,\r\n          sender_uuid: this.userData.user_id,\r\n          image: this.pictureModel,\r\n          receiver_uuid: conversation.shared_channel,\r\n          shared_channel: conversation.shared_channel,\r\n          timetoken: pubnubtimestoken,\r\n          is_group: true,\r\n          is_sys_msg: false,\r\n          content_type_id: CONSTANTS.MESSAGE_CONTENT_TYPE_ID.SERVICE_REQUEST\r\n        };\r\n        this.pubNubService.getSupportedLanguageMsg(this.messageModel, conversation.languages, false).subscribe((msgContent) => {\r\n          coreMessageObj.content = msgContent;\r\n\r\n          this.pubNubService.publish(coreMessageObj.shared_channel, coreMessageObj).subscribe((event) => {\r\n            // console.log('In sendInvitationMessageToAdmin Publish message', coreMessageObj, event);\r\n            this.messages.push(this.createMessage(coreMessageObj));\r\n            let saveMessage: ISaveMessage = {\r\n              user_id: this.userData.user_id,\r\n              content: coreMessageObj.content,\r\n              shared_channel: coreMessageObj.shared_channel\r\n            };\r\n            this.serviceRequestService.saveMessage(saveMessage).subscribe(() => {\r\n              // console.log('Saved message!');\r\n            });\r\n            this.scrollToBottom();\r\n            this.resetMessageModel();\r\n          });\r\n        }, error => {\r\n          this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  resetMessageModel(): void {\r\n    this.messageModel = '';\r\n    this.pictureModel = '';\r\n\r\n  }\r\n\r\n  uploadDone(error, url: string) {\r\n    if (!error) {\r\n      this.pictureModel = url;\r\n      this.sendMessage();\r\n    }\r\n    console.log(error, url);\r\n  }\r\n\r\n  showActionSheet() {\r\n    let that = this;\r\n    let uploadOptions:IUploadOptions = {\r\n      sourceType: that.camera.PictureSourceType.CAMERA,\r\n      bucketSource: CONSTANTS.UPLOAD_IMAGE_SOURCE.INCIDENTS, cropImage: false,\r\n      targetHeight: 600,\r\n      targetWidth: 1062\r\n    };\r\n\r\n    let buttons = [\r\n      {\r\n        text: this.translateService.instant(\"CONVERSATIONS.NEW_MSG.TAKE_PHOTO\"),\r\n        role: 'Take a photo',\r\n        cssClass: 'take-photo',\r\n        icon: 'icons-camera',\r\n        handler: () => {\r\n          that.uploadService.takeFromCamera(uploadOptions, (error, image) => {\r\n            that.uploadDone.call(that, error, image);\r\n          });\r\n        }\r\n      },\r\n      {\r\n        text: this.translateService.instant(\"CONVERSATIONS.NEW_MSG.ATTACH_PHOTO\"),\r\n        cssClass: 'take-photo',\r\n        icon: 'icons-image-photo',\r\n        handler: () => {\r\n          uploadOptions.sourceType = that.camera.PictureSourceType.PHOTOLIBRARY;\r\n          that.uploadService.takeFromCamera(uploadOptions, (error, image) => {\r\n            that.uploadDone.call(that, error, image)\r\n          });\r\n        }\r\n      }\r\n    ];\r\n\r\n    let actionSheet = this.actionSheetCtrl.create({\r\n      cssClass: 'photo-sheet',\r\n      buttons: buttons\r\n    });\r\n    actionSheet.present();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/service-request/service-request-details/service-request-details.ts","\r\nexport class ValidationService {\r\n  static emailValidator(control) {\r\n    let emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n    //console.log('control.value',control.value);\r\n    if (emailPattern.test(control.value)) {\r\n      return null;\r\n    } else {\r\n      return { 'invalidEmailAddress': true };\r\n    }\r\n  };\r\n\r\n  static zipcodeValidator(control) {\r\n    let zipcodePattern = /^[0-9]{5}(?:-[0-9]{4})?$/;\r\n    if (zipcodePattern.test(control.value)) {\r\n      return null;\r\n    } else {\r\n      return { 'invalidZipcode': true };\r\n    }\r\n  };\r\n\r\n  static strongPasswordValidator(control) {\r\n    let passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,100})$/;\r\n    if (passwordPattern.test(control.value)) {\r\n      return null;\r\n    } else {\r\n      return { 'invalidPassword': true };\r\n    }\r\n  };\r\n\r\n  static isTrueValue(control) {\r\n    if (control && control.value) {\r\n      return null;\r\n    } else {\r\n      return { 'isFalseValue': true };\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/validationService.ts","import { Component, OnInit } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\n\r\nimport { AppInfo } from './app-info/app-info';\r\nimport { LoginPage } from '../login/login';\r\nimport { AnalyticsService } from \"../../providers/analytics-service\";\r\nimport { CONSTANTS } from \"../../shared/config\";\r\n\r\n@Component({\r\n  selector: 'page-get-started',\r\n  templateUrl: 'get-started.html'\r\n})\r\n\r\nexport class GetStarted implements OnInit {\r\n\r\n  constructor(private navCtrl: NavController,private analyticsService: AnalyticsService) {\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.GET_STARTED);\r\n  }\r\n\r\n  onGetStarted(): void {\r\n    this.navCtrl.push(AppInfo);\r\n  }\r\n\r\n  onLoginToRezility(): void {\r\n    this.navCtrl.push(LoginPage);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/get-started/get-started.ts","import { Injectable } from '@angular/core';\r\nimport { Platform } from 'ionic-angular';\r\nimport { File } from '@ionic-native/file'\r\nimport ImgCache from 'imgcache.js';\r\n\r\n/**\r\n * This service is charged of provide the methods to cache the images\r\n */\r\n@Injectable()\r\nexport class ImageCacheService {\r\n\r\n  public imgQueue: string[] = [];\r\n  public isAndroid: boolean = true;\r\n  constructor(platform: Platform) {\r\n    ImgCache.options.debug = true;\r\n    ImgCache.options.cacheClearSize = 30;\r\n    if (platform.is('ios')) {\r\n      ImgCache.options.cordovaFilesystemRoot = new File().documentsDirectory;\r\n      this.isAndroid = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Init imgCache library\r\n   * @return {Promise}\r\n   */\r\n  public initImageCache(): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      if (ImgCache.ready) {\r\n        resolve();\r\n      } else {\r\n        ImgCache.init(() => resolve(), () => reject());\r\n      }\r\n    });\r\n  }\r\n\r\n  public isCached(src: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      ImgCache.isCached(src, (path: string, success: boolean) => {\r\n        // if not, it will be cached\r\n        resolve(success);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Cache images\r\n   * @param src {string} - img source\r\n   */\r\n  public cacheImage(src: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      ImgCache.isCached(src, (path: string, success: boolean) => {\r\n        // if not, it will be cached\r\n        if (success) {\r\n          ImgCache.getCachedFileURL(src,\r\n            (originalUrl, cacheUrl) => {\r\n              if (!this.isAndroid) {\r\n                const file = new File();\r\n                const cacheFileUrl = cacheUrl.replace('cdvfile://localhost/persistent/', file.documentsDirectory);\r\n                const localServerFileUrl = cacheFileUrl.replace('file://', 'http://localhost:8080');\r\n                resolve(localServerFileUrl);\r\n              } else {\r\n                resolve(cacheUrl);\r\n              }\r\n            },\r\n            (e) => {\r\n              console.error('img-cache-error:', e);\r\n              reject(e)\r\n            });\r\n        } else {\r\n          // cache img\r\n          ImgCache.cacheFile(src);\r\n          // return original img URL\r\n          resolve(src);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public clearCache() {\r\n    ImgCache.clearCache();\r\n  }\r\n\r\n  public getCacheSize() {\r\n    console.log(\"The cache size is \", ImgCache.getCurrentSize());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/image-cache-service.ts","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { Events } from 'ionic-angular';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { forkJoin } from \"rxjs/observable/forkJoin\";\r\nimport { Http } from '@angular/http';\r\nimport { CONSTANTS } from '../shared/config';\r\nimport { ENVIRONMENT } from '../shared/environment';\r\n\r\ndeclare let PubNub;\r\nexport enum PubNubEventType {\r\n    MESSAGE,\r\n    PRESENCE,\r\n    CONNECT,\r\n    DISCONNECT,\r\n    RECONNECT,\r\n    PUBLISHED,\r\n    HISTORY,\r\n    GROUPADDCHANNEL,\r\n    CHANNELLIST\r\n}\r\n\r\nexport class PubNubEvent {\r\n    constructor(public type: PubNubEventType, channel: any, public value: any) { }\r\n}\r\n\r\n@Injectable()\r\nexport class PubNubService {\r\n    pubnub: any;\r\n    events: any;\r\n    userConversationsMap: any = {};\r\n    conversationCountMap: Map<string, { timestamp: string, count: number }> = new Map();\r\n    globalBadgeCount: string = '';\r\n    feedBadgeCount: string = '';\r\n    isCurrentUserTyping: boolean = false;\r\n    isConversationVist: boolean = false;\r\n    userId: string;\r\n    userLang: string;\r\n    lastMessageTimeToken: number;\r\n    pushNotificationChannels: Array<string>;\r\n    pushNotificationGroups: Array<string>;\r\n    historyEventEmitter: EventEmitter<PubNubEvent>;\r\n    historyresponse: any;\r\n\r\n    constructor(events: Events, private http: Http) {\r\n        this.events = events;\r\n    }\r\n\r\n    initializePubnub(uuid: string) {\r\n        let that = this;\r\n        that.clearInstanceVar();\r\n        that.userId = uuid;\r\n        that.pubnub = new PubNub({\r\n            uuid: uuid,\r\n            subscribeKey: ENVIRONMENT.PUBNUB_KEYS.SUBSCRIBE_KEY,\r\n            publishKey: ENVIRONMENT.PUBNUB_KEYS.PUBLISH_KEY,\r\n            ssl: true,            \r\n            presenceTimeout: 120\r\n        });\r\n\r\n        that.pubnub.addListener({\r\n            status: function (statusEvent) {\r\n                // // console.log('In addListener status', statusEvent);\r\n                if (statusEvent.category === \"PNConnectedCategory\") {\r\n                    // that.pubnub.setState({ state: { new: 'state' } },\r\n                    //     function (status) {\r\n                    //         //  // console.log('In addListener status 22========', status);\r\n                    //     });\r\n                }\r\n                // Following is working code but commented for DAY 1\r\n                // else if (statusEvent.error && statusEvent.category === \"PNNetworkIssuesCategory\") {\r\n                //     // console.log('In PubNubService:PNNetworkIssuesCategory -', statusEvent);\r\n                //     that.pushNotificationChannels = statusEvent.affectedChannels;\r\n                //     that.pushNotificationGroups = statusEvent.affectedChannelGroups;\r\n                // } else if (statusEvent.category === \"PNNetworkUpCategory\") {\r\n                //     // console.log('In PubNubService:PNNetworkUpCategory -', that.lastMessageTimeToken, that.pushNotificationChannels, that.pushNotificationGroups)\r\n                //     that.pubnub.subscribe({ channels: that.pushNotificationChannels, channelGroups: that.pushNotificationGroups, timetoken: that.lastMessageTimeToken, withPresence: true });\r\n                // }\r\n            },\r\n            message: function (message) {\r\n                //console.log(\"New message received - \", message);\r\n                that.lastMessageTimeToken = message.timetoken;\r\n                if (!(message.message.content_type_id && message.message.content_type_id === CONSTANTS.MESSAGE_CONTENT_TYPE_ID.SERVICE_REQUEST)) {\r\n                    //TODO - The message object also give time in millisecs , this can be used for timestamp directly \r\n                    that.events.publish(CONSTANTS.APP_EVENTS.NEW_MESSAGE, message.message, message.timetoken, \"From New Message\");\r\n                    that.events.publish(CONSTANTS.APP_EVENTS.UPDATE_CONVERSATION, message.message, message.timetoken);\r\n                    // that.events.publish(APP_CONFIG.APP_EVENTS.UPDATE_BADGE, message.message);\r\n                    //   eventEmitter.emit(new PubNubEvent(PubNubEventType.MESSAGE, channels, message));\r\n                    if (!that.isConversationVist) {\r\n                        let shared_channel = message.message.shared_channel || message.shared_channel\r\n                        let msgCount = that.getConversationBadgeCount(shared_channel) + 1;\r\n                        that.setConversationLastState(shared_channel, msgCount);\r\n                    }\r\n                } else {\r\n                    // This is for service request message\r\n                    that.events.publish(CONSTANTS.APP_EVENTS.SERVICE_REQUEST_MESSAGE, message.message, message.timetoken);\r\n                }\r\n            },\r\n            presence: function (presenceEvent) {\r\n                //console.log(\"presenceEvent - \", presenceEvent);\r\n                if (presenceEvent.action === 'state-change' && presenceEvent.channel === that.userId) {\r\n                    if (presenceEvent.state.action == CONSTANTS.USER_STATES.GROUP_ADD || presenceEvent.state.action == CONSTANTS.USER_STATES.GROUP_REMOVE\r\n                        || presenceEvent.state.action == CONSTANTS.USER_STATES.VERIFICATION_REQUEST || presenceEvent.state.action == CONSTANTS.USER_STATES.VERIFICATION_CANCEL) {\r\n                        that.events.publish(CONSTANTS.APP_EVENTS.GROUP_EVENTS, presenceEvent);\r\n                    } else if (presenceEvent.state.action == CONSTANTS.USER_STATES.CONNECTION_STATUS_CHANGED) {\r\n                        that.events.publish(CONSTANTS.APP_EVENTS.CONNECTION_STATUS_CHANGED, presenceEvent);\r\n                        that.events.publish(CONSTANTS.APP_EVENTS.CHAT_BOX_CONNECTION_STATUS_CHANGED, presenceEvent);\r\n                        that.events.publish(CONSTANTS.APP_EVENTS.PROVIDER_PRESENCE_EVENT, presenceEvent);\r\n                    }\r\n                }\r\n                that.events.publish(CONSTANTS.APP_EVENTS.NEW_MSG_PRESENCE_EVENT, presenceEvent);\r\n                that.events.publish(CONSTANTS.APP_EVENTS.CHAT_BOX_PRESENCE_EVENT, presenceEvent);\r\n                that.events.publish(CONSTANTS.APP_EVENTS.CONV_PRESENCE_EVENT, presenceEvent);\r\n                that.events.publish(CONSTANTS.APP_EVENTS.GROUP_SETTING_PRESENCE_EVENT, presenceEvent);\r\n            }\r\n        });\r\n        let conversationCountMap = that.getConversationCountMap();\r\n        if (conversationCountMap) {\r\n            // console.log(\"b4 reloadGlobalBadgeCount\");\r\n            that.conversationCountMap = conversationCountMap;\r\n            that.reloadGlobalBadgeCount();\r\n        }\r\n\r\n        // set lastMessageTimeToken\r\n        // that.getTimeToken((timetoken) => {\r\n        //     that.lastMessageTimeToken = timetoken;\r\n        // });\r\n    }\r\n\r\n    clearInstanceVar() {\r\n        this.pushNotificationChannels = [];\r\n        this.pushNotificationGroups = [];\r\n        this.conversationCountMap = new Map<string, { timestamp: string, count: number }>();\r\n        this.userConversationsMap = {};\r\n        this.globalBadgeCount = '';\r\n        this.feedBadgeCount = '';\r\n        this.isCurrentUserTyping = false;\r\n        this.isConversationVist = false;\r\n        this.historyEventEmitter = new EventEmitter<PubNubEvent>();\r\n        this.historyresponse = null;\r\n    }\r\n\r\n    setPushNotificationChannels(channels: Array<string>) {\r\n        this.pushNotificationChannels = this.pushNotificationChannels.concat(channels);\r\n    }\r\n\r\n    removePushNotifcationChannel(channel: string) {\r\n        let index = this.pushNotificationChannels.indexOf(channel);\r\n        this.pushNotificationChannels.splice(index, 1);\r\n    }\r\n\r\n    getPushNotificationChannels(): Array<string> {\r\n        return this.pushNotificationChannels;\r\n    }\r\n\r\n    subscribe(channels: Array<string>, withPresence: boolean = true) {\r\n        let that = this;\r\n        // // console.log(\"subscribe\", channels)\r\n        that.pubnub.subscribe({\r\n            channels: channels,\r\n            withPresence: withPresence\r\n        });\r\n    }\r\n\r\n    subscribeGroup(channels: Array<string>, withPresence: boolean = false) {\r\n        let that = this;\r\n        // // console.log(\"subscribe\", channels)\r\n        that.pubnub.subscribe({\r\n            channelGroups: channels,\r\n            withPresence: withPresence\r\n        });\r\n    }\r\n\r\n    unsubscribe() {\r\n        if (this.pubnub) {\r\n            this.pubnub.unsubscribeAll();\r\n        }\r\n    }\r\n\r\n    unsubscribeChannels(channels: Array<string>) {\r\n        // console.log(\"unsubscribeChannels\", channels)\r\n        if (this.pubnub) {\r\n            this.pubnub.unsubscribe({\r\n                channels: channels\r\n            },\r\n                function (status) {\r\n                    if (status.error) {\r\n                        // console.log(\"unsubscribeChannels failed w/ error:\", status);\r\n                    } else {\r\n                        // console.log(\"unsubscribeChannels operation done!\", channels);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    unRegisterAllChannels(device: string, pushGateway: string) {\r\n        this.pubnub.push.deleteDevice(\r\n            {\r\n                device: device,\r\n                pushGateway: pushGateway // apns, gcm, mpns\r\n            },\r\n            function (status) {\r\n                if (status.error) {\r\n                    // console.log(\"operation failed w/ error:\", status);\r\n                } else {\r\n                    // console.log(\"unRegisterAllChannels operation done!\")\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    publish(channel: string, message: any, storeInHistory: boolean = true): EventEmitter<PubNubEvent> {\r\n        let eventEmitter: EventEmitter<PubNubEvent> = new EventEmitter<PubNubEvent>();\r\n        this.pubnub.publish({\r\n            channel: channel,\r\n            // The message may be any valid JSON type including objects, arrays, strings, and numbers.       \r\n            message: message,\r\n            // If true the messages are stored in history, default true.\r\n            storeInHistory: storeInHistory\r\n        }, (status, response) => {\r\n            if (!status.error) {\r\n                eventEmitter.emit(new PubNubEvent(PubNubEventType.PUBLISHED, channel, response));\r\n            } else {\r\n                eventEmitter.error(response);\r\n            }\r\n        });\r\n        return eventEmitter;\r\n    }\r\n\r\n    chathistory(channel: string, reverse: boolean = false, count: number, start: number = null, end: number = null, stringifiedTimeToken: boolean = true): EventEmitter<PubNubEvent> {\r\n        this.pubnub.history({\r\n            channel: channel,\r\n            count: count,\r\n            start: start,\r\n            end: end,\r\n            reverse: reverse,\r\n            stringifiedTimeToken: stringifiedTimeToken\r\n        }, (status, response) => {\r\n            if (!status.error) {\r\n                //console.log(\"History\", response);\r\n\r\n                if (response.messages.length < 100) {\r\n                    // push this conversation in to an array and emit that array\r\n                    if (!this.historyresponse) {\r\n                        this.historyresponse = response;\r\n                    } else {\r\n                        this.historyresponse.messages = this.historyresponse.messages.concat(response.messages);\r\n                        this.historyresponse.endTimeToken = response.endTimeToken;\r\n                        this.historyresponse.startTimeToken = response.startTimeToken;\r\n                    }\r\n                    this.historyEventEmitter.emit(new PubNubEvent(PubNubEventType.HISTORY, channel, this.historyresponse));\r\n                } else {\r\n                    // push conversations in an array\r\n                    //console.log(\"More records there\");\r\n                    if (!this.historyresponse) {\r\n                        this.historyresponse = response;\r\n                    } else {\r\n                        this.historyresponse.messages = this.historyresponse.messages.concat(response.messages);\r\n                        this.historyresponse.endTimeToken = response.endTimeToken;\r\n                        this.historyresponse.startTimeToken = response.startTimeToken;\r\n                    }\r\n                    this.chathistory(channel, reverse, count, response.endTimeToken);\r\n                }\r\n            } else {\r\n                this.historyEventEmitter.error(response);\r\n\r\n            }\r\n        });\r\n        return this.historyEventEmitter;\r\n    }\r\n\r\n    loadChathistory(channel: string, reverse: boolean = false, count: number, start: number = null, end: number = null, stringifiedTimeToken: boolean = true, callback) {\r\n        this.pubnub.history({\r\n            channel: channel,\r\n            count: count,\r\n            start: start,\r\n            end: end,\r\n            reverse: reverse,\r\n            stringifiedTimeToken: stringifiedTimeToken\r\n        }, (status, response) => {\r\n            console.log(\"History\", start, '-', end, '-', response.startTimeToken, '-', response.endTimeToken, '-', response.messages);\r\n            if (callback) {\r\n                callback(status.error, response);\r\n            }\r\n        });\r\n    }\r\n\r\n    history(channel: string, reverse: boolean = false, count: number, start: number = null, end: number = null, stringifiedTimeToken: boolean = true): EventEmitter<PubNubEvent> {\r\n        let eventEmitter: EventEmitter<PubNubEvent> = new EventEmitter<PubNubEvent>();\r\n        this.pubnub.history({\r\n            channel: channel,\r\n            count: count,\r\n            start: start,\r\n            end: end,\r\n            reverse: reverse,\r\n            stringifiedTimeToken: stringifiedTimeToken\r\n        }, (status, response) => {\r\n            if (!status.error) {\r\n                // console.log(\"History\", response);\r\n                eventEmitter.emit(new PubNubEvent(PubNubEventType.HISTORY, channel, response));\r\n            } else {\r\n                eventEmitter.error(response);\r\n            }\r\n        });\r\n        return eventEmitter;\r\n    }\r\n\r\n    registerDevice(channels: Array<string>, device: string, pushGateway: string) {\r\n        // // console.log(\"ChannelList\", channels, \"===\", device, pushGateway);\r\n        this.pubnub.push.addChannels({\r\n            device: device, // Reg ID you got on your device\r\n            channels: channels,\r\n            pushGateway: pushGateway\r\n        }, (status, response) => {\r\n            if (!status.error) {\r\n                // console.log(\"In registerDevice Done\", response);\r\n            } else {\r\n                // console.log(\"registerDevice Error\", response);\r\n            }\r\n        });\r\n    }\r\n\r\n    unRegisterDevice(channels: Array<string>, device: string, pushGateway: string) {\r\n        this.pubnub.push.removeChannels({\r\n            channels: channels,\r\n            device: device,\r\n            pushGateway: pushGateway\r\n        }, function (status) {\r\n            if (status.error) {\r\n                // console.log(\"In unRegisterDevice operation failed w/ error:\", status);\r\n            } else {\r\n                // console.log(\"In unRegisterDevice operation done!\");\r\n            }\r\n        });\r\n    }\r\n\r\n    addChanneltoGroup(channelsList: string[], channelGroupName: string, displayName: string, user_id: string, deviceToken?: string, pushPlatform?: string, action: string = CONSTANTS.USER_STATES.GROUP_ADD) {\r\n        let that = this;\r\n        // console.log(\"addChanneltoGroup\", channelsList, \"-\", channelGroupName);\r\n        that.pubnub.channelGroups.addChannels(\r\n            {\r\n                channels: channelsList,\r\n                channelGroup: channelGroupName\r\n            },\r\n            function (status) {\r\n                if (status.error) {\r\n                    // console.log(\"addChanneltoGroup operation failed w/ status: \", status);\r\n                } else {\r\n                    // console.log(\"addChanneltoGroup operation done!\", status);\r\n                    that.setUserStateGroup(channelsList, action, channelGroupName, displayName);\r\n                    //that.subscribe([channelGroupName], true);\r\n                    that.addChanneltoMyGroup([channelGroupName], user_id + '_group')\r\n                    if (deviceToken !== undefined && pushPlatform !== undefined) {\r\n                        that.registerDevice([channelGroupName], deviceToken, pushPlatform);\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    listChannels(channelGroup: string) {\r\n        // console.log('In listChannels', channelGroup);\r\n        this.pubnub.channelGroups.listChannels({ channelGroup: channelGroup },\r\n            function (status, response) {\r\n                if (status.error) {\r\n                    // console.log(\"In listChannels operation failed w/ error:\", status);\r\n                    return;\r\n                }\r\n                console.log(\"In listChannels listing push channel for device\", response.channels)\r\n                // response.channels.forEach(function (channel) {\r\n                //     // console.log(channel)\r\n                // })\r\n            }\r\n        );\r\n    }\r\n    removeChannelFromGroup(channelsList: string[], channelGroupName: string, displayName: string, timestamp: number) {\r\n        let that = this;\r\n        // console.log(\"removeChannelFromGroup\", channelsList, \"-\", channelGroupName);\r\n        this.pubnub.channelGroups.removeChannels(\r\n            {\r\n                channels: channelsList,\r\n                channelGroup: channelGroupName\r\n            },\r\n            function (status) {\r\n                if (status.error) {\r\n                    // console.log(\"removeChannelFromGroup operation failed w/ error:\", status);\r\n                } else {\r\n                    // console.log(\"removeChannelFromGroup operation done!\", status)\r\n                    that.setUserStateGroup(channelsList, CONSTANTS.USER_STATES.GROUP_REMOVE, channelGroupName, displayName, timestamp);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    deleteGroup(channelGroupName: string) {\r\n        this.pubnub.channelGroups.deleteGroup(\r\n            {\r\n                channelGroup: channelGroupName\r\n            },\r\n            function (status) {\r\n                if (status.error) {\r\n                    // console.log(\"deleteGroup operation failed w/ error:\", status);\r\n                } else {\r\n                    // console.log(\"deleteGroup operation done!\")\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    getUsersState(channels: Array<string>) {\r\n        return new Promise((resolve, reject) => {\r\n            this.pubnub.hereNow(\r\n                {\r\n                    includeUUIDs: true,\r\n                    channels: channels\r\n                },\r\n                function (status, response) {\r\n                    // handle status, response\r\n                    // console.log(\"hereNow Status \", response);\r\n                    resolve(response);\r\n                });\r\n        });\r\n    }\r\n\r\n    getSubscribedChannelsByUUID(uuid: string) {\r\n        return new Promise((resolve, reject) => {\r\n            this.pubnub.whereNow({ uuid: uuid }, function (status, response) {\r\n                //// console.log(\"In getSubscribedChannels hereNow Status \", status, response);\r\n                if (!status.error) {\r\n                    resolve(response);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    sendPushNotification(coreMessageObj: ISendPushNotificationRequest, callback?) {\r\n        let pushObj = this.getPushNotificationMessage(coreMessageObj);\r\n        this.publish(coreMessageObj.receiver_uuid, pushObj).subscribe((event: PubNubEvent) => {\r\n            console.log('In sendPushNotification', event);\r\n            if (callback) {\r\n                callback(event);\r\n            }\r\n        });\r\n    }\r\n\r\n    getPushNotificationMessage(pushObj: IGetPushNotificationMessageRequest) {\r\n\r\n        let pushNotificationObj = {\r\n            \"pn_gcm\": {\r\n                \"data\": {\r\n                    \"title\": pushObj.title,\r\n                    \"message\": pushObj.message,\r\n                    \"icon\": CONSTANTS.NOTIFICATION_ICON,\r\n                    \"color\": CONSTANTS.NOTIFICATION_COLOR\r\n                }\r\n            },\r\n            \"pn_apns\": {\r\n                \"aps\": {\r\n                    \"alert\": pushObj.title + \"\\r\" + pushObj.message,\r\n                    \"sound\": \"melody\",\r\n                    \"content-available\": 1\r\n                },\r\n                \"sender\": pushObj.sender\r\n\r\n            },\r\n            \"pn_debug\": true,\r\n            'lasttimetoken': new Date().getTime()\r\n        };\r\n        return pushNotificationObj;\r\n    }\r\n\r\n    getTimeToken(callback: Function) {\r\n        let isTimeCalled = false;\r\n        this.pubnub.time(function (status, response) {\r\n            let timetoken = null;\r\n            if (status.error) {\r\n                timetoken = new Date().getTime() * 10000;\r\n            } else {\r\n                timetoken = response.timetoken;\r\n            }\r\n            if (!isTimeCalled && callback) {\r\n                isTimeCalled = true;\r\n                callback(timetoken);\r\n            }\r\n        });\r\n    }\r\n\r\n    getDateTime(timetoken: number) {\r\n        return Math.round(timetoken / 10000);\r\n    }\r\n    setConversationLastState(shared_channel: string, count: number, timetoken?: number): void {\r\n        let currentState = { count: count };\r\n        if (timetoken) {\r\n            currentState['timestamp'] = timetoken;\r\n        } else {\r\n            currentState['timestamp'] = this.getConversationLastReadTimetoken(shared_channel)\r\n        }\r\n\r\n        let oldCount = this.getConversationBadgeCount(shared_channel);\r\n        if (shared_channel !== undefined && shared_channel !== '') {\r\n            this.conversationCountMap[shared_channel] = currentState;\r\n            let conversationCountMapStr = JSON.stringify(this.conversationCountMap);\r\n            //// console.log('In setConversationLastState ', shared_channel, conversationCountMapStr);\r\n            localStorage.setItem(CONSTANTS.LOCAL_CONVERSATION_COUNT_MAP + '-' + this.userId, conversationCountMapStr);\r\n            // If current count and existing count is different then reload globalBadgeCount            \r\n            if (count !== oldCount) {\r\n                this.reloadGlobalBadgeCount();\r\n            }\r\n        }\r\n    }\r\n\r\n    getConversationBadgeCount(shared_channel: string) {\r\n        let badgeCount = 0;\r\n        if (this.conversationCountMap[shared_channel]) {\r\n            badgeCount = this.conversationCountMap[shared_channel].count;\r\n        }\r\n        // // console.log('In getConversationBadgeCount', shared_channel, badgeCount);\r\n        return badgeCount;\r\n    }\r\n\r\n    getConversationLastReadTimetoken(shared_channel: string) {\r\n        let timestamp = null;\r\n        if (this.conversationCountMap[shared_channel]) {\r\n            timestamp = this.conversationCountMap[shared_channel].timestamp;\r\n        }\r\n        // // console.log('In getConversationLastReadTimestamp', shared_channel, badgeCount);\r\n        return timestamp;\r\n    }\r\n\r\n    reloadGlobalBadgeCount() {\r\n        let badgeCount = 0;\r\n        if (this.conversationCountMap) {\r\n            for (let key in this.conversationCountMap) {\r\n                if (this.conversationCountMap[key]) {\r\n                    if (this.conversationCountMap[key] && this.conversationCountMap[key].count) {\r\n                        badgeCount += this.conversationCountMap[key].count;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (badgeCount > 0) {\r\n            this.globalBadgeCount = badgeCount.toString();\r\n        } else {\r\n            this.globalBadgeCount = '';\r\n        }\r\n    }\r\n\r\n    getConversationCountMap() {\r\n        let conversationCountMap = new Map(), conversationCountMapStr;\r\n        conversationCountMapStr = localStorage.getItem(CONSTANTS.LOCAL_CONVERSATION_COUNT_MAP + '-' + this.userId);\r\n        if (conversationCountMapStr && conversationCountMapStr.length > 0) {\r\n            conversationCountMap = JSON.parse(conversationCountMapStr);\r\n        }\r\n        return conversationCountMap;\r\n    }\r\n\r\n\r\n    setUserState(channelsList: string[]) {\r\n        this.pubnub.setState({\r\n            channels: channelsList,\r\n            state: { isTyping: this.isCurrentUserTyping },\r\n            function(status, response) {\r\n                // handle status, response\r\n                // console.log(\"Status---\", status, \"Response\", response);\r\n            }\r\n        });\r\n    }\r\n\r\n    setConnectionStatusChangeState(newState: IConnectionStatusChangeState, channels: Array<string>) {\r\n        channels = channels || [];\r\n        //console.log(\"In setConnectionStatusChangeState\", channels, newState);\r\n        newState['timetoken'] = new Date().getTime();\r\n        this.pubnub.setState({ state: newState, channels: channels },\r\n            function (status, response) {\r\n                //console.log('>>', status, response);\r\n            });\r\n    }\r\n\r\n    setUserStateGroup(channelsList: string[], action: string, groupName: string, displayName: string, timestamp?: number) {\r\n        let stateParams = { action: action, groupName: groupName, displayName: displayName };\r\n        if (timestamp) {\r\n            stateParams['leaving_time_token'] = timestamp;\r\n        }\r\n        stateParams['timetoken'] = new Date().getTime();\r\n        this.pubnub.setState({\r\n            channels: channelsList,\r\n            state: stateParams,\r\n            function(status, response) {\r\n                // handle status, response\r\n                //  // console.log(\"Status---\", status, \"Response\", response);\r\n            }\r\n        });\r\n    }\r\n\r\n    startTyping(channelName: string) {\r\n        //// console.log(\"User isTyping - \", this.isCurrentUserTyping, \"---\", channelName);\r\n        this.isCurrentUserTyping = true;\r\n        this.setUserState([channelName]);\r\n    }\r\n    stopTyping(channelName: string) {\r\n        //// console.log(\"User isTyping - \", this.isCurrentUserTyping, \"---\", channelName);\r\n        this.isCurrentUserTyping = false;\r\n        this.setUserState([channelName]);\r\n    }\r\n\r\n    addChanneltoMyGroup(channelsList: string[], channelGroupName: string) {\r\n        //console.log(\"addChanneltoGroup\", channelsList, \"-\", channelGroupName);\r\n        this.pubnub.channelGroups.addChannels(\r\n            {\r\n                channels: channelsList,\r\n                channelGroup: channelGroupName\r\n            },\r\n            function (status) {\r\n                if (status.error) {\r\n                    //console.log(\"addChanneltoGroup operation failed w/ status: \", status);\r\n                } else {\r\n                    //console.log(\"addChanneltoGroup operation done!\", status);\r\n                }\r\n            });\r\n    }\r\n\r\n    removeChannelFromMyGroup(channelsList: string[], channelGroupName: string) {\r\n        //console.log(\"removeChannelFromGroup\", channelsList, \"-\", channelGroupName);\r\n        this.pubnub.channelGroups.removeChannels(\r\n            {\r\n                channels: channelsList,\r\n                channelGroup: channelGroupName\r\n            },\r\n            function (status) {\r\n                if (status.error) {\r\n                    //console.log(\"removeChannelFromGroup operation failed w/ error:\", status);\r\n                } else {\r\n                    //console.log(\"removeChannelFromGroup operation done!\", status)\r\n                }\r\n            }\r\n        );\r\n    }\r\n    // This is kept for refernce but we are not using \r\n    getSupportedLanguageMsgOLd(inputMsg: string): Observable<any> {\r\n        const simpleObservable = new Observable((observer) => {\r\n            let languageOb = {};\r\n            CONSTANTS.AVAILABLE_LANGUAGE.forEach((language) => {\r\n                languageOb[language] = inputMsg;\r\n            });\r\n            observer.next(languageOb);\r\n            observer.complete()\r\n        })\r\n        return simpleObservable;\r\n    }\r\n\r\n    getSupportedLanguageMsg(inputMsg: string, inputLanguages?: Array<string>, isSysMsg: boolean = true): Observable<any> {\r\n        const simpleObservable = new Observable((observer) => {\r\n            inputLanguages = inputLanguages || CONSTANTS.AVAILABLE_LANGUAGE;\r\n            let requestList = [], messageContent = {};\r\n            let languages = JSON.parse(JSON.stringify(inputLanguages));\r\n\r\n            // There should be English language in all conversation object.\r\n            if (languages.indexOf(CONSTANTS.DEFAULT_LANGUAGE) === -1) {\r\n                languages.push(CONSTANTS.DEFAULT_LANGUAGE);\r\n            }\r\n            if (languages.indexOf(this.userLang) !== -1 && !isSysMsg) {\r\n                languages.splice(languages.indexOf(this.userLang), 1);\r\n                messageContent[this.userLang] = inputMsg;\r\n            }\r\n            languages.forEach((target) => {\r\n                let translateUrl = CONSTANTS.GOOGLE_TRANSLATION_BASE_URL + \"&target=\" + target + \"&q=\" + inputMsg;\r\n                requestList.push(this.http.get(translateUrl).map((res: any) => res.json()));\r\n            });\r\n\r\n            if (requestList && requestList.length > 0) {\r\n                forkJoin(requestList).subscribe((responseArray: Array<ITranslatedResponse>) => {\r\n                    responseArray.forEach((response, index) => {\r\n                        if (response.data && response.data.translations.length > 0) {\r\n                            messageContent[languages[index]] = response.data.translations[0].translatedText;\r\n                        }\r\n                    });\r\n                    observer.next(messageContent);\r\n                    observer.complete();\r\n                }, (error) => {\r\n                    console.log('Error while google translating ', error);\r\n                    observer.error(error);\r\n                    observer.complete();\r\n                });\r\n            } else {\r\n                observer.next(messageContent);\r\n                observer.complete();\r\n            }\r\n        });\r\n        return simpleObservable;\r\n    }\r\n\r\n    setUserLang(language: string) {\r\n        this.userLang = language;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport interface ITranslatedResponse {\r\n    data: {\r\n        translations: Array<{\r\n            translatedText: string;\r\n        }>\r\n    }\r\n}\r\nexport interface IGetPushNotificationMessageRequest {\r\n    title: string,\r\n    message: string,\r\n    sender: string\r\n}\r\n\r\nexport interface ISendPushNotificationRequest extends IGetPushNotificationMessageRequest {\r\n    receiver_uuid: string;\r\n}\r\n\r\nexport interface IConnectionStatusChangeState {\r\n    _id: string;\r\n    name: string;\r\n    connection_status: number;\r\n    action: string;\r\n    connection_action?: number;\r\n    connection_type?: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/pubnub-service.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 199;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 199\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 241;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 241\n// module chunks = 0","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '../../providers/http-service';\r\nimport { UserService } from '../../providers/user-service';\r\nimport { ENVIRONMENT } from '../../shared/environment';\r\nimport { CONSTANTS } from '../../shared/config';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class ChatService {\r\n    constructor(public http: HttpService, public userService: UserService) {\r\n        // console.log('Hello ChatService Provider')\r\n    }\r\n\r\n    createOrEditConversation(params: IGroup, isEdit: boolean = false): Observable<any> {\r\n        // console.log('In createGroup, isEdit:', isEdit)\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/chat'\r\n        if (isEdit) {\r\n            url += '/updategroupdetails'\r\n        }\r\n        return this.http.post(url, params).map((res: any) => res.json())\r\n    }\r\n\r\n    updateConnectionStatus(params: IUpdateConnectionStatusRequestParams): Observable<any> {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/chat/updateconnectionstatus';\r\n        return this.http.post(url, params).map((res: any) => res.json())\r\n    }\r\n\r\n    updateProviderConnectionStatus(params: IUpdateProviderConnectionRequestParams): Observable<any> {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/chat/updateproviderconnection';\r\n        return this.http.post(url, params).map((res: any) => res.json())\r\n    }\r\n\r\n    updateConversationStatus(params: IUpdateConversationStatusRequestParams): Observable<any> {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/chat/updateconversationstatus';\r\n        return this.http.post(url, params).map((res: any) => res.json())\r\n    }\r\n\r\n    chatArchives(params: IArchive): Observable<any> {\r\n        // console.log('In chatarchives')\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/chatarchives'\r\n        return this.http.post(url, params).map((res: any) => res.json())\r\n    }\r\n    changePushNotificationSetting(params: { _id: string, notification: boolean }): Observable<any> {\r\n        // console.log('In changePushNotificationSetting')\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/chat/updateconversation'\r\n        return this.http.post(url, params).map((res: any) => res.json())\r\n    }\r\n\r\n    getUserConversation(params: IGetUserConversationRequest): Observable<any> {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/chat/getconversationdetails'\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    getConversationExtraData(params: { shared_channel: string }): Observable<any> {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/chat/detectconversationlanguages '\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    searchConversation(params: ISearchConversationRequest): Observable<any> {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/chat/getsearchresultforconversation'\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    getUserGroups(userId: string): Observable<any> {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/chat/getusergroups'\r\n        let requestObj = {\r\n            \"user_id\": userId\r\n        }\r\n        return this.http.post(url, requestObj).map((res: any) => res.json())\r\n    }\r\n\r\n    getGroupDetails(params: IGetGroupDetailsRequest): Observable<any> {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/chat/getgroupmemberdetails'\r\n        let requestObj = {\r\n            user_id: params.user_id,\r\n            shared_channel: params.shared_channel\r\n        }\r\n        return this.http.post(url, requestObj).map((res: any) => res.json())\r\n    }\r\n\r\n    checkForSharedChannel(params: { user_id: string, receiver_id: string }): Observable<any> {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/chat/checkforsharedchannel';\r\n        return this.http.post(url, params).map((res: any) => res.json())\r\n    }\r\n\r\n    removeMemberFromGroup(params: IGroupRemoveRequest): Observable<any> {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/chat/removesinglememberfromgroup';\r\n        return this.http.post(url, params).map((res: any) => res.json())\r\n    }\r\n\r\n    deleteGroupConversation(shared_channel: string, user_id: string) {\r\n        let params = {\r\n            shared_channel: shared_channel,\r\n            user_id: user_id\r\n        };\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/chat/deleteuserorgroup';\r\n        return this.http.post(url, params).map((res: any) => res.json())\r\n    }\r\n\r\n    updateVerificationRequest(params: { user_id: string, action: string }): Observable<any> {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/servicelocations/updateverificationrequest';\r\n        return this.http.post(url, params).map((res: any) => res.json())\r\n    }\r\n\r\n    getMessageContent(messageOb: Map<string, string>, expectedLangPrefix?: string): string {\r\n        let langPrefix = CONSTANTS.DEFAULT_LANGUAGE;\r\n        expectedLangPrefix = expectedLangPrefix || this.userService.getCurrentLang();\r\n        if (typeof messageOb === 'string') {\r\n            return messageOb;\r\n        }\r\n        if (messageOb.hasOwnProperty(expectedLangPrefix)) {\r\n            langPrefix = expectedLangPrefix;\r\n        }\r\n        return messageOb[langPrefix];\r\n    }\r\n\r\n    getNotificationLang(inputLanguages) {\r\n        let languages = inputLanguages || [];\r\n        let curLang = this.userService.getCurrentLang();\r\n        let returnLang = CONSTANTS.DEFAULT_LANGUAGE;\r\n\r\n        switch (languages.length) {\r\n            case 2:\r\n                languages = languages.filter((lang) => {\r\n                    return (lang !== curLang) ? true : false;\r\n                });\r\n                returnLang = languages[0] || CONSTANTS.DEFAULT_LANGUAGE;\r\n                break;\r\n            case 1:\r\n                returnLang = languages[0];\r\n                break;\r\n        }\r\n        return returnLang;\r\n    }\r\n\r\n}\r\n\r\nexport interface IMessage {\r\n    content: Map<string, string>;\r\n    shared_channel: string;\r\n    shared_channel_id?: string;\r\n    sender_uuid: string;\r\n    receiver_uuid: string;\r\n    timetoken: number;\r\n    image?: string;\r\n    video?: string;\r\n    tags_array?: Array<string>;\r\n    is_group?: boolean;\r\n    content_type_id?: number;\r\n    is_sys_msg?: boolean;\r\n}\r\n\r\nexport interface IGetUserConversationRequest {\r\n    user_id: string;\r\n    is_group_data_needed: boolean;\r\n}\r\nexport interface ISearchConversationRequest {\r\n    user_id: string;\r\n    search_by: string;\r\n}\r\n\r\nexport interface IGetUserConversationResponse {\r\n    connected: Array<IConversation>;\r\n    invitation_sent: Array<IConversation>;\r\n    invitation_received: Array<IConversation>;\r\n    not_connected: Array<IConversation>;\r\n    otherUsersList?: Array<IConversation>;\r\n}\r\n\r\nexport interface IGetGroupDetailsRequest {\r\n    user_id: string;\r\n    shared_channel: string;\r\n}\r\n\r\nexport interface IGroup {\r\n    user_id: string;\r\n    user_name?: string;\r\n    name?: string;\r\n    shared_channel?: string;\r\n    receiver_id?: string;\r\n    profile_pic?: string;\r\n    members?: Array<string>;\r\n    created_by: string;\r\n    type?: string;\r\n    group_type?: string;\r\n    joining_time_token?: number;\r\n    leaving_time_token?: number;\r\n    resident_profile_pic?: string;\r\n    is_advocate?: boolean;\r\n    verification_address?: string;\r\n    location_id?: string; \r\n}\r\n\r\nexport interface IGroupMember {\r\n    user_id: string;\r\n    user_name: string;\r\n    profile_pic: string;\r\n    presence?: string;\r\n}\r\n\r\nexport interface IConversation {\r\n    _id?: string;\r\n    user_id?: string;\r\n    user_name?: string;\r\n    user_email?: string;\r\n    first_name?: string;\r\n    last_name?: string;\r\n    profile_pic?: string;\r\n    user_type?: string;\r\n    name?: string;\r\n    badgeCount?: number;\r\n    shared_channel?: string;\r\n    isTyping?: boolean;\r\n    status?: string;\r\n    receiver_id?: string;\r\n    presence?: string;\r\n    type?: string;\r\n    latestMessageTimestamp?: string;\r\n    latestMessage?: string;\r\n    joining_time_token?: number;\r\n    leaving_time_token?: number;\r\n    notification?: boolean;\r\n    connection_status?: number;\r\n    timetoken?: number;\r\n    selected?: boolean;\r\n    group_type?: string;\r\n    members?: Array<IGroupMember>;\r\n    created_by?: string;\r\n    verification_status?: string;\r\n    is_advocate?: boolean;\r\n    verification_address?: string;\r\n    languages?: Array<string>;\r\n}\r\n\r\n\r\n\r\nexport interface IArchive {\r\n    user_id?: string;\r\n    content: string;\r\n    sender_uuid: string;\r\n    receiver_uuid?: string;\r\n    shared_channel: string;\r\n    date: Date;\r\n    tags?: Array<string>;\r\n    image: string;\r\n    video: string;\r\n}\r\n\r\nexport interface IManageGroup {\r\n    addedMembers?: Array<string>;\r\n    removedMembers?: Array<string>;\r\n}\r\n\r\nexport interface IUpdateProviderConnectionRequestParams {\r\n    shared_channel: string;\r\n    user_id: string;\r\n    connection_status: number;\r\n    receiver_id?: string;\r\n    is_advocate: boolean;\r\n\r\n}\r\n\r\nexport interface IUpdateConnectionStatusRequestParams extends IUpdateProviderConnectionRequestParams {\r\n    receiver_id: string;\r\n    receiver_username: string;\r\n}\r\n\r\nexport interface IUpdateConversationStatusRequestParams {\r\n    shared_channel: string;\r\n    user_id: string;\r\n    status: string;\r\n}\r\n\r\nexport interface IGroupRemoveRequest {\r\n    shared_channel: string;\r\n    user_id: string;\r\n    member_id: string;\r\n    leaving_time_token: number;\r\n    name: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversations/chat-service.ts","import { Component, OnDestroy } from '@angular/core';\r\nimport { Events } from 'ionic-angular';\r\nimport { AroundmePage } from '../../pages/aroundme/aroundme';\r\nimport { ActivityPage } from '../../pages/activity/activity-feed';\r\nimport { Conversations } from '../../pages/conversations/conversations';\r\nimport { MyStuff } from '../../pages/my-stuff/my-stuff';\r\n//import { ServiceRequest } from '../../pages/service-request/service-request';\r\nimport { PubNubService } from '../../providers/pubnub-service';\r\nimport { UserService, ICoachMarksSettings, ICoachMarksSettingsRequest } from '../../providers/user-service';\r\nimport { LoaderService } from '../../providers/loader-service';\r\nimport { CONSTANTS } from '../../shared/config';\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n@Component({\r\n  selector: 'page-home-tabs',\r\n  templateUrl: 'home-tabs.html'\r\n})\r\n\r\nexport class HomeTabs implements OnDestroy {\r\n  public ActivityTab: Component;\r\n  public ConversationTab: Component;\r\n  public AroundmeTab: Component;\r\n  public MyStuffTab: Component;\r\n  //public ServiceRequestTab: Component;\r\n  public showCoachMarks: ICoachMarksSettings;\r\n  public selectedIndex: number = 0;\r\n  constructor(public pubNubService: PubNubService, public userService: UserService,\r\n    private translateService: TranslateService,\r\n    public loaderService: LoaderService, private events: Events) {\r\n    this.ActivityTab = ActivityPage;\r\n    this.ConversationTab = Conversations;\r\n    this.AroundmeTab = AroundmePage;\r\n    this.MyStuffTab = MyStuff;\r\n    //this.ServiceRequestTab = ServiceRequest;\r\n  }\r\n\r\n  onTabClick(tab) {\r\n    this.selectedIndex = tab.index;\r\n    if (this.selectedIndex !== 0) {\r\n      this.events.publish(CONSTANTS.APP_EVENTS.STOP_TTS);\r\n    }\r\n  }\r\n\r\n  setCoachMarks(page) {\r\n    switch (page) {\r\n      case 'feed':\r\n        this.userService.userObj.show_coach_marks.feed = false;\r\n        break;\r\n      case 'conversation':\r\n        this.userService.userObj.show_coach_marks.conversation = false;\r\n        break;\r\n      case 'around_me':\r\n        this.userService.userObj.show_coach_marks.around_me = false;\r\n        break;\r\n      case 'profile':\r\n        this.userService.userObj.show_coach_marks.profile = false;\r\n        break;\r\n    }\r\n\r\n    if (!this.userService.userObj.show_coach_marks.feed && !this.userService.userObj.show_coach_marks.conversation &&\r\n      !this.userService.userObj.show_coach_marks.around_me && !this.userService.userObj.show_coach_marks.profile) {\r\n      this.userService.userObj.show_coach_marks.all = false;\r\n    }\r\n\r\n    let coachMarksSettingsRequest: ICoachMarksSettingsRequest;\r\n    coachMarksSettingsRequest = Object.assign({ user_id: this.userService.userObj.user_id }, { show_coach_marks: this.userService.userObj.show_coach_marks });\r\n\r\n    this.userService.setCoachMarkSettings(coachMarksSettingsRequest).subscribe((response) => {\r\n      if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        this.userService.userObj.show_coach_marks = response.show_coach_marks;\r\n        // Set map clickable on Got it click of around you.\r\n        if (page === 'around_me') {\r\n          this.events.publish(CONSTANTS.APP_EVENTS.AROUND_YOU_COACH_MARK_GOT_IT_CLICK);\r\n        }\r\n      } else {\r\n        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.PROFILE_SAVE_DONE'));\r\n      }\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    // console.log(\"Home tab is killed!!\");\r\n    this.ActivityTab = null;\r\n    this.ConversationTab = null;\r\n    this.AroundmeTab = null;\r\n    this.MyStuffTab = null;\r\n  }\r\n}\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home-tabs/home-tabs.ts","import { Component, NgZone, OnDestroy, ViewChild } from '@angular/core';\r\nimport { NavController, Platform, Events, Content } from 'ionic-angular';\r\nimport { GoogleMaps, GoogleMap, MyLocation, LatLngBounds, GoogleMapsAnimation, GeocoderRequest, GoogleMapsEvent, LatLng, MarkerOptions, Marker, Geocoder, GeocoderResult, GoogleMapOptions } from '@ionic-native/google-maps';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\nimport { Network } from '@ionic-native/network';\r\n\r\nimport { PinnedLocation } from './pinned-location/pinned-location';\r\nimport { MapOverlays } from './map-overlays/map-overlays';\r\nimport { SetPinnedLocation } from './set-pinned-location/set-pinned-location';\r\nimport { ProviderDetails } from './provider-details/provider-details';\r\n\r\nimport { AnalyticsService } from '../../providers/analytics-service';\r\nimport { UserService } from '../../providers/user-service';\r\nimport { AroundMeService, IPinLocation, IGetMapOverlaysOptions, IGoogleNearByPlacesRequest } from './aroundme-service';\r\nimport { LoaderService } from '../../providers/loader-service';\r\nimport { CONSTANTS } from '../../shared/config';\r\nimport { ProviderService, IBaseProperty, ISelectedProperty, IGetNearByPropertiesRequest, IBaseProvider } from \"./provider-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'page-aroundme',\r\n  templateUrl: 'aroundme.html'\r\n})\r\n\r\nexport class AroundmePage implements OnDestroy {\r\n  private MAP_ZOOM_LEVEL: number = 15;\r\n  private MAP_ZOOM_START_LEVEL: number = 3;\r\n  private currentPosition: LatLng;\r\n  private currentAddress: string;\r\n\r\n  public map: GoogleMap;\r\n  public mapElement: HTMLElement;\r\n  public mapInitialised: boolean = false;\r\n  public togglePinnedClass: boolean;\r\n  public autocompletePlaces: any;\r\n  public searchLocation: { query: string };\r\n  public pinedLocation: IPinLocation;\r\n  public togglePineedLocation: boolean = false;\r\n  public isMapVisible: boolean = true;\r\n  public tabMapClass: boolean = false;\r\n  public selectedTab: string = 'mapView';\r\n  public serviceProviders: Array<IBaseProvider> = [];\r\n  public housingProviders: Array<IBaseProvider> = [];\r\n  public selectedProperty: ISelectedProperty;\r\n  public autoCompleteObserver: Subscription;\r\n  public isPlaceSelected: boolean = false;\r\n  @ViewChild(Content) content: Content;\r\n  constructor(public navCtrl: NavController, private events: Events, public platform: Platform, private zone: NgZone,\r\n    private aroundMeService: AroundMeService, private providerService: ProviderService, private translateService: TranslateService,\r\n    private userService: UserService, private analyticsService: AnalyticsService,\r\n    private loaderService: LoaderService, private keyboard: Keyboard, private geocoder: Geocoder,\r\n    private googleMaps: GoogleMaps, private network: Network) {\r\n    // Set default searchLocation empty\r\n    this.searchLocation = { query: '' };\r\n    // Set default pinedLocation empty  \r\n    this.pinedLocation = { name: '', address: '' };\r\n    this.togglePinnedClass = false;\r\n    this.keyboard.close();\r\n    this.initSelectPinnedLocationEvent();\r\n    this.initCoachMarkClickEvent();\r\n    this.setMapOverlaySettings();\r\n    if (platform.is('cordova')) {\r\n      //console.log(\"Get Provider by my current Location \");\r\n    } else {\r\n      //India \r\n      //-81.57008739999999, \r\n      //41.4003046\r\n      //    -81.57008739999999, \r\n      //41.4003046\r\n      //latitude: 39.2120554\r\n      //longitude: -76.865926\r\n      //41.476886,-81.6467857\r\n      this.getProviders({ lat: 41.476886, lng: -81.6467857 }, [], true, (providers) => {\r\n        // this.getProviders({ lat: 73.9026152, lng: 18.5479964 }, [\"5859382a4cce7614b8b0bd66_23\"], true, (providers) => {\r\n      });\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initMapView()\r\n\r\n  }\r\n  ionViewDidLoad() {\r\n    this.initLanguageUpdateEvent();\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    // Set isMapVisible to false when coack mark screen is over on map \r\n    if (this.userService.userObj.show_coach_marks.around_me) {\r\n      this.isMapVisible = false;\r\n      this.map.setClickable(false);\r\n    }\r\n    // this.initOverlaysOptions();\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.AROUND_YOU);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.AROUND_YOU);\r\n    this.initListView();\r\n\r\n  }\r\n\r\n  ionViewWillUnload() {\r\n    console.log(\"Around ME- Looks like I'm about to ionViewWillUnload :(\");\r\n    this.events.unsubscribe(CONSTANTS.APP_EVENTS.ARROUND_YOU_ACTIONS);\r\n    this.events.unsubscribe(CONSTANTS.APP_EVENTS.LANGUAGE_UPDATE);\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.remove();\r\n    //this.ionViewWillUnload();\r\n  }\r\n\r\n  initSelectPinnedLocationEvent() {\r\n    this.events.subscribe(CONSTANTS.APP_EVENTS.ARROUND_YOU_ACTIONS, (action, data) => {\r\n      //this.loadMapByPinedLocation(location);\r\n      this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n      if (CONSTANTS.ARROUND_YOU_ACTIONS.SELECT_SAVED_PIN === action) {\r\n        this.currentAddress = this.searchLocation.query = data.address;\r\n        this.currentPosition = data.position;\r\n      }\r\n      this.addMarkerOnMap({ position: this.currentPosition, title: this.currentAddress }, this.addMarkerDone);\r\n    });\r\n  }\r\n\r\n  initCoachMarkClickEvent() {\r\n    this.events.subscribe(CONSTANTS.APP_EVENTS.AROUND_YOU_COACH_MARK_GOT_IT_CLICK, () => {\r\n      if (!this.userService.userObj.show_coach_marks.around_me) {\r\n        this.map.setClickable(true);\r\n        this.isMapVisible = true;\r\n        this.getMyLocation();\r\n      }\r\n    });\r\n  }\r\n\r\n  initListView() {\r\n    this.content.resize();\r\n    this.setSelectedProperty(null);\r\n  }\r\n\r\n  initMapView() {\r\n    this.content.resize();\r\n    if (!this.mapInitialised && this.platform.is('cordova')) {\r\n      this.initMap();\r\n    }\r\n    this.setSelectedProperty(null);\r\n  }\r\n\r\n  initMap(): void {\r\n    let that = this;\r\n    that.mapElement = document.getElementById('map');\r\n\r\n    let startLocation: LatLng = new LatLng(37.09024, -95.712891);\r\n    let layoutOption: GoogleMapOptions = {\r\n      controls: {\r\n        compass: false, myLocationButton: false, indoorPicker: true, zoom: false, mapToolbar: false\r\n      },\r\n      gestures: {\r\n        scroll: true, tilt: true, rotate: true, zoom: true\r\n      },\r\n      camera: {\r\n        target: startLocation, tilt: 40, zoom: that.MAP_ZOOM_START_LEVEL, bearing: 0, duration: 2000\r\n      }\r\n    };\r\n    that.map = that.googleMaps.create(that.mapElement, layoutOption);\r\n    that.map.on(GoogleMapsEvent.MAP_READY).subscribe((map) => {\r\n      this.mapInitialised = true;\r\n      this.getMyLocation();\r\n    });\r\n\r\n    that.map.on(GoogleMapsEvent.MAP_CLICK).subscribe((map) => {\r\n      this.setSelectedProperty(null);\r\n      this.keyboard.close();\r\n    });\r\n\r\n    that.map.on(GoogleMapsEvent.MAP_LONG_CLICK).subscribe((location) => {\r\n      //console.log(\"Map is long clicked.\\n\" + JSON.stringify(location));\r\n      that.currentPosition = location[0];\r\n      let params: GeocoderRequest = {\r\n        position: { lat: location[0].lat, lng: location[0].lng }\r\n      };\r\n      that.updateLocationDetailsByPosition(params);\r\n    });\r\n  }\r\n\r\n  addNetworkEvents() {\r\n    this.network.onConnect().subscribe(() => {\r\n      if (!this.mapInitialised) {\r\n        this.initMap();\r\n      }\r\n      this.enableMap();\r\n    });\r\n\r\n    this.network.onDisconnect().subscribe(() => {\r\n      this.disableMap();\r\n    });\r\n  }\r\n\r\n  getMyLocation(): void {\r\n    let that = this;\r\n    that.enableMap();\r\n\r\n    // Don't show map when coach marker active\r\n    if (!this.userService.userObj.show_coach_marks.around_me) {\r\n      that.map.getMyLocation().then((location: MyLocation) => {\r\n        // set map position as per currentPosition\r\n        that.currentPosition = location.latLng;\r\n        let geocode: GeocoderRequest = {\r\n          position: {\r\n            lat: location.latLng.lat,\r\n            lng: location.latLng.lng\r\n          }\r\n        };\r\n        that.updateLocationDetailsByPosition(geocode);\r\n      }).catch((error) => {\r\n        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.LOCATION_NOT_FOUND'));\r\n      });\r\n    }\r\n  }\r\n\r\n  updateLocationDetailsByPosition(geocode: GeocoderRequest) {\r\n    let that = this;\r\n    that.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    that.geocoder.geocode(geocode).then((response: GeocoderResult[]) => {\r\n      if (response && response.length > 0) {\r\n        let result: GeocoderResult = response[0];\r\n        let address = result.extra.lines.toString();\r\n        let position = new LatLng(result.position.lat, result.position.lng);\r\n        that.currentPosition = position;\r\n        that.currentAddress = address;\r\n        that.searchLocation.query = address;\r\n        that.pinedLocation.zipcode = result.postalCode;\r\n        that.pinedLocation.city = result.locality;\r\n        that.pinedLocation.state = result.adminArea\r\n        that.addMarkerOnMap({ position: position, title: address }, that.addMarkerDone);\r\n      }\r\n    }, error => {\r\n      that.addMarkerOnMap({ position: that.currentPosition, title: that.currentAddress }, that.addMarkerDone);\r\n      that.loaderService.showToaster(error);\r\n    });\r\n  }\r\n\r\n  addMarkerOnMap(markerOptions: MarkerOptions, addMarkerDoneCallback): void {\r\n    let that = this, latLng;\r\n    that.setSelectedProperty(null);\r\n    if (markerOptions.position) {\r\n      latLng = new LatLng(markerOptions.position.lat, markerOptions.position.lng);\r\n      markerOptions.position = latLng;\r\n      console.log(\"Before Map Clear\");\r\n      that.map.clear().then(() => {\r\n        console.log(\"After Map Clear\");\r\n        that.map.animateCamera({ target: latLng, zoom: that.MAP_ZOOM_LEVEL, tilt: 40, bearing: 0, duration: 1500 });\r\n        if (markerOptions.title) {\r\n          markerOptions.title = markerOptions.title.split(',').join(\"\\n\");\r\n        }\r\n        // set default marker icon image\r\n        markerOptions.icon = { url: CONSTANTS.GOOGLE_MAP_DEFAULT_MARKER.ICON };\r\n        markerOptions.animation = GoogleMapsAnimation.DROP;\r\n        //// console.log('In addMarkerOnMap position,markerOptions', markerOptions.position, markerOptions);\r\n        that.map.addMarker(markerOptions)\r\n          .then((marker: Marker) => {\r\n            marker.addEventListener(GoogleMapsEvent.MARKER_CLICK).subscribe(marker => {\r\n              that.setSelectedProperty(null);\r\n              marker[1].showInfoWindow();\r\n            });\r\n            marker.addEventListener(GoogleMapsEvent.INFO_CLICK).subscribe(marker => {\r\n              marker[1].hideInfoWindow();\r\n            });\r\n            if (addMarkerDoneCallback) {\r\n              addMarkerDoneCallback.call(that, latLng);\r\n            }\r\n          }).catch((error) => {\r\n            console.log(error);\r\n            that.loaderService.dismissLoader();\r\n          });\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  addMarkerDone(latLng): void {\r\n    let serviceInterest = [], goolgePlacesOverlaysOptions;\r\n    let overlaysOptions: IGetMapOverlaysOptions = JSON.parse(JSON.stringify(this.aroundMeService.mapOverlays));\r\n    if (overlaysOptions.service_interest) {\r\n      overlaysOptions.service_interest.filter(option => {\r\n        if (option.flag === true) {\r\n          serviceInterest.push(option._id);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (overlaysOptions.google_places) {\r\n      goolgePlacesOverlaysOptions = overlaysOptions.google_places.filter(option => {\r\n        return option.flag === true;\r\n      });\r\n    }\r\n\r\n    this.getProviders(latLng, serviceInterest, overlaysOptions.provider_overlay[0].flag, (providers: Array<IBaseProvider>) => {\r\n      let places = updatePlacerIcon(providers);\r\n      if (goolgePlacesOverlaysOptions && goolgePlacesOverlaysOptions.length > 0) {\r\n        this.getGooglePlaceNearBySearch(latLng, goolgePlacesOverlaysOptions, (googlePlaces) => {\r\n          places = places.concat(googlePlaces);\r\n          showPropertiesOnMap.call(this, places);\r\n        });\r\n      } else if (places && places.length > 0) {\r\n        showPropertiesOnMap.call(this, places);\r\n      } else {\r\n        this.loaderService.dismissLoader();\r\n      }\r\n    });\r\n\r\n    function updatePlacerIcon(places: Array<IBaseProvider>) {\r\n      let icons = {\r\n        'Multi Units Property': './assets/img/pin-building.png',\r\n        'Single Home Property': './assets/img/pin-housing.png',\r\n        Education: './assets/img/pin-education.png',\r\n        \"Employment Assistance\": './assets/img/pin-employement-assistance.png',\r\n        \"Financial Counseling\": './assets/img/pin-financial-counselling.png',\r\n        \"Child Care\": './assets/img/pin-child-care.png',\r\n        Health: './assets/img/pin-healthcare-sp.png',\r\n        Training: './assets/img/pin-training.png',\r\n        Transportation: './assets/img/pin-transportation.png',\r\n        \"Legal Services\": './assets/img/pin-legal-services.png',\r\n        Housing: './assets/img/pin-housing-sp.png',\r\n        service_provider: './assets/img/service_provider.png',\r\n        housing_provider: './assets/img/housing_provider.png',\r\n        'Community Engagement': './assets/img/pin_community-engagement.png',\r\n        'Senior Service': './assets/img/pin_senior-service.png'\r\n      };\r\n\r\n      places.map((place) => {\r\n        if (place.location_type) {\r\n          let icon = null;\r\n          if (place.location_type === CONSTANTS.USER_TYPE.HOUSING_PROVIDER) {\r\n            icon = icons[place.icon_type] || icons[CONSTANTS.USER_TYPE.HOUSING_PROVIDER]\r\n          } else if (place.location_type === CONSTANTS.USER_TYPE.SERVICE_PROVIDER) {\r\n            icon = icons[place.icon_type] || icons[CONSTANTS.USER_TYPE.SERVICE_PROVIDER]\r\n          }\r\n          place['icon'] = icon;\r\n        }\r\n        return place;\r\n      });\r\n      return places;\r\n    }\r\n\r\n    function showPropertiesOnMap(places) {\r\n      if (places && places.length > 0) {\r\n        this.showPropertiesOnMap(latLng, places, () => {\r\n          this.loaderService.dismissLoader();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  showPropertiesOnMap(position: LatLng, places: Array<any>, showPropertiesOnMapCallback): void {\r\n    let that = this, markers = [], bounds = new LatLngBounds([position]);\r\n\r\n    function addMarker(place) {\r\n      let latLng = new LatLng(place.location.latitude, place.location.longitude);\r\n      let markerOptions: MarkerOptions = { position: latLng };\r\n      if (place.name) {\r\n        markerOptions['title'] = place.name;\r\n      }\r\n      if (place.icon) {\r\n        markerOptions['icon'] = { url: place.icon, size: { width: 24, height: 29 } };\r\n      }\r\n\r\n      bounds.extend(latLng);\r\n      that.map.addMarker(markerOptions).then((marker: Marker) => {\r\n        markers.push(marker);\r\n        marker.addEventListener(GoogleMapsEvent.MARKER_CLICK).subscribe(marker => {\r\n          if (place.location_type) {\r\n            that.setSelectedProperty(place);\r\n          } else {\r\n            that.setSelectedProperty(null);\r\n            marker[1].showInfoWindow();\r\n          }\r\n        });\r\n        marker.addEventListener(GoogleMapsEvent.INFO_CLICK).subscribe(marker => {\r\n          marker[1].hideInfoWindow();\r\n        });\r\n\r\n        if (markers.length === places.length) {\r\n          addedAllMarkers();\r\n        }\r\n      }).catch(e => {\r\n        markers.push(null);\r\n        if (markers.length === places.length) {\r\n          addedAllMarkers();\r\n        }\r\n      });\r\n    }\r\n\r\n    function addedAllMarkers() {\r\n      if (places && places.length > 1) {\r\n        //Adjust zoom level only if we have results \r\n        // that.map.animateCamera({\r\n        //   'target': bounds\r\n        // });\r\n      }\r\n      if (showPropertiesOnMapCallback) {\r\n        showPropertiesOnMapCallback();\r\n      }\r\n    }\r\n\r\n    // Iterate the places and add marker on map \r\n    if (places && places.length > 0) {\r\n      places.forEach((place) => {\r\n        addMarker(place);\r\n      });\r\n    } else {\r\n      if (showPropertiesOnMapCallback) {\r\n        showPropertiesOnMapCallback();\r\n      }\r\n    }\r\n  }\r\n\r\n  getProviders(latLng, serviceInterest: Array<string>, isHousingPropertyNeeded: boolean, callback) {\r\n    let params: IGetNearByPropertiesRequest;\r\n    params = { user_id: this.userService.userObj.user_id, latitude: latLng.lat, longitude: latLng.lng, is_housing_property_needed: isHousingPropertyNeeded };\r\n    if (serviceInterest && serviceInterest.length > 0) {\r\n      params['service_interests'] = serviceInterest;\r\n    }\r\n    this.serviceProviders = [];\r\n    this.housingProviders = [];\r\n    this.providerService.getNearByProperties(params).subscribe((response) => {\r\n      if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS && response.service_providers) {\r\n        this.serviceProviders = response.service_providers || [];\r\n        this.housingProviders = response.housing_providers || [];\r\n        let providers: Array<IBaseProvider> = response.service_providers || [];\r\n        providers = providers.concat(response.housing_providers || []);\r\n        //this.loaderService.dismissLoader();\r\n        if (callback) {\r\n          callback(providers)\r\n        }\r\n      } else {\r\n        //this.loaderService.dismissLoader();\r\n        if (callback) {\r\n          callback([])\r\n        }\r\n      }\r\n    }, error => {\r\n      this.loaderService.dismissLoader();\r\n      this.loaderService.showToaster(error);\r\n    });\r\n  }\r\n\r\n  setSelectedProperty(property) {\r\n    let that = this;\r\n    if (property) {\r\n      that.zone.run(function () {\r\n        that.selectedProperty = Object.assign(property, { selected: true });\r\n      });\r\n    } else {\r\n      if (that.selectedProperty) {\r\n        that.selectedProperty = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  getGooglePlaceNearBySearch(currentPosition: LatLng, goolgePlacesOverlaysOptions, callback): void {\r\n    let that = this;\r\n    let types: Array<string> = [];\r\n\r\n    goolgePlacesOverlaysOptions.forEach((option, index) => {\r\n      types.push(option.type);\r\n    });\r\n\r\n    let params: IGoogleNearByPlacesRequest = {\r\n      lat: currentPosition.lat,\r\n      long: currentPosition.lng,\r\n      radius: CONSTANTS.PLACE_NEAR_BY_SEARCH_MAP_RADIUS,\r\n      types: types\r\n    };\r\n    let placesList = [];\r\n    that.aroundMeService.getNearByPlaces(params).subscribe((response) => {\r\n\r\n      let icons = {\r\n        school: './assets/img/pin-schools.png',\r\n        bank: './assets/img/pin-banks.png',\r\n        convenience_store: './assets/img/pin-grocery-stores.png',\r\n        hospital: './assets/img/pin-healthcare.png',\r\n        restaurant: './assets/img/pin-restaurants.png',\r\n        shopping_mall: './assets/img/pin-shopping.png'\r\n      };\r\n      placesList = response.places;\r\n      placesList.forEach((place) => {\r\n        let iconUrl = place.icon;\r\n        place.types.forEach((types, index) => {\r\n          if (types in icons) {\r\n            iconUrl = icons[types];\r\n          }\r\n        });\r\n        place['icon'] = iconUrl;\r\n        place['location'] = { latitude: place.geometry.location.lat, longitude: place.geometry.location.lng };\r\n      });\r\n      if (callback) {\r\n        callback(placesList);\r\n      }\r\n    }, error => {\r\n      that.loaderService.showToaster(error);\r\n      if (callback) {\r\n        callback(placesList);\r\n      }\r\n    });\r\n  }\r\n\r\n  autocompletePlacesSearch() {\r\n    // console.log(\"Onupdate called \",this.searchLocation.query )\r\n    let that = this, searchObj = null, autocompletePlacesTemp: Array<any> = [];\r\n    if (that.searchLocation.query == '') {\r\n      // Clear results when no input is provided \r\n      that.autocompletePlaces = [];\r\n      return;\r\n    } else if (that.searchLocation.query.length < 3) {\r\n      //To show results till the user clears the input\r\n      return;\r\n    }\r\n    if (!that.isPlaceSelected) {\r\n      searchObj = { input: that.searchLocation.query };\r\n      //, types: ['address'] , componentRestrictions: { country: 'US' }\r\n      that.autoCompleteObserver = that.aroundMeService.getPlacePredictions(searchObj).subscribe((response: any) => {\r\n        console.log(\"Got Response\");\r\n        autocompletePlacesTemp = [];\r\n        let places = response.places.predictions;\r\n        if (places) {\r\n          places.forEach(function (place) {\r\n            autocompletePlacesTemp.push(place);\r\n          });\r\n          // apply result on autocompletePlaces object \r\n          that.zone.run(function () {\r\n            that.autocompletePlaces = autocompletePlacesTemp;\r\n          });\r\n        } else {\r\n          that.autocompletePlaces = [];\r\n        }\r\n      }, error => {\r\n        this.loaderService.showToaster(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  onPlaceSelect(placeDetail): void {\r\n    this.isPlaceSelected = true;\r\n    this.autoCompleteObserver.unsubscribe();\r\n    this.enableMap();\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n\r\n    // console.log('In chooseItem', placeDetail);\r\n    this.aroundMeService.placeDetailById({ place_id: placeDetail.place_id }).subscribe((place: any) => {\r\n      if (place.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        this.currentPosition = new LatLng(place.location.lat, place.location.long);\r\n        this.currentAddress = place.location.address;\r\n        this.searchLocation.query = place.location.address;\r\n        this.pinedLocation.zipcode = place.location.zipcode;\r\n        this.pinedLocation.city = place.location.city;\r\n        this.pinedLocation.state = place.location.state;\r\n        this.pinedLocation.place_id = placeDetail.place_id\r\n        // add marker on map \r\n        this.isPlaceSelected = false;\r\n        this.addMarkerOnMap({ position: this.currentPosition, title: placeDetail.description }, this.addMarkerDone);\r\n      } else {\r\n        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.ADDRESS_NOT_FOUND'));\r\n      }\r\n    }, error => {\r\n      this.loaderService.showToaster(error);\r\n      this.loaderService.dismissLoader();\r\n    });\r\n  }\r\n\r\n\r\n  setPinedLocationModel(placeDetail): void {\r\n    this.pinedLocation.zipcode = '';\r\n    this.pinedLocation.city = '';\r\n    this.pinedLocation.state = '';\r\n    for (let i = 0; i < placeDetail.address_components.length; i++) {\r\n      for (let j = 0; j < placeDetail.address_components[i].types.length; j++) {\r\n        if (placeDetail.address_components[i].types[j] == CONSTANTS.GOOGLE_MAP_PLACE_DETAIL.POSTAL_CODE) {\r\n          this.pinedLocation.zipcode = placeDetail.address_components[i].long_name;\r\n        } else if (placeDetail.address_components[i].types[j] == CONSTANTS.GOOGLE_MAP_PLACE_DETAIL.CITY) {\r\n          this.pinedLocation.city = placeDetail.address_components[i].long_name;\r\n        } else if (placeDetail.address_components[i].types[j] == CONSTANTS.GOOGLE_MAP_PLACE_DETAIL.STATE) {\r\n          this.pinedLocation.state = placeDetail.address_components[i].long_name;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  goToMapOverlaysPage(): void {\r\n    this.navCtrl.push(MapOverlays);\r\n  }\r\n\r\n  loadMapByPinedLocation(pinLocation): void {\r\n    // // console.log('In loadMapByPinedLocation', pinLocation);\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    this.addMarkerOnMap({ position: pinLocation.position, title: pinLocation.address }, this.addMarkerDone);\r\n    this.currentPosition = pinLocation.position;\r\n    this.currentAddress = this.searchLocation.query = pinLocation.address;\r\n  }\r\n\r\n  openPinnedLocation(): void {\r\n    this.navCtrl.push(PinnedLocation);\r\n  }\r\n\r\n  setPinnedLocation(): void {\r\n    this.pinedLocation.position = this.currentPosition;\r\n    this.pinedLocation.address = this.currentAddress || this.searchLocation.query;\r\n    this.pinedLocation.name = '';\r\n    this.navCtrl.push(SetPinnedLocation, { 'selectedlocation': this.pinedLocation });\r\n  }\r\n\r\n  hideKeyboard() {\r\n    // console.log(\"hideKeyboard\");\r\n    this.keyboard.close();\r\n  }\r\n\r\n  disableMap() {\r\n    this.setSelectedProperty(null);\r\n    this.tabMapClass = true;\r\n    this.togglePinnedClass = true;\r\n    if (this.isMapVisible) {\r\n      this.map.setClickable(false);\r\n      this.isMapVisible = false;\r\n    }\r\n  }\r\n\r\n  enableMap() {\r\n    this.autocompletePlaces = [];\r\n    this.keyboard.close();\r\n    setTimeout(() => {\r\n      if (!this.isMapVisible) {\r\n        // setClickable to false when coach marker is on top of map \r\n        if (this.userService.userObj.show_coach_marks.around_me) {\r\n          this.map.setClickable(false);\r\n        } else {\r\n          this.map.setClickable(true);\r\n        }\r\n        this.isMapVisible = true;\r\n      }\r\n      this.togglePinnedClass = false;\r\n      this.tabMapClass = false;\r\n    }, 500);\r\n  }\r\n\r\n  openDetailsView(property: IBaseProperty): void {\r\n    this.navCtrl.push(ProviderDetails, { providerId: property._id, buildingId: property.building_id || '', buildingAddress: property.street_address1 });\r\n  }\r\n\r\n  setMapOverlaySettings() {\r\n    this.aroundMeService.getUserAroundmeSettings({ user_id: this.userService.userObj.user_id }).subscribe((response) => {\r\n      if (response.google_places || response.service_interest) {\r\n        this.aroundMeService.mapOverlays.google_places = response.google_places;\r\n        this.aroundMeService.mapOverlays.service_interest = response.service_interest;\r\n        this.aroundMeService.mapOverlays.provider_overlay = response.provider_overlay;\r\n      }\r\n    });\r\n  }\r\n\r\n  initLanguageUpdateEvent() {\r\n    this.events.subscribe(CONSTANTS.APP_EVENTS.LANGUAGE_UPDATE, () => {\r\n      //this.loadMapByPinedLocation(location); \r\n      this.setMapOverlaySettings();\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/aroundme/aroundme.ts","import { Component } from '@angular/core';\r\nimport { Events, NavController, ItemSliding } from 'ionic-angular';\r\nimport { AroundMeService, IPinLocation } from '../aroundme-service';\r\nimport { UserService, IUser, IHomeAddress } from '../../../providers/user-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { EditLocation } from \"../edit-location/edit-location\";\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: 'page-pinned-location',\r\n  templateUrl: 'pinned-location.html'\r\n})\r\n\r\nexport class PinnedLocation {\r\n  public pinedLocations: Array<IPinLocation>;\r\n  public isPinnedLocationAPICall: boolean = false;\r\n  private userObj: IUser;\r\n  constructor(private userService: UserService, private aroundMeService: AroundMeService, private analyticsService: AnalyticsService, private translateService: TranslateService,\r\n    private events: Events, public navCtrl: NavController, private loaderService: LoaderService) {\r\n    this.pinedLocations = [];\r\n    this.userObj = {\r\n      _id: userService.userObj.user_id\r\n    };\r\n  }\r\n\r\n  loadMapByPinedLocation(pinLocation?: IPinLocation): void {\r\n    this.navCtrl.pop().then(() => {\r\n      this.events.publish(CONSTANTS.APP_EVENTS.ARROUND_YOU_ACTIONS, CONSTANTS.ARROUND_YOU_ACTIONS.SELECT_SAVED_PIN, pinLocation);\r\n    });\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    // console.log('Hello PinnedLocation Page');\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.MY_PINNED_LOCATION);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.MY_PINNED_LOCATION);\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    this.isPinnedLocationAPICall = false;\r\n    this.aroundMeService.getPinedLocations({ user_id: this.userService.userObj.user_id }).subscribe((results: any) => {\r\n      if (results.pin_locations && results.pin_locations.length > 0) {\r\n        results.pin_locations.map((pinedLocation) => {\r\n          pinedLocation['position'] = { lat: pinedLocation.lat, lng: pinedLocation.long };\r\n        });\r\n      }\r\n      this.pinedLocations = results.pin_locations;\r\n      this.pinedLocations.sort(function (a, b) { return (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0); });\r\n      this.isPinnedLocationAPICall = true;\r\n      this.loaderService.dismissLoader();\r\n    }, error => {\r\n      this.loaderService.showToaster(error);\r\n      this.loaderService.dismissLoader();\r\n    });\r\n\r\n    this.loadUserProfile();\r\n  }\r\n\r\n  loadUserProfile() {\r\n    if (this.userService.getUserProfile() !== undefined && this.userService.getUserProfile() !== null) {\r\n      this.userObj = this.userService.getUserProfile();\r\n    } else {\r\n      this.userService.getUserById(this.userObj._id).subscribe((response: any) => {\r\n        if (response.status !== 'ERROR') {\r\n          this.userObj = response.user;\r\n          Object.assign(this.userObj, { _id: this.userObj.user_id });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  edit(pinnedLocation: IPinLocation, slidingItem: ItemSliding, index: number) {\r\n    pinnedLocation.user_id = this.userService.userObj.user_id;\r\n    slidingItem.close();\r\n    this.navCtrl.push(EditLocation, { pinnedLocation: pinnedLocation });\r\n    //navigate to new page for edit address\r\n  }\r\n\r\n  delete(pinnedLocation: IPinLocation, slidingItem: ItemSliding, position: number) {\r\n    slidingItem.close();\r\n    pinnedLocation.user_id = this.userService.userObj.user_id;\r\n    //console.log(pinnedLocation);\r\n    if (pinnedLocation.address_type === 'Home' || pinnedLocation.address_type === 'Work') {\r\n      this.updateUserProfile(pinnedLocation);\r\n    }\r\n    this.aroundMeService.deletePinLocation(pinnedLocation).subscribe((response) => {\r\n      //console.log(response);\r\n      if (response.status == CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        this.pinedLocations.splice(position, 1);\r\n      } else {\r\n        this.loaderService.showToaster(response.message);\r\n      }\r\n    }\r\n    );\r\n  }\r\n\r\n  updateUserProfile(pinedLocation: IPinLocation) {\r\n    let userAddress: IHomeAddress = {\r\n      street_address1: '',\r\n      city: '',\r\n      state: '',\r\n      zipcode: pinedLocation.zipcode,\r\n      place_id: ''\r\n    };\r\n    let pinnedAddress: IUser = { \"_id\": this.userService.userObj.user_id, profile: this.userService.userObj.profile };\r\n    if (pinedLocation.address_type === 'Home') {\r\n      Object.assign(pinnedAddress.profile, { home_address: userAddress });\r\n    } else if (pinedLocation.address_type === 'Work') {\r\n      Object.assign(pinnedAddress.profile, { work_address: userAddress });\r\n    }\r\n    this.userService.updateUserInfo(pinnedAddress).subscribe((res: any) => {\r\n      if (res.status !== 'ERROR') {\r\n        //let userObj = that.userService.getUserProfile();\r\n        this.userObj.profile = pinnedAddress.profile;\r\n        this.userService.setUserProfile(this.userObj);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/aroundme/pinned-location/pinned-location.ts","import { Component, NgZone } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\nimport { AroundMeService, IPinLocation } from '../aroundme-service';\r\nimport { UserService } from '../../../providers/user-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { LatLng, GoogleMap, GoogleMaps, GoogleMapsEvent } from \"@ionic-native/google-maps\";\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\n\r\n@Component({\r\n  selector: 'page-edit-location',\r\n  templateUrl: 'edit-location.html'\r\n})\r\n\r\nexport class EditLocation {\r\n  public pinnedLocation: IPinLocation;\r\n  public autocompletePlaces: any;\r\n  public searchLocation: string;\r\n  //private MAP_ZOOM_LEVEL: number = 15;\r\n  private MAP_ZOOM_START_LEVEL: number = 3;\r\n  private currentPosition: LatLng;\r\n  public map: GoogleMap;\r\n\r\n  constructor(private userService: UserService, private aroundMeService: AroundMeService, private navParams: NavParams,\r\n    private googleMaps: GoogleMaps, private zone: NgZone, private analyticsService: AnalyticsService,\r\n    public navCtrl: NavController, private loaderService: LoaderService) {\r\n    this.pinnedLocation = this.navParams.get('pinnedLocation');\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initMapView()\r\n  }\r\n  ionViewDidLoad() {\r\n    // console.log('Hello PinnedLocation Page');\r\n  }\r\n\r\n\r\n  initMapView() {\r\n\r\n    let that = this;\r\n    let layoutOption = {\r\n      'controls': {\r\n        'compass': false, 'myLocationButton': false, 'indoorPicker': true, 'zoom': false, 'toolbar': false\r\n      },\r\n      'gestures': {\r\n        'scroll': true, 'tilt': true, 'rotate': true, 'zoom': true\r\n      },\r\n      'camera': {\r\n        'latLng': this.pinnedLocation.position, 'tilt': 40, 'zoom': that.MAP_ZOOM_START_LEVEL, 'bearing': 0, 'duration': 2000\r\n      }\r\n    };\r\n    //console.log(this.pinnedLocation.position);\r\n    that.map = that.googleMaps.create('map-location', layoutOption);\r\n    that.map.on(GoogleMapsEvent.MAP_READY).subscribe((map) => {\r\n      //console.log('GoogleMapsEvent.MAP_READY', map);\r\n    });\r\n    that.map.on(GoogleMapsEvent.MAP_CLICK).subscribe((map) => {\r\n      //this.keyboard.close();\r\n    });\r\n\r\n    that.map.on(GoogleMapsEvent.MAP_LONG_CLICK).subscribe((location) => {\r\n      // console.log(\"Map is long clicked.\\n\" + JSON.stringify(location));\r\n      that.currentPosition = location;\r\n      // let params: GeocoderRequest = {\r\n      //   position: { lat: location.lat, lng: location.lng }\r\n      // };\r\n      //that.updateLocationDetailsByPosition(params);\r\n    });\r\n  }\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.EDIT_PINNED_LOCATION);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.EDIT_PINNED_LOCATION);\r\n    this.searchLocation = this.pinnedLocation.address;\r\n    //this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n  }\r\n\r\n  save(pinedLocation: IPinLocation) {\r\n    pinedLocation.user_id = this.userService.userObj.user_id;\r\n    //navigate to saved location page \r\n  }\r\n\r\n  onPlaceSelect(place) {\r\n\r\n  }\r\n  updatePin() {\r\n\r\n  }\r\n\r\n  autocompletePlacesSearch() {\r\n    // console.log(\"Onupdate called \",this.searchLocation.query )\r\n    let that = this, searchObj = null, autocompletePlacesTemp: Array<any> = [];\r\n    if (that.searchLocation == '') {\r\n      // Clear results when no input is provided \r\n      that.autocompletePlaces = [];\r\n      return;\r\n    } else if (that.searchLocation.length < 3) {\r\n      //To show results till the user clears the input\r\n      return;\r\n    }\r\n    searchObj = { input: that.searchLocation };\r\n    //, types: ['address'] , componentRestrictions: { country: 'US' }\r\n    that.aroundMeService.getPlacePredictions(searchObj).subscribe((response: any) => {\r\n      autocompletePlacesTemp = [];\r\n      let places = response.places.predictions;\r\n      if (places) {\r\n        places.forEach(function (place) {\r\n          autocompletePlacesTemp.push(place);\r\n        });\r\n        // apply result on autocompletePlaces object \r\n        that.zone.run(function () {\r\n          that.autocompletePlaces = autocompletePlacesTemp;\r\n        });\r\n      } else {\r\n        that.autocompletePlaces = [];\r\n      }\r\n    }, error => {\r\n      this.loaderService.showToaster(error);\r\n    });\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/aroundme/edit-location/edit-location.ts","import { Component } from '@angular/core';\r\nimport { Events, NavController } from 'ionic-angular'\r\nimport { AroundMeService, IGetMapOverlaysOptions, IUpdateUserAroundmeSettingsRequest } from '../aroundme-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { UserService, IUser } from \"../../../providers/user-service\";\r\nimport { CONSTANTS } from \"../../../shared/config\";\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: 'page-map-overlays',\r\n  templateUrl: 'map-overlays.html'\r\n})\r\nexport class MapOverlays {\r\n  public overlaysOptions: IGetMapOverlaysOptions;\r\n  public userData: IUser;\r\n  constructor(public loaderService: LoaderService, public aroundMeService: AroundMeService, private translateService: TranslateService,\r\n    private analyticsService: AnalyticsService, private userService: UserService, private events: Events, public navCtrl: NavController) {\r\n    this.userData = this.userService.getUser();\r\n    this.setOverlaysOptions();\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    if (!this.aroundMeService.mapOverlays.google_places || !this.aroundMeService.mapOverlays.service_interest) {\r\n      this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n      this.aroundMeService.getUserAroundmeSettings({ user_id: this.userData.user_id }).subscribe((response) => {\r\n        if (response.google_places || response.service_interest) {\r\n          this.aroundMeService.mapOverlays.google_places = response.google_places;\r\n          this.aroundMeService.mapOverlays.service_interest = response.service_interest;\r\n          this.aroundMeService.mapOverlays.provider_overlay = response.provider_overlay;\r\n          this.setOverlaysOptions();\r\n        }\r\n        this.loaderService.dismissLoader();\r\n      });\r\n    }\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.MY_PINNED_LOCATION);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.MY_PINNED_LOCATION);\r\n\r\n  }\r\n\r\n  setOverlaysOptions() {\r\n    this.overlaysOptions = JSON.parse(JSON.stringify(this.aroundMeService.mapOverlays));\r\n  }\r\n\r\n  saveFilter() {\r\n    let mapOverlays = this.overlaysOptions;\r\n    let updateObj: IUpdateUserAroundmeSettingsRequest = {\r\n      user_id: this.userData.user_id,\r\n      google_places: [],\r\n      provider_overlay: [],\r\n      service_interest: []\r\n    };\r\n    mapOverlays.google_places.forEach((self) => {\r\n      if (self.flag) {\r\n        updateObj.google_places.push(self._id);\r\n      }\r\n    });\r\n    mapOverlays.provider_overlay.forEach((self) => {\r\n      if (self.flag) {\r\n        updateObj.provider_overlay.push(self._id);\r\n      }\r\n    });\r\n    mapOverlays.service_interest.forEach((self) => {\r\n      if (self.flag) {\r\n        updateObj.service_interest.push(self._id);\r\n      }\r\n    });\r\n\r\n    this.aroundMeService.updateUserAroundmeSettings(updateObj).subscribe((response) => {\r\n      if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        this.aroundMeService.mapOverlays = this.overlaysOptions;\r\n        this.navCtrl.pop().then(()=>{\r\n          this.events.publish(CONSTANTS.APP_EVENTS.ARROUND_YOU_ACTIONS, CONSTANTS.ARROUND_YOU_ACTIONS.SAVE_FILTER);\r\n        });\r\n        \r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/aroundme/map-overlays/map-overlays.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams, AlertController } from 'ionic-angular';\r\nimport { AroundMeService, IPinLocation } from '../aroundme-service';\r\nimport { UserService, IUser, IHomeAddress } from '../../../providers/user-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n@Component({\r\n  selector: 'page-set-pinned-location',\r\n  templateUrl: 'set-pinned-location.html'\r\n})\r\nexport class SetPinnedLocation {\r\n  public pinedLocation: IPinLocation;\r\n  public AddressType: Array<{name:string,value:string}>;\r\n  public locationName: string;\r\n  private userObj: IUser;\r\n\r\n  constructor(public navCtrl: NavController, private navParams: NavParams, private loaderService: LoaderService, private analyticsService: AnalyticsService,\r\n    private translateService: TranslateService,  \r\n    private userService: UserService, private aroundMeService: AroundMeService, private alertCtrl: AlertController) {\r\n    this.AddressType = [{name:this.translateService.instant(\"AROUND_ME.ADDRESS_TYPE.HOME\"),value:'Home'},\r\n                        {name:this.translateService.instant(\"AROUND_ME.ADDRESS_TYPE.WORK\"),value:'Work'},\r\n                        {name:this.translateService.instant(\"AROUND_ME.ADDRESS_TYPE.OTHER\"),value:'Other'}]\r\n    this.locationName = '';\r\n    this.userObj = {\r\n      _id: userService.userObj.user_id\r\n    };\r\n    this.pinedLocation = this.navParams.get('selectedlocation');\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n\r\n  }\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.SET_PIN_LOCATION);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.SET_PIN_LOCATION);\r\n    if (this.userService.getUserProfile() !== undefined && this.userService.getUserProfile() !== null) {\r\n      this.userObj = this.userService.getUserProfile();\r\n    } else {\r\n      this.loaduserProfileData();\r\n    }\r\n  }\r\n\r\n  loaduserProfileData(): void {\r\n    let that = this;\r\n    this.userService.getUserById(this.userObj._id).subscribe((response: any) => {\r\n      if (response.status !== 'ERROR') {\r\n        this.userObj = response.user;\r\n        Object.assign(this.userObj, { _id: this.userObj.user_id });\r\n      } else {\r\n        let alert = that.alertCtrl.create({\r\n          subTitle: that.translateService.instant('ERROR_MESSAGES.APP_VERSION_UPDATED'),\r\n          buttons: [{\r\n            text: this.translateService.instant('CONVERSATIONS.OK'),\r\n            handler: () => {\r\n              that.userService.logout();\r\n            }\r\n          }],\r\n          enableBackdropDismiss: false,\r\n          cssClass: 'alert-single'\r\n        });\r\n        alert.present();\r\n      }\r\n    }, error => {\r\n      this.loaderService.showToaster(error);\r\n      this.loaderService.dismissLoader();\r\n    })\r\n  }\r\n\r\n\r\n  saveDropPin(): void {\r\n    let that = this;\r\n    //console.log(\" that.pinedLocation.name\", that.pinedLocation);\r\n    if (that.pinedLocation !== undefined && that.pinedLocation.position !== undefined) {\r\n      if (that.locationName !== 'Other') {\r\n        that.pinedLocation.name = that.locationName;\r\n      }\r\n      let params = {\r\n        user_id: that.userObj._id,\r\n        name: that.pinedLocation.name,\r\n        address: that.pinedLocation.address,\r\n        address_type: that.locationName,\r\n        lat: that.pinedLocation.position.lat,\r\n        long: that.pinedLocation.position.lng,\r\n        zipcode: that.pinedLocation.zipcode,\r\n        state: that.pinedLocation.state,\r\n        city: that.pinedLocation.city\r\n      };\r\n      let userAddress: IHomeAddress = that.setUserAddress();\r\n      let pinnedAddress: IUser = { \"_id\": that.userObj._id, profile: that.userObj.profile };\r\n      if (that.pinedLocation.name == 'Home') {\r\n        Object.assign(pinnedAddress.profile, { home_address: userAddress });\r\n      } else if (that.pinedLocation.name == 'Work') {\r\n        Object.assign(pinnedAddress.profile, { work_address: userAddress });\r\n      }\r\n      // // console.log(\"PinnedAddress --->>\", pinnedAddress);\r\n      // if(that.pinedLocation.name)\r\n\r\n      if (that.pinedLocation.name) {\r\n        that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n\r\n        that.userService.updateUserInfo(pinnedAddress).subscribe((res: any) => {\r\n          if (res.status !== 'ERROR') {\r\n            that.loaderService.dismissLoader();\r\n            //let userObj = that.userService.getUserProfile();\r\n            that.userObj.profile = pinnedAddress.profile;\r\n            that.userService.setUserProfile(that.userObj);\r\n            that.aroundMeService.addDropPinLocation(params).subscribe(result => {\r\n              // reset pinked location\r\n              that.pinedLocation = {\r\n                name: '',\r\n                address: '',\r\n                position: { lat: 0, lng: 0 }\r\n              };\r\n            }, error => {\r\n              that.loaderService.showToaster(error);\r\n              that.loaderService.dismissLoader();\r\n            });\r\n            that.navCtrl.pop();\r\n          } else {\r\n            that.loaderService.showToaster(res.messsage);\r\n            that.loaderService.dismissLoader();\r\n          }\r\n        }, error => {\r\n          that.loaderService.dismissLoader();\r\n          that.loaderService.showToaster(error);\r\n        });\r\n      } else {\r\n        let alert = that.alertCtrl.create({\r\n          title: that.translateService.instant('ERROR_MESSAGES.ERROR_TITLE'),          \r\n          subTitle: that.translateService.instant('ERROR_MESSAGES.LOCATION_NAME_BLANK'),\r\n          buttons: [{\r\n            text: this.translateService.instant('MISC.OK')\r\n          }],\r\n          enableBackdropDismiss: false,\r\n          cssClass: 'alert-single'\r\n        });\r\n        alert.present();\r\n      }\r\n    } else {\r\n      let alert = that.alertCtrl.create({\r\n        title: that.translateService.instant('ERROR_MESSAGES.ERROR_TITLE'),\r\n        subTitle: that.translateService.instant('ERROR_MESSAGES.SELECT_LOCATION'),\r\n        buttons: [{\r\n            text: this.translateService.instant('MISC.OK')\r\n          }],\r\n        enableBackdropDismiss: false,\r\n        cssClass: 'alert-single'\r\n      });\r\n      alert.present();\r\n    }\r\n\r\n  }\r\n\r\n\r\n  setUserAddress(): IHomeAddress {\r\n    let userAddress: IHomeAddress = {\r\n      street_address1: '',\r\n      city: '',\r\n      state: '',\r\n      zipcode: '',\r\n      place_id: ''\r\n    };\r\n\r\n    userAddress.street_address1 = this.pinedLocation.address;\r\n\r\n    if (this.pinedLocation.city) {\r\n      userAddress.city = this.pinedLocation.city;\r\n    } else {\r\n      userAddress.city = '';\r\n    }\r\n    if (this.pinedLocation.zipcode) {\r\n      userAddress.zipcode = this.pinedLocation.zipcode;\r\n    } else {\r\n      userAddress.zipcode = '';\r\n    }\r\n    if (this.pinedLocation.state) {\r\n      userAddress.state = this.pinedLocation.state;\r\n    } else {\r\n      userAddress.state = '';\r\n    }\r\n    userAddress.place_id = this.pinedLocation.place_id;\r\n    return userAddress;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/aroundme/set-pinned-location/set-pinned-location.ts","import { Component, OnInit } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\nimport { PendingConfirmation } from \"../pending-confirmation/pending-confirmation\";\r\nimport { CONSTANTS } from \"../../../shared/config\";\r\nimport { IGroup, ChatService } from \"../../conversations/chat-service\";\r\nimport { LoaderService } from \"../../../providers/loader-service\";\r\nimport { PubNubService } from \"../../../providers/pubnub-service\";\r\nimport { IUser, UserService } from \"../../../providers/user-service\";\r\nimport { ProviderService, IProviderDetails, IConnectPMRequest } from \"../provider-service\";\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n\r\n@Component({\r\n      selector: 'page-verify-address',\r\n      templateUrl: 'verify-address.html'\r\n})\r\n\r\nexport class VerifyAddress implements OnInit {\r\n      public providerDetails: IProviderDetails;\r\n      public isAddressValid: boolean;\r\n      public userData: IUser;\r\n      public buildingId: string;\r\n      public buildingAddress: string;\r\n      public buildingName: string;\r\n      public unit: string;\r\n      public isAdvocate: boolean;\r\n      constructor(private loaderService: LoaderService, private navCtrl: NavController, private navParams: NavParams, private userService: UserService,\r\n            private providerService: ProviderService, private analyticsService: AnalyticsService, private translateService: TranslateService,\r\n            public chatService: ChatService, public pubNubService: PubNubService) {\r\n            this.buildingId = this.navParams.get('buildingId');\r\n            this.buildingAddress = this.navParams.get('buildingAddress');\r\n            this.isAdvocate = this.navParams.get('isAdvocate') || false;\r\n            this.providerDetails = this.navParams.get('providerDetails');\r\n            this.isAddressValid = false;\r\n            this.userData = this.userService.getUser();\r\n            this.unit = '';\r\n      }\r\n\r\n      ngOnInit() {\r\n      }\r\n\r\n      ionViewDidEnter() {\r\n            this.userService.setCurrentPage(CONSTANTS.PAGES.VERIFY_ADDRESS);\r\n            this.analyticsService.trackScreenView(CONSTANTS.PAGES.VERIFY_ADDRESS);\r\n      }\r\n      ionViewDidLoad() {\r\n      }\r\n\r\n      verifyHomeAddress() {\r\n            this.providerDetails.verification_status = CONSTANTS.VERIFICATION_STATUS.UNVERIFIED;\r\n            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n            this.openGroupChatBox(this.providerDetails, () => {\r\n                  let request: IConnectPMRequest;\r\n                  request = {\r\n                        user_id: this.userData.user_id,\r\n                        provider_location_id: this.providerDetails._id,\r\n                        building_id: this.buildingId,\r\n                        building_address: this.buildingAddress,\r\n                        unit: this.unit,\r\n                        first_name: this.userData.profile.first_name,\r\n                        last_name: this.userData.profile.last_name,\r\n                        is_advocate: this.isAdvocate\r\n                  }\r\n                  this.providerService.connectToPropertyManager(request).subscribe((response) => {\r\n                        if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n                              this.loaderService.dismissLoader();\r\n                              this.navCtrl.push(PendingConfirmation);\r\n                        } else {\r\n                              this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n                        }\r\n                  });\r\n            });\r\n      }\r\n\r\n      openGroupChatBox(providerDetails: IProviderDetails, connectToPropertyManagerCallback) {\r\n            let that = this, groupObject: IGroup, memberIds: Array<string> = [];\r\n            that.pubNubService.getTimeToken((timestamp) => {\r\n\r\n                  if (providerDetails.provider_details) {\r\n                        providerDetails.provider_details.forEach(provider => {\r\n                              memberIds.push(provider._id);\r\n                        });\r\n                  }\r\n                  groupObject = {\r\n                        user_id: that.userData.user_id,\r\n                        name: providerDetails.public_name,\r\n                        shared_channel: that.userData.user_id + '_' + providerDetails._id,\r\n                        members: memberIds,\r\n                        type: CONSTANTS.CONVERSATION_TYPE.GROUP,\r\n                        joining_time_token: timestamp,\r\n                        leaving_time_token: null,\r\n                        group_type: CONSTANTS.USER_TYPE.HOUSING_PROVIDER,\r\n                        user_name: that.userData.user_name,\r\n                        created_by: that.userData.user_id,\r\n                        profile_pic: providerDetails.profile_pic,\r\n                        resident_profile_pic: that.userData.profile.profile_pic,\r\n                        is_advocate: this.isAdvocate,\r\n                        verification_address: this.providerDetails.location.street_address1 + ' . Unit: ' + this.unit,\r\n                        location_id: providerDetails._id\r\n                  };\r\n                  that.chatService.createOrEditConversation(groupObject, false).subscribe((result) => {\r\n                        if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n                              let messagePrefixStr;\r\n                              if (this.isAdvocate) {\r\n                                    messagePrefixStr = CONSTANTS.MESSAGES.ADVOCATE_VERIFICATION_PREFIX;\r\n                              } else {\r\n                                    messagePrefixStr = CONSTANTS.MESSAGES.VERIFICATION_PREFIX;\r\n                              }\r\n                              let addressStr = that.providerDetails.location.street_address1;\r\n                              if (that.unit.trim().length > 0) {\r\n                                    addressStr += ' . Unit: ' + that.unit;\r\n                              }\r\n\r\n                              that.providerService.sendInvitationMessageToAdmin(groupObject, messagePrefixStr, addressStr);\r\n                              if (groupObject.members && groupObject.members.length > 0) {\r\n                                    that.pubNubService.setUserStateGroup(groupObject.members, CONSTANTS.USER_STATES.VERIFICATION_REQUEST,\r\n                                          groupObject.shared_channel, groupObject.name);\r\n                              }\r\n                              if (that.pubNubService.pushNotificationChannels.indexOf(groupObject.shared_channel) === -1) {\r\n                                    that.pubNubService.setPushNotificationChannels([groupObject.shared_channel]);\r\n                                    if (!!that.userService.userObj.notification_enabled) {\r\n                                          that.pubNubService.registerDevice([groupObject.shared_channel], that.userService.deviceToken, that.userService.pushPlatform);\r\n                                    }\r\n                              }\r\n                              if (connectToPropertyManagerCallback) {\r\n                                    connectToPropertyManagerCallback();\r\n                              }\r\n                        } else {\r\n                              that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n                              that.loaderService.dismissLoader();\r\n                        }\r\n                  }, error => {\r\n                        that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n                        that.loaderService.dismissLoader();\r\n                  });\r\n            });\r\n      }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/aroundme/verify-address/verify-address.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\nimport { IProviderDetails, ProviderService, IDisconnectPropertyRequest } from \"../provider-service\";\r\nimport { CONSTANTS } from \"../../../shared/config\";\r\nimport { IUpdateProviderConnectionRequestParams, ChatService } from \"../../conversations/chat-service\";\r\nimport { LoaderService } from \"../../../providers/loader-service\";\r\nimport { UserService } from \"../../../providers/user-service\";\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { PubNubService } from \"../../../providers/pubnub-service\";\r\n\r\n\r\n@Component({\r\n  selector: 'page-discontinued-property',\r\n  templateUrl: 'discontinued-property.html'\r\n})\r\nexport class DiscontinuedProperty {\r\n  buildingId: string;\r\n  buildingAddress: string;\r\n  providerDetails: IProviderDetails;\r\n  constructor(public navCtrl: NavController, private navParams: NavParams, private chatService: ChatService,\r\n    private analyticsService: AnalyticsService, private translateService: TranslateService, public pubNubService: PubNubService,\r\n    private loaderService: LoaderService, private providerService: ProviderService, private userService: UserService) {\r\n    this.buildingId = this.navParams.get('buildingId');\r\n    this.buildingAddress = this.navParams.get('buildingAddress');\r\n    this.providerDetails = this.navParams.get('providerDetails');\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.DISCONTINUE_PROPERTY);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.DISCONTINUE_PROPERTY);\r\n  }\r\n\r\n  disconnect() {\r\n    let that = this;\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    if (that.providerDetails.verification_status === CONSTANTS.VERIFICATION_STATUS.UNVERIFIED) {\r\n      if (!this.providerDetails.conversation) {\r\n        this.providerService.findPropertyById({ _id: that.providerDetails._id, user_id: this.userService.userObj.user_id, building_id: this.buildingId }).subscribe((response) => {\r\n          if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n            //this.providerDetails = response.property[0];\r\n            //this.providerDetails.conversation = response.property[0].conversation;\r\n            Object.assign(this.providerDetails, { conversation: response.property[0].conversation });\r\n            //TODO - Add event in the portal to handle this Added a temp fix for managing change in verfication state \r\n            if (response.property[0].verification_status === CONSTANTS.VERIFICATION_STATUS.UNVERIFIED) {\r\n              this.disconnectUnverified();\r\n            } else {\r\n              this.disconnectVerified();\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        this.disconnectUnverified();\r\n      }\r\n    } else {\r\n      this.disconnectVerified();\r\n    }\r\n  }\r\n\r\n  disconnectUnverified() {\r\n    let updateGroupRequest: IUpdateProviderConnectionRequestParams;\r\n    let disconnectRequest: IDisconnectPropertyRequest;\r\n    let that = this;\r\n    updateGroupRequest = {\r\n      shared_channel: this.providerDetails.conversation.shared_channel,\r\n      user_id: this.providerDetails.conversation.user_id,\r\n      connection_status: CONSTANTS.CONNECTION_STATUS.IGNORE,\r\n      is_advocate: this.providerDetails.is_advocate\r\n    }\r\n    this.chatService.updateProviderConnectionStatus(updateGroupRequest).subscribe((response) => {\r\n      if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        disconnectRequest = {\r\n          user_id: that.providerDetails.conversation.user_id,\r\n          provider_location_id: that.providerDetails._id,\r\n          building_id: that.buildingId,\r\n          building_address: that.buildingAddress,\r\n          is_address_verified: false,\r\n          is_disconnect: true,\r\n          is_advocate: that.providerDetails.is_advocate,\r\n          unit: that.providerDetails.resident_unit || ''\r\n        }\r\n        that.notifyAdmin();\r\n        that.providerService.updatePeopleLiveInProperty(disconnectRequest).subscribe((disconnectResponse) => {\r\n          that.loaderService.dismissLoader();\r\n          if (disconnectResponse.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n            that.providerDetails.verification_status = undefined;\r\n            that.userService.isProfileUpdate = true;\r\n            that.navCtrl.pop();            \r\n          } else {\r\n            that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n          }\r\n        });\r\n      } else {\r\n        that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n        that.loaderService.dismissLoader();\r\n      }\r\n    });\r\n  }\r\n\r\n  notifyAdmin() {\r\n    let membersList: Array<string>  = [];\r\n    this.providerDetails.conversation.members.forEach((member) => {\r\n      membersList = membersList.concat(member.user_id);\r\n    }\r\n    );\r\n    this.pubNubService.setUserStateGroup(membersList, CONSTANTS.USER_STATES.VERIFICATION_CANCEL, this.providerDetails.conversation.shared_channel,\r\n      this.providerDetails.conversation.name);\r\n  }\r\n\r\n  disconnectVerified() {\r\n    let that = this;\r\n    let disconnectRequest: IDisconnectPropertyRequest;\r\n    disconnectRequest = {\r\n      user_id: that.userService.userObj.user_id,\r\n      provider_location_id: that.providerDetails._id,\r\n      building_id: that.buildingId,\r\n      building_address: that.buildingAddress,\r\n      is_address_verified: false,\r\n      is_disconnect: true,\r\n      is_advocate: that.providerDetails.is_advocate,\r\n      unit: that.providerDetails.resident_unit || ''\r\n    }\r\n    that.providerService.updatePeopleLiveInProperty(disconnectRequest).subscribe((disconnectResponse) => {\r\n      that.loaderService.dismissLoader();\r\n      if (disconnectResponse.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        that.providerDetails.verification_status = undefined;\r\n        that.userService.isProfileUpdate = true;\r\n        that.navCtrl.pop();\r\n      } else {\r\n        that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n      }\r\n    });\r\n  }\r\n\r\n  cancelDisconnect() {\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/aroundme/discontinued-property/discontinued-property.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { NavController, NavParams, Events, Content, AlertController } from 'ionic-angular';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\nimport { PublicProfile } from './../public-profile/public-profile';\r\nimport { ChatBox } from '../../conversations/chat-box/chat-box';\r\nimport { Conversations } from '../../conversations/conversations';\r\nimport { GroupChat } from '../group-chat/group-chat';\r\nimport { ConnectionList } from '../connection-list';\r\nimport { UserService, IUser } from '../../../providers/user-service';\r\nimport { PubNubService } from '../../../providers/pubnub-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\n\r\nimport { ChatService, IConversation, IGetUserConversationRequest, ISearchConversationRequest, IGetUserConversationResponse } from '../chat-service';\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: 'page-new-message',\r\n  templateUrl: 'new-message.html',\r\n})\r\nexport class NewMessage {\r\n\r\n  public placeholderIamges = CONSTANTS.PLACEHOLDER_IMAGES;\r\n  public connectionStatus = CONSTANTS.CONNECTION_STATUS;\r\n  public connectedUsersList: Array<IConversation>;\r\n  public otherUsersList: Array<IConversation>;\r\n  public searchStr: string;\r\n  private connectionList: ConnectionList;\r\n  private userData: IUser;\r\n  private publicProfile: PublicProfile;\r\n  @ViewChild(Content) content: Content;\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, private userService: UserService, public chatService: ChatService,\r\n    public pubNubService: PubNubService, public loaderService: LoaderService, public events: Events, private alertCtrl: AlertController,\r\n    private translateService: TranslateService,\r\n    public analyticsService: AnalyticsService, private keyboard: Keyboard) {\r\n    this.connectionList = new ConnectionList(chatService, pubNubService, translateService, loaderService);\r\n    this.userData = this.userService.getUser();\r\n    this.connectedUsersList = [];\r\n    this.searchStr = '';\r\n    this.publicProfile = new PublicProfile(navCtrl, navParams, userService, chatService, loaderService, pubNubService, translateService, analyticsService, events, alertCtrl);\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.NEW_MESSAGE);\r\n\r\n    this.inItUserList();\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    this.initPresence();\r\n  }\r\n\r\n  ionViewWillUnload() {\r\n    // console.log(\"new-message- Looks like I'm about to ionViewWillUnload :(\");\r\n    this.events.unsubscribe(CONSTANTS.APP_EVENTS.NEW_MSG_PRESENCE_EVENT);\r\n  }\r\n\r\n  inItUserList(showLoader: boolean = true) {\r\n    let params: IGetUserConversationRequest = { user_id: this.userData.user_id, is_group_data_needed: false };\r\n    if (showLoader) {\r\n      this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    }\r\n\r\n    this.connectionList.getUserList(params, (error, response: IGetUserConversationResponse) => {\r\n      let otherUsersList = [];\r\n      this.connectedUsersList = response.connected;\r\n      otherUsersList = response.invitation_sent || [];\r\n      otherUsersList = otherUsersList.concat(response.invitation_received);\r\n      this.otherUsersList = otherUsersList;\r\n      this.connectionList.updatePresenceStatus(this.connectedUsersList);\r\n      this.loaderService.dismissLoader();\r\n    });\r\n  }\r\n\r\n  initPresence() {\r\n    this.events.subscribe(CONSTANTS.APP_EVENTS.NEW_MSG_PRESENCE_EVENT, (presence) => {\r\n      //let presenceObj = presence[0];\r\n      //console.log('In NewMessage subscribePresenceEvent[ action - ' + presence.action + ']', presence);\r\n      if ((presence.action == 'state-change' && presence.state !== undefined && presence.channel === this.userService.userObj.user_id)\r\n        && (presence.state.action == CONSTANTS.USER_STATES.CONNECTION_STATUS_CHANGED && (presence.state.connection_status === CONSTANTS.CONNECTION_STATUS.INVITED\r\n          || presence.state.connection_status === CONSTANTS.CONNECTION_STATUS.CONNECTED\r\n          || presence.state.connection_status === CONSTANTS.CONNECTION_STATUS.IGNORE))) {\r\n        // console.log('Called CONSTANTS.APP_EVENTS.NEW_MSG_PRESENCE_EVENT ');\r\n        this.inItUserList(false);\r\n      } else {\r\n        //Set user online status.\r\n        this.connectedUsersList.map((user, index) => {\r\n          if (presence.uuid === user.user_id && presence.actualChannel === user.user_id + \"present-pnpres\") {\r\n            if (presence.action == \"join\") {\r\n              user.presence = \"online\";\r\n            }\r\n            else if (presence.action == \"leave\") {\r\n              user.presence = \"\";\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  navigateToConversationPage(): void {\r\n    this.searchStr = '';\r\n    this.navCtrl.setRoot(Conversations)\r\n  }\r\n\r\n  searchUser(): void {\r\n    // set val to the value of the searchbar\r\n    let searchStr = this.searchStr;\r\n    // if the value is an empty string don't filter the items\r\n    if (searchStr && searchStr.trim() != '') {\r\n      let params: ISearchConversationRequest = { user_id: this.userData.user_id, search_by: searchStr };\r\n      this.connectedUsersList = [];\r\n      this.otherUsersList = [];\r\n      this.connectionList.searchConversation(params, (error, response: IGetUserConversationResponse) => {\r\n        this.connectedUsersList = response.connected;\r\n        this.otherUsersList = response.otherUsersList;\r\n        this.connectionList.updatePresenceStatus(this.connectedUsersList);\r\n      });\r\n    } else {\r\n      this.inItUserList(false);\r\n    }\r\n  }\r\n\r\n  openConversation(conversation: IConversation) {\r\n    //console.log('openConversation', conversation.connection_status);\r\n    conversation.type = CONSTANTS.CONVERSATION_TYPE.SINGLE;\r\n    switch (conversation.connection_status) {\r\n      case CONSTANTS.CONNECTION_STATUS.INVITED:\r\n        this.viewSentInvite(conversation);\r\n        break;\r\n      case CONSTANTS.CONNECTION_STATUS.INVITATION_RECEIVED:\r\n        this.viewReceivedInvite(conversation);\r\n        break;\r\n      case CONSTANTS.CONNECTION_STATUS.CONNECTED:\r\n      case CONSTANTS.CONNECTION_STATUS.CONNECTED_BLOCKED:\r\n        this.openChatBox(conversation);\r\n        break;\r\n    }\r\n  }\r\n\r\n  inviteOrCancelInvite(conversation: IConversation, position: number) {\r\n    conversation.type = CONSTANTS.CONVERSATION_TYPE.SINGLE;\r\n    this.publicProfile.inviteOrCancelInvite(conversation, true, () => {\r\n      if (conversation.connection_status === CONSTANTS.CONNECTION_STATUS.NOT_CONNECTED && this.searchStr.trim().length === 0) {\r\n        this.otherUsersList.splice(position, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  viewSentInvite(conversation: IConversation) {\r\n    this.navCtrl.push(ChatBox, { user: conversation });\r\n  }\r\n\r\n  viewReceivedInvite(conversation: IConversation) {\r\n    this.navCtrl.push(PublicProfile, { user: conversation });\r\n  }\r\n\r\n  openChatBox(conversation: IConversation) {\r\n    this.navCtrl.push(ChatBox, { user: conversation }).then(() => {\r\n      this.navCtrl.remove((this.navCtrl.length() - 2), 1);\r\n    });\r\n  }\r\n\r\n  createNewGroup() {\r\n    this.searchStr = '';\r\n    this.navCtrl.push(GroupChat);\r\n  }\r\n\r\n  hideKeyboard() {\r\n    this.keyboard.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversations/new-message/new-message.ts","export var ENVIRONMENT = {\r\n    APP_BASE_URL: 'https://rezility-qa.herokuapp.com',\r\n    APP_VERSION: '1.7.2 ',\r\n    APP_VERSION_DISPLAY: '1.7.2 (QA-127)',\r\n    PUBNUB_KEYS: {\r\n        PUBLISH_KEY: 'pub-c-be48fa19-969b-4619-82c7-f1c3e40eaef3',\r\n        SUBSCRIBE_KEY: 'sub-c-45fc1ec6-357e-11e7-887b-02ee2ddab7fe'\r\n    },\r\n    GOOGLE_ANALYTICS_TRACKING_ID: 'UA-98874270-1',\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/environment.ts","import { Injectable } from '@angular/core';\r\nimport { ENVIRONMENT } from '../../shared/environment';\r\nimport { HttpService } from '../../providers/http-service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport { IGenericResponse } from \"../aroundme/aroundme-service\";\r\nimport { IBranch } from '../../providers/user-service';\r\n@Injectable()\r\nexport class ActivityService {\r\n    httpService: HttpService;\r\n    constructor(httpClient: HttpService) {\r\n        this.httpService = httpClient;\r\n    }\r\n\r\n    getActivityFeeds(params: IGetActivityFeedsParams): Observable<IGetActivityFeedsResponse> {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/activityfeeds/findbyuserid';\r\n        return this.httpService.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    submitPoll(params: ISubmitPollParams): Observable<any> {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/activityfeeds/votepoll';\r\n        return this.httpService.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    updateActionTakenCount(params: IUpdateActionTakenCountParams): Observable<any> {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/rezpolls/updateactiontakencount';\r\n        return this.httpService.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    updateFeedLike(params: ILikeFeedParams) {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/activityfeeds/likefeed';\r\n        return this.httpService.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    shareFeed(params: IShareFeedRequest) {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/rezpolls/sharefeed';\r\n        return this.httpService.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    getUserSegments(params: IGetUserSegmentRequest) {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/usersegments/findbyuserid';\r\n        return this.httpService.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    getImageLibraryData(organization_id: string, imageType: string): Observable<any> {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/servicelocations/getorganizationimages';\r\n        return this.httpService.post(url, { organization_id: organization_id, action_type: imageType }).map((res: any) => res.json());\r\n    }\r\n\r\n    createFeed(data: ICreateFeed) {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/activityfeeds';\r\n        return this.httpService.post(url, data).map((res: any) => res.json());\r\n    }\r\n\r\n    createPollFeed(data: ICreatePollFeed) {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/rezpolls';\r\n        return this.httpService.post(url, data).map((res: any) => res.json());\r\n    }\r\n\r\n    refreshTarget(data) {\r\n        Object.assign(data, { is_only_target_needed: true })\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/usersegments';\r\n        return this.httpService.post(url, data).map((res: any) => res.json());\r\n    }\r\n\r\n}\r\n\r\nexport interface IPageState {\r\n    pageNumber: number,\r\n    pageSize: number,\r\n    total: number\r\n}\r\n\r\nexport interface IActivityFeed {\r\n    _id: string;\r\n    user_id: string;\r\n    sender_ref_id: string;\r\n    source: string;\r\n    type: string;\r\n    template: string;\r\n    header: {\r\n        leftIconUrl: string,\r\n        leftIconName: string,\r\n        title: string,\r\n        bgImageUrl: string\r\n    };\r\n    body: {\r\n        headLineText: string;\r\n        imageUrl: string;\r\n        detailText: string;\r\n        question: string;\r\n        optionType: string;\r\n        options: Array<IActivityFeedOption>;\r\n        temp_answer?: Array<string>;\r\n        answer: Array<string>;\r\n    };\r\n    actionButtonName: string;\r\n    openIn: string;\r\n    openInUrl: string;\r\n    status: number\r\n    timestampAgo: string;\r\n    timestamp: Date;\r\n    segmentName: string;\r\n    user_segment: string;\r\n    refferal_id: string;\r\n    is_multiselect: boolean;\r\n    is_action_taken: boolean;\r\n    actions: number;\r\n    total_actions: number\r\n    is_allow_conversation: boolean;\r\n    profile_attributes: string;\r\n    shared_channel: string;\r\n    rezfeed_id: string;\r\n    created_at?: Date;\r\n    updated_at?: Date;\r\n    created_by?: string;\r\n    updated_by: string;\r\n    sender_contact: string;\r\n    is_like?: boolean;\r\n    branch_id?: string;\r\n    building_id?: string;\r\n    total_likes?: number;\r\n    is_system_feed?: boolean;\r\n    lowData?: boolean;\r\n    isReading?: boolean;\r\n    service_request_id? : string;\r\n}\r\n\r\nexport interface IActivityFeedOption {\r\n    id?: string;\r\n    text?: string;\r\n    vote?: number;\r\n    name?: string;\r\n    selected?: boolean;\r\n}\r\n\r\nexport interface IGetActivityFeedsParams {\r\n    user_id: string;\r\n    per_page: number;\r\n    page_number: number;\r\n}\r\n\r\nexport interface IGetActivityFeedsResponse {\r\n    status: string;\r\n    per_page: number;\r\n    page_number: number;\r\n    total: number;\r\n    activityfeed: Array<IActivityFeed>\r\n}\r\n\r\nexport interface ISubmitPollParams {\r\n    _id: string;\r\n    user_id: string;\r\n    answer_option: Array<string>;\r\n    template: string;\r\n    profile_attributes: string;\r\n    action_type: string;\r\n    feed_title: string;\r\n}\r\n\r\nexport interface IUpdateActionTakenCountParams {\r\n    rezfeed_id: string;\r\n    user_id: string;\r\n    action_type: string;\r\n    feed_title: string;\r\n}\r\n\r\nexport interface ILikeFeedParams extends IUpdateActionTakenCountParams {\r\n    is_like: boolean;\r\n    feed_title: string;\r\n}\r\n\r\nexport interface ILikeFeedResponse extends IGenericResponse {\r\n    total_likes: number;\r\n}\r\n\r\nexport interface IShareFeedRequest {\r\n    rezfeed_id: string;\r\n    user_id: string;\r\n    receiver_id: Array<string>;\r\n    feed_title: string;\r\n}\r\n\r\nexport interface IGetUserSegmentRequest {\r\n    branch_id: string;\r\n    user_id: string;\r\n    user_type: string;\r\n}\r\n\r\nexport interface IUserSegment {\r\n    _id: string;\r\n    name: string;\r\n    targets?: string;\r\n    segment_category ?: string;\r\n    parent_feed_id?: string;\r\n    type?: string;\r\n    label?: string;\r\n    id?: string;\r\n    value?: any;\r\n}\r\n\r\nexport interface IFeedTemplate {\r\n    _id?: string,\r\n    user_segment: string,\r\n    template?: string,\r\n    header?: {\r\n        leftIconUrl?: string,\r\n        leftIconName?: string,\r\n        title?: string,\r\n        bgImageUrl?: string\r\n    },\r\n    body?: {\r\n        headLineText: string,\r\n        detailText: string,\r\n        imageUrl: string,\r\n        question?: string,\r\n        optionType?: string,\r\n        options?: {\r\n            id: string,\r\n            text: string,\r\n            vote: number\r\n        },\r\n        answer?: Array<string>\r\n    },\r\n    // user_id?: string,\r\n    //poll_id?: string,\r\n    source?: string,\r\n    type?: string,\r\n    // openIn?: string,\r\n    openInUrl?: string,\r\n    //status?: number,\r\n    //timestampAgo?: string,\r\n    timestamp?: string,\r\n    poll?: IPollInfo\r\n    profile_attributes?: string,\r\n    is_allow_conversation?: boolean,\r\n    scheduled_date?: Date,\r\n    is_edit_feed?: boolean\r\n}\r\n\r\nexport interface ICreateFeed extends IFeedTemplate {\r\n    organization_id?: string,\r\n    branch_id?: IBranch,\r\n    feed_owner_id?: string,\r\n    created_by?: string,\r\n    sender_ref_id?: string,\r\n    is_campaign_feed?: boolean,\r\n    parent_feed_id?: string\r\n}\r\n\r\nexport interface ICreatePollFeed extends IPollInfo {\r\n    organization_id?: string,\r\n    branch_id?: IBranch,\r\n    feed_owner_id?: string,\r\n    created_by?: string,\r\n    sender_ref_id?: string,\r\n    is_campaign_feed?: boolean,\r\n    parent_feed_id?: string\r\n}\r\n\r\nexport interface IPlacementInfo {\r\n    title?: string,\r\n    description?: string,\r\n    url?: string,\r\n    allowConversation?: boolean\r\n}\r\n\r\nexport interface IPollInfo {\r\n    question?: string,\r\n    answer_options?: Array<string>,\r\n    is_multiselect?: boolean\r\n    count_answer_option?: number\r\n    user_segment?: string,\r\n    template?: string,\r\n    scheduled_date?: Date,\r\n    is_edit_feed?: boolean\r\n}\r\n\r\nexport interface IScheduledInfo {\r\n    selectedScheduled?: string,\r\n    scheduledDate?: any,\r\n    scheduledTime?: any,\r\n    isSubmit:boolean\r\n}\r\n// export interface IUserSegmentAlert extends IUserSegment {\r\n//     label?: string;\r\n//     id?: string;\r\n//     value?: any;\r\n// }\n\n\n// WEBPACK FOOTER //\n// ./src/pages/activity/activity-service.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\nimport { IConversation } from '../chat-service';\r\nimport { ChatBox } from '../chat-box/chat-box';\r\nimport { UserService, IUser } from '../../../providers/user-service';\r\nimport { ConnectionList } from '../connection-list';\r\nimport { ChatService, IUpdateProviderConnectionRequestParams, IMessage } from '../chat-service';\r\nimport { PubNubService, IConnectionStatusChangeState } from '../../../providers/pubnub-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: 'page-housing-provider-options',\r\n  templateUrl: 'housing-provider-options.html'\r\n})\r\nexport class HousingProviderOptions {\r\n  public selectedUser: IConversation;\r\n  //public groupDetails: IConversation;\r\n  public userData: IUser;\r\n  // public groupChannel: string;\r\n  // public groupName: string;\r\n  // public groupOwner: string;\r\n  // public memberIndex: number;\r\n  public connectionStatus = CONSTANTS.CONNECTION_STATUS;\r\n  private connectionList: ConnectionList;\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, private userService: UserService,\r\n    private chatService: ChatService, private loaderService: LoaderService, private pubNubService: PubNubService,\r\n    private translateService: TranslateService, private analyticsService: AnalyticsService) {\r\n    this.connectionList = new ConnectionList(chatService, pubNubService, translateService, loaderService);\r\n    this.userData = this.userService.getUser();\r\n    this.selectedUser = this.navParams.get('user');\r\n    //this.groupDetails = this.navParams.get('groupDetails');\r\n    //this.memberIndex = this.navParams.get('memberIndex');\r\n\r\n    // if (this.groupDetails) {\r\n    //   this.groupChannel = this.groupDetails.shared_channel;\r\n    //   this.groupName = this.groupDetails.name;\r\n    //   this.groupOwner = this.groupDetails.created_by;\r\n    //   this.selectedUser.receiver_id = this.selectedUser.created_by;\r\n    // }\r\n\r\n    //console.log('In ViewInvite this.selectedUser ', this.selectedUser);\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.PUBLIC_PROFILE);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.PUBLIC_PROFILE);\r\n  }\r\n\r\n  onAcceptAndConnect() {\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    this.updateProviderConnection(CONSTANTS.CONNECTION_STATUS.CONNECTED, () => {\r\n      let params = { user_id: this.selectedUser.created_by, action: 'accept', is_advocate: this.selectedUser.is_advocate };\r\n      this.chatService.updateVerificationRequest(params).subscribe((result) => {\r\n        this.loaderService.dismissLoader();\r\n        if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n          this.pubNubService.getTimeToken((pubnubtimestoken) => {\r\n            // Update Joining date as accepted date\r\n            //this.selectedUser.joining_time_token = pubnubtimestoken;\r\n            this.selectedUser.connection_status = CONSTANTS.CONNECTION_STATUS.CONNECTED;\r\n            this.selectedUser.verification_status = CONSTANTS.VERIFICATION_STATUS.VERIFIED;\r\n\r\n            this.sendMessageOnPubnub('accept');\r\n            let stateObj: IConnectionStatusChangeState = {\r\n              _id: this.selectedUser.shared_channel,\r\n              name: this.selectedUser.user_name,\r\n              connection_status: CONSTANTS.CONNECTION_STATUS.CONNECTED,\r\n              connection_action: CONSTANTS.CONNECTION_STATUS.CONNECTED,\r\n              action: CONSTANTS.USER_STATES.CONNECTION_STATUS_CHANGED,\r\n              connection_type: this.selectedUser.type\r\n            };\r\n            this.pubNubService.setConnectionStatusChangeState(stateObj, [this.selectedUser.created_by]);\r\n            this.openChatBox(this.selectedUser);\r\n          });\r\n        } else {\r\n          this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  sendMessageOnPubnub(type) {\r\n    let messageStr = '';\r\n    //TODO - Temporary fix for getting address for housing provider. \r\n    let addressStr = this.selectedUser['home_address'] = this.selectedUser.latestMessage.substring(24);\r\n    if (type === 'accept') {\r\n      messageStr = CONSTANTS.MESSAGES.ACCEPTED_POSTFIX;\r\n    } else if (type === 'deny') {\r\n      messageStr = CONSTANTS.MESSAGES.DENY_PREFIX;\r\n    }\r\n\r\n    if (messageStr && messageStr.length === 0) { return; }\r\n    this.pubNubService.getSupportedLanguageMsg(messageStr).subscribe((msgContent) => {\r\n\r\n      // Concat original address and translated message for all supported languages (REZ-2392)\r\n      for (const langKey in msgContent) {\r\n        if (msgContent.hasOwnProperty(langKey)) {\r\n          if (type === 'accept') {\r\n            msgContent[langKey] = addressStr + ' ' + msgContent[langKey];\r\n          } else {\r\n            msgContent[langKey] = msgContent[langKey] + ' ' + addressStr;\r\n          }\r\n        }\r\n      }\r\n\r\n      let coreMessageObj: IMessage = {\r\n        content: msgContent,\r\n        sender_uuid: this.userData.user_id,\r\n        image: '',\r\n        receiver_uuid: this.selectedUser.shared_channel,\r\n        shared_channel: this.selectedUser.shared_channel,\r\n        timetoken: this.selectedUser.joining_time_token,\r\n        tags_array: [],\r\n        video: '',\r\n        is_group: true,\r\n        content_type_id: CONSTANTS.MESSAGE_CONTENT_TYPE_ID.SYSTEM_MESSAGE_TO_ALL\r\n      };\r\n      this.pubNubService.publish(coreMessageObj.shared_channel, coreMessageObj).subscribe((event) => {\r\n        //console.log('In sendInvitationMessageToAdmin Publish message', coreMessageObj, event);\r\n      });\r\n    }, error => {\r\n      this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n    });\r\n  }\r\n\r\n  onDeny() {\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    this.updateProviderConnection(CONSTANTS.CONNECTION_STATUS.IGNORE, () => {\r\n      this.onDisconnectFromAddress('deny');\r\n    });\r\n  }\r\n\r\n  onDisconnectFromAddress(action: string = 'disconnect') {\r\n    let params = { user_id: this.selectedUser.created_by, action: action, is_advocate: this.selectedUser.is_advocate };\r\n    this.chatService.updateVerificationRequest(params).subscribe((result) => {\r\n      this.loaderService.dismissLoader();\r\n      if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        this.pubNubService.getTimeToken((pubnubtimestoken) => {\r\n          // Update Joining date as accepted date\r\n          this.selectedUser.joining_time_token = pubnubtimestoken;\r\n          this.selectedUser.connection_status = CONSTANTS.CONNECTION_STATUS.IGNORE;\r\n\r\n          // send message on Pubnub\r\n          if (action === 'deny') {\r\n            this.sendMessageOnPubnub(action);\r\n          }\r\n          let stateObj: IConnectionStatusChangeState = {\r\n            _id: this.selectedUser.shared_channel,\r\n            name: this.selectedUser.user_name,\r\n            connection_status: CONSTANTS.CONNECTION_STATUS.IGNORE,\r\n            connection_action: CONSTANTS.CONNECTION_STATUS.IGNORE,\r\n            action: CONSTANTS.USER_STATES.CONNECTION_STATUS_CHANGED\r\n          };\r\n          this.pubNubService.setConnectionStatusChangeState(stateObj, [this.selectedUser.created_by]);\r\n        });\r\n        this.loaderService.showToaster(CONSTANTS.RESPONSE_STATUS.SUCCESS, result.message);\r\n        this.navCtrl.pop();\r\n      } else {\r\n        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  updateProviderConnection(connectionStatus, callback) {\r\n    let params: IUpdateProviderConnectionRequestParams = {\r\n      user_id: this.userData.user_id,\r\n      shared_channel: this.selectedUser.shared_channel,\r\n      connection_status: connectionStatus,\r\n      receiver_id: this.selectedUser.created_by,\r\n      is_advocate: this.selectedUser.is_advocate\r\n    };\r\n    this.chatService.updateProviderConnectionStatus(params).subscribe((result) => {\r\n      //console.log('Inside updateConnectionStatus callback', result);\r\n      if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        if (callback) {\r\n          callback();\r\n        }\r\n      } else {\r\n        this.loaderService.dismissLoader();\r\n        this.loaderService.showToaster(result.message);\r\n        //this.router.navigate(['/conversation']);\r\n      }\r\n    });\r\n  }\r\n\r\n  openChatBox(conversation: IConversation) {\r\n    this.navCtrl.push(ChatBox, { user: conversation }).then(() => {\r\n      this.navCtrl.remove((this.navCtrl.length() - 2), 1);\r\n    });\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversations/housing-provider-options/housing-provider-options.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams, Events } from 'ionic-angular';\r\n\r\nimport { GroupChat } from '../group-chat/group-chat';\r\nimport { PubNubService } from '../../../providers/pubnub-service';\r\nimport { UserService, IUser } from '../../../providers/user-service';\r\nimport { ChatService, IConversation, IGetGroupDetailsRequest } from '../chat-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { PublicProfile } from \"../public-profile/public-profile\";\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n\r\n@Component({\r\n  selector: 'page-conversation-setting',\r\n  templateUrl: 'conversation-setting.html'\r\n})\r\nexport class ConversationSetting {\r\n  public userData: IUser;\r\n  public selectedUser: IConversation;\r\n  public groupType: string = CONSTANTS.CONVERSATION_TYPE.GROUP;\r\n  public placeholderIamges = CONSTANTS.PLACEHOLDER_IMAGES;\r\n\r\n  constructor(public navCtrl: NavController, private navParams: NavParams, private pubNubService: PubNubService, private translateService: TranslateService,\r\n    private userService: UserService, private chatService: ChatService, public events: Events, private analyticsService: AnalyticsService,\r\n    private loaderService: LoaderService) {\r\n    this.selectedUser = this.navParams.get('selectedUser');\r\n    if (this.selectedUser.type !== CONSTANTS.CONVERSATION_TYPE.SINGLE) {\r\n      this.selectedUser = JSON.parse(JSON.stringify(this.navParams.get('selectedUser')));\r\n      this.selectedUser.members = [];\r\n    }\r\n    this.userData = this.userService.getUser();\r\n    this.initConservsationSettings(this.selectedUser);\r\n    this.initRefreshEvent();\r\n    this.initPresenceEvent();\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.CONVERSATION_SETTINGS);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.CONVERSATION_SETTINGS);\r\n  }\r\n\r\n  initRefreshEvent(): void {\r\n    let that = this;\r\n    that.events.subscribe(CONSTANTS.APP_EVENTS.REFRESH_GROUP_DETAILS, () => {\r\n      //console.log('In ConversationSetting REFRESH_GROUP_DETAILS');\r\n      that.initConservsationSettings(that.selectedUser);\r\n    });\r\n  }\r\n\r\n\r\n  initConservsationSettings(user: IConversation) {\r\n    if (user.type === this.groupType) {\r\n      this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n      let params: IGetGroupDetailsRequest = {\r\n        user_id: this.userData.user_id,\r\n        shared_channel: user.shared_channel\r\n      };\r\n      this.chatService.getGroupDetails(params).subscribe((groupDetails) => {\r\n        this.loaderService.dismissLoader();\r\n        if (groupDetails.status == 'SUCCESS') {\r\n          user = Object.assign(user, groupDetails.group_details);\r\n          if (this.selectedUser.type === this.groupType && this.selectedUser.members.length > 0) {\r\n            this.updatePresenceStatus();\r\n          }\r\n        }\r\n      }, error => {\r\n        this.loaderService.dismissLoader();\r\n        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  updatePresenceStatus(): void {\r\n    let that = this;\r\n    let channels: Array<string> = [];\r\n    this.selectedUser.members.forEach((member) => {\r\n      channels.push(member.user_id);\r\n    });\r\n    that.pubNubService.getUsersState(channels).then((data: any) => {\r\n      if (data.channels) {\r\n        that.selectedUser.members.forEach((member) => {\r\n          member.presence = data.channels[member.user_id] ? \"online\" : \"\";\r\n        });\r\n      }\r\n      // console.log(\"---\", that.selectedUser.members);\r\n    });\r\n  }\r\n\r\n  openGroupChat() {\r\n    if (this.selectedUser.leaving_time_token !== undefined && this.selectedUser.leaving_time_token > 0) {\r\n      this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.GRP_EDIT_ERROR_MSG'));\r\n      // console.log(this.translateService.instant('ERROR_MESSAGES.GRP_EDIT_ERROR_MSG'));\r\n    } else {\r\n      this.navCtrl.push(GroupChat, { selectedGroup: this.selectedUser });\r\n    }\r\n  }\r\n\r\n  changeNotitficationStatus() {\r\n    let params = { _id: this.selectedUser._id, notification: this.selectedUser.notification };\r\n    let that = this;\r\n    this.chatService.changePushNotificationSetting(params).subscribe((response) => {\r\n      //// console.log('In changeNotitficationStatus', response);\r\n      if (that.selectedUser.notification) {\r\n        that.pubNubService.removePushNotifcationChannel(that.selectedUser.shared_channel);\r\n        that.pubNubService.unRegisterDevice([that.selectedUser.shared_channel], that.userService.deviceToken, that.userService.pushPlatform)\r\n      } else {\r\n        that.pubNubService.setPushNotificationChannels([that.selectedUser.shared_channel]);\r\n        that.pubNubService.registerDevice([that.selectedUser.shared_channel], that.userService.deviceToken, that.userService.pushPlatform)\r\n      }\r\n    }, error => {\r\n      this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n    });\r\n  }\r\n\r\n  initPresenceEvent(): void {\r\n    let that = this;\r\n    that.events.subscribe(CONSTANTS.APP_EVENTS.GROUP_SETTING_PRESENCE_EVENT, (presence) => {\r\n      //Set user online status.\r\n      //let presenceObj = presence[0];\r\n      // console.log('In subscribePresenceEvent[ action - ' + presenceObj.action + ']', presenceObj);\r\n      if (that.selectedUser.members && that.selectedUser.members.length > 0) {\r\n        that.selectedUser.members.forEach((member) => {\r\n          if (presence.uuid === member.user_id && presence.actualChannel === member.user_id + \"present-pnpres\") {\r\n            if (presence.action == \"join\") {\r\n              member.presence = \"online\";\r\n            }\r\n            else if (presence.action == \"leave\") {\r\n              member.presence = \"\";\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  ionViewWillUnload() {\r\n    // console.log(\"conversation-setting- Looks like I'm about to ionViewWillUnload :(\");\r\n    this.events.unsubscribe(CONSTANTS.APP_EVENTS.GROUP_SETTING_PRESENCE_EVENT);\r\n    this.events.unsubscribe(CONSTANTS.APP_EVENTS.REFRESH_GROUP_DETAILS);\r\n\r\n  }\r\n\r\n  openProfile(member: IConversation, position: number) {\r\n    if (this.selectedUser.type === CONSTANTS.CONVERSATION_TYPE.SINGLE) {\r\n      this.navCtrl.push(PublicProfile, { user: member });\r\n    } else {\r\n      this.navCtrl.push(PublicProfile, { user: member, groupDetails: this.selectedUser, memberIndex: position });\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversations/conversation-setting/conversation-setting.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams, Events, Platform } from 'ionic-angular';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { UserService } from \"../../../providers/user-service\";\r\n\r\n@Component({\r\n  selector: 'page-show-image',\r\n  templateUrl: 'show-image.html'\r\n})\r\nexport class ShowImage {\r\n  image: string;\r\n  enableButton: boolean;\r\n  messageModel: string;\r\n  enableZoom: boolean;\r\n  constructor(public navCtrl: NavController, private navParams: NavParams, private events: Events, private analyticsService: AnalyticsService,\r\n    private userService: UserService,private platform: Platform) {\r\n    this.image = '';\r\n    this.enableButton = false;\r\n    this.messageModel = '';\r\n    this.enableButton = this.navParams.get('enableSendButton');\r\n    this.image = this.navParams.get('image_content');\r\n    if(this.platform.is('ios')){\r\n      this.image = this.image.replace(/^file:\\/\\//, '');\r\n    }\r\n    this.enableZoom = this.navParams.get('enableZoom');\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.VIEW_IMAGE);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.VIEW_IMAGE);\r\n  }\r\n  navigateToChatPage() {\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n  setAttachement() {\r\n    let data = { 'image': this.image, 'attachement': true, caption: this.messageModel };\r\n    // console.log('In setAttachement', data);\r\n    this.navCtrl.pop();\r\n    this.events.publish(CONSTANTS.APP_EVENTS.CLOSE_IMAGE_PREVIEW, data);\r\n  }\r\n\r\n  dismiss() {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversations/show-image/show-image.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { NavController, NavParams, Events, Content } from 'ionic-angular';\r\nimport { IConversation, ChatService, IGetUserConversationRequest, IGetUserConversationResponse, IGroupMember } from \"../../conversations/chat-service\";\r\nimport { ConnectionList } from \"../../conversations/connection-list\";\r\nimport { IUser, UserService } from \"../../../providers/user-service\";\r\nimport { PubNubService } from \"../../../providers/pubnub-service\";\r\nimport { LoaderService } from \"../../../providers/loader-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { CONSTANTS } from \"../../../shared/config\";\r\nimport { IShareFeedRequest, ActivityService } from \"../activity-service\";\r\nimport { IGenericResponse } from \"../../aroundme/aroundme-service\";\r\n\r\n\r\n@Component({\r\n  selector: 'page-contact-list',\r\n  templateUrl: 'contact-list.html',\r\n})\r\nexport class ContactListPage {\r\n\r\n  private rezfeed_id: string;\r\n  private feed_title: string;\r\n  public conversationType = CONSTANTS.CONVERSATION_TYPE;\r\n  public usersListCopy: IUser;\r\n  public connectedUsersList: Array<IConversation>;\r\n  public pageCount: number;\r\n  public placeholderIamges = CONSTANTS.PLACEHOLDER_IMAGES;\r\n  private receiverIds: Array<string>;\r\n  private contacts: Array<IGroupMember>;\r\n  private userData: IUser;\r\n  private connectionList: ConnectionList;\r\n  public selectedGroup: any;\r\n  private searchStr: string;\r\n\r\n  @ViewChild(Content) content: Content;\r\n  constructor(private activityService: ActivityService, public navCtrl: NavController, private navParams: NavParams, private userService: UserService,\r\n    private analyticsService: AnalyticsService, public chatService: ChatService, public pubNubService: PubNubService, private events: Events,\r\n    private translateService: TranslateService,\r\n    public loaderService: LoaderService) {\r\n    this.receiverIds = [];\r\n    this.contacts = [];\r\n    this.rezfeed_id = this.navParams.get('rezfeed_id');\r\n    this.feed_title = this.navParams.get('feed_title');\r\n    this.connectionList = new ConnectionList(chatService, pubNubService, translateService, loaderService);\r\n    this.userData = this.userService.getUser();\r\n    this.connectedUsersList = [];\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.GROUP_CHAT);\r\n    this.initContacts();\r\n    this.content.resize();\r\n  }\r\n\r\n\r\n  initContacts() {\r\n    let params: IGetUserConversationRequest = { user_id: this.userData.user_id, is_group_data_needed: false };\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    this.connectionList.getUserList(params, (error, response: IGetUserConversationResponse) => {\r\n      this.connectionList.updatePresenceStatus(response.connected, () => {\r\n        this.usersListCopy = JSON.parse(JSON.stringify(response.connected));\r\n        this.searchUser('');\r\n        this.loaderService.dismissLoader();\r\n      });\r\n    });\r\n  }\r\n\r\n  selectUser(user) {\r\n    this.content.resize();\r\n    user.selected = true;\r\n    if (user.selected) {\r\n      this.contacts.push(user);\r\n      this.receiverIds.push(user.user_id);\r\n    }\r\n  }\r\n\r\n  unSelectUser(user, index) {\r\n    user.selected = false;\r\n    this.contacts.splice(index, 1);\r\n    this.receiverIds.splice(index, 1);\r\n    this.searchUser(this.searchStr);\r\n    this.content.resize();\r\n  }\r\n\r\n\r\n  searchUser(searchString): void {\r\n    // Reset items back to all of the items    \r\n    this.connectedUsersList = JSON.parse(JSON.stringify(this.usersListCopy));\r\n    // if the value is an empty string don't filter the items\r\n    this.connectedUsersList = this.connectedUsersList.filter((item) => {\r\n      return ((item.user_name.toLowerCase().indexOf(searchString.toLowerCase()) > -1) && (this.receiverIds.indexOf(item.receiver_id) === -1));\r\n    });\r\n  }\r\n\r\n  shareFeed() {\r\n    let shareFeedRequest: IShareFeedRequest = {\r\n      receiver_id: this.receiverIds,\r\n      rezfeed_id: this.rezfeed_id,\r\n      user_id: this.userData.user_id,\r\n      feed_title: this.feed_title\r\n    }\r\n    console.log(shareFeedRequest);\r\n    this.activityService.shareFeed(shareFeedRequest).subscribe((response:IGenericResponse) => {\r\n      this.loaderService.showToaster(response.message);\r\n      //this.loaderService.dismissLoader();\r\n      this.navCtrl.pop();\r\n    });\r\n    //this.navCtrl.pop();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/activity/contact-list/contact-list.ts","import { Component } from \"@angular/core\";\r\nimport { NavController, NavParams, Events, AlertController } from \"ionic-angular\";\r\nimport { UserService, IBranch } from \"../../../providers/user-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { LoaderService } from \"../../../providers/loader-service\";\r\nimport { ActivityService, IGetUserSegmentRequest, IUserSegment } from \"../activity-service\";\r\nimport { CreatePlacementFeedPage } from \"../create-placement-feed/create-placement-feed\";\r\nimport { CreatePollFeedPage } from \"../create-poll-feed/create-poll-feed\";\r\nimport { CONSTANTS } from \"../../../shared/config\";\r\n@Component({\r\n    selector: 'create-feed',\r\n    templateUrl: 'create-feed.html',\r\n})\r\nexport class CreateFeedPage {\r\n\r\n    private userSegments: Array<IUserSegment>;\r\n    private branches: Array<IBranch>;\r\n    private selectedBranch: IBranch;\r\n    private selectedBranchId: string;\r\n    private selectedSegment: string;\r\n    private selectedSegmentName: string;\r\n    private selectedTemplate: string;\r\n    constructor(private activityService: ActivityService, public navCtrl: NavController, private navParams: NavParams, private userService: UserService,\r\n        private events: Events,\r\n        private translateService: TranslateService, private alertCtrl: AlertController,\r\n        public loaderService: LoaderService) {\r\n\r\n    }\r\n\r\n    ionViewDidEnter() {\r\n        this.branches = this.userService.userObj.branches;\r\n        this.selectedTemplate = this.userService.userObj.feed_templates[0];\r\n    }\r\n\r\n    loadUserSegments() {\r\n        let that = this;\r\n        this.selectedSegment = undefined;\r\n        this.selectedSegmentName = '';\r\n        that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n        let userSegments: Array<IUserSegment> = [];\r\n        let request: IGetUserSegmentRequest = {\r\n            branch_id: that.selectedBranch._id,\r\n            user_id: that.userService.userObj.user_id,\r\n            user_type: that.userService.userObj.user_type\r\n        }\r\n        that.activityService.getUserSegments(request).subscribe((response: any) => {\r\n            //    this.loaderService.dismissLoader();\r\n            if (response && response.usersegment) {\r\n                response.usersegment.forEach((userSegment) => {\r\n                    userSegments.push({ _id: userSegment._id, name: userSegment.name, segment_category: userSegment.segment_category, parent_feed_id: userSegment.parent_feed_id });\r\n                });\r\n                that.userSegments = userSegments;\r\n                console.log(that.userSegments);\r\n            }\r\n            that.loaderService.dismissLoader();\r\n        });\r\n    }\r\n    navigateToSetFeed() {\r\n        console.log(this.selectedTemplate, this.selectedSegment);\r\n        if (this.selectedTemplate === CONSTANTS.TEMPLATE.PLACEMENT) {\r\n            this.navCtrl.push(CreatePlacementFeedPage, { selectedBranch: this.selectedBranch, selectedSegment: this.selectedSegment, selectedTemplate: this.selectedTemplate, organisationId: this.selectedBranch.organization_id });\r\n        } else {\r\n            console.log(this.selectedTemplate);\r\n            this.navCtrl.push(CreatePollFeedPage, { selectedBranch: this.selectedBranch, selectedSegment: this.selectedSegment, selectedTemplate: this.selectedTemplate, organisationId: this.selectedBranch.organization_id });\r\n        }\r\n    }\r\n    onTemplateSelect(template) {\r\n        this.selectedTemplate = template;\r\n    }\r\n\r\n    onSegmentList() {\r\n        for (let i = 0; i < this.userSegments.length; i++) {\r\n            //console.log(this.userSegments[i]);\r\n            this.userSegments[i].type = \"radio\",\r\n                this.userSegments[i].label = this.userSegments[i].name;\r\n            this.userSegments[i].value = this.userSegments[i]._id + \"_\" + this.userSegments[i].name;\r\n            if (!this.userSegments[i].parent_feed_id) {\r\n                this.userSegments[i].id = \"parent-\" + i;\r\n            } else {\r\n                this.userSegments[i].id = \"child-\" + i;\r\n            }\r\n        }\r\n        //console.log(this.userSegments);\r\n        if (this.userSegments.length > 0) {\r\n            let alert = this.alertCtrl.create({\r\n                title: 'Select Segment',\r\n                inputs: this.userSegments,\r\n                buttons: [\r\n                    {\r\n                        text: this.translateService.instant('CONVERSATIONS.CANCEL'),\r\n                        role: 'cancel',\r\n                        handler: data => {\r\n                            console.log('Cancel clicked');\r\n                        }\r\n                    },\r\n                    {\r\n                        text: this.translateService.instant('CONVERSATIONS.OK'),\r\n                        handler: data => {\r\n                            let segmentData = data.split('_');\r\n                            this.selectedSegment = segmentData[0];\r\n                            this.selectedSegmentName = segmentData[1];\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n            alert.present();\r\n        } else {\r\n            let alert = this.alertCtrl.create({\r\n                title: this.translateService.instant('ERROR_MESSAGES.NO_SEGMENTS'),               \r\n                buttons: [{\r\n                  text: this.translateService.instant('MISC.DISMISS')\r\n                }],\r\n                cssClass: 'alert-single'\r\n              });\r\n            alert.present();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    refreshTarget(): void {\r\n        // let refreshTargetObj = { created_by: this.userId, branch_id: this.userService.selectedBranch._id, segment_type: CONSTANTS.SEGMENT_TYPE.NORMAL };\r\n        // if (this.audienceDetail.segment_category !== CONSTANTS.SEGMENT_CATEGORY.SERVICE_AREA) {\r\n        //   let housingProviderObj = this.getHousingProviderRequestJSON();\r\n        //   Object.assign(refreshTargetObj, housingProviderObj);\r\n        // } else {\r\n        //   Object.assign(refreshTargetObj, this.audienceDetail);\r\n        // }\r\n        // this.activityFeedService.refreshTarget(refreshTargetObj).subscribe((response: any) => {\r\n        //   if (response.status !== CONSTANTS.RESPONSE_STATUS.ERROR) {\r\n        //     this.targetCount = response.targets;\r\n        //     this.setTargetPercentage(response.total_users);\r\n        //   } else {\r\n        //     this.notificationService.showToast(CONSTANTS.RESPONSE_STATUS.ERROR, CONSTANTS.ERROR_MESSAGES.SOMETHING_WENT_WRONG);\r\n        //     this.targetCount = '0';\r\n        //     this.setTargetPercentage(0);\r\n        //   }\r\n        // });\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/activity/create-feed/create-feed.ts","import { Component } from \"@angular/core\";\r\nimport { NavController, NavParams, Events, ViewController } from \"ionic-angular\";\r\nimport { UserService, IBranch } from \"../../../../providers/user-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { CreatePlacementFeedPage } from \"../create-placement-feed\";\r\nimport { ActivityService, IGetUserSegmentRequest, IUserSegment, IFeedTemplate, IPlacementInfo } from \"../../activity-service\";\r\nimport { populateNodeData } from \"ionic-angular/components/virtual-scroll/virtual-util\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'description-feed',\r\n    templateUrl: 'description-feed.html',\r\n})\r\nexport class DescriptionFeedPage {\r\n    private action: string;\r\n    public placementInfo: IPlacementInfo;\r\n    private selectedBranch: IBranch;\r\n    private selectedSegment: string;\r\n    private selectedTemplate: string;\r\n    private activity: IFeedTemplate;\r\n    private organisationID: any;\r\n    private libraryBackImages: Array<string> = [];\r\n    private libraryLogoImages: Array<string> = [];\r\n\r\n    constructor(private activityService: ActivityService, public navCtrl: NavController, private params: NavParams,\r\n    private userService: UserService, private events: Events, private translateService: TranslateService, public viewCtrl: ViewController) {\r\n        this.placementInfo = params.get('placementInfo');\r\n        this.selectedBranch = this.params.get('selectedBranch');\r\n        this.organisationID = this.params.get('organisationId');\r\n    }\r\n\r\n    dismiss() {\r\n        if (this.validateData()) {\r\n            this.placementInfo.description = this.placementInfo.description.trim();\r\n            this.placementInfo.title = this.placementInfo.title.trim();\r\n            this.viewCtrl.dismiss(this.placementInfo);\r\n        } else {\r\n            console.log(\"Please enter valid URL\");\r\n        }\r\n\r\n    }\r\n    navigateBack() {\r\n        this.navCtrl.setRoot(CreatePlacementFeedPage);\r\n    }\r\n\r\n    validateData(): boolean {\r\n        //TODO - Validate URL here \r\n        return true;\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/activity/create-placement-feed/description-feed/description-feed.ts","import { Component, ViewChild, ElementRef } from '@angular/core';\r\nimport { NavParams, ViewController, Platform } from 'ionic-angular';\r\nimport Cropper from 'cropperjs';\r\n\r\n@Component({\r\n  selector: 'crop-image',\r\n  templateUrl: 'crop-image.html'\r\n})\r\nexport class CropImageModal {\r\n  @ViewChild('image') input: ElementRef;\r\n  imageBase64: any;\r\n  width: number;\r\n  height: number;\r\n  cropper: Cropper;\r\n\r\n  constructor(public viewCtrl: ViewController, public navParams: NavParams,  private platform: Platform) {\r\n    let filePath: string = this.navParams.get(\"imageBase64\");\r\n    filePath = filePath.replace(/^file:\\/\\//, '');\r\n    this.imageBase64 = filePath;\r\n    this.width = this.navParams.get(\"width\");\r\n    this.height = this.navParams.get(\"height\");\r\n  }\r\n\r\n  cropperLoad() {\r\n    this.cropper = new Cropper(this.input.nativeElement, {\r\n      dragMode: 'crop',\r\n      aspectRatio: this.width / this.height,\r\n      modal: true,\r\n      guides: true,\r\n      highlight: true,\r\n      center: true,\r\n      background: false,\r\n      autoCrop: true,\r\n      movable: false,\r\n      zoomable: false,\r\n      autoCropArea: 1,\r\n      responsive: true,\r\n      cropBoxMovable: true,\r\n      cropBoxResizable: true,\r\n      scalable: false,\r\n      minCropBoxWidth :this.width,\r\n      minCropBoxHeight: this.height,\r\n      crop: (e: Cropper.CropperCropEvent) => {}\r\n    });\r\n  }\r\n\r\n  cropperReset() { this.cropper.reset() }\r\n\r\n  imageRotate() { this.cropper.rotate(90); }\r\n\r\n  cancel() { this.viewCtrl.dismiss(); }\r\n\r\n  finish() {\r\n    let croppedImgB64String: string = this.cropper.getCroppedCanvas({\r\n    }).toDataURL('image/jpeg', 1);\r\n    this.viewCtrl.dismiss(croppedImgB64String);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/modals/crop-image/crop-image.ts","import { Component } from \"@angular/core\";\r\nimport { NavController, NavParams, Events, ViewController } from \"ionic-angular\";\r\nimport { UserService, IBranch } from \"../../../../providers/user-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { CreatePlacementFeedPage } from \"../create-placement-feed\";\r\nimport { ActivityService, IGetUserSegmentRequest, IUserSegment, IFeedTemplate, IPlacementInfo } from \"../../activity-service\";\r\nimport { populateNodeData } from \"ionic-angular/components/virtual-scroll/virtual-util\";\r\nimport { CONSTANTS } from \"../../../../shared/config\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'select-image',\r\n    templateUrl: 'select-image.html',\r\n})\r\nexport class SelectImage {\r\n\r\n    private activity: IFeedTemplate;\r\n    private organisationID: string;\r\n    private imageCategory: string;\r\n    private libraryImages: Array<string> = [];\r\n\r\n    constructor(private activityService: ActivityService, public navCtrl: NavController, private params: NavParams,\r\n        private userService: UserService, private events: Events, private translateService: TranslateService, public viewCtrl: ViewController) {\r\n        this.organisationID = this.params.get('organisationId');\r\n        this.imageCategory = this.params.get('imageCategory');\r\n        this.activityService.getImageLibraryData(this.organisationID, this.imageCategory).subscribe((response: any) => {\r\n            this.libraryImages = response.result;\r\n        });\r\n    }\r\n\r\n    dismiss() {\r\n        this.viewCtrl.dismiss();\r\n    }\r\n\r\n    selectImage(position: number) {\r\n        this.viewCtrl.dismiss({ selectedImage: this.libraryImages[position], imageType: this.imageCategory });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/activity/create-placement-feed/selectImage/select-image.ts","import { Component } from \"@angular/core\";\r\nimport { NavController, NavParams, Events, ActionSheetController, ModalController } from \"ionic-angular\";\r\nimport { UserService, IBranch } from \"../../../providers/user-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { LoaderService } from \"../../../providers/loader-service\";\r\nimport { ActivityService, IGetUserSegmentRequest, IUserSegment, IFeedTemplate, ICreateFeed, IPollInfo, ICreatePollFeed, IScheduledInfo } from \"../activity-service\";\r\nimport { PollDescriptionPage } from './poll-description/poll-description';\r\nimport { populateNodeData } from \"ionic-angular/components/virtual-scroll/virtual-util\";\r\nimport { UploadService, IUploadOptions } from \"../../../providers/upload-service\";\r\nimport { CONSTANTS } from \"../../../shared/config\";\r\nimport { SetDeliveryFeedModal } from \"../../../shared/modals/set-delivery-feed/set-delivery-feed\";\r\n\r\n\r\n@Component({\r\n    selector: 'create-poll-feed',\r\n    templateUrl: 'create-poll-feed.html',\r\n})\r\nexport class CreatePollFeedPage {\r\n    singleSelectRows = [];\r\n    multiSelectRows = [];\r\n    private selectedBranch: IBranch;\r\n    private selectedSegment: string;\r\n    private selectedTemplate: string;\r\n    private pollInfo: IPollInfo;\r\n    private feedTemplates = ['Placement', 'Poll'];\r\n    public singleSelection: any = 'singleSelection';\r\n    public multiSelection: any = 'multiSelection';\r\n    private scheduledInfo: IScheduledInfo;\r\n\r\n    constructor(private activityService: ActivityService, public navCtrl: NavController, private navParams: NavParams, private userService: UserService,\r\n        private events: Events, private translateService: TranslateService, private uploadService: UploadService,\r\n        public loaderService: LoaderService, public modalCtrl: ModalController) {\r\n        this.pollInfo = this.getDefaultActivityModel(this.navParams.get('selectedTemplate'), this.navParams.get('selectedSegment'));\r\n        this.selectedBranch = this.navParams.get('selectedBranch');\r\n    }\r\n\r\n    getDefaultActivityModel(template: string, userSegment?: string) {\r\n        return {\r\n            template: template,\r\n            user_segment: userSegment !== undefined ? userSegment : '',\r\n            question: '',\r\n            answer_options: [],\r\n            is_multiselect: false\r\n        };\r\n    }\r\n\r\n    pollDescriptionModal() {\r\n        let descriptionModal = this.modalCtrl.create(PollDescriptionPage, { pollInfo: this.pollInfo, });\r\n        descriptionModal.onDidDismiss(data => {\r\n            this.pollInfo.question = data.question;\r\n            this.pollInfo.answer_options = data.answer_options;\r\n            this.pollInfo.is_multiselect = data.is_multiselect;\r\n        });\r\n        descriptionModal.present();\r\n    }\r\n\r\n\r\n    setDelivery() {\r\n        let params: ICreatePollFeed = this.pollInfo;\r\n        this.pollInfo.is_edit_feed = false;\r\n        params.branch_id = this.selectedBranch;\r\n        // params.scheduled_date = undefined;\r\n        params.organization_id = this.selectedBranch.organization_id;\r\n        params.feed_owner_id = this.userService.userObj.user_id;\r\n        params.sender_ref_id = this.userService.userObj.user_id;\r\n        params.created_by = this.userService.userObj.user_id;\r\n        params.is_campaign_feed = false;\r\n        params.count_answer_option = this.pollInfo.answer_options.length;\r\n\r\n        this.scheduledInfo = { isSubmit: false }\r\n        if (this.pollInfo.scheduled_date !== undefined) {\r\n            this.scheduledInfo.scheduledDate = this.pollInfo.scheduled_date;\r\n            this.scheduledInfo.selectedScheduled = \"schedule\";\r\n        } else {\r\n            this.scheduledInfo.scheduledDate = new Date().toISOString();\r\n            this.scheduledInfo.selectedScheduled = \"now\";\r\n        }\r\n        this.scheduledInfo.scheduledTime = this.scheduledInfo.scheduledDate;\r\n        let setDeliveryModal = this.modalCtrl.create(SetDeliveryFeedModal, {\r\n            scheduledInfo: this.scheduledInfo, pollFeedRequest: params, feedType: this.pollInfo.template\r\n        });\r\n        setDeliveryModal.onDidDismiss(data => {\r\n            if (data && data.isSubmit) {\r\n                const startIndex = this.navCtrl.getActive().index - 1;\r\n                this.navCtrl.remove(startIndex, 2);\r\n            } else if (data) {\r\n                this.scheduledInfo.selectedScheduled = data.selectedScheduled;\r\n                this.pollInfo.scheduled_date = data.scheduledDate;\r\n            }\r\n        });\r\n        setDeliveryModal.present();\r\n    }\r\n\r\n\r\n    // submitCard() {\r\n    //     let that = this;\r\n    //     let params: ICreatePollFeed = this.pollInfo;\r\n    //     that.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    //     params.branch_id = this.selectedBranch;\r\n    //     params.scheduled_date = undefined;\r\n    //     params.organization_id = this.selectedBranch.organization_id;\r\n    //     params.feed_owner_id = this.userService.userObj.user_id;\r\n    //     params.sender_ref_id = this.userService.userObj.user_id;\r\n    //     params.created_by = this.userService.userObj.user_id;\r\n    //     params.is_campaign_feed = false;\r\n    //     params.count_answer_option = this.pollInfo.answer_options.length;\r\n    //     //console.log(\"Data model \", params)\r\n    //     that.activityService.createPollFeed(params).subscribe((response: any) => {\r\n    //         that.loaderService.dismissLoader();\r\n    //         const startIndex = that.navCtrl.getActive().index - 1;\r\n    //         that.navCtrl.remove(startIndex, 2);\r\n    //     });\r\n    // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/activity/create-poll-feed/create-poll-feed.ts","import { Component } from \"@angular/core\";\r\nimport { NavController, NavParams, Events, ViewController } from \"ionic-angular\";\r\nimport { UserService, IBranch } from \"../../../../providers/user-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { CreatePollFeedPage } from \"../create-poll-feed\";\r\nimport { ActivityService, IGetUserSegmentRequest, IUserSegment, IFeedTemplate, IPollInfo } from \"../../activity-service\";\r\nimport { populateNodeData } from \"ionic-angular/components/virtual-scroll/virtual-util\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'poll-description',\r\n    templateUrl: 'poll-description.html',\r\n})\r\nexport class PollDescriptionPage {\r\n    private action: string;\r\n    public pollInfo: IPollInfo;\r\n    private selectedBranch: IBranch;\r\n    private selectedSegment: string;\r\n    private selectedTemplate: string;\r\n    private activity: IFeedTemplate;\r\n    private organisationID: any;\r\n    private libraryBackImages: Array<string> = [];\r\n    private libraryLogoImages: Array<string> = [];\r\n    private answerType: string;\r\n    multipleRows = [];\r\n    pollAnswerOption: string = '';\r\n    constructor(private activityService: ActivityService, public navCtrl: NavController, private params: NavParams,\r\n        private userService: UserService, private events: Events, private translateService: TranslateService, public viewCtrl: ViewController) {\r\n        this.pollInfo = params.get('pollInfo');\r\n        if (this.pollInfo.is_multiselect) {\r\n            this.answerType = \"multiple\";\r\n        } else {\r\n            this.answerType = \"single\";\r\n        }\r\n        console.log(this.pollInfo);\r\n        this.selectedBranch = this.params.get('selectedBranch');\r\n        this.organisationID = this.params.get('organisationId');\r\n    }\r\n\r\n    dismiss() {\r\n        if (this.answerType === \"single\") {\r\n            this.pollInfo.is_multiselect = false;\r\n        } else {\r\n            this.pollInfo.is_multiselect = true;\r\n        }\r\n        this.pollInfo.question = this.pollInfo.question.trim();        \r\n        this.viewCtrl.dismiss(this.pollInfo);\r\n    }\r\n\r\n    onAddOptions() {\r\n        if(this.pollAnswerOption.trim().length > 0){\r\n        this.pollInfo.answer_options.push(this.pollAnswerOption);\r\n        this.pollAnswerOption = '';\r\n        }\r\n    }\r\n    removeOption(indexNumber: any) {\r\n        this.pollInfo.answer_options.splice(indexNumber, 1);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/activity/create-poll-feed/poll-description/poll-description.ts","\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ActionSheetController, Platform, NavParams, Events } from 'ionic-angular';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\nimport { IUser, UserService } from \"../../../providers/user-service\";\r\nimport { ServiceRequestReported } from './request-reported/request-reported';\r\nimport { ServiceRequestService, IServiceRequest, IResidentProperty, ISaveMessage } from './../service-request-service';\r\nimport { UploadService, IUploadOptions } from '../../../providers/upload-service';\r\nimport { AnalyticsService } from '../../../providers/analytics-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from \"../../../shared/config\";\r\nimport { PubNubService } from '../../../providers/pubnub-service';\r\n\r\n\r\n@Component({\r\n  selector: 'page-create-request',\r\n  templateUrl: 'create-request.html'\r\n})\r\nexport class CreateRequest {\r\n  public serviceRequestObj: IServiceRequest;\r\n  public pictureModel: string\r\n  public selectedTab: string = 'types';\r\n  public userData: IUser;\r\n  public serviceRequestTypes: Array<{ name: string, _id: string }> = [];\r\n  public serviceRequestTypeClassMap: any = {};\r\n  private selectedProperty: IResidentProperty;\r\n  constructor(private navCtrl: NavController, private actionSheetCtrl: ActionSheetController, private platform: Platform,\r\n    private analyticsService: AnalyticsService, private camera: Camera, private loaderService: LoaderService,\r\n    private userService: UserService, private translateService: TranslateService, private navParams: NavParams, private pubNubService: PubNubService,\r\n    private events: Events, private uploadService: UploadService, private serviceRequestService: ServiceRequestService) {\r\n\r\n    this.selectedTab = 'types';\r\n    this.userData = this.userService.getUser();\r\n    this.serviceRequestObj = {\r\n      user_id: this.userData.user_id,\r\n      user_name: this.userData.user_name,\r\n      address: '',\r\n      property_id: '',\r\n      type: '',\r\n      description: '',\r\n      photos: [],\r\n      building_id: '',\r\n      incident_date_string: this.serviceRequestService.getIncidentDateString()\r\n    };\r\n\r\n    // This is fixed for all domains so have to update this when we add/remove types\r\n    this.serviceRequestTypeClassMap = this.serviceRequestService.serviceRequestTypeClassMap;\r\n    this.selectedProperty = this.navParams.get('selectedProperty');\r\n    // console.log('this.serviceRequestPropertyId', this.serviceRequestPropertyId);\r\n  };\r\n\r\n  ionViewDidEnter() {\r\n    if (this.platform.is('cordova')) {\r\n      this.analyticsService.trackScreenView(CONSTANTS.PAGES.SERVICE_REQUESTS);\r\n    }\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    //console.log(\"In ionViewDidLoad, made display none\");\r\n    this.loadServiceRequestTypes();\r\n  }\r\n\r\n  loadServiceRequestTypes() {\r\n    this.serviceRequestService.getServiceRequestTypes().subscribe((response) => {\r\n      if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        this.serviceRequestTypes = response.result || [];\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  onTabSelect(tabIndex: number) {\r\n    //console.log(tabIndex == 1 && this.serviceRequestObj.type !== '', \"extreesion check\");\r\n    if (tabIndex == 1 && this.serviceRequestObj.type !== '') {\r\n      this.selectedTab = 'description';\r\n    } else if (this.serviceRequestObj.description && this.serviceRequestObj.description.trim().length > 0 && tabIndex == 2) {\r\n      this.selectedTab = 'photos';\r\n    } else if (tabIndex == 0)\r\n      this.selectedTab = 'types';\r\n  }\r\n\r\n  getRequestTypeNameById(typeId) {\r\n    var element = null, selecttedType = null;\r\n    for (let index = 0; index < this.serviceRequestTypes.length; index++) {\r\n      element = this.serviceRequestTypes[index];\r\n      if (element._id === typeId) {\r\n        selecttedType = element;\r\n        break;\r\n      }\r\n    }\r\n    return selecttedType.name || '';\r\n  }\r\n\r\n  createNewServiceRequest() {\r\n    this.loaderService.createLoader(this.translateService.instant(\"ERROR_MESSAGES.REPORTING\"));\r\n    this.serviceRequestObj['property_id'] = this.selectedProperty.property_id || '';\r\n    this.serviceRequestObj['building_id'] = this.selectedProperty.building_id || '';\r\n    this.serviceRequestObj['unit'] = this.selectedProperty.unit || '';\r\n\r\n    this.serviceRequestService.reportServiceRequest(this.serviceRequestObj).subscribe((response: any) => {\r\n      //console.log(response, \"response for INCIDENT API\");\r\n      if (response.status !== CONSTANTS.RESPONSE_STATUS.ERROR) {\r\n        this.navCtrl.push(ServiceRequestReported, { incident_no: response.incidents.incident_number }).then(() => {\r\n          this.navCtrl.remove(this.navCtrl.length() - 2, 1);\r\n\r\n          // Get request type name by id since we are not storing type name in database\r\n          response.incidents['type'] = this.getRequestTypeNameById(response.incidents.type);\r\n          response.incidents['providers'] = response.providers || [];\r\n          this.events.publish(CONSTANTS.APP_EVENTS.SERVICE_REQUEST_REPORTED, response.incidents);\r\n          this.createConversation(response.incidents);\r\n        });\r\n      } else {\r\n        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n      }\r\n      this.loaderService.dismissLoader();\r\n    }, error => {\r\n      console.log(\"ERROR::\", error);\r\n      this.loaderService.showToaster(error);\r\n    });\r\n  }\r\n\r\n  createConversation(serviceRequet) {\r\n    this.pubNubService.getTimeToken((pubnubtimestoken) => {\r\n      let shared_channel: string = this.userData.user_id + '_' + serviceRequet._id;\r\n      let members = [];\r\n      if (serviceRequet.providers) {\r\n        serviceRequet.providers.forEach((self) => {\r\n          if (self.user_id !== this.userData.user_id) {\r\n            members.push(self.user_id);\r\n          }\r\n        });\r\n      }\r\n      let newConversation = {\r\n        user_id: this.userData.user_id,\r\n        shared_channel: shared_channel,\r\n        name: serviceRequet.incident_number,\r\n        joining_time_token: pubnubtimestoken,\r\n        incident_id: serviceRequet._id,\r\n        members: members\r\n      };\r\n      this.serviceRequestService.createConversation(newConversation).subscribe((response) => {\r\n        if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n          this.pubNubService.addChanneltoGroup(newConversation.members, newConversation.shared_channel, newConversation.name, this.userService.userObj.user_id, this.userService.deviceToken, this.userService.pushPlatform, CONSTANTS.USER_STATES.SERVICE_REQUEST_REPORTED);\r\n          this.sendMessage(newConversation, serviceRequet.incident_number);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  sendMessage(conversation, incident_number: string) {\r\n    this.pubNubService.getSupportedLanguageMsg(CONSTANTS.MESSAGES.SERVICE_REQUEST_CREATED).subscribe((msgContent) => {\r\n      let coreMessageObj = {\r\n        content: msgContent,\r\n        sender_uuid: this.userData.user_id,\r\n        image: '',\r\n        receiver_uuid: conversation.shared_channel,\r\n        shared_channel: conversation.shared_channel,\r\n        timetoken: conversation.joining_time_token,\r\n        is_group: true,\r\n        is_sys_msg: true,\r\n        content_type_id: CONSTANTS.MESSAGE_CONTENT_TYPE_ID.SERVICE_REQUEST\r\n      };\r\n\r\n      this.pubNubService.publish(coreMessageObj.shared_channel, coreMessageObj).subscribe((event) => {\r\n        // console.log('In sendInvitationMessageToAdmin Publish message', coreMessageObj, event);\r\n        let saveMessage: ISaveMessage = {\r\n          user_id: this.userData.user_id,\r\n          content: coreMessageObj.content,\r\n          shared_channel: coreMessageObj.shared_channel\r\n        };\r\n        this.serviceRequestService.saveMessage(saveMessage).subscribe(() => {\r\n          // console.log('Saved message!');\r\n        });\r\n      });\r\n    }, error => {\r\n      this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n    });\r\n  }\r\n\r\n  closeServiceRequest() {\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n  uploadDone(error, url: string) {\r\n    if (!error) {\r\n      this.serviceRequestObj.photos.push(url);\r\n    }\r\n    console.log(error, url);\r\n  }\r\n\r\n  presentActionSheet() {\r\n    let that = this;\r\n    let uploadOptions: IUploadOptions = {\r\n      sourceType: that.camera.PictureSourceType.CAMERA,\r\n      bucketSource: CONSTANTS.UPLOAD_IMAGE_SOURCE.INCIDENTS,\r\n      cropImage: false,\r\n      targetHeight: 600,\r\n      targetWidth: 1062\r\n    };\r\n    let actionSheet = that.actionSheetCtrl.create({\r\n      cssClass: 'photo-sheet',\r\n      buttons: [\r\n        {\r\n          text: this.translateService.instant(\"CONVERSATIONS.NEW_MSG.TAKE_PHOTO\"),\r\n          role: 'Take a photo',\r\n          cssClass: 'take-photo',\r\n          icon: 'icons-camera',\r\n          handler: () => {\r\n            that.uploadService.takeFromCamera(uploadOptions, (error, image) => {\r\n              that.uploadDone.call(that, error, image);\r\n            });\r\n          }\r\n        }, {\r\n          text: this.translateService.instant(\"CONVERSATIONS.NEW_MSG.ATTACH_PHOTO\"),\r\n          cssClass: 'take-photo',\r\n          icon: 'icons-image-photo',\r\n          handler: () => {\r\n            uploadOptions.sourceType = that.camera.PictureSourceType.PHOTOLIBRARY;\r\n            that.uploadService.takeFromCamera(uploadOptions, (error, image) => {\r\n              that.uploadDone.call(that, error, image)\r\n            });\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    actionSheet.present();\r\n  }\r\n\r\n  removePhoto(index: number) {\r\n    this.serviceRequestObj.photos.splice(index, 1);\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/service-request/create-request/create-request.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\n\r\n@Component({\r\n  selector: 'page-request-reported',\r\n  templateUrl: 'request-reported.html'\r\n})\r\nexport class ServiceRequestReported {\r\n  incidentNumber: string\r\n  constructor(public navCtrl: NavController, private navParams: NavParams) {\r\n    this.incidentNumber = this.navParams.get('incident_no');\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    //console.log('Hello ServiceRequestReported Page',this.incidentNumber);\r\n  }\r\n\r\n  navigateToServiceListPage() {\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/service-request/create-request/request-reported/request-reported.ts","import { Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { NavController, Platform, AlertController, Content } from 'ionic-angular';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\nimport { Profile } from './profile/profile';\r\nimport { Settings } from './settings/settings';\r\nimport { ServiceRequest } from '../../pages/service-request/service-request';\r\n\r\n//import { FrequetlyAskedQustion } from './frequetly-asked-qustion/frequetly-asked-qustion';\r\nimport { TellFeedback } from './tell-feedback/tell-feedback';\r\nimport { UserService, IUser } from '../../providers/user-service';\r\nimport { AnalyticsService } from '../../providers/analytics-service';\r\nimport { LoaderService } from '../../providers/loader-service'\r\nimport { CONSTANTS } from '../../shared/config';\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { ActivityPage } from \"../activity/activity-feed\";\r\ndeclare let cordova;\r\n@Component({\r\n  selector: 'page-my-stuff',\r\n  templateUrl: 'my-stuff.html'\r\n})\r\nexport class MyStuff implements OnDestroy {\r\n  public userObj: IUser;\r\n  public usertype = CONSTANTS.USER_TYPE;\r\n  @ViewChild(Content) content: Content;\r\n  constructor(public navCtrl: NavController, public userService: UserService, private analyticsService: AnalyticsService,\r\n    public platform: Platform, private alertCtrl: AlertController, private translateService: TranslateService,\r\n    private loaderService: LoaderService, private keyboard: Keyboard) {\r\n    this.resetUserObj();\r\n    this.keyboard.close();\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.content.resize();\r\n    let tempUser = this.userService.getUserProfile();\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.MY_STUFF);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.MY_STUFF);\r\n    if (this.userService.isCoachSettingsUpdated && tempUser.show_coach_marks) {\r\n      //console.log('Updated show_coach_marks');\r\n      this.userService.userObj.show_coach_marks = tempUser.show_coach_marks;\r\n      this.userService.isCoachSettingsUpdated = false;\r\n    }\r\n\r\n    if (tempUser && tempUser.user_id !== '' && this.userService.isProfileUpdate === false) {\r\n      this.userObj = JSON.parse(JSON.stringify(this.userService.getUserProfile()));\r\n    } else {\r\n      this.initUserObj();\r\n    }\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    //console.log('Hello MyStuff Page');\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // console.log(\"MyStuff is killed\");\r\n  }\r\n\r\n  initUserObj(initUserObjCB?) {\r\n    let that = this, userInfo: IUser = this.userService.getUser();\r\n    if (!this.userService.userObj.show_coach_marks.profile) {\r\n      that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    }\r\n    this.userService.getUserById(userInfo.user_id).subscribe((response: any) => {\r\n      if (response.status !== 'ERROR') {\r\n        this.userObj = response.user;\r\n        Object.assign(this.userObj, { _id: userInfo.user_id });\r\n        this.userService.setUserProfile(this.userObj);\r\n        // // console.log('In MyStuff userObj ->', this.userObj);\r\n        if (initUserObjCB) {\r\n          initUserObjCB();\r\n        }\r\n      } else {\r\n        let alert = that.alertCtrl.create({\r\n          subTitle: that.translateService.instant('ERROR_MESSAGES.APP_VERSION_UPDATED'),\r\n          buttons: [{\r\n            text: this.translateService.instant('CONVERSATIONS.OK'),\r\n            handler: () => {\r\n              that.userService.logout();\r\n            }\r\n          }],\r\n          enableBackdropDismiss: false,\r\n          cssClass: 'alert-single'\r\n        });\r\n        alert.present();\r\n      }\r\n      this.loaderService.dismissLoader();\r\n    }, error => {\r\n      // // console.log(\"ERROR::\", error);\r\n      this.loaderService.showToaster(error);\r\n      this.loaderService.dismissLoader();\r\n    })\r\n  }\r\n\r\n  resetUserObj(): void {\r\n    this.userObj = {\r\n      _id: '',\r\n      user_id: '',\r\n      user_name: '',\r\n      email: '',\r\n      is_mobile_number_verified: false,\r\n      verification_code: '',\r\n      profile: {}\r\n    }\r\n    this.userObj.profile = {\r\n      profile_pic: '',\r\n      description: '',\r\n      gender: '',\r\n      phone_number: '',\r\n      name: '',\r\n      first_name: '',\r\n      last_name: '',\r\n      nick_name: ''\r\n    }\r\n  }\r\n  navigatTo(pageName): void {\r\n    if (this.userService.isOnline()) {\r\n      if (this.userObj && this.userObj.user_id !== '') {\r\n        this.openPage(pageName);\r\n      } else {\r\n        this.initUserObj(() => {\r\n          this.openPage(pageName);\r\n        });\r\n      }\r\n    } else {\r\n      this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.NO_NETWORK'));\r\n    }\r\n  }\r\n\r\n  openPage(pageName: string) {\r\n    switch (pageName) {\r\n      case 'settings':\r\n        this.navCtrl.push(Settings, { userData: this.userObj });\r\n        break;\r\n      case 'profile':\r\n        this.navCtrl.push(Profile, { userData: this.userObj });\r\n        break;\r\n        case 'servicerequest':\r\n        this.navCtrl.push(ServiceRequest);\r\n        break;\r\n      case 'feedback':\r\n        this.navCtrl.push(TellFeedback, { userData: this.userObj })\r\n        break;\r\n      case 'favorites':\r\n        this.navCtrl.push(ActivityPage,{favorites: true});\r\n        break;\r\n      case 'help':\r\n        //this.navCtrl.push(FrequetlyAskedQustion);\r\n        cordova.InAppBrowser.open(CONSTANTS.FAQ_URL, \"_blank\", \"location=no\");\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/my-stuff/my-stuff.ts","import { Transfer, TransferObject, FileUploadOptions } from '@ionic-native/transfer';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { Crop } from '@ionic-native/crop';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { NavController, NavParams, ActionSheetController, AlertController, Content } from 'ionic-angular';\r\nimport { EditProfile } from './edit-profile/edit-profile';\r\nimport { UserService, IUser } from '../../../providers/user-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { ENVIRONMENT } from '../../../shared/environment';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: 'page-profile',\r\n  templateUrl: 'profile.html'\r\n})\r\nexport class Profile {\r\n  public userObj: IUser;\r\n  @ViewChild(Content) content: Content;\r\n  constructor(public navCtrl: NavController, private navParams: NavParams, public actionSheetCtrl: ActionSheetController,\r\n    private alertCtrl: AlertController, private userService: UserService, private translateService: TranslateService,\r\n    private loaderService: LoaderService, private analyticsService: AnalyticsService,\r\n    private transfer: Transfer, private camera: Camera, private crop: Crop) {\r\n    this.userObj = JSON.parse(JSON.stringify(this.navParams.get('userData')));\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    //this.initUserObj();    \r\n    this.content.resize();\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.MY_STUFF_PROFILE);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.MY_STUFF_PROFILE);\r\n    this.userObj = JSON.parse(JSON.stringify(this.userService.getUserProfile()));\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    this.content.resize();\r\n  }\r\n\r\n  navigatToEditProfile() {\r\n    this.navCtrl.push(EditProfile, { userData: this.userObj });\r\n  }\r\n\r\n  uploadFileOnserver(fileURI, callback): void {\r\n    const fileTransfer: TransferObject = this.transfer.create();\r\n    let fileUploadOptions: FileUploadOptions = {\r\n      fileKey: 'file',\r\n      fileName: this.getFileName(fileURI),\r\n      httpMethod: 'POST'\r\n    };\r\n\r\n    if (!fileUploadOptions.headers) {\r\n      fileUploadOptions.headers = {\r\n        'Authorization': 'Bearer ' + this.userService.http.token,\r\n        source: CONSTANTS.UPLOAD_IMAGE_SOURCE.PROFILE, user_id: this.userObj.user_id\r\n      };\r\n    }\r\n    let uploadEndpoint: string = ENVIRONMENT.APP_BASE_URL + '/listing/uploadImage';\r\n    // // console.log('In uploadFileOnserver fileUrl', fileURI, uploadEndpoint, fileUploadOptions);\r\n    if (!this.userService.isOnline()) {\r\n      callback(this.translateService.instant('ERROR_MESSAGES.NO_NETWORK'));\r\n    } else {\r\n      fileTransfer.upload(fileURI, uploadEndpoint, fileUploadOptions).then((data: any) => {\r\n        // // console.log('In uploadFileOnserver success', data)\r\n        if (callback) {\r\n          let response = JSON.parse(data.response);\r\n          // // console.log(\"Image respinse\", response);\r\n          callback(null, response.image_url);\r\n        }\r\n      }, (err) => {\r\n        if (callback) {\r\n          callback(err);\r\n        }\r\n      })\r\n      fileTransfer.onProgress((state: ProgressEvent) => {\r\n        // console.log(state);\r\n      });\r\n    }\r\n  }\r\n\r\n  getFileName(fileURI): string {\r\n    let fileNameTemp, fileExt = 'jpg', fileName;\r\n    if (fileURI.indexOf('.') !== -1 && fileURI.indexOf('?') !== -1) {\r\n      fileNameTemp = fileURI.split('.').pop();\r\n      fileExt = fileNameTemp.split('?')[0];\r\n    }\r\n    fileName = this.userObj.user_name + new Date().getTime() + '.' + fileExt;\r\n    return fileName;\r\n  }\r\n\r\n  takeFromCamera(source): void {\r\n    // console.log('Take pic from Camera');\r\n    this.camera.getPicture({\r\n      quality: 100,\r\n      destinationType: this.camera.DestinationType.FILE_URI,\r\n      sourceType: source,\r\n      allowEdit: false,\r\n      encodingType: this.camera.EncodingType.JPEG,\r\n      targetWidth: 600,\r\n      targetHeight: 338,\r\n      mediaType: this.camera.MediaType.PICTURE,\r\n      saveToPhotoAlbum: true,\r\n      correctOrientation: true\r\n    }).then(imageData => {\r\n      this.crop.crop(imageData, { quality: 100 }).then((croppedimageData) => {\r\n        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.UPLOADING'));\r\n        this.uploadFileOnserver(croppedimageData, (error, image_url) => {\r\n          if (!error) {\r\n            this.userObj.profile.profile_pic = image_url;\r\n            this.userService.updateUserInfo(this.userObj).subscribe((res: any) => {\r\n              if (res.status == 'SUCCESS') {\r\n                this.userService.setUserProfile(this.userObj);\r\n                this.loaderService.dismissLoader();\r\n                // // console.log(res, \"response from userService.updateUserInfo\");\r\n              } else {\r\n                let alert = this.alertCtrl.create({\r\n                  title: this.translateService.instant('ERROR_MESSAGES.ERROR_TITLE'),\r\n                  subTitle: res.message,\r\n                  buttons: [{\r\n                    text: this.translateService.instant('MISC.DISMISS')\r\n                  }],\r\n                  enableBackdropDismiss: false,\r\n                  cssClass: 'alert-single'\r\n                });\r\n                alert.present();\r\n              }\r\n            }, error => {\r\n              this.loaderService.showToaster(error);\r\n              this.loaderService.dismissLoader();\r\n            });\r\n          } else {\r\n            this.loaderService.showToaster(error);\r\n            this.loaderService.dismissLoader();\r\n          }\r\n        });\r\n      }, error => {\r\n        // console.log('ERROR ->' + JSON.stringify(error));\r\n      });\r\n    });\r\n  }\r\n\r\n  presentActionSheet(): void {\r\n    let actionSheet = this.actionSheetCtrl.create({\r\n      cssClass: 'photo-sheet',\r\n      buttons: [\r\n        {\r\n          text: this.translateService.instant(\"CONVERSATIONS.NEW_MSG.TAKE_PHOTO\"),\r\n          role: 'Take a photo',\r\n          cssClass: 'take-photo',\r\n          icon: 'icons-camera',\r\n          handler: () => {\r\n            this.takeFromCamera(this.camera.PictureSourceType.CAMERA);\r\n          }\r\n        }, {\r\n          text: this.translateService.instant(\"CONVERSATIONS.NEW_MSG.ATTACH_PHOTO\"),\r\n          cssClass: 'take-photo',\r\n          icon: 'icons-image-photo',\r\n          handler: () => {\r\n            this.takeFromCamera(this.camera.PictureSourceType.PHOTOLIBRARY);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    actionSheet.present();\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/my-stuff/profile/profile.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { NavController, NavParams, Content, AlertController } from 'ionic-angular';\r\nimport { Verifications } from './verifications/verifications';\r\nimport { Address } from './address/address';\r\nimport { UserService, IUser, IUserMaster } from '../../../../providers/user-service';\r\nimport { LoaderService } from '../../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../../shared/config';\r\nimport { AnalyticsService } from \"../../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { DatePicker } from \"@ionic-native/date-picker\";\r\nimport { dateDifference } from \"../../../../shared/util/date\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'page-edit-profile',\r\n  templateUrl: 'edit-profile.html'\r\n})\r\nexport class EditProfile {\r\n  @ViewChild(Content) content: Content;\r\n  public userObj: IUser;\r\n  public userMasterData: IUserMaster;\r\n  private isMasterDetailsLoaded: boolean = false;\r\n  private currentDate: string;\r\n  private phonenumber: string;\r\n  private mask: string = \"(999) 999-9999\"\r\n  constructor(public navCtrl: NavController, private navParams: NavParams, private userService: UserService,\r\n    private alertCtrl: AlertController, private translateService: TranslateService, private datePicker: DatePicker,\r\n    private analyticsService: AnalyticsService, private loaderService: LoaderService) {\r\n    this.userMasterData = {\r\n      _id: '',\r\n      deeplink_base_url: '',\r\n      language: [],\r\n      education_level: [],\r\n      annual_income: [],\r\n      gender: [],\r\n      service_interest: []\r\n    };\r\n    this.currentDate = new Date().toISOString();\r\n    // this.maxDate = new Date().setFullYear(new Date().getFullYear() - 1);\r\n    this.initMasterDetails();\r\n    this.userObj = JSON.parse(JSON.stringify(this.navParams.get('userData')));\r\n    this.phonenumber = this.userObj.profile.phone_number;\r\n    this.formatPhone();\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    this.content.resize();\r\n    this.userService.setTempUserProfileObj(this.userObj);\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.content.resize();\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.EDIT_PROFILE);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.EDIT_PROFILE);\r\n    this.userObj = this.userService.getTempUserProfileObj();\r\n\r\n  }\r\n\r\n  initMasterDetails(): void {\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    this.userService.getDataFromUserMaster().subscribe((response: any) => {\r\n      // // console.log('<<response>>', response);\r\n      if (response.status !== 'ERROR') {\r\n        this.isMasterDetailsLoaded = true;\r\n        this.userMasterData = response.userMaster[0];\r\n        this.userMasterData.service_interest = this.userMasterData.service_interest.sort(this.sortServiceInterest);\r\n      } else {\r\n        // // console.log('Error in getDataFromUserMaster', response);\r\n        this.loaderService.showToaster(response.message);\r\n      }\r\n      this.loaderService.dismissLoader();\r\n    }, error => {\r\n      this.loaderService.showToaster(error);\r\n      this.loaderService.dismissLoader();\r\n    });\r\n  }\r\n\r\n  navigateToVerification(): void {\r\n    this.navCtrl.push(Verifications, { userData: this.userObj });\r\n  }\r\n\r\n  saveToBackend(): void {\r\n    // // console.log(\"save call to backend\");\r\n    // // console.log(this.userObj, \"userobjToBackend\");\r\n    this.userObj.profile.age = parseInt('' + this.userObj.profile.age);\r\n    let phoneValidator: boolean = this.validatePhone();\r\n    let nameValidator: boolean = this.validateNameFields();\r\n    if (nameValidator && phoneValidator) {\r\n      this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n      this.userService.updateUserInfo(this.userObj).subscribe((res: any) => {\r\n        if (res.status == 'SUCCESS') {\r\n          // // console.log(res, \"response from userService.updateUserInfo\");\r\n          this.userService.setUserProfile(this.userObj);\r\n          this.navCtrl.pop();\r\n        } else {\r\n          let alert = this.alertCtrl.create({\r\n            title: this.translateService.instant('ERROR_MESSAGES.ERROR_TITLE'),\r\n            subTitle: res.message,\r\n            buttons: [{\r\n              text: this.translateService.instant('MISC.DISMISS')\r\n            }],\r\n            enableBackdropDismiss: false\r\n          });\r\n          alert.present();\r\n        }\r\n        this.loaderService.dismissLoader();\r\n      }, error => {\r\n        // // console.log(\"ERROR::\", error);\r\n        this.loaderService.showToaster(error);\r\n        this.loaderService.dismissLoader();\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  navigatTo(pageName): void {\r\n    console.log(this.userObj.profile.phone_number);\r\n    console.log(this.phonenumber.replace(/\\D+/g, ''));\r\n    switch (pageName) {\r\n      case 'Address':\r\n        this.navCtrl.push(Address, { userData: this.userObj });\r\n        break;\r\n    }\r\n  }\r\n\r\n  calculateAge(birthday): number { // birthday is a date\r\n    let ageDifMs = Date.now() - birthday.getTime();\r\n    let ageDate = new Date(ageDifMs); // miliseconds from epoch\r\n    return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n  }\r\n\r\n  dateSelectionEvent(e): void {\r\n    // console.log(\"currentDate\", this.currentDate);\r\n    // console.log(\"this.userObj.profile.date_of_birth\", this.userObj.profile.date_of_birth);\r\n    // console.log(\"Selection event\", this.userObj.profile.date_of_birth > this.currentDate);\r\n    if ((this.userObj.profile.date_of_birth > this.currentDate)) {\r\n      this.userObj.profile.date_of_birth = new Date().toISOString();\r\n      this.loaderService.showToaster(this.translateService.instant('YOUR_STUFF.PROFILE.MESSAGES'));\r\n    } else {\r\n      this.userObj.profile.age = this.calculateAge(new Date(this.userObj.profile.date_of_birth));\r\n    }\r\n  }\r\n\r\n\r\n  dateSelection() {\r\n    let that = this;\r\n    this.datePicker.show({\r\n      date: new Date(),\r\n      mode: 'date',\r\n      locale: this.userService.getCurrentLang(),\r\n      cancelButtonLabel: that.translateService.instant('CONVERSATIONS.CANCEL'),\r\n      doneButtonLabel: that.translateService.instant('CONVERSATIONS.OK')\r\n    }).then(\r\n      date => {\r\n        //('Got date: ', date, 'that.currentDate', that.currentDate);\r\n        //console.log(dateDifference(that.currentDate, date));\r\n        if (date) {\r\n          if (dateDifference(that.currentDate, date) <= 0) {\r\n            that.loaderService.showToaster(that.translateService.instant('YOUR_STUFF.PROFILE.MESSAGES.DOB_ERROR'));\r\n          } else {\r\n            that.userObj.profile.date_of_birth = date.toISOString();\r\n            that.userObj.profile.age = that.calculateAge(date);\r\n          }\r\n        }\r\n      },\r\n      err => console.log('Error occurred while getting date: ', err)\r\n      );\r\n  }\r\n\r\n  validateNameFields() {\r\n    if ((this.userObj.profile.first_name.trim().length > 0 && this.userObj.profile.last_name.trim().length > 0)) {\r\n      return true\r\n    } else {\r\n      this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.NAME_VALIDATION'));\r\n      return false;\r\n    }\r\n  }\r\n\r\n  validatePhone() {\r\n    if (this.phonenumber.length > 0) {\r\n      let phonePattern = /^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}/;\r\n      if (phonePattern.test(this.phonenumber)) {\r\n        this.userObj.profile.phone_number = this.phonenumber.replace(/\\D+/g, '');\r\n        return true;\r\n      } else {\r\n        //TODO - Replace this with phone message \r\n        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.PHONE_VALIDATION'));\r\n        return false;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  formatPhone() {\r\n    console.log(this.phonenumber);\r\n    this.phonenumber = this.format(this.phonenumber);\r\n    console.log(this.phonenumber);\r\n  }\r\n  private format(v: string): string {\r\n    let s: string = '';\r\n\r\n    var matches = v.match(/[a-zA-Z0-9]+/g);\r\n    if (matches !== null) {\r\n      let value = matches.join('').split('');\r\n\r\n      var chars = this.mask.split('');\r\n      for (let c of chars) {\r\n        if (value.length === 0) {\r\n          break;\r\n        }\r\n\r\n        switch (c) {\r\n          case '#':\r\n            s += value[0];\r\n            value = value.slice(1);\r\n            break;\r\n\r\n          case '9':\r\n            if (value[0].match(/\\d/) !== null) {\r\n              s += value[0];\r\n              value = value.slice(1);\r\n            }\r\n            break;\r\n\r\n          case 'A':\r\n            if (value[0].match(/[a-zA-Z]/) !== null) {\r\n              s += value[0];\r\n              value = value.slice(1);\r\n            }\r\n            break;\r\n\r\n          default:\r\n            s += c;\r\n        }\r\n      }\r\n    }\r\n\r\n    return s;\r\n  }\r\n\r\n  sortServiceInterest(a: IServiceInterest,b:IServiceInterest){\r\n    return a.name > b.name ? 1 : -1\r\n  }\r\n  \r\n}\r\nexport interface IServiceInterest {\r\n  _id: string;\r\n  name: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/my-stuff/profile/edit-profile/edit-profile.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\nimport { IUser } from '../../../../../providers/user-service';\r\n\r\n@Component({\r\n  selector: 'page-verifications',\r\n  templateUrl: 'verifications.html'\r\n})\r\nexport class Verifications {\r\n  public userObj: IUser;\r\n  constructor(public navCtrl: NavController, private navParams: NavParams) {\r\n      this.userObj = this.navParams.get('userData');\r\n   }\r\n\r\n  ionViewDidLoad() {\r\n    // console.log('Hello Verifications Page');\r\n  }  \r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/my-stuff/profile/edit-profile/verifications/verifications.ts","import { Component, ViewChild, NgZone } from '@angular/core';\r\nimport { NavController, AlertController, NavParams, Navbar } from 'ionic-angular';\r\nimport { UserService, IUser } from '../../../../../providers/user-service';\r\nimport { LoaderService } from '../../../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../../../shared/config';\r\nimport { AroundMeService } from \"../../../../aroundme/aroundme-service\";\r\nimport { AnalyticsService } from \"../../../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: 'page-address',\r\n  templateUrl: 'address.html'\r\n})\r\nexport class Address {\r\n  @ViewChild(Navbar) navBar: Navbar;\r\n  public addressObj: IUser;\r\n  public userProfile: IUser;\r\n  public modelModified: boolean = false;\r\n\r\n  public autocompletePlaces: any;\r\n  public query: string;\r\n\r\n\r\n  constructor(public navCtrl: NavController, private userService: UserService, private loaderService: LoaderService,\r\n    private zone: NgZone, private aroundMeService: AroundMeService, private analyticsService: AnalyticsService, private translateService: TranslateService,\r\n    private alertCtrl: AlertController, private navParams: NavParams) {\r\n\r\n    this.addressObj = {\r\n      _id: this.userService.userObj.user_id,\r\n      profile: {\r\n        home_address: {\r\n          street_address1: '',\r\n          street_address2: '',\r\n          city: '',\r\n          state: '',\r\n          zipcode: ''\r\n        }\r\n      }\r\n    }\r\n    if (this.navParams.get('userData') !== undefined) {\r\n      this.userProfile = JSON.parse(JSON.stringify(this.navParams.get('userData')));\r\n      this.addressObj.profile = this.userProfile.profile;\r\n      this.query = this.addressObj.profile.home_address.street_address1\r\n    }\r\n  }\r\n\r\n\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.ADDRESS_UPDATE);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.ADDRESS_UPDATE);\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    // console.log('Hello Address Page');\r\n\r\n\r\n    this.navBar.backButtonClick = (e: UIEvent) => {\r\n      // console.log(\"BAck clicked\");\r\n\r\n      // todo something\r\n      if (this.modelModified) {\r\n        let alert = this.alertCtrl.create({\r\n          title: this.translateService.instant('LOGIN.CONTINUE_SAVE'),\r\n          buttons: [{\r\n            text: this.translateService.instant('CONVERSATIONS.OK'),\r\n            handler: () => {\r\n              let navTransition = alert.dismiss();\r\n              navTransition.then(() => {\r\n                this.navCtrl.pop();\r\n              });\r\n\r\n              return false;\r\n            }\r\n          },\r\n          {\r\n            text: this.translateService.instant('CONVERSATIONS.CANCEL'),\r\n            role: 'cancel',\r\n            handler: data => {\r\n              // console.log('Cancel clicked');\r\n            }\r\n          }],\r\n          enableBackdropDismiss: false\r\n        });\r\n        alert.present();\r\n      }\r\n      else {\r\n        this.navCtrl.pop();\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  saveToBackend(): void {\r\n    if (this.modelModified) {\r\n      let regex = new RegExp(\"^[0-9]{5}(?:-[0-9]{4})?$\");\r\n      if (regex.test(this.addressObj.profile.home_address.zipcode)) {\r\n        this.addressObj.profile.home_address.verification_status = '';\r\n        this.userProfile.profile = this.addressObj.profile;\r\n        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n        this.userService.updateUserInfo(this.userProfile).subscribe((res: any) => {\r\n          if (res.status == 'SUCCESS') {\r\n            this.navCtrl.pop();\r\n            //this.userProfile.profile = this.addressObj.profile;\r\n            this.userService.setTempUserProfileObj(this.userProfile);\r\n            this.userService.setUserProfile(this.userProfile);\r\n          } else {\r\n            let alert = this.alertCtrl.create({\r\n              title: this.translateService.instant('ERROR_MESSAGES.ERROR_TITLE'),\r\n              subTitle: res.message,\r\n              buttons: [{\r\n                text: this.translateService.instant('MISC.DISMISS')\r\n              }],\r\n              enableBackdropDismiss: false,\r\n              cssClass: 'alert-single'\r\n            });\r\n            alert.present();\r\n          }\r\n          this.loaderService.dismissLoader();\r\n        }, error => {\r\n          this.loaderService.showToaster(error);\r\n          this.loaderService.dismissLoader();\r\n        });\r\n      } else {\r\n        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.ZIP_CODE_VALID'));\r\n      }\r\n    } else {\r\n      this.navCtrl.pop();\r\n    }\r\n  }\r\n\r\n  detectChange(e) {\r\n    this.modelModified = true;\r\n  }\r\n\r\n\r\n  autocompletePlacesSearch() {\r\n    // console.log(\"Onupdate called \",this.searchLocation.query )\r\n    let that = this, searchObj = null, autocompletePlacesTemp: Array<any> = [];\r\n    if (that.query == '') {\r\n      // Clear results when no input is provided \r\n      that.autocompletePlaces = [];\r\n      return;\r\n    } else if (that.query.length < 3) {\r\n      //To show results till the user clears the input\r\n      return;\r\n    }\r\n    searchObj = { input: that.query };\r\n    //, types: ['address'] , componentRestrictions: { country: 'US' }\r\n    that.aroundMeService.getPlacePredictions(searchObj).subscribe((response: any) => {\r\n      autocompletePlacesTemp = [];\r\n      let places = response.places.predictions;\r\n      if (places) {\r\n        places.forEach(function (place) {\r\n          autocompletePlacesTemp.push(place);\r\n        });\r\n        // apply result on autocompletePlaces object \r\n        that.zone.run(function () {\r\n          that.autocompletePlaces = autocompletePlacesTemp;\r\n        });\r\n      } else {\r\n        that.autocompletePlaces = [];\r\n      }\r\n    }, error => {\r\n      this.loaderService.showToaster(error);\r\n    });\r\n  }\r\n\r\n  onPlaceSelect(placeDetail): void {\r\n    this.modelModified = true;\r\n    this.autocompletePlaces = [];\r\n    this.addressObj.profile.home_address.zipcode = '';\r\n    this.addressObj.profile.home_address.street_address2 = '';\r\n    this.query = placeDetail.description;\r\n    this.aroundMeService.placeDetailById({ place_id: placeDetail.place_id }).subscribe((place: any) => {\r\n      if (place.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        //this.query = place.location.address;\r\n        this.addressObj.profile.home_address.street_address1 = place.location.address;\r\n        this.addressObj.profile.home_address.zipcode = place.location.zipcode;\r\n        this.addressObj.profile.home_address.city = place.location.city;\r\n        this.addressObj.profile.home_address.state = place.location.state;\r\n        this.addressObj.profile.home_address.place_id = placeDetail.place_id;\r\n        this.addressObj.profile.home_address.lat = place.location.lat;\r\n        this.addressObj.profile.home_address.long = place.location.long;\r\n        // add marker on map \r\n      } else {\r\n        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.ADDRESS_NOT_FOUND'));\r\n      }\r\n    }, error => {\r\n      this.loaderService.showToaster(error);\r\n    });\r\n  }\r\n  hideAutoComplete(){\r\n    this.autocompletePlaces = [];\r\n  }\r\n  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/my-stuff/profile/edit-profile/address/address.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams, Events } from 'ionic-angular';\r\nimport { UserService, IUser, ICoachMarksSettingsRequest } from '../../../providers/user-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { ENVIRONMENT } from '../../../shared/environment';\r\nimport { ChangePassword } from './change-password/change-password';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { PubNubService } from '../../../providers/pubnub-service';\r\nimport { BlockedUsers } from './blocked-users/blocked-users';\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n@Component({\r\n  selector: 'page-settings',\r\n  templateUrl: 'settings.html'\r\n})\r\nexport class Settings {\r\n  public userObj: IUser;\r\n  public appVersion: string = ENVIRONMENT.APP_VERSION_DISPLAY;\r\n  public showCoachMarks: boolean = false;\r\n  public availableLanguages: Array<ILanguages>;\r\n  public currentLanguage;\r\n  public usertype = CONSTANTS.USER_TYPE;\r\n  public LANGUAGEMAP = {\r\n    'en': [{ \"name\": \"English\", \"id\": \"en\" },\r\n      { \"name\": \"Spanish\", \"id\": \"es\" },\r\n      { \"name\": \"Korean\", \"id\": \"ko\" },\r\n      { \"name\": \"Haitian Creole\", \"id\": \"ht\" },\r\n      { \"name\": \"Russian\", \"id\": \"ru\" },\r\n      { \"name\": \"Chinese, Simplified\", \"id\": \"zh-CN\" },\r\n      { \"name\": \"Chinese, Traditional\", \"id\": \"zh-TW\" },\r\n      { \"name\": \"Portuguese\", \"id\": \"pt\" }],\r\n    'ko': [{ \"name\": \"영어\", \"id\": \"en\" },\r\n      { \"name\": \"스페인어\", \"id\": \"es\" },\r\n      { \"name\": \"한국어\", \"id\": \"ko\" },\r\n      { \"name\": \"아이티 크리올\", \"id\": \"ht\" },\r\n      { \"name\": \"러시아어\", \"id\": \"ru\" },\r\n      { \"name\": \"중국어 간체\", \"id\": \"zh-CN\" },\r\n      { \"name\": \"중국 전통\", \"id\": \"zh-TW\" },\r\n      { \"name\": \"포르투갈어\", \"id\": \"pt\" }],\r\n    'es': [{ \"name\": \"Inglés\", \"id\": \"en\" },\r\n      { \"name\": \"Español\", \"id\": \"es\" },\r\n      { \"name\": \"Coreano\", \"id\": \"ko\" },\r\n      { \"name\": \"Criollo haitiano\", \"id\": \"ht\" },\r\n      { \"name\": \"Ruso\", \"id\": \"ru\" },\r\n      { \"name\": \"Chino (simplificado)\", \"id\": \"zh-CN\" },\r\n      { \"name\": \"Chino (tradicional)\", \"id\": \"zh-TW\" },\r\n      { \"name\": \"Portugués\", \"id\": \"pt\" }],\r\n    'ht': [{ \"name\": \"Angle\", \"id\": \"en\" },\r\n      { \"name\": \"Panyòl\", \"id\": \"es\" },\r\n      { \"name\": \"Koreyen\", \"id\": \"ko\" },\r\n      { \"name\": \"Kreyòl Ayisyen\", \"id\": \"ht\" },\r\n      { \"name\": \"Ris\", \"id\": \"ru\" },\r\n      { \"name\": \"Chinwa, Senplifye\", \"id\": \"zh-CN\" },\r\n      { \"name\": \"Chinwa, tradisyonèl\", \"id\": \"zh-TW\" },\r\n      { \"name\": \"Pòtigè\", \"id\": \"pt\" }],\r\n    'ru': [{ \"name\": \"английский\", \"id\": \"en\" },\r\n      { \"name\": \"испанский\", \"id\": \"es\" },\r\n      { \"name\": \"Корейский\", \"id\": \"ko\" },\r\n      { \"name\": \"Гаитянский креольский\", \"id\": \"ht\" },\r\n      { \"name\": \"русский\", \"id\": \"ru\" },\r\n      { \"name\": \"Китайский упрощенный\", \"id\": \"zh-CN\" },\r\n      { \"name\": \"Китайский традиционный\", \"id\": \"zh-TW\" },\r\n      { \"name\": \"португальский\", \"id\": \"pt\" }],\r\n    'zh-CN': [{ \"name\": \"英语\", \"id\": \"en\" },\r\n      { \"name\": \"西班牙语\", \"id\": \"es\" },\r\n      { \"name\": \"朝鲜的\", \"id\": \"ko\" },\r\n      { \"name\": \"海地克里奥尔人\", \"id\": \"ht\" },\r\n      { \"name\": \"俄语\", \"id\": \"ru\" },\r\n      { \"name\": \"简体中文\", \"id\": \"zh-CN\" },\r\n      { \"name\": \"中国传统的\", \"id\": \"zh-TW\" },\r\n      { \"name\": \"葡萄牙语\", \"id\": \"pt\" }],\r\n    'zh-TW': [{ \"name\": \"英語\", \"id\": \"en\" },\r\n      { \"name\": \"西班牙語\", \"id\": \"es\" },\r\n      { \"name\": \"朝鮮的\", \"id\": \"ko\" },\r\n      { \"name\": \"海地克里奧爾人\", \"id\": \"ht\" },\r\n      { \"name\": \"俄語\", \"id\": \"ru\" },\r\n      { \"name\": \"簡體中文\", \"id\": \"zh-CN\" },\r\n      { \"name\": \"中國傳統的\", \"id\": \"zh-TW\" },\r\n      { \"name\": \"葡萄牙語\", \"id\": \"pt\" }],\r\n      'pt': [{ \"name\": \"Inglês\", \"id\": \"en\" },\r\n      { \"name\": \"Espanhol\", \"id\": \"es\" },\r\n      { \"name\": \"Coreano\", \"id\": \"ko\" },\r\n      { \"name\": \"Crioulo Haitiano\", \"id\": \"ht\" },\r\n      { \"name\": \"Russo\", \"id\": \"ru\" },\r\n      { \"name\": \"Chinês, Simplificado\", \"id\": \"zh-CN\" },\r\n      { \"name\": \"Chinês, Tradicional\", \"id\": \"zh-TW\" },\r\n      { \"name\": \"Português\", \"id\": \"pt\" }]\r\n\r\n  };\r\n\r\n  constructor(public navCtrl: NavController, public userService: UserService, private analyticsService: AnalyticsService,\r\n    private translateService: TranslateService, private events: Events,\r\n    private navParams: NavParams, private loaderService: LoaderService, private pubNubService: PubNubService) {\r\n    this.userObj = this.navParams.get('userData');\r\n    this.currentLanguage = this.translateService.currentLang;\r\n    this.availableLanguages = this.LANGUAGEMAP[this.currentLanguage];\r\n    this.availableLanguages = this.availableLanguages.sort(this.sortLanguages);\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.MY_STUFF_SETTINGS);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.MY_STUFF_SETTINGS);\r\n    this.showCoachMarks = this.userService.userObj.show_coach_marks.all;\r\n  }\r\n\r\n  ionViewDidUnload() {\r\n    //console.log(\"Settings\");\r\n  }\r\n\r\n  changeNotitficationStatus(): void {\r\n    let notificationObj: Object = { notification_enabled: this.userObj.notification_enabled, _id: this.userObj._id };\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    let pushChannels = this.pubNubService.getPushNotificationChannels();\r\n    this.userService.updateUserInfo(notificationObj).subscribe((res: any) => {\r\n      if (res.status == 'SUCCESS') {\r\n        this.userService.userProfile.notification_enabled = this.userObj.notification_enabled;\r\n        if (!this.userObj.notification_enabled) {\r\n          this.pubNubService.unRegisterDevice(pushChannels, this.userService.deviceToken, this.userService.pushPlatform);\r\n        } else {\r\n          this.pubNubService.registerDevice(pushChannels, this.userService.deviceToken, this.userService.pushPlatform);\r\n        }\r\n        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SETTINGS_UPDATED'));\r\n      } else {\r\n        this.loaderService.showToaster(res.message);\r\n      }\r\n      this.loaderService.dismissLoader();\r\n    }, error => {\r\n      // // console.log(\"ERROR::\", error);\r\n      this.loaderService.showToaster(error);\r\n      this.loaderService.dismissLoader();\r\n    });\r\n  }\r\n\r\n  changeLowDataSettings(): void {\r\n    let notificationObj: Object = { low_data: this.userObj.low_data, _id: this.userObj._id };\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    this.userService.updateUserInfo(notificationObj).subscribe((res: any) => {\r\n      if (res.status == 'SUCCESS') {\r\n        this.userService.userObj.low_data = this.userObj.low_data;\r\n        this.userService.userProfile.low_data = this.userObj.low_data;\r\n        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SETTINGS_UPDATED'));\r\n      } else {\r\n        this.loaderService.showToaster(res.message);\r\n      } this.loaderService.dismissLoader();\r\n    }, error => {\r\n      // // console.log(\"ERROR::\", error);\r\n      this.loaderService.showToaster(error);\r\n      this.loaderService.dismissLoader();\r\n    });\r\n  }\r\n\r\n  changeCoachMarkStatus(): void {\r\n    let coachMarksSettingsRequest: ICoachMarksSettingsRequest;\r\n    let showCoachMarks = { all: true, feed: true, conversation: true, around_me: true, profile: true };\r\n    showCoachMarks.all = showCoachMarks.feed = showCoachMarks.conversation = showCoachMarks.around_me = showCoachMarks.profile = this.showCoachMarks;\r\n    coachMarksSettingsRequest = Object.assign({ user_id: this.userObj.user_id }, { show_coach_marks: showCoachMarks });\r\n\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    this.userService.setCoachMarkSettings(coachMarksSettingsRequest).subscribe((response) => {\r\n      if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        this.userObj.show_coach_marks = response.show_coach_marks;\r\n        this.userService.setUserProfile(this.userObj);\r\n        this.userService.isCoachSettingsUpdated = true;\r\n        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SETTINGS_UPDATED'));\r\n      } else {\r\n        this.loaderService.showToaster(response.message);\r\n      }\r\n      this.loaderService.dismissLoader();\r\n    }, error => {\r\n      this.loaderService.showToaster(error);\r\n      this.loaderService.dismissLoader();\r\n    });\r\n  }\r\n\r\n  navigatTo(pageName): void {\r\n    // console.log(pageName);\r\n    switch (pageName) {\r\n      case 'changePassword':\r\n        if (!this.userObj.facebook) {\r\n          this.navCtrl.push(ChangePassword, { userData: this.userObj });\r\n        }\r\n        break;\r\n      case 'blockedUsers':\r\n        this.navCtrl.push(BlockedUsers);\r\n        break;\r\n    }\r\n  }\r\n\r\n  onLogout(): void {\r\n    //console.log(\"---\", this.navCtrl.length());\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.LOGGING_OUT'));\r\n    this.userService.logout();\r\n  }\r\n\r\n  changeLanguage() {\r\n    this.translateService.use(this.currentLanguage);\r\n    this.userService.setCurrentLang(this.currentLanguage);\r\n    this.pubNubService.setUserLang(this.currentLanguage);\r\n    this.availableLanguages = this.LANGUAGEMAP[this.currentLanguage];\r\n    this.availableLanguages = this.availableLanguages.sort(this.sortLanguages);\r\n    if (this.userService.userObj && this.userService.userObj.user_id) {\r\n      this.userService.updateUserDeviceLang({ user_id: this.userService.userObj.user_id }).subscribe((res) => {\r\n      });\r\n      this.events.publish(CONSTANTS.APP_EVENTS.REFRESH_CONVERSATION);\r\n      this.events.publish(CONSTANTS.APP_EVENTS.LANGUAGE_UPDATE);\r\n    }\r\n  }\r\n\r\n  sortLanguages(a: ILanguages,b:ILanguages){\r\n    return a.name > b.name ? 1 : -1\r\n  }\r\n\r\n  \r\n}\r\nexport interface ILanguages {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/my-stuff/settings/settings.ts","import { Component } from '@angular/core';\r\nimport { NavParams, NavController, AlertController } from 'ionic-angular';\r\nimport { UserService, IUser } from '../../../../providers/user-service';\r\nimport { LoaderService } from '../../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../../shared/config';\r\nimport { AnalyticsService } from \"../../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: 'change-password',\r\n  templateUrl: 'change-password.html'\r\n})\r\nexport class ChangePassword {\r\n\r\n  private userObj: IUser;\r\n  public newPassword: string;\r\n  public repeatPassword: string;\r\n  private mediumRegex: RegExp;\r\n  constructor(private userService: UserService, private loaderService: LoaderService, private navParams: NavParams, private translateService: TranslateService,\r\n    private analyticsService: AnalyticsService, private alertCtrl: AlertController, private navctrl: NavController) {\r\n    // // console.log('Hello ChangePassword Component');\r\n    this.newPassword = '';\r\n    this.repeatPassword = '';\r\n    this.mediumRegex = new RegExp(CONSTANTS.CHANGE_PASSWORD_MESSAGES.MEDIUM_REGX);\r\n    this.userObj = this.navParams.get('userData');\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.MY_STUFF_CHANGE_PASSWORD);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.MY_STUFF_CHANGE_PASSWORD);\r\n  }\r\n\r\n  saveToBackend() {\r\n    let that = this;\r\n    that.repeatPassword = that.repeatPassword.trim();\r\n    that.newPassword = that.newPassword.trim();\r\n    let validatePassword: boolean = that.mediumRegex.test(that.newPassword);\r\n    let message = '';\r\n    if (that.newPassword == '') {\r\n      message = this.translateService.instant('ERROR_MESSAGES.PASSWORD_BLANK');\r\n    } else if (that.newPassword !== that.repeatPassword) {\r\n      message = this.translateService.instant('ERROR_MESSAGES.PASSWORD_MISMATCH');\r\n    } else if (validatePassword) {\r\n      let passwordRequest: Object = { password: that.repeatPassword, email: that.userObj.email, _id: that.userObj._id };\r\n      that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n      that.userService.changePassword(passwordRequest).subscribe((res: any) => {\r\n        if (res.status == 'SUCCESS') {\r\n          // // console.log(res, \"response from userService.updateUserInfo\");\r\n          that.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.UPDATE_SUCCESSFUL'));\r\n          that.loaderService.dismissLoader();\r\n          that.navctrl.pop();\r\n        } else {\r\n          that.loaderService.showToaster(res.message);\r\n          that.loaderService.dismissLoader();\r\n        }\r\n\r\n      }, error => {\r\n        // // console.log(\"ERROR::\", error);\r\n        that.loaderService.showToaster(error);\r\n        that.loaderService.dismissLoader();\r\n      });\r\n    } else {\r\n      message = this.translateService.instant('ERROR_MESSAGES.PASSWORD_FORMAT');\r\n    }\r\n    if (message != '') {\r\n      let alert = that.alertCtrl.create({\r\n        title: that.translateService.instant('ERROR_MESSAGES.ERROR_TITLE'),\r\n        subTitle: message,\r\n        buttons: [{\r\n          text: this.translateService.instant('CONVERSATIONS.OK'),\r\n          handler: () => {\r\n            that.repeatPassword = '';\r\n            that.newPassword = '';\r\n          }\r\n        }],\r\n        enableBackdropDismiss: false,\r\n        cssClass: 'alert-single'\r\n      });\r\n      alert.present();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/my-stuff/settings/change-password/change-password.ts","import { Component } from '@angular/core';\r\nimport { NavController, Events, AlertController } from 'ionic-angular';\r\nimport { LoaderService } from \"../../../../providers/loader-service\";\r\nimport { UserService, IBlockedUser } from \"../../../../providers/user-service\";\r\nimport { IUpdateConnectionStatusRequestParams, ChatService } from \"../../../conversations/chat-service\";\r\nimport { CONSTANTS } from \"../../../../shared/config\";\r\nimport { IConnectionStatusChangeState, PubNubService } from \"../../../../providers/pubnub-service\";\r\nimport { AnalyticsService } from \"../../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n\r\n@Component({\r\n  selector: 'page-blocked-users',\r\n  templateUrl: 'blocked-users.html'\r\n})\r\nexport class BlockedUsers {\r\n  public blockedUsers: Array<IBlockedUser>;\r\n  public user_id: string;\r\n\r\n  constructor(public navCtrl: NavController, public userService: UserService, public chatService: ChatService, private pubNubService: PubNubService,\r\n    private analyticsService: AnalyticsService, private events: Events, public loaderService: LoaderService, \r\n    private translateService: TranslateService, public alertCtrl: AlertController) {\r\n    this.user_id = this.userService.userProfile.user_id;\r\n    this.loadBlockedUsers();\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.MY_STUFF_BLOCKED_USERS);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.MY_STUFF_BLOCKED_USERS);\r\n  }\r\n\r\n  loadBlockedUsers() {\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    this.userService.getBlockedUsers(this.user_id).subscribe((result: any) => {\r\n      if (result) {\r\n        this.blockedUsers = result.blocked_users || [];\r\n      }\r\n      this.loaderService.dismissLoader();\r\n    });\r\n  }\r\n\r\n  unBlockUser(user: IBlockedUser, index: number) {\r\n    let params: IUpdateConnectionStatusRequestParams = {\r\n      user_id: this.user_id,\r\n      shared_channel: user.shared_channel,\r\n      connection_status: CONSTANTS.CONNECTION_STATUS.UNBLOCKED,\r\n      receiver_id: user.user_id,\r\n      receiver_username: user.user_name,\r\n      is_advocate: false      \r\n    };\r\n\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    this.chatService.updateConnectionStatus(params).subscribe((result) => {\r\n      if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        this.blockedUsers.splice(index, 1);\r\n        this.loaderService.dismissLoader();\r\n        let alertControl = this.alertCtrl.create({\r\n          title: this.translateService.instant('ERROR_MESSAGES.UNBLOCK_SUCCESS'),\r\n          buttons: [{\r\n            text: this.translateService.instant('MISC.OK')\r\n          }],\r\n          enableBackdropDismiss: false,\r\n          cssClass: 'alert-single'\r\n        });\r\n        alertControl.present();\r\n        this.notifyBlockedUser(user);\r\n        this.events.publish(CONSTANTS.APP_EVENTS.REFRESH_CONVERSATION);\r\n      } else {\r\n        this.loaderService.dismissLoader();\r\n        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n      }\r\n      // Do not dismiss loader as we will be doint in conversation screen \r\n      // this.loaderService.dismissLoader();\r\n\r\n    });\r\n  }\r\n\r\n  notifyBlockedUser(user: IBlockedUser) {\r\n    let stateObj: IConnectionStatusChangeState = {\r\n      _id: user.shared_channel,\r\n      name: user.first_name,\r\n      connection_status: CONSTANTS.CONNECTION_STATUS.CONNECTED,\r\n      action: CONSTANTS.USER_STATES.CONNECTION_STATUS_CHANGED,\r\n      connection_action: CONSTANTS.CONNECTION_STATUS.UNBLOCKED,\r\n      connection_type: CONSTANTS.CONVERSATION_TYPE.SINGLE\r\n    };\r\n    this.pubNubService.setConnectionStatusChangeState(stateObj, [user.user_id]);\r\n  }\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/my-stuff/settings/blocked-users/blocked-users.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams, AlertController } from 'ionic-angular';\r\nimport { UserService, IFeedback } from '../../../providers/user-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: 'page-tell-feedback',\r\n  templateUrl: 'tell-feedback.html'\r\n})\r\nexport class TellFeedback {\r\n  public feedbackObj: IFeedback;\r\n  constructor(public navCtrl: NavController, private userService: UserService, private loaderService: LoaderService, private translateService: TranslateService,\r\n    private analyticsService: AnalyticsService, private navParams: NavParams, private alertCtrl: AlertController) {\r\n    this.feedbackObj = {\r\n      user_id: '',\r\n      message: '',\r\n      first_name: '',\r\n      last_name: '',\r\n      user_email: ''\r\n    }\r\n    let userObj = this.navParams.get('userData');\r\n    // console.log(\"User\", userObj);\r\n    this.feedbackObj.first_name = userObj.profile.first_name;\r\n    this.feedbackObj.last_name = userObj.profile.last_name;\r\n    this.feedbackObj.user_email = userObj.email;\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.FEEDBACK);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.FEEDBACK);\r\n  }\r\n\r\n  saveFeeedBack(): void {\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.REPORTING'));\r\n    this.userService.saveFeedBack(this.feedbackObj).subscribe((res: any) => {\r\n      // // console.log('feedback response', res)\r\n      if (res.status !== 'ERROR') {\r\n        this.loaderService.dismissLoader();\r\n        let alert = this.alertCtrl.create({\r\n          title: res.message,\r\n          buttons: [{\r\n            text: this.translateService.instant('CONVERSATIONS.OK'),\r\n            handler: () => {\r\n              this.navCtrl.pop();\r\n            }\r\n          }],\r\n          enableBackdropDismiss: false,\r\n          cssClass: 'alert-single'\r\n        });\r\n        alert.present();\r\n\r\n      } else {\r\n        this.loaderService.dismissLoader();\r\n        let alert = this.alertCtrl.create({\r\n          title: this.translateService.instant('ERROR_MESSAGES.ERROR_TITLE'),\r\n          subTitle: res.message,\r\n          buttons: [{\r\n            text: this.translateService.instant('MISC.OK')\r\n          }],\r\n          enableBackdropDismiss: false,\r\n          cssClass: 'alert-single'\r\n        });\r\n        alert.present();\r\n      }\r\n    }, error => {\r\n      this.loaderService.showToaster(error);\r\n      this.loaderService.dismissLoader();\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/my-stuff/tell-feedback/tell-feedback.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { NavController, Content } from 'ionic-angular';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ValidationService } from '../../../shared/validationService';\r\nimport { LoginLinkSent } from '../login-link-sent/login-link-sent';\r\nimport { RequestLoginError } from '../request-login-error/request-login-error';\r\nimport { UserService } from '../../../providers/user-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n@Component({\r\n  selector: 'page-request-login-link',\r\n  templateUrl: 'request-login-link.html'\r\n})\r\nexport class RequestLoginLink {\r\n  emailAddress: string;\r\n  requestLogin: FormGroup;\r\n  isFormSubmmited: boolean;\r\n  isForgotpasswordApiCalled: boolean;\r\n  @ViewChild(Content) content: Content;\r\n  constructor(public navCtrl: NavController, public formBuilder: FormBuilder, private userService: UserService,\r\n    private translateService: TranslateService, private analyticsService: AnalyticsService, private loaderService: LoaderService) {\r\n    this.emailAddress = '';\r\n    this.isFormSubmmited = false;\r\n    this.isForgotpasswordApiCalled = false;\r\n    this.requestLogin = formBuilder.group({\r\n      'emailAddress': ['', Validators.compose([Validators.maxLength(150), ValidationService.emailValidator, Validators.required])]\r\n    });\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.REQUEST_PASSWORD);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.REQUEST_PASSWORD);\r\n  }\r\n\r\n  onSendLoginLink() {\r\n    this.isFormSubmmited = true;\r\n    if (this.requestLogin.valid && !this.isForgotpasswordApiCalled) {\r\n      this.isForgotpasswordApiCalled = true;\r\n      this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n      this.userService.forgotpassword(this.emailAddress).subscribe((response) => {\r\n        this.isForgotpasswordApiCalled = false;\r\n        this.loaderService.dismissLoader();\r\n        if (response.status !== \"ERROR\" && response.status_code === 0) {\r\n          this.navCtrl.push(LoginLinkSent, { email: this.emailAddress });\r\n        } else if (response.status_code === 1 || response.status_code === 2) {\r\n          this.requestLogin.reset();\r\n          this.navCtrl.push(RequestLoginError, { status_code: response.status_code, error_message: response.message });\r\n        }\r\n      }, error => {\r\n        // console.log(\"ERROR::\", error);\r\n        this.loaderService.dismissLoader();\r\n        this.loaderService.showToaster(error);\r\n      })\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/request-login-link/request-login-link.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\nimport { LoginPage } from '../../login/login';\r\nimport { CONSTANTS } from \"../../../shared/config\";\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { UserService } from \"../../../providers/user-service\";\r\n@Component({\r\n  selector: 'page-login-link-sent',\r\n  templateUrl: 'login-link-sent.html'\r\n})\r\nexport class LoginLinkSent {\r\n  public email: string;\r\n  constructor(public navCtrl: NavController, private navParams: NavParams, private analyticsService: AnalyticsService, private userService: UserService) {\r\n    this.email = this.navParams.get('email');\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.REQUEST_PASSWORD_SUCCESS);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.REQUEST_PASSWORD_SUCCESS);\r\n  }\r\n\r\n  onContinue() {\r\n    this.navCtrl.push(LoginPage, { loginLinkSentEmail: this.email });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login-link-sent/login-link-sent.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\nimport { BaseLoginClass } from './../base-login';\r\nimport { UserService } from '../../../providers/user-service';\r\nimport { AlertController, Events } from 'ionic-angular';\r\nimport { LoaderService } from '../../../providers/loader-service'\r\nimport { CONSTANTS } from \"../../../shared/config\";\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: 'page-request-login-error',\r\n  templateUrl: 'request-login-error.html'\r\n})\r\nexport class RequestLoginError extends BaseLoginClass {\r\n  public status_code: number;\r\n  public error_message: string;\r\n\r\n\r\n  constructor(public userService: UserService, public alertCtrl: AlertController, public events: Events, public translateService: TranslateService,\r\n    private analyticsService: AnalyticsService,public loaderService: LoaderService, public navCtrl: NavController, private navParams: NavParams) {\r\n    super(userService, alertCtrl, events, translateService, loaderService);\r\n    this.status_code = this.navParams.get('status_code');\r\n    this.error_message = this.navParams.get('error_message')\r\n    //console.log('Hello RequestLoginError Page', this.status_code, this.error_message);\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.REQUEST_PASSWORD_ERROR);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.REQUEST_PASSWORD_ERROR);\r\n  }\r\n\r\n  fixThisIssue() {\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n  loginWithFacebook() {\r\n    this.onFLogin();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/request-login-error/request-login-error.ts","import { UserService, IUser } from '../../providers/user-service';\r\nimport { AlertController, Events } from 'ionic-angular';\r\nimport { LoaderService } from '../../providers/loader-service'\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { CONSTANTS } from '../../shared/config';\r\nexport class BaseLoginClass {\r\n\r\n    constructor(public userService: UserService, public alertCtrl: AlertController, public events: Events,\r\n        public translateService: TranslateService, public loaderService: LoaderService) {\r\n        this.userService = userService;\r\n    }\r\n\r\n    proceedLogin(user, callback?) {\r\n        let that = this;\r\n        that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n        that.userService.login(user).subscribe(function (data: any) {\r\n            if (data.status !== \"ERROR\") {\r\n                that.userService.storeUserCredentials(data, function () {\r\n                    that.events.publish('user:login');\r\n                });\r\n            } else {\r\n                if (!callback) {\r\n                    that.userService.fbLogout();\r\n                    let alert = that.alertCtrl.create({\r\n                        title: that.translateService.instant('ERROR_MESSAGES.ERROR_TITLE'),\r\n                        message: data.message,\r\n                        buttons: [{\r\n                            text: this.translateService.instant('MISC.OK')\r\n                        }],\r\n                        enableBackdropDismiss: false,\r\n                        cssClass: 'alert-single'\r\n                    });\r\n                    alert.present();\r\n                } else {\r\n                    callback(data.message);\r\n                }\r\n            }\r\n            that.loaderService.dismissLoader();\r\n        }, error => {\r\n            // console.log(\"ERROR::\", error);\r\n            this.loaderService.dismissLoader();\r\n            this.loaderService.showToaster(error);\r\n        });\r\n    }\r\n\r\n    onFLogin() {\r\n        let that = this;\r\n        that.userService.fbLogin().then(() => {\r\n            that.userService.getUserFacebookProfile().then((profileData) => {\r\n                // console.log('In fbLogin');\r\n                // console.log(JSON.stringify(profileData), \"ProfileData IN FBlogin\");\r\n                if (!profileData.errorCode) {\r\n                    let userObj: IUser = {\r\n                        user_name: profileData.name,\r\n                        email: profileData.email,\r\n                        profile: {\r\n                            profile_pic: CONSTANTS.FACEBOOk_PROFILE_URL.PREFIX + profileData.id + CONSTANTS.FACEBOOk_PROFILE_URL.POSTFIX || '',\r\n                            name: profileData.name\r\n                        },\r\n                        authType: 'fb',\r\n                        facebook: profileData.id\r\n                    };\r\n                    // console.log(\"Outer FBlogin userObj>> \", userObj);\r\n                    that.proceedLogin(userObj);\r\n                } else {\r\n                    // console.log('In onFLogin got error', profileData);\r\n                }\r\n            }\r\n            ), error => {\r\n                // console.log(\" ERROR::\", error);\r\n                this.loaderService.dismissLoader();\r\n                this.loaderService.showToaster(error);\r\n            };\r\n        }, error => {\r\n            // console.log(\"Facebook ERROR::\", error);\r\n            this.loaderService.dismissLoader();\r\n            this.loaderService.showToaster(error);\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/base-login.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { NavController, Slides } from 'ionic-angular';\r\nimport { SignUp } from '../sign-up/sign-up';\r\nimport { LoginPage } from '../../login/login';\r\nimport { CONSTANTS } from \"../../../shared/config\";\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\n\r\n@Component({\r\n  selector: 'app-info',\r\n  templateUrl: 'app-info.html'\r\n})\r\n\r\nexport class AppInfo {\r\n  public runningSliderConfig: {\r\n    initialSlide: number\r\n  };\r\n\r\n  @ViewChild(Slides) slides: Slides;\r\n  constructor(private navCtrl: NavController, private analyticsService: AnalyticsService) {\r\n    this.runningSliderConfig = {\r\n      initialSlide: 0\r\n    };\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.APP_ONBOARDING);\r\n  }\r\n\r\n  skipSlides() {\r\n    this.slides.slideTo(3, 500);\r\n  }\r\n\r\n  navigatetoNextPage() {\r\n    this.navCtrl.push(SignUp);\r\n  }\r\n\r\n  navigatetoBackPage() {\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n  alreadyHaveAccount(): void {\r\n    this.navCtrl.setRoot(LoginPage);\r\n  }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/get-started/app-info/app-info.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { NavController, Platform, Content } from 'ionic-angular';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SelectPassword } from './../select-password/select-password';\r\nimport { LoginPage } from '../../login/login';\r\nimport { UserService, ISignUpRequest } from '../../../providers/user-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { ValidationService } from '../../../shared/validationService';\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\ndeclare let cordova;\r\n@Component({\r\n  selector: 'page-sign-up',\r\n  templateUrl: 'sign-up.html'\r\n})\r\nexport class SignUp {\r\n  @ViewChild(Content) content: Content;\r\n  private isEmailVerified: boolean;\r\n  public signUpModel: ISignUpRequest;\r\n  public signupForm: FormGroup;\r\n  public isSignupFormInValid: boolean;\r\n  constructor(public navCtrl: NavController, private platform: Platform, private userService: UserService, private translateService: TranslateService,\r\n    private analyticsService: AnalyticsService,private loaderService: LoaderService, private fb: FormBuilder) {\r\n\r\n    this.signupForm = this.fb.group({\r\n      'firstName': ['', Validators.compose([Validators.maxLength(50), Validators.required])],\r\n      'lastName': ['', Validators.compose([Validators.maxLength(50), Validators.required])],\r\n      'email': ['', Validators.compose([Validators.maxLength(150), ValidationService.emailValidator, Validators.required])],\r\n      'zipcode': ['', Validators.compose([Validators.maxLength(10), ValidationService.zipcodeValidator, Validators.required])],\r\n      'privacyAccepted': ['', Validators.compose([ValidationService.isTrueValue, Validators.required])]\r\n    });\r\n\r\n\r\n    this.signUpModel = {\r\n      first_name: '',\r\n      last_name: '',\r\n      email: '',\r\n      zipcode: null,\r\n      is_terms_checked: false,\r\n      is_privacy_checked: false,\r\n      is_terms_privacy_accepted: false\r\n    };\r\n    this.isSignupFormInValid = true;\r\n    this.isEmailVerified = false;\r\n  }\r\n  ngOnInit() {\r\n    //console.log('In SignUp ngOnInit');    \r\n    this.signupForm.valueChanges.subscribe(data => {\r\n      if (this.signupForm.invalid !== this.isSignupFormInValid) {\r\n        this.isSignupFormInValid = !this.isSignupFormInValid;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.SIGN_UP);\r\n  }\r\n\r\n  openPrivacyNoticeUrl() {\r\n    this.signUpModel.is_privacy_checked = true;\r\n    this.openInAppBrowser(CONSTANTS.PRIVACY_NOTICE_URL);\r\n  }\r\n\r\n  openTermsOfUseUrl() {\r\n    this.signUpModel.is_terms_checked = true;\r\n    this.openInAppBrowser(CONSTANTS.TERM_OF_USE_URL);\r\n  }\r\n\r\n  openInAppBrowser(url) {\r\n    this.platform.ready().then(() => {\r\n      cordova.InAppBrowser.open(url, \"_blank\", \"location=no\");\r\n    });\r\n  }\r\n\r\n  privacyAccepted() {\r\n    this.signUpModel.is_terms_privacy_accepted = !this.signUpModel.is_terms_privacy_accepted;\r\n  }\r\n\r\n  onContinue() {\r\n    if (this.signupForm.valid && !this.isEmailVerified && !this.isSignupFormInValid) {\r\n      this.isEmailVerified = true;\r\n      this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n      this.userService.verifyEmailId(this.signUpModel.email).subscribe((response) => {\r\n        this.isEmailVerified = false;\r\n        if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n          if (response.is_exist) {\r\n            this.navCtrl.push(LoginPage, { email: this.signUpModel.email });\r\n          } else {\r\n            this.navCtrl.push(SelectPassword, { signUpModel: this.signUpModel });\r\n          }\r\n        } else {\r\n          this.loaderService.showToaster(response.message);\r\n        }\r\n        this.loaderService.dismissLoader();\r\n      });\r\n    }\r\n  }\r\n  navigatetoBackPage() {\r\n    this.navCtrl.pop();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/get-started/sign-up/sign-up.ts","import { Component } from '@angular/core';\r\nimport { NavController, Events, NavParams } from 'ionic-angular';\r\n\r\nimport { ChoosePassword } from './choose-password/choose-password';\r\nimport { LoginPage } from '../../login/login';\r\nimport { UserService, ISignUpRequest } from '../../../providers/user-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: 'page-select-password',\r\n  templateUrl: 'select-password.html'\r\n})\r\nexport class SelectPassword {\r\n  private signUpModel: ISignUpRequest;\r\n  constructor(public navCtrl: NavController, private userService: UserService, private events: Events, private translateService: TranslateService,\r\n    private analyticsService: AnalyticsService, private navParams: NavParams, private loaderService: LoaderService) {\r\n    this.signUpModel = this.navParams.get('signUpModel');\r\n    //console.log('In SelectPassword params:userId', this.signUpModel);\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.SELECT_PASSWORD);\r\n  }\r\n\r\n  navigateToChoosePassword(): void {\r\n    if (this.signUpModel) {\r\n      this.navCtrl.push(ChoosePassword, { signUpModel: this.signUpModel });\r\n    }\r\n  }\r\n\r\n  navigatetoGetStartedPage() {\r\n    this.navCtrl.remove((this.navCtrl.length() - 1), 1, { animate: false, progressAnimation: false }).then(() => {\r\n    });\r\n  }\r\n\r\n  navigateToSignInPage() {\r\n    this.navCtrl.setRoot(LoginPage);\r\n  }\r\n\r\n  onFLogin(): void {\r\n    let that = this;\r\n    that.userService.fbLogin().then(() => {\r\n      that.userService.getUserFacebookProfile().then((profileData) => {\r\n        if (!profileData.errorCode) {\r\n          that.signUpModel['facebook'] = profileData.id;\r\n          that.signUpModel['profile_pic'] = CONSTANTS.FACEBOOk_PROFILE_URL.PREFIX + profileData.id + CONSTANTS.FACEBOOk_PROFILE_URL.POSTFIX || '';\r\n          that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n          that.userService.signup(that.signUpModel).subscribe((data: any) => {\r\n            if (data.status !== \"ERROR\") {\r\n              that.userService.storeUserCredentials(data, () => {\r\n                that.events.publish('user:signup');\r\n                that.loaderService.dismissLoader();\r\n              });\r\n            } else {\r\n              that.signUpModel['facebook'] = '';\r\n              that.signUpModel['profile_pic'] = '';\r\n              that.userService.fbLogout();\r\n              that.loaderService.showToaster(data.message);\r\n              that.loaderService.dismissLoader();\r\n            }\r\n          }, error => {\r\n            that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n            that.loaderService.dismissLoader();\r\n          });\r\n        }\r\n      }, error => {\r\n        that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n      });\r\n    }, error => {\r\n      that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n    });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/get-started/select-password/select-password.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { NavController, Events, NavParams, Content } from 'ionic-angular';\r\n\r\nimport { UserService, ISignUpRequest } from '../../../../providers/user-service';\r\nimport { LoaderService } from '../../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../../shared/config';\r\nimport { AnalyticsService } from \"../../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: 'page-choose-password',\r\n  templateUrl: 'choose-password.html'\r\n})\r\n\r\nexport class ChoosePassword {\r\n  @ViewChild(Content) content: Content;\r\n  private isFormSubmmited: boolean;\r\n  private strongRegex: RegExp;\r\n  private mediumRegex: RegExp;\r\n  public passwordstrength: string;\r\n  public isPasswordType: boolean;\r\n  public password: string;\r\n  public signUpModel: ISignUpRequest;\r\n\r\n  constructor(public navCtrl: NavController, private userService: UserService, private events: Events,  private translateService: TranslateService,\r\n    private analyticsService: AnalyticsService, private params: NavParams, private loaderService: LoaderService) {\r\n    this.isPasswordType = false;\r\n    this.isFormSubmmited = false;\r\n    this.password = '';\r\n    this.strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,100})\");\r\n    this.mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]))((?=.*[a-z]))((?=.*[A-Z]))(?=.*[0-9]))(?=.{8,100})\");\r\n     this.signUpModel = this.params.get('signUpModel');\r\n    this.signUpModel['password'] = '';\r\n  }\r\n\r\n  ionViewDidLoad() {   \r\n    //console.log(\"In ionViewDidLoad userObj\", this.signUpModel);\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.CHOOSE_PASSWORD);\r\n  }\r\n\r\n  onLoginToRezility(): void {\r\n    let that = this;\r\n    that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    if (!that.isFormSubmmited) {\r\n      that.isFormSubmmited = true;\r\n      that.userService.signup(this.signUpModel, false).subscribe(function (data: any) {\r\n        that.isFormSubmmited = false;\r\n        if (data.status !== \"ERROR\") {\r\n          that.userService.storeUserCredentials(data, function () {\r\n            that.events.publish('user:signup');\r\n          })\r\n        } else {\r\n          that.loaderService.showToaster(data.message);\r\n          that.loaderService.dismissLoader();\r\n        }\r\n      }, error => {\r\n        that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n        that.loaderService.dismissLoader();\r\n      });\r\n    }\r\n  }\r\n\r\n  analyzePasswordStrength(value: string): void {\r\n    if (value === '') {\r\n      this.passwordstrength = 'weak'\r\n    } else if (this.strongRegex.test(value)) {\r\n      this.passwordstrength = 'strong'\r\n    }\r\n    else if (this.mediumRegex.test(value)) {\r\n      this.passwordstrength = 'strong'\r\n    }\r\n    else {\r\n      this.passwordstrength = 'weak'\r\n    }\r\n  }\r\n\r\n  onShowPassword(): void {\r\n    this.isPasswordType = !this.isPasswordType\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/get-started/select-password/choose-password/choose-password.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { IonicApp, IonicModule, Platform } from 'ionic-angular';\r\nimport { TranslateModule, TranslateLoader, TranslateService } from '@ngx-translate/core'\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpModule, Http, XHRBackend, RequestOptions } from '@angular/http';\r\nimport { IonicStorageModule } from '@ionic/storage';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { Toast } from '@ionic-native/toast'\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { Push } from '@ionic-native/push';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\nimport { Deeplinks } from '@ionic-native/deeplinks';\r\nimport { Network } from '@ionic-native/network';\r\n\r\nimport { Transfer } from '@ionic-native/transfer';\r\nimport { MediaCapture } from '@ionic-native/media-capture';\r\nimport { Facebook } from '@ionic-native/facebook';\r\nimport { Crop } from '@ionic-native/crop';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\r\nimport { CallNumber } from '@ionic-native/call-number';\r\nimport { GoogleAnalytics } from '@ionic-native/google-analytics'\r\nimport { DatePicker } from '@ionic-native/date-picker'\r\n\r\nimport { RezApp } from './app.component';\r\nimport { HomeTabs } from '../pages/home-tabs/home-tabs';\r\nimport { ActivityFeedModule } from '../pages/activity/activity-feed.module';\r\nimport { AroundMeModule } from '../pages/aroundme/aroundme.module';\r\nimport { MyStuffModule } from '../pages/my-stuff/my-stuff.module';\r\nimport { ConversationModule } from '../pages/conversations/conversations.module';\r\nimport { LoginModule } from '../pages/login/login.module';\r\nimport { GetStartedModule } from '../pages/get-started/get-started.module';\r\nimport { ServiceRequestModule } from '../pages/service-request/service-request.module';\r\nimport { HttpService } from '../providers/http-service';\r\nimport { LoaderService } from '../providers/loader-service';\r\nimport { StorageService } from '../providers/storage-service';\r\nimport { AnalyticsService } from '../providers/analytics-service';\r\nimport { UserService } from '../providers/user-service';\r\nimport { PubNubService } from '../providers/pubnub-service';\r\nimport { KeyboardTabHandler } from \"../directives/keyboard-tab-handler-directive\";\r\nimport { SocialSharing } from \"@ionic-native/social-sharing\";\r\nimport { TextToSpeech } from \"@ionic-native/text-to-speech\";\r\nimport { Device } from '@ionic-native/device';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RezApp,\r\n    HomeTabs,\r\n    KeyboardTabHandler,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    IonicModule.forRoot(RezApp, {\r\n      tabsPlacement: 'bottom',\r\n      tabsHideOnSubPages: 'true',\r\n      activator: \"ripple\",\r\n      swipeBackEnabled: \"false\"\r\n    }),\r\n    IonicStorageModule.forRoot(),\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (createTranslateLoader),\r\n        deps: [Http]\r\n      }\r\n    }),\r\n    ActivityFeedModule,\r\n    AroundMeModule,\r\n    MyStuffModule,\r\n    ConversationModule,\r\n    LoginModule,\r\n    GetStartedModule,\r\n    ServiceRequestModule\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    RezApp,\r\n    HomeTabs\r\n  ],\r\n  providers: [{\r\n    provide: HttpService,\r\n    useFactory: httpServiceHelperFactory,\r\n    deps: [XHRBackend, RequestOptions, Platform]\r\n  }, Toast, SplashScreen, StatusBar, Deeplinks, Network,\r\n    Keyboard, Camera, Transfer, MediaCapture, GoogleAnalytics, DatePicker,\r\n    Push, Facebook, Crop, InAppBrowser, CallNumber, SocialSharing, TextToSpeech, Device,\r\n    PubNubService, UserService, AnalyticsService, StorageService, LoaderService\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class AppModule { }\r\nexport function httpServiceHelperFactory(xhrBackend: XHRBackend, requestOptions: RequestOptions, platform: Platform, translateService: TranslateService) {\r\n  return new HttpService(xhrBackend, requestOptions, translateService);\r\n}\r\nexport function createTranslateLoader(http: Http) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport {\r\n    Http,\r\n    Request,\r\n    ConnectionBackend,\r\n    RequestOptions,\r\n    RequestOptionsArgs,\r\n    Response,\r\n    Headers\r\n} from '@angular/http';\r\nimport { CONSTANTS } from '../shared/config';\r\nimport { ENVIRONMENT } from '../shared/environment';\r\nimport { Observable } from 'rxjs/Observable';\r\n//import { LoaderService } from \"./loader-service\";\r\nimport 'rxjs/Rx';\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Injectable()\r\nexport class HttpService extends Http {\r\n    online: boolean;\r\n    token: string;\r\n    defaultRequestParams: IDefaultRequestParams;\r\n    userLangHeader: string;\r\n    constructor(backend: ConnectionBackend, defaultOptions: RequestOptions, private translateService: TranslateService) {\r\n        super(backend, defaultOptions);\r\n        this.online = true;\r\n        this.defaultRequestParams = {\r\n            app_id: CONSTANTS.APP_ID,\r\n            app_version: ENVIRONMENT.APP_VERSION,\r\n            device_id: CONSTANTS.DEVICE_ID,\r\n            device_type: null,\r\n            sys_user_id: null,\r\n            sys_user_type: null\r\n        };\r\n    }\r\n\r\n    isOnline(): boolean {\r\n        return this.online;\r\n    }\r\n\r\n    /**\r\n     * Performs any type of http request.\r\n     * @param url\r\n     * @param options\r\n     * @returns {Observable<Response>}\r\n     */\r\n    request(url: string | Request, options?: RequestOptionsArgs): Observable<Response> {\r\n        return super.request(url, options);\r\n    }\r\n\r\n    /**\r\n     * Performs a request with `get` http method.\r\n     * @param url\r\n     * @param options\r\n     * @returns {Observable<>}\r\n     */\r\n    get(url: string, options?: RequestOptionsArgs): Observable<any> {\r\n        if (this.requestInterceptor()) {\r\n            return super.get(this.getFullUrl(url), this.requestOptions(options))\r\n                .timeout(CONSTANTS.NETWORK_TIMEOUT)\r\n                .catch(this.onCatch)\r\n                .do((res: Response) => {\r\n                    this.onSubscribeSuccess(res);\r\n                }, (error: any) => {\r\n                    this.onSubscribeError(error);\r\n                })\r\n                .finally(() => {\r\n                    this.onFinally();\r\n                });\r\n        } else {\r\n            return Observable.throw('Network not Connected');\r\n        }\r\n    }\r\n\r\n    getLocal(url: string, options?: RequestOptionsArgs): Observable<any> {\r\n        return super.get(url, options);\r\n    }\r\n\r\n    /**\r\n     * Performs a request with `post` http method.\r\n     * @param url\r\n     * @param body\r\n     * @param options\r\n     * @returns {Observable<>}\r\n     */\r\n    post(url: string, body: any, options?: RequestOptionsArgs): Observable<any> {\r\n        if (this.requestInterceptor()) {\r\n            Object.assign(body, this.defaultRequestParams);\r\n            return super.post(this.getFullUrl(url), body, this.requestOptions(options))\r\n                .timeout(CONSTANTS.NETWORK_TIMEOUT)\r\n                .catch(this.onCatch)\r\n                .do((res: Response) => {\r\n                    this.onSubscribeSuccess(res);\r\n                }, (error: any) => {\r\n                    this.onSubscribeError(error);\r\n                })\r\n                .finally(() => {\r\n                    this.onFinally();\r\n                });\r\n        }\r\n        else {\r\n            return Observable.throw(this.translateService.instant('ERROR_MESSAGES.NO_NETWORK'));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs a request with `put` http method.\r\n     * @param url\r\n     * @param body\r\n     * @param options\r\n     * @returns {Observable<>}\r\n     */\r\n    put(url: string, body: string, options?: RequestOptionsArgs): Observable<any> {\r\n        this.requestInterceptor();\r\n        Object.assign(body, this.defaultRequestParams);\r\n        return super.put(this.getFullUrl(url), body, this.requestOptions(options))\r\n            .timeout(CONSTANTS.NETWORK_TIMEOUT)\r\n            .catch(this.onCatch)\r\n            .do((res: Response) => {\r\n                this.onSubscribeSuccess(res);\r\n            }, (error: any) => {\r\n                this.onSubscribeError(error);\r\n            })\r\n            .finally(() => {\r\n                this.onFinally();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Performs a request with `delete` http method.\r\n     * @param url\r\n     * @param options\r\n     * @returns {Observable<>}\r\n     */\r\n    delete(url: string, options?: RequestOptionsArgs): Observable<any> {\r\n        this.requestInterceptor();\r\n        return super.delete(this.getFullUrl(url), this.requestOptions(options))\r\n            .timeout(CONSTANTS.NETWORK_TIMEOUT)\r\n            .catch(this.onCatch)\r\n            .do((res: Response) => {\r\n                this.onSubscribeSuccess(res);\r\n            }, (error: any) => {\r\n                this.onSubscribeError(error);\r\n            })\r\n            .finally(() => {\r\n                this.onFinally();\r\n            });\r\n    }\r\n\r\n\r\n    /**\r\n     * Request options.\r\n     * @param options\r\n     * @returns {RequestOptionsArgs}\r\n     */\r\n    private requestOptions(options?: RequestOptionsArgs): RequestOptionsArgs {\r\n        if (options == null) {\r\n            options = new RequestOptions();\r\n        }\r\n        if (options.headers == null) {\r\n            options.headers = new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + this.token,\r\n                'Accept-Language': this.userLangHeader,\r\n                'accept-version': this.defaultRequestParams.app_version\r\n            });\r\n        }\r\n        return options;\r\n    }\r\n\r\n    /**\r\n     * Build API url.\r\n     * @param url\r\n     * @returns {string}\r\n     */\r\n    private getFullUrl(url: string): string {\r\n        // return full URL to API here\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * Request interceptor.\r\n     */\r\n    private requestInterceptor(): boolean {\r\n        if (this.online) {\r\n            // console.log(\"Network Connected\");\r\n            return true;\r\n        } else {\r\n            // console.log(\"Network Disconnected\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Response interceptor.\r\n     */\r\n    private responseInterceptor(): void {\r\n        //// console.log('In responseInterceptor');\r\n        // this.loaderService.hidePreloader();\r\n    }\r\n\r\n    /**\r\n     * Error handler.\r\n     * @param error\r\n     * @param caught\r\n     * @returns {ErrorObservable}\r\n     */\r\n    private onCatch(error: any, caught: Observable<any>): Observable<any> {\r\n        return Observable.throw(error);\r\n    }\r\n\r\n    /**\r\n     * onSubscribeSuccess\r\n     * @param res\r\n     */\r\n    private onSubscribeSuccess(res: Response): void {\r\n        // // console.log('In onSubscribeSuccess', res);\r\n    }\r\n\r\n    /**\r\n     * onSubscribeError\r\n     * @param error\r\n     */\r\n    private onSubscribeError(error: any): void {\r\n        //  // console.log('In onSubscribeError', error);\r\n    }\r\n\r\n    /**\r\n     * onFinally\r\n     */\r\n    private onFinally(): void {\r\n        this.responseInterceptor();\r\n    }\r\n}\r\n\r\nexport interface IDefaultRequestParams {\r\n    app_id: string;\r\n    app_version: string;\r\n    device_id: string;\r\n    device_type: string;\r\n    sys_user_id: string;\r\n    sys_user_type: string;\r\n    device_model?: string;\r\n    os_version?: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/http-service.ts","import { MediaCapture, MediaFile, CaptureError } from '@ionic-native/media-capture';\r\nimport { Transfer, FileUploadOptions } from '@ionic-native/transfer';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera';\r\nimport { NavController, NavParams, Events, Content, Platform, ActionSheetController } from 'ionic-angular';\r\nimport { Component, ElementRef, ViewChild, EventEmitter } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport 'rxjs/add/operator/debounceTime';\r\n\r\nimport { Conversations } from '../../conversations/conversations';\r\nimport { BaseChatBox } from './base-chat-box';\r\nimport { ConversationSetting } from '../conversation-setting/conversation-setting';\r\nimport { ShowImage } from '../show-image/show-image';\r\nimport { UserService } from '../../../providers/user-service';\r\nimport { PubNubService, IConnectionStatusChangeState, PubNubEvent } from '../../../providers/pubnub-service';\r\nimport { ChatService } from '../chat-service';\r\nimport { AnalyticsService } from '../../../providers/analytics-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { ENVIRONMENT } from '../../../shared/environment';\r\n\r\n@Component({\r\n    selector: 'page-chat-box',\r\n    templateUrl: 'chat-box.html'\r\n})\r\n\r\nexport class ChatBox extends BaseChatBox {\r\n    public writeMessage = new FormControl();\r\n    public groupType: string = CONSTANTS.CONVERSATION_TYPE.GROUP;\r\n    public systemSenderId = \"Rezility\";\r\n    public connectionStatus = CONSTANTS.CONNECTION_STATUS;\r\n    public placeholderIamges = CONSTANTS.PLACEHOLDER_IMAGES;\r\n    public isSettingsDisabled: boolean = false;\r\n    public messageContentType = CONSTANTS.MESSAGE_CONTENT_TYPE_ID;\r\n    @ViewChild(Content) content: Content;\r\n\r\n    constructor(public pubNubService: PubNubService, public navCtrl: NavController,\r\n        public userService: UserService, private navParams: NavParams, public events: Events, element: ElementRef,\r\n        public translateService: TranslateService,\r\n        public chatService: ChatService, public actionSheetCtrl: ActionSheetController, public platform: Platform,\r\n        public analyticsService: AnalyticsService, public loaderService: LoaderService,\r\n        private transfer: Transfer, private camera: Camera, private mediaCapture: MediaCapture) {\r\n        super(pubNubService, userService, chatService, loaderService, translateService, events, element);\r\n        this.selectedUser = this.navParams.get('user');\r\n        this.mergeConversationExtraData(this.selectedUser.shared_channel);\r\n        this.resetMessageModel();\r\n    }\r\n\r\n    ionViewDidLoad() {\r\n        //console.log(\"Chat-Box - ionViewDidLoad\", this.selectedUser);\r\n        this.pubNubService.setConversationLastState(this.selectedUser.shared_channel, 0, this.selectedUser.timetoken);\r\n        if (this.selectedUser && this.selectedUser.type !== CONSTANTS.CONVERSATION_TYPE.GROUP) {\r\n            this.userService.setCurrentPage(CONSTANTS.PAGES.CHAT_BOX, this.selectedUser.shared_channel);\r\n            let contactObj = {\r\n                user_id: this.selectedUser.receiver_id,\r\n                user_name: this.selectedUser.user_name,\r\n                profile_pic: this.selectedUser.profile_pic\r\n            };\r\n            this.setContactIdDetailMap([contactObj]);\r\n            //this.initTypingDetection();\r\n            if (this.selectedUser && this.selectedUser.shared_channel\r\n                && (this.selectedUser.connection_status === CONSTANTS.CONNECTION_STATUS.CONNECTED || this.selectedUser.connection_status === CONSTANTS.CONNECTION_STATUS.CONNECTED_BLOCKED)) {\r\n                this.initChatBox();\r\n            } else if (this.selectedUser.connection_status === CONSTANTS.CONNECTION_STATUS.INVITED) {\r\n\r\n            } else if (this.selectedUser.connection_status === CONSTANTS.CONNECTION_STATUS.INVITATION_RECEIVED) {\r\n                this.selectedUser.connection_status = CONSTANTS.CONNECTION_STATUS.CONNECTED;\r\n                this.initChatBox();\r\n            }\r\n        } else {\r\n            this.userService.setCurrentPage(CONSTANTS.PAGES.GROUP_CHAT, this.selectedUser.shared_channel);\r\n            this.setContactIdDetailMap(this.selectedUser.members);\r\n            this.initChatBox();\r\n        }\r\n    }\r\n\r\n    ionViewWillLeave() {\r\n        if (this.selectedUser && this.selectedUser.type === undefined || this.selectedUser.type != CONSTANTS.CONVERSATION_TYPE.GROUP) {\r\n            this.userService.setCurrentPage(CONSTANTS.PAGES.CHAT_BOX, \"\");\r\n        } else {\r\n            this.userService.setCurrentPage(CONSTANTS.PAGES.GROUP_CHAT, \"\");\r\n        }\r\n        // console.log(\"Chat-Box - Looks like I'm about to leave :(\");\r\n    }\r\n\r\n    ionViewWillUnload() {\r\n        // console.log(\"Chat-box- Looks like I'm about to ionViewWillUnload :(\");\r\n        this.pubNubService.historyEventEmitter = new EventEmitter<PubNubEvent>();\r\n        this.events.unsubscribe(CONSTANTS.APP_EVENTS.NEW_MESSAGE);\r\n        this.events.unsubscribe(CONSTANTS.APP_EVENTS.KEYBOARD);\r\n        this.events.unsubscribe(CONSTANTS.APP_EVENTS.CHAT_BOX_PRESENCE_EVENT);\r\n        this.events.unsubscribe(CONSTANTS.APP_EVENTS.CLOSE_IMAGE_PREVIEW);\r\n        this.events.unsubscribe(CONSTANTS.APP_EVENTS.CHAT_BOX_CONNECTION_STATUS_CHANGED)\r\n    }\r\n\r\n    ionViewDidEnter() {\r\n        // console.log(\"Chat-Box - ionViewDidEnter\");\r\n        this.content.resize();\r\n        let that = this;\r\n        that.analyticsService.trackScreenView(CONSTANTS.PAGES.CHAT_BOX);\r\n        if ((this.selectedUser.connection_status === CONSTANTS.CONNECTION_STATUS.INVITED &&\r\n            this.selectedUser.type !== CONSTANTS.CONVERSATION_TYPE.GROUP) ||\r\n            this.selectedUser.group_type === CONSTANTS.USER_TYPE.SERVICE_PROVIDER ||\r\n            this.selectedUser.group_type === CONSTANTS.USER_TYPE.HOUSING_PROVIDER) {\r\n            this.isSettingsDisabled = true;\r\n        }\r\n\r\n        // console.log(\"Chat-Box - Looks like I'm about to enter :(\");\r\n    }\r\n\r\n    initChatBox() {\r\n        this.initCloseImagePreview();\r\n        this.initNewMesssageEvent();\r\n        this.initPresenceEvent();\r\n        this.initKeyboardEvent();\r\n        this.initConnectionStatusEvent();\r\n        this.pageState = null;\r\n        this.loadSelectedUserHistory(this.selectedUser.shared_channel, (error, isAllMessageLoaded = true) => {\r\n            if (!error) {\r\n                this.scrollToBottom();\r\n                this.chatBoxInfiniteScrollEnabled = !isAllMessageLoaded;\r\n            } else {\r\n                this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n            }\r\n        });\r\n    }\r\n\r\n    mergeConversationExtraData(shared_channel: string) {\r\n        this.chatService.getConversationExtraData({ shared_channel: shared_channel }).subscribe((response) => {\r\n            if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n                Object.assign(this.selectedUser, { languages: response.languages });\r\n            }\r\n        })\r\n    }\r\n    initTypingDetection() {\r\n        let that = this, instance = null;\r\n        that.writeMessage.valueChanges.debounceTime(400).subscribe(writeMessage => {\r\n            // When to start Typing ?, Content is not empty and was not typing before\r\n            if (that.messageModel.trim().length != 0 && !that.pubNubService.isCurrentUserTyping) {\r\n                that.pubNubService.startTyping(that.selectedUser.receiver_id)\r\n                stopTypingScheduler();\r\n                //// console.log(\"Typing 1 check\")\r\n            }\r\n            // When to reschedule ?, when the input is not empty and you are typing\r\n            else if (that.messageModel.trim().length != 0 && that.pubNubService.isCurrentUserTyping) {\r\n                stopTypingScheduler();\r\n                //// console.log(\"Typing 2 check\")\r\n            }\r\n            // When to stop typing ?, You erase the input : You were typing and the input is now empty\r\n            else if (that.pubNubService.isCurrentUserTyping && that.messageModel.trim().length == 0) {\r\n                stopTypingScheduler();\r\n                //// console.log(\"Typing 3 check\")\r\n            } else {\r\n                // console.log(\"Typing 4 check\")\r\n            }\r\n        });\r\n        function stopTypingScheduler() {\r\n            if (instance != null) {\r\n                clearTimeout(instance);\r\n            }\r\n            instance = setTimeout(function () {\r\n                that.pubNubService.stopTyping(that.selectedUser.receiver_id)\r\n            }, 5000);\r\n        }\r\n    }\r\n\r\n    initKeyboardEvent() {\r\n        this.events.subscribe(CONSTANTS.APP_EVENTS.KEYBOARD, () => {\r\n            // console.log('ChatBox In Event CONSTANTS.APP_EVENTS.KEYBOARD subscribe');\r\n            this.scrollToBottom();\r\n        });\r\n    }\r\n\r\n    initCloseImagePreview() {\r\n        // console.log('In initCloseImagePreview');\r\n        this.events.subscribe(CONSTANTS.APP_EVENTS.CLOSE_IMAGE_PREVIEW, (data) => {\r\n            this.onClosePresentShowImageModal(data);\r\n        });\r\n    }\r\n    initNewMesssageEvent() {\r\n        this.events.subscribe(CONSTANTS.APP_EVENTS.NEW_MESSAGE, (message) => {\r\n            // console.log('ChatBox In Event APP_CONFIG.APP_EVENTS.NEW_MESSAGE subscribe', message);\r\n            //let page: string = this.userService.getCurrentPage().currentPage;\r\n            // If user is sending message on group then avoid duplicate message      \r\n            let shared_channel = message.shared_channel || message.shared_channel_id;\r\n            if (this.selectedUser.shared_channel == shared_channel) {\r\n                this.messages.push(this.createMessage(message));\r\n                this.scrollToBottom();\r\n            }\r\n        });\r\n    }\r\n\r\n    initPresenceEvent() {\r\n        this.events.subscribe(CONSTANTS.APP_EVENTS.CHAT_BOX_PRESENCE_EVENT, (presence) => {\r\n            //let presenceObj = presence[0];\r\n            console.log('In Chat box subscribePresenceEvent[ action - ' + presence.action + ']', presence.channel, '-', this.userData.user_id);\r\n            if (this.selectedUser !== undefined) {\r\n                if (presence.uuid === this.selectedUser.user_id && presence.state != undefined && presence.state.isTyping !== undefined) {\r\n                    this.selectedUser.isTyping = presence.state.isTyping;\r\n                    // console.log(\"Typing status changed \", this.selectedUser.isTyping);\r\n                }\r\n                if (presence.uuid === this.selectedUser.user_id && presence.actualChannel === this.selectedUser.user_id + \"present-pnpres\") {\r\n                    if (presence.action == \"join\") {\r\n                        this.selectedUser.presence = \"online\";\r\n                    }\r\n                    else if (presence.action == \"leave\") {\r\n                        this.selectedUser.presence = \"\";\r\n                    }\r\n                }\r\n                if (presence.action == 'state-change' && presence.state !== undefined && presence.state.action == CONSTANTS.USER_STATES.GROUP_REMOVE\r\n                    && this.selectedUser.shared_channel === presence.state.groupName && presence.channel === this.userData.user_id) {\r\n                    console.log(\"Update removed user in chatbox \", presence.state.leaving_time_token);\r\n                    this.selectedUser.leaving_time_token = presence.state.leaving_time_token;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    initConnectionStatusEvent() {\r\n        this.events.subscribe(CONSTANTS.APP_EVENTS.CHAT_BOX_CONNECTION_STATUS_CHANGED, (event) => {\r\n            //console.log('In app.component CONNECTION_STATUS_CHANGED', event);\r\n            let stateObj: IConnectionStatusChangeState = event.state;\r\n            if (stateObj && stateObj.action == CONSTANTS.USER_STATES.CONNECTION_STATUS_CHANGED) {\r\n                if (stateObj.connection_status === CONSTANTS.CONNECTION_STATUS.CONNECTED_BLOCKED) {\r\n                    //console.log(stateObj.name + \" has  Blocked You\");\r\n                    this.selectedUser.connection_status = CONSTANTS.CONNECTION_STATUS.CONNECTED_BLOCKED;\r\n                } else if (stateObj.connection_status === CONSTANTS.CONNECTION_STATUS.CONNECTED) {\r\n                    //console.log(stateObj.name + \" has  UnBlocked You\");\r\n                    this.selectedUser.connection_status = CONSTANTS.CONNECTION_STATUS.CONNECTED;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    navigateBack() {\r\n        this.navCtrl.setRoot(Conversations);\r\n    }\r\n\r\n    scrollToBottom() {\r\n        let that = this;\r\n        setTimeout(() => {\r\n            if (that.content) {\r\n                that.content.scrollTo(0, that.content.getContentDimensions().scrollHeight, 10);\r\n            }\r\n        });\r\n    }\r\n\r\n    navigatetoConversationSetting() {\r\n        this.isSettingsDisabled = true;\r\n        this.navCtrl.push(ConversationSetting, { selectedUser: this.selectedUser }).then(() => {\r\n            this.isSettingsDisabled = false;\r\n        });\r\n    }\r\n\r\n    uploadFileOnserver(fileURI, callback) {\r\n        let fileUploadOptions: FileUploadOptions = {\r\n            fileKey: 'file',\r\n            fileName: getFileName(fileURI),\r\n            httpMethod: 'POST'\r\n        };\r\n\r\n        if (fileUploadOptions.fileName.split('.').pop() == 'mp4') {\r\n            Object.assign(fileUploadOptions, { mimeType: 'video/mp4' });\r\n        }\r\n        this.proceedUploadOnServer(fileURI, fileUploadOptions, callback);\r\n\r\n        function getFileName(fileURI: string) {\r\n            let fileName, fileExt;\r\n            //// console.log(fileURI, \"fileURI in getfile name\");\r\n            fileExt = fileURI.split('.').pop();\r\n            fileName = new Date().getTime() + '.' + fileExt;\r\n            return fileName;\r\n        }\r\n    }\r\n\r\n    uploadVideoOnserver(fileURI, callback) {\r\n        let fileUploadOptions: FileUploadOptions = {\r\n            fileKey: 'file',\r\n            fileName: fileURI.name,\r\n            mimeType: fileURI.type,\r\n            httpMethod: 'POST'\r\n        };\r\n        this.proceedUploadOnServer(fileURI, fileUploadOptions, callback);\r\n    }\r\n\r\n    proceedUploadOnServer(fileURI, fileUploadOptions, callback) {\r\n        let uploadEndpoint: string;\r\n        const fileTransfer = this.transfer.create();\r\n        uploadEndpoint = ENVIRONMENT.APP_BASE_URL + '/listing/uploadImage';\r\n\r\n        if (!fileUploadOptions.headers) {\r\n            fileUploadOptions.headers = {\r\n                'Authorization': 'Bearer ' + this.userService.http.token,\r\n                source: CONSTANTS.UPLOAD_IMAGE_SOURCE.CHATS, user_id: this.userData.user_id\r\n            };\r\n        }\r\n        // // console.log('In uploadFileOnserver fileUrl', fileURI, uploadEndpoint, fileUploadOptions);\r\n        fileTransfer.upload(fileURI, uploadEndpoint, fileUploadOptions).then((data: any) => {\r\n            //   // console.log('In uploadFileOnserver success', data)\r\n            if (callback) {\r\n                callback(null, JSON.parse(data.response));\r\n            }\r\n        }, (err) => {\r\n            // console.log('In uploadFileOnserver err', err);\r\n            this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.NO_NETWORK'));\r\n            if (callback) {\r\n                callback(err);\r\n            }\r\n        })\r\n        fileTransfer.onProgress((state) => {\r\n            // console.log(state);\r\n        });\r\n    }\r\n\r\n    presentShowImageModal(image, isAttachment?: boolean, enableZoom: boolean = false) {\r\n        this.navCtrl.push(ShowImage, { image_content: image, enableSendButton: isAttachment, enableZoom: enableZoom });\r\n    }\r\n\r\n    onClosePresentShowImageModal(data) {\r\n        //// console.log('In onClosePresentShowImageModal', data);\r\n        if (data.attachement) {\r\n            this.messageModel = data.caption;\r\n            if (data.caption && data.caption.trim().length > 0) {\r\n                this.fileUpload(data.image, data.caption);\r\n            } else {\r\n                this.fileUpload(data.image, this.translateService.instant('MISC.IMAGE'));\r\n            }\r\n        }\r\n    }\r\n\r\n    fileUpload(imageData, caption?) {\r\n        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.UPLOADING'));\r\n        this.uploadFileOnserver(imageData, (error, response) => {\r\n            if (!error) {\r\n                if (response.file_type == 'image/jpeg') {\r\n                    this.pictureModel = response.image_url;\r\n                    this.messageModel = caption;\r\n                    this.sendMessage(this.messageModel);\r\n                } else if (response.file_type == 'video/mp4') {\r\n                    this.videoPath = response.image_url;\r\n                }\r\n            } else {\r\n                this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n            }\r\n            this.loaderService.dismissLoader();\r\n        });\r\n    }\r\n    //NSPhotoLibraryAddUsageDescription\r\n    takeFromCamera(source) {\r\n        const options: CameraOptions = {\r\n            quality: 100,\r\n            destinationType: this.camera.DestinationType.FILE_URI,\r\n            sourceType: source,\r\n            allowEdit: false,\r\n            encodingType: this.camera.EncodingType.JPEG,\r\n            targetWidth: 1062,\r\n            targetHeight: 600,\r\n            mediaType: this.camera.MediaType.PICTURE,\r\n            correctOrientation: true\r\n        }\r\n\r\n        if (source === this.camera.PictureSourceType.PHOTOLIBRARY) {\r\n            options['saveToPhotoAlbum'] = false;\r\n        } else {\r\n            options['saveToPhotoAlbum'] = true;\r\n        }\r\n\r\n        this.camera.getPicture(options).then(imageData => {\r\n            this.presentShowImageModal(imageData, true, false);\r\n        }, error => {\r\n            //this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n        });\r\n    }\r\n\r\n    takevideoCamera(source) {\r\n        let options: any = {\r\n            sourceType: this.camera.PictureSourceType.SAVEDPHOTOALBUM,\r\n            mediaType: this.camera.MediaType.ALLMEDIA,\r\n            destinationType: this.camera.DestinationType.FILE_URI\r\n        };\r\n\r\n        this.mediaCapture.captureVideo(options).then((videodata: MediaFile[]) => {\r\n            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.UPLOADING'));\r\n            this.uploadVideoOnserver(videodata[0], (error, video_url) => {\r\n                if (!error) {\r\n                    this.videoPath = video_url;\r\n                } else {\r\n                    this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n                }\r\n                this.loaderService.dismissLoader();\r\n            });\r\n        }, (err: CaptureError) => {\r\n            //this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n        })\r\n    }\r\n\r\n    showActionSheet() {\r\n        let buttons = [\r\n            {\r\n                text: this.translateService.instant(\"CONVERSATIONS.NEW_MSG.TAKE_PHOTO\"),\r\n                role: 'Take a photo',\r\n                cssClass: 'take-photo',\r\n                icon: 'icons-camera',\r\n                handler: () => {\r\n                    this.takeFromCamera(this.camera.PictureSourceType.CAMERA);\r\n                }\r\n            },\r\n            {\r\n                text: this.translateService.instant(\"CONVERSATIONS.NEW_MSG.ATTACH_PHOTO\"),\r\n                cssClass: 'take-photo',\r\n                icon: 'icons-image-photo',\r\n                handler: () => {\r\n                    this.takeFromCamera(this.camera.PictureSourceType.PHOTOLIBRARY);\r\n                }\r\n            }\r\n            // ,\r\n            // {\r\n            //     text: 'Take a  video',\r\n            //     role: 'Take a  video',\r\n            //     cssClass: 'take-photo',\r\n            //     icon: 'icons-camera',\r\n            //     handler: () => {\r\n            //         this.takevideoCamera(Camera.PictureSourceType.PHOTOLIBRARY);\r\n            //     }\r\n            // }\r\n        ];\r\n\r\n        let actionSheet = this.actionSheetCtrl.create({\r\n            cssClass: 'photo-sheet',\r\n            buttons: buttons\r\n        });\r\n        actionSheet.present();\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversations/chat-box/chat-box.ts","import { Platform, Events, Nav, AlertController } from 'ionic-angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { Push, PushObject, PushOptions } from '@ionic-native/push';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\nimport { Deeplinks } from '@ionic-native/deeplinks';\r\nimport { Network } from '@ionic-native/network';\r\nimport { Device } from '@ionic-native/device';\r\n\r\nimport { Component, ViewChild, OnInit, enableProdMode } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { HomeTabs } from '../pages/home-tabs/home-tabs';\r\nimport { LoginPage } from '../pages/login/login';\r\nimport { UserService } from '../providers/user-service';\r\nimport { GetStarted } from '../pages/get-started/get-started';\r\nimport { ConnectionList } from '../pages/conversations/connection-list';\r\nimport { AnalyticsService } from '../providers/analytics-service';\r\nimport { ChatService, IConversation, IGetUserConversationRequest } from '../pages/conversations/chat-service';\r\nimport { PubNubService, PubNubEvent, IConnectionStatusChangeState } from '../providers/pubnub-service';\r\nimport { HttpService } from '../providers/http-service';\r\nimport { LoaderService } from '../providers/loader-service';\r\nimport { CONSTANTS } from '../shared/config';\r\nimport { ENVIRONMENT } from '../shared/environment';\r\nimport { ImageCacheService } from \"../providers/image-cache-service\";\r\n\r\nenableProdMode();\r\n\r\ndeclare let cordova, ga, fabric;\r\n@Component({\r\n    templateUrl: 'app.html'\r\n})\r\nexport class RezApp implements OnInit {\r\n    private events: Events;\r\n    private connectSubscription: any;\r\n    private dissconnectSubscription: any;\r\n    private isRootPageSet: boolean = false;\r\n    public rootPage: Component;\r\n    public pages: Array<{ title: string, component: any, index: number }>;\r\n\r\n    @ViewChild(Nav) nav: Nav;\r\n\r\n    constructor(private platform: Platform, events: Events, private userService: UserService, private httpService: HttpService,\r\n        private analyticsService: AnalyticsService, private translateService: TranslateService, private alertCtrl: AlertController,\r\n        private pubNubService: PubNubService, private chatService: ChatService, private loaderService: LoaderService, private imageCacheService: ImageCacheService,\r\n        private splashScreen: SplashScreen, private statusBar: StatusBar, private push: Push, private keyboard: Keyboard, private device: Device,\r\n        private deeplinks: Deeplinks, private network: Network) {\r\n        this.events = events;\r\n        this.initPages();\r\n        this.initializeApp();\r\n        this.listenToLoginEvents();\r\n\r\n        if (!this.platform.is('cordova')) {\r\n            this.initializeTranslateServiceConfig();\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.inItAppState();\r\n    }\r\n\r\n    initPages(): void {\r\n        this.pages = [\r\n            { title: 'Find', component: HomeTabs, index: 0 },\r\n            { title: 'Conversations', component: HomeTabs, index: 1 },\r\n            { title: 'Connect', component: HomeTabs, index: 2 },\r\n            { title: 'My Stuff', component: HomeTabs, index: 3 }\r\n        ];\r\n    }\r\n\r\n    initializeApp(): void {\r\n        let that = this;\r\n        that.platform.ready().then(() => {\r\n            // Okay, so the platform is ready and our plugins are available.\r\n            // Here you can do any higher level native things you might need.\r\n            that.initNetwork();\r\n            that.initPlatform();\r\n            that.statusBar.styleDefault();\r\n            that.initCache();\r\n            //Splashscreen.hide();\r\n            if (that.platform.is('cordova')) {\r\n                that.hideSplashScreen(this.splashScreen);\r\n                that.keyboard.disableScroll(true);\r\n                that.keyboard.hideKeyboardAccessoryBar(true);\r\n                that.initAnalyticsServiceConfig();\r\n                that.initPush();\r\n                that.inItDeeplinksRoute();\r\n                that.initializeTranslateServiceConfig();\r\n            }\r\n\r\n\r\n            that.verifyForceUpdate();\r\n            if (typeof cordova !== 'undefined' && cordova.platformId == 'android') {\r\n                that.statusBar.styleLightContent();\r\n            }\r\n        });\r\n    }\r\n\r\n    initCache() {\r\n        this.imageCacheService.initImageCache();\r\n    }\r\n    initPlatform() {\r\n        let platform = null;\r\n        if (this.platform.is('android')) {\r\n            platform = \"android\";\r\n        } else if (this.platform.is('ios')) {\r\n            platform = \"ios\";\r\n        } else {\r\n            platform = \"web\";\r\n        }\r\n\r\n        // Set device type into http service .\r\n        this.userService.http.defaultRequestParams.device_type = platform;\r\n        this.userService.http.defaultRequestParams.device_model = this.device.model;\r\n        this.userService.http.defaultRequestParams.os_version = this.device.version;\r\n    }\r\n\r\n    hideSplashScreen(splashScreen) {\r\n        if (splashScreen) {\r\n            // console.log('Called hideSplashScreen.............');\r\n            setTimeout(() => {\r\n                splashScreen.hide();\r\n            }, 200);\r\n        }\r\n    }\r\n\r\n    inItAppState(): void {\r\n        if (!this.userService.isAppStarted()) {\r\n            this.nav.setRoot(GetStarted);\r\n            this.isRootPageSet = true;\r\n        } else {\r\n            this.userService.hasLoggedIn().then((hasLoggedIn) => {\r\n                if (hasLoggedIn) {\r\n                    this.userService.loadUser((isUserLoaded) => {\r\n                        this.enableMenu(hasLoggedIn == isUserLoaded);\r\n                    })\r\n                } else {\r\n                    this.enableMenu(hasLoggedIn == true);\r\n                }\r\n                this.isRootPageSet = true;\r\n            });\r\n        }\r\n    }\r\n    inItDeeplinksRoute(): void {\r\n        this.deeplinks.routeWithNavController(this.nav, {\r\n            '/onboard/:userId': GetStarted,\r\n            '/onboard/resetpassword/:resetpassword_userId': GetStarted\r\n        }).subscribe((match) => {\r\n            // console.log('Successfully routed', match);\r\n        }, (nomatch) => {\r\n            console.warn('Unmatched Route', nomatch);\r\n        });\r\n        // console.log('Called inItDeeplinksRoute');\r\n\r\n    }\r\n\r\n    initializeTranslateServiceConfig(): void {\r\n        let that = this;\r\n        let userLang;\r\n        if (this.userService.userObj && this.userService.userObj.device_lang) {\r\n            console.log('User Language');\r\n            userLang = this.userService.userObj.device_lang;\r\n        } else if (navigator.language.split('-')[0] === 'zh') {\r\n            console.log('Device Chinese');\r\n            userLang = navigator.language;\r\n            //this.updateUserDeviceLang();\r\n        } else {\r\n            console.log('Other Device Languages');\r\n            userLang = navigator.language.split('-')[0];\r\n            //this.updateUserDeviceLang();\r\n        }\r\n        console.log('In initializeTranslateServiceConfig', userLang);\r\n        userLang = CONSTANTS.AVAILABLE_LANGUAGE.indexOf(userLang) !== -1 ? userLang : CONSTANTS.DEFAULT_LANGUAGE;\r\n        that.translateService.use(userLang);\r\n        that.userService.setCurrentLang(userLang);\r\n        that.translateService.setDefaultLang(CONSTANTS.DEFAULT_LANGUAGE);\r\n        that.pubNubService.setUserLang(userLang);\r\n\r\n    }\r\n\r\n    initAnalyticsServiceConfig(): void {\r\n        if (typeof ga !== 'undefined') {\r\n            // console.log(\"Calling start tracker\");\r\n            this.analyticsService.startTracker(ENVIRONMENT.GOOGLE_ANALYTICS_TRACKING_ID);\r\n            this.analyticsService.enableExceptionReporting(true);\r\n            this.analyticsService.enableDebugMode();\r\n        } else {\r\n            // console.log(\"Google Analytics Unavailable\");\r\n        }\r\n    }\r\n    listenToLoginEvents(): void {\r\n        this.events.subscribe('user:login', () => {\r\n            this.enableMenu(true);\r\n        });\r\n\r\n        this.events.subscribe('user:signup', () => {\r\n            this.enableMenu(true);\r\n        });\r\n\r\n        this.events.subscribe('user:logout', () => {\r\n            this.loaderService.dismissLoader();\r\n            this.events.unsubscribe(CONSTANTS.APP_EVENTS.GROUP_EVENTS);\r\n            this.imageCacheService.clearCache();\r\n            this.enableMenu(false);\r\n        });\r\n\r\n        // this.events.subscribe('user:dataLoaded', (user) => {\r\n        //     // console.log('[User dataLoaded.]', user);\r\n        // });\r\n    }\r\n\r\n    enableMenu(LoggedIn): void {\r\n        let channelGroups: Array<string> = [];\r\n        //If user is loggged in App then set TabsPage as a home page otherwise LoginPage\r\n        if (LoggedIn) {\r\n            this.userService.setAppStarted();\r\n            this.nav.setRoot(HomeTabs, { tabIndex: 0 });\r\n\r\n            // register device\r\n            this.userService.registerDeviceOnServer();\r\n            if (this.platform.is('cordova')) {\r\n                // Changed property_owner_id to user_id\r\n                //this.analyticsService.setUserId(this.userService.userObj.user_id);\r\n                this.analyticsService.addCustomDimension(this.userService.userObj.user_id);\r\n            }\r\n            //this.pubNubService.addChanneltoMyGroup([this.userService.userObj.user_id],this.userService.userObj.user_id + '_group');\r\n            this.pubNubService.subscribe([this.userService.userObj.user_id], true);\r\n            this.pubNubService.subscribe([this.userService.userObj.user_id + '_present'], true);\r\n\r\n            this.pubNubService.setPushNotificationChannels([this.userService.userObj.user_id]);\r\n            if (!!this.userService.userObj.notification_enabled) {\r\n                this.pubNubService.registerDevice([this.userService.userObj.user_id], this.userService.deviceToken, this.userService.pushPlatform);\r\n            }\r\n\r\n            this.chatService.getUserGroups(this.userService.userObj.user_id).subscribe((res: any) => {\r\n                if (res && res.incident_conversations) {\r\n                    //this.pubNubService.subscribe(res.all_user_groups, true);\r\n                    //this.pubNubService.addChanneltoMyGroup([res.incident_conversations], this.userService.userObj.user_id + '_group');\r\n                    channelGroups = channelGroups.concat(res.incident_conversations);\r\n                }\r\n                if (res && res.groups) {\r\n                    channelGroups = channelGroups.concat(res.groups);\r\n                }\r\n                if (!!this.userService.userObj.notification_enabled) {\r\n                    this.pubNubService.registerDevice(channelGroups, this.userService.deviceToken, this.userService.pushPlatform);\r\n                }\r\n                this.pubNubService.setPushNotificationChannels(channelGroups);\r\n                // We do not need mute groups in push notification.\r\n                if (res && res.mute_groups) {\r\n                    channelGroups = channelGroups.concat(res.mute_groups);\r\n                }\r\n                this.pubNubService.addChanneltoMyGroup(channelGroups, this.userService.userObj.user_id + '_group');\r\n                this.pubNubService.subscribeGroup([this.userService.userObj.user_id + '_group'], false);\r\n                //this.pubNubService.subscribe(res.all_user_groups,true);\r\n\r\n            }, error => {\r\n                this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n            });\r\n\r\n            //this.updateUserDeviceLang();\r\n            this.initConversationCount();\r\n            this.initGroupEvents();\r\n            this.setUserDataForCrashlytics();\r\n            this.initializeTranslateServiceConfig();\r\n        } else {\r\n            this.nav.setRoot(LoginPage).then(() => {\r\n                this.userService.resetUserObj();\r\n                this.initializeTranslateServiceConfig();\r\n            });\r\n        }\r\n       \r\n    }\r\n\r\n    setUserDataForCrashlytics() {\r\n        if (this.platform.is('cordova')) {\r\n            fabric.Crashlytics.setUserIdentifier(this.userService.userObj.user_id);\r\n            fabric.Crashlytics.setUserName(this.userService.userObj.user_name);\r\n            fabric.Crashlytics.setUserEmail(this.userService.userObj.email);\r\n        }\r\n    }\r\n\r\n    initConversationCount(): void {\r\n        let that = this, startTimeToken = null, endTimeToken = null, historyLimit, params: IGetUserConversationRequest, connectionList: ConnectionList;\r\n        let friendsList = [];\r\n        connectionList = new ConnectionList(this.chatService, this.pubNubService, this.translateService, this.loaderService);\r\n        params = { user_id: this.userService.userObj.user_id, is_group_data_needed: true };\r\n        connectionList.getUserList(params, (error, response) => {\r\n            let conversations = [];\r\n            conversations = conversations.concat(response.connected);\r\n            conversations.forEach((conversation: IConversation) => {\r\n                endTimeToken = null;\r\n                startTimeToken = null;\r\n                endTimeToken = that.pubNubService.getConversationLastReadTimetoken(conversation.shared_channel);\r\n                //// console.log('[Before Calling history api]', conversation.shared_channel, endTimeToken);\r\n                // If last read timestamp is null then  get only single record otherwise get as per timestamp                     \r\n                if (!endTimeToken && conversation.joining_time_token) {\r\n                    endTimeToken = conversation.joining_time_token;\r\n                    //  // console.log('Case#1');\r\n                }\r\n\r\n                if (conversation.joining_time_token && endTimeToken && conversation.joining_time_token > endTimeToken) {\r\n                    endTimeToken = conversation.joining_time_token;\r\n                    // // console.log('Case#2');\r\n                    //// console.log('In case of edit group if user added some oneone They should not be see the last conversation message which was there before adding to them');\r\n                }\r\n                if (conversation.leaving_time_token && conversation.leaving_time_token > 0) {\r\n                    startTimeToken = endTimeToken;\r\n                    endTimeToken = conversation.leaving_time_token;\r\n                    // // console.log('Case#3');\r\n                }\r\n                if (conversation.type === CONSTANTS.CONVERSATION_TYPE.SINGLE) {\r\n                    friendsList = friendsList.concat(conversation.receiver_id + '_present')\r\n                }\r\n                historyLimit = (endTimeToken) ? CONSTANTS.CONVERSATION_MAX_UNREAD_COUNT : 1;\r\n                //// console.log('[Calling history api joining_time_token, historyLimit,endTimeToken]', conversation.shared_channel, conversation.joining_time_token, conversation.leaving_time_token, startTimeToken, endTimeToken);\r\n                that.pubNubService.history(conversation.shared_channel, false, historyLimit, startTimeToken, endTimeToken).subscribe((event: PubNubEvent) => {\r\n                    if (event.value && event.value.messages && event.value.messages.length > 0) {\r\n                        let lastMsgIndex = event.value.messages.length - 1;\r\n                        if (!that.pubNubService.getConversationLastReadTimetoken(conversation.shared_channel)) {\r\n                            that.pubNubService.setConversationLastState(conversation.shared_channel, 0, event.value.messages[lastMsgIndex].timetoken);\r\n                        } else {\r\n                            that.pubNubService.setConversationLastState(conversation.shared_channel, lastMsgIndex);\r\n                        }\r\n                    }\r\n                }, (error) => {\r\n                    this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n                });\r\n            });\r\n            that.pubNubService.addChanneltoMyGroup(friendsList, that.userService.userObj.user_id + '_friends');\r\n            that.pubNubService.subscribeGroup([that.userService.userObj.user_id + '_friends-pnpres'], false);\r\n\r\n        });\r\n    }\r\n\r\n\r\n    initGroupEvents() {\r\n        this.events.subscribe(CONSTANTS.APP_EVENTS.GROUP_EVENTS, (groupEvent) => {\r\n            //let groupEvent = groupEvents[0];\r\n            // console.log(\"App Component Group Event\", groupEvent);\r\n\r\n            if (groupEvent.state !== undefined && groupEvent.state.action == CONSTANTS.USER_STATES.GROUP_ADD) {\r\n                let shared_channel = groupEvent.state.groupName;\r\n                this.pubNubService.addChanneltoMyGroup([shared_channel], this.userService.userObj.user_id + '_group');\r\n                this.pubNubService.setPushNotificationChannels([shared_channel]);\r\n                if (this.platform.is('cordova')) {\r\n                    if (!!this.userService.userObj.notification_enabled) {\r\n                        this.pubNubService.registerDevice([shared_channel], this.userService.deviceToken, this.userService.pushPlatform);\r\n                    }\r\n                    this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.ADDED_GROUP') + ' ' + groupEvent.state.displayName);\r\n                }\r\n                if (!this.pubNubService.getConversationLastReadTimetoken(shared_channel)) {\r\n                    this.pubNubService.getTimeToken((timetoken) => {\r\n                        this.pubNubService.setConversationLastState(shared_channel, 0, timetoken);\r\n                    });\r\n                } else {\r\n                    this.pubNubService.setConversationLastState(shared_channel, 0);\r\n                }\r\n                // console.log('You have been added to the group' + groupEvent.state.displayName);\r\n            } else if (groupEvent.state !== undefined && groupEvent.state.action == CONSTANTS.USER_STATES.GROUP_REMOVE) {\r\n                this.pubNubService.removeChannelFromMyGroup([groupEvent.state.groupName], this.userService.userObj.user_id + '_group');\r\n                if (this.platform.is('cordova')) {\r\n                    this.pubNubService.unRegisterDevice([groupEvent.state.groupName], this.userService.deviceToken, this.userService.pushPlatform);\r\n                    this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.NO_LONGER_PARTICIPANT') + ' ' + groupEvent.state.displayName);\r\n                }\r\n                // console.log('You have been removed from the group' + groupEvent.state.displayName);\r\n            } else if (groupEvent.state !== undefined && groupEvent.state.action == CONSTANTS.USER_STATES.VERIFICATION_REQUEST && groupEvent.channel === this.userService.userObj.user_id) {\r\n                this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.VERIFICATION_MESSAGE'));\r\n            } else if (groupEvent.state !== undefined && groupEvent.state.action == CONSTANTS.USER_STATES.VERIFICATION_CANCEL && groupEvent.channel === this.userService.userObj.user_id) {\r\n                this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.VERIFICATION_CANCEL_MESSAGE'));\r\n            } else if (groupEvent.state !== undefined && groupEvent.state.action == CONSTANTS.USER_STATES.SERVICE_REQUEST_REPORTED) {\r\n                let shared_channel = groupEvent.state.groupName;\r\n                this.pubNubService.addChanneltoMyGroup([shared_channel], this.userService.userObj.user_id + '_group');\r\n                this.pubNubService.setPushNotificationChannels([shared_channel]);\r\n                if (this.platform.is('cordova')) {\r\n                    if (!!this.userService.userObj.notification_enabled) {\r\n                        this.pubNubService.registerDevice([shared_channel], this.userService.deviceToken, this.userService.pushPlatform);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        this.events.subscribe(CONSTANTS.APP_EVENTS.CONNECTION_STATUS_CHANGED, (event) => {\r\n            //console.log('In app.component CONNECTION_STATUS_CHANGED', event);\r\n            let stateObj: IConnectionStatusChangeState = event.state;\r\n            if (stateObj && stateObj.action == CONSTANTS.USER_STATES.CONNECTION_STATUS_CHANGED) {\r\n                if (stateObj.connection_status === CONSTANTS.CONNECTION_STATUS.INVITED) {\r\n                    this.loaderService.showToaster(stateObj.name + ' ' + this.translateService.instant('ERROR_MESSAGES.INVITED_YOU'));\r\n                    //console.log(stateObj.name + ' ' + this.translateService.instant('ERROR_MESSAGES.INVITED_YOU'));\r\n                }\r\n                //TODO FIX-ME added temp fix for profile update on disconnect issue. \r\n                else if (stateObj.connection_status === CONSTANTS.CONNECTION_STATUS.IGNORE || stateObj.connection_status === CONSTANTS.CONNECTION_STATUS.CONNECTED) {\r\n                    //console.log(\"Profile update\", stateObj);\r\n                    this.userService.isProfileUpdate = true;\r\n\r\n                    // Added check on connection_type since we don't want to subscribe single conversation\r\n                    // (When Resident click on Approve and connect request) that will be subscribe under _friends\r\n                    if (stateObj.connection_status === CONSTANTS.CONNECTION_STATUS.CONNECTED &&\r\n                        (!stateObj.connection_type || stateObj.connection_type && stateObj.connection_type === CONSTANTS.CONVERSATION_TYPE.GROUP)) {\r\n                        this.pubNubService.addChanneltoMyGroup([stateObj._id], this.userService.userObj.user_id + '_group');\r\n                        this.pubNubService.registerDevice([stateObj._id], this.userService.deviceToken, this.userService.pushPlatform);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    // Register push notification\r\n    initPush() {\r\n        let that = this;\r\n        const pushOptions: PushOptions = {\r\n            android: {\r\n                senderID: CONSTANTS.GCM_SENDER_ID,\r\n                icon: \"icon\",\r\n                clearNotifications: \"true\"\r\n            },\r\n            ios: {\r\n                alert: \"true\",\r\n                badge: \"true\",\r\n                sound: \"true\",\r\n                clearBadge: \"true\"\r\n            },\r\n            windows: {}\r\n        };\r\n        const pushObject: PushObject = that.push.init(pushOptions);\r\n\r\n        pushObject.on('registration').subscribe((data) => {\r\n            // console.log('registration ---', data);\r\n            that.userService.storeDeviceToken(data.registrationId);\r\n        });\r\n\r\n        pushObject.on('notification').subscribe(onNotification);\r\n\r\n        pushObject.on('error').subscribe((e) => {\r\n            that.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.DEVICE_REGISTRATION_FAILED'));\r\n        });\r\n\r\n        function onNotification(data) {\r\n            // console.log(\"Push Message Data\", JSON.stringify(data));\r\n            if (data.additionalData.foreground === false) {\r\n                if (that.platform.is('ios')) {\r\n                    pushObject.getApplicationIconBadgeNumber().then((n) => {\r\n                        // console.log('Current badge number', n);\r\n                        let number = n + 1;\r\n                        pushObject.setApplicationIconBadgeNumber(number).then(() => {\r\n                            // console.log('setApplicationIconBadgeNumber - success', number);                        \r\n                        });\r\n                    }, function () {\r\n                        // console.log('error - getApplicationIconBadgeNumber');\r\n                    });\r\n                }\r\n            } else {\r\n                pushObject.setApplicationIconBadgeNumber(0).then(() => {\r\n                    // console.log('setApplicationIconBadgeNumber - success', number);                        \r\n                });\r\n            }\r\n\r\n            if (that.platform.is('ios')) {\r\n                if (data.additionalData['coldstart'] == false && data.additionalData[\"source\"] === \"rezility\") {\r\n                    // console.log('data.additionalData coldstart', data);\r\n                    that.events.publish('reLoadActivityFeed', data);\r\n                } else {\r\n                    // console.log('Chat Notification Received');\r\n                }\r\n            } else { // android \r\n                //Push notification filter on coldstart property to handle duplicate feeds\r\n                if (data.additionalData[\"source\"] === \"rezility\") {\r\n                    that.events.publish('reLoadActivityFeed', data);\r\n                }\r\n                else {\r\n                    // console.log('Chat Notification Received');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    initNetwork() {\r\n        this.connectSubscription = this.network.onConnect().subscribe(() => {\r\n            // console.log('network connected!');\r\n            // We just got a connection but we need to wait briefly\r\n            // before we determine the connection type.  Might need to wait\r\n            // prior to doing any api requests as well.\r\n            this.httpService.online = true;\r\n            setTimeout(() => {\r\n                // console.log(\"Current Network is \", Network.connection);\r\n            }, 3000);\r\n        });\r\n\r\n        this.dissconnectSubscription = this.network.onDisconnect().subscribe(() => {\r\n            // console.log('network disconnected !', this.isRootPageSet);\r\n            if (this.httpService.online) {\r\n                this.onDisconnect();\r\n            }\r\n            this.httpService.online = false;\r\n        });\r\n    }\r\n\r\n    onDisconnect() {\r\n        //console.log(\"Current Page\", this.userService.getCurrentPage().currentPage);\r\n        if (this.userService.getCurrentPage().currentPage !== CONSTANTS.PAGES.AROUND_YOU) {\r\n            let alert = this.alertCtrl.create({\r\n                title: this.translateService.instant('ERROR_MESSAGES.NO_NETWORK_TITLE'),\r\n                message: this.translateService.instant('ERROR_MESSAGES.NO_NETWORK_MSG'),\r\n                buttons: [{\r\n                    'text': this.translateService.instant('MISC.OK'), handler: () => {\r\n                        if (!this.isRootPageSet) {\r\n                            this.platform.exitApp();\r\n                        }\r\n                    }\r\n                }],\r\n                cssClass: 'alert-single'\r\n            });\r\n            alert.present();\r\n        } else {\r\n            this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.NO_NETWORK_MSG'));\r\n        }\r\n    }\r\n\r\n    verifyForceUpdate() {\r\n        let deviceType = '', appVersion = ENVIRONMENT.APP_VERSION, appUpdateURL = '';\r\n        if (this.platform.is('android')) {\r\n            deviceType = 'android';\r\n            appUpdateURL = CONSTANTS.APP_UPDATE_URL.ANDROID;\r\n        } else if (this.platform.is('ios')) {\r\n            deviceType = 'ios';\r\n            appUpdateURL = CONSTANTS.APP_UPDATE_URL.IOS;\r\n        }\r\n\r\n        let updateHandler = function () {\r\n            window.open(appUpdateURL, \"_system\");\r\n            return false;\r\n        }\r\n        if (appVersion && deviceType) {\r\n            this.userService.verifyForceUpdate(appVersion, deviceType).subscribe((response) => {\r\n                if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n                    if (response.app_status_code === CONSTANTS.APP_UPDATE_STATUS_CODE.NO_UPDATE) {\r\n                        return;\r\n                    }\r\n                    let alert = this.alertCtrl.create({\r\n                        title: response.title,\r\n                        message: response.message,\r\n                        buttons: [{\r\n                            text: this.translateService.instant('ERROR_MESSAGES.OK_BTN'),\r\n                            handler: updateHandler,\r\n                        }],\r\n                        enableBackdropDismiss: false\r\n                    });\r\n                    if (response.app_status_code === CONSTANTS.APP_UPDATE_STATUS_CODE.NORMAL_UPDATE) {\r\n                        alert.addButton({\r\n                            text: this.translateService.instant('ERROR_MESSAGES.CANCEL_BTN'),\r\n                            role: 'cancel'\r\n                        })\r\n                    } else if (response.app_status_code === CONSTANTS.APP_UPDATE_STATUS_CODE.FORCE_UPDATE) {\r\n                        alert.setCssClass('alert-single');\r\n                        //TODO - Need to remove this in version 1.7 \r\n                        if (this.userService.userObj && this.userService.userObj.user_id) {\r\n                            this.pubNubService.deleteGroup(this.userService.userObj.user_id + '_friends');\r\n                            this.pubNubService.deleteGroup(this.userService.userObj.user_id + '_group');\r\n                        }\r\n                    }\r\n                    alert.present();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // updateUserDeviceLang() {\r\n    //     if (this.userService.userObj && this.userService.userObj.user_id) {\r\n    //         this.userService.updateUserDeviceLang({ user_id: this.userService.userObj.user_id }).subscribe((res) => {\r\n    //             console.log('updateUserDeviceLang', res);\r\n    //         });\r\n    //     }\r\n    // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","export let CONSTANTS = {\r\n    LOCAL_TOKEN_KEY: 'LTK',\r\n    HAS_LOGGED_IN: 'HLI',\r\n    HAS_APP_STARTED: 'HAS',\r\n    DEVICE_TOKEN_KEY: 'DTK',\r\n    LOCAL_CONVERSATION_COUNT_MAP: 'LCCM',\r\n    AUTH_EVENTS: {\r\n        notAuthenticated: 'auth-not-authenticated',\r\n        notAuthorized: 'auth-not-authorized'\r\n    },\r\n    APP_ID: '22062016',\r\n    DEVICE_ID: 'web-dev1',\r\n    DEFAULT_LANGUAGE: 'en',\r\n    AVAILABLE_LANGUAGE: ['en', 'es', 'ko', 'ht', 'ru', 'zh-CN', 'zh-TW','pt'],\r\n    GCM_SENDER_ID: '975547819683',\r\n    ALL_USER_GROUP: 'rezility_all',\r\n    APP_UPDATE_URL: {\r\n        ANDROID: 'https://play.google.com/store/apps/details?id=com.enterprise.rezility',\r\n        IOS: 'https://itunes.apple.com/us/app/rezility/id1209975627?ls=1&mt=8'\r\n    },\r\n    APP_UPDATE_STATUS_CODE: {\r\n        NO_UPDATE: 0,\r\n        NORMAL_UPDATE: 1,\r\n        FORCE_UPDATE: 2\r\n    },\r\n    GOOGLE_MAP_DEFAULT_MARKER: {\r\n        ICON: './assets/img/blue-pin.png',\r\n        DROP_PIN_ICON: './assets/img/grey-pin.png'\r\n    },\r\n    CONVERSATION_MAX_UNREAD_COUNT: 25,\r\n    ACTIVITY_FEED_SCROLL_TO_TOP_DURATION: 500,\r\n    PLACE_NEAR_BY_SEARCH_MAP_RADIUS: 1000,\r\n    APP_EVENTS: {\r\n        NEW_MESSAGE: \"newmessage\",\r\n        UPDATE_CONVERSATION: \"updateconversation\",\r\n        SENT_MESSAGE: \"sentmessage\",\r\n        ARROUND_YOU_ACTIONS: \"arroundyouactions\",\r\n        NEW_MSG_PRESENCE_EVENT: \"presence_new_msg\",\r\n        CHAT_BOX_PRESENCE_EVENT: \"presence_chat_box\",\r\n        CONV_PRESENCE_EVENT: \"presence_conversation\",\r\n        GROUP_SETTING_PRESENCE_EVENT: \"presence_grp_settings\",\r\n        GROUP_CREATED: 'groupcreated',\r\n        KEYBOARD: \"keyboard\",\r\n        GROUP_EVENTS: \"groupevents\",\r\n        CLOSE_IMAGE_PREVIEW: 'closeimagepreview',\r\n        CONNECTION_STATUS_CHANGED: 'connectionstatuschanged',\r\n        CHAT_BOX_CONNECTION_STATUS_CHANGED: 'chatboxconnectionstatuschanged',\r\n        REFRESH_CONVERSATION: 'refreshconversation',\r\n        REFRESH_GROUP_DETAILS: 'refreshgroupdetails',\r\n        AROUND_YOU_COACH_MARK_GOT_IT_CLICK: 'aroundyoucoachmarkgotitclick',\r\n        PROVIDER_PRESENCE_EVENT: \"presence_provider\",\r\n        SERVICE_REQUEST_REPORTED: \"servicerequestreported\",\r\n        SERVICE_REQUEST_MESSAGE: 'servierequestmessage',\r\n        STOP_TTS: \"stoptexttospeech\",\r\n        LANGUAGE_UPDATE: \"languagerefresh\"\r\n    },\r\n    ARROUND_YOU_ACTIONS: {\r\n        SELECT_SAVED_PIN: 'selectsavepin',\r\n        SAVE_FILTER: 'savefilter'\r\n    },\r\n    PAGES: {\r\n        ACTIVITY_FEED: \"ACTIVITY_FEED\",\r\n        CONVERSATION: \"CONVERSATION\",\r\n        AROUND_YOU: \"AROUND_YOU\",\r\n        MY_STUFF: \"MY_STUFF\",\r\n        CHAT_BOX: \"CHAT_BOX\",\r\n        GROUP_CHAT: \"GROUP_CHAT\",\r\n        SERVICE_REQUESTS: \"SERVICE_REQUESTS\",\r\n        MY_PINNED_LOCATION: \"MY_PINNED_LOCATION\",\r\n        EDIT_PINNED_LOCATION: \"EDIT_PINNED_LOCATION\",\r\n        SET_PIN_LOCATION: \"SET_PINNED_LOCATION\",\r\n        MAP_OVERLAYS: \"MAP_OVERLAYS\",\r\n        LOGIN: \"LOGIN\",\r\n        DISCONTINUE_PROPERTY: \"DISCONTINUE_PROPERTY\",\r\n        HOUSING_TYPES: \"HOUSING_TYPES\",\r\n        HOUSING_UNIT: \"SELECT UNIT\",\r\n        PENDING_CONFIRMATION: \"PENDING_CONFIRMATION\",\r\n        PROVIDER_DETAIL: \"PROVIDER_DETAIL\",\r\n        PROVIDER_OPTIONS: \"PROVIDER_OPTIONS\",\r\n        VERIFY_ADDRESS: \"VERIFY_ADDRESS\",\r\n        CONVERSATION_SETTINGS: \"CONVERSATION_SETTINGS\",\r\n        NEW_MESSAGE: \"NEW_MESSAGE\",\r\n        PUBLIC_PROFILE: \"PUBLIC_PROFILE\",\r\n        VIEW_IMAGE: \"VIEW_IMAGE\",\r\n        EDIT_PROFILE: \"EDIT_PROFILE\",\r\n        ADDRESS_UPDATE: \"ADDRESS_UPDATE\",\r\n        MY_STUFF_PROFILE: \"MY_STUFF_PROFILE\",\r\n        MY_STUFF_SETTINGS: \"MY_STUFF_SETTINGS\",\r\n        MY_STUFF_CHANGE_PASSWORD: \"MY_STUFF_CHANGE_PASSWORD\",\r\n        MY_STUFF_BLOCKED_USERS: \"MY_STUFF_BLOCKED_USERS\",\r\n        FEEDBACK: \"FEEDBACK\",\r\n        REQUEST_PASSWORD: \"REQUEST_PASSWORD\",\r\n        REQUEST_PASSWORD_ERROR: \"REQUEST_PASSWORD_ERROR\",\r\n        REQUEST_PASSWORD_SUCCESS: \"REQUEST_PASSWORD_SUCCESS\",\r\n        GET_STARTED: \"GET_STARTED\",\r\n        SELECT_PASSWORD: \"SELECT_PASSWORD\",\r\n        SIGN_UP: \"SIGN_UP\",\r\n        CHOOSE_PASSWORD: \"CHOOSE_PASSWORD\",\r\n        APP_ONBOARDING: \"APP_ONBOARDING\"\r\n    },\r\n\r\n    NETWORK: {\r\n        UNKNOWN: \"unknown\",\r\n        ETHERNET: \"ethernet\",\r\n        WIFI: \"wifi\",\r\n        TWOG: \"2g\",\r\n        THREEG: \"3g\",\r\n        FOURG: \"4g\",\r\n        CELLULAR: \"cellular\",\r\n        NONE: \"none\"\r\n    },\r\n\r\n    CONVERSATION_TYPE: {\r\n        GROUP: 'group',\r\n        SINGLE: 'single'\r\n    },\r\n    GROUP_TYPE: {\r\n        NORMAL: 'normal',\r\n        SERVICE_PROVIDER: 'service_provider',\r\n        HOUSING_PROVIDER: 'housing_provider'\r\n    },\r\n    CONNECTION_STATUS: {\r\n        NOT_CONNECTED: 0,\r\n        INVITED: 1,\r\n        INVITATION_RECEIVED: 2,\r\n        CONNECTED: 3,\r\n        BLOCKED: 4,\r\n        IGNORE: 5,\r\n        UNBLOCKED: 6,\r\n        CONNECTED_BLOCKED: 7\r\n    },\r\n    MESSAGE_CONTENT_TYPE_ID: {\r\n        SYSTEM_MESSAGE_TO_ADMIN: 1,\r\n        SYSTEM_MESSAGE_TO_ALL: 2,\r\n        SERVICE_REQUEST: 3\r\n    },\r\n    CONVERSATION_STATUS: {\r\n        OPEN: 'open',\r\n        ARCHIVE: 'archived'\r\n    },\r\n    DEFAULT_PAGE_SIZE: {\r\n        CHAT_BOX: 100,\r\n        FEED: 10,\r\n        SERVICE_LIST: 25\r\n    },\r\n\r\n    USER_STATES: {\r\n        GROUP_ADD: 'add',\r\n        GROUP_REMOVE: 'remove',\r\n        GROUP_RENAME: 'rename',\r\n        CONNECTION_STATUS_CHANGED: 'connectionstatuschanged',\r\n        VERIFICATION_REQUEST: 'verificatonrequest',\r\n        VERIFICATION_CANCEL: 'verificatoncancel',\r\n        SERVICE_REQUEST_REPORTED: 'servicerequestreported'\r\n    },\r\n\r\n    ANALYTICS_EVENT: {\r\n        EVENT_CATEGORY_LINK: \"Link\",\r\n        EVENT_ACTION: \"Click\",\r\n        EVENT_CATEGORY_START_CONVERSATION: 'Start Conversation',\r\n        SUBMIT_POLL_ANSWER: 'Submit Poll Answer'\r\n    },\r\n\r\n    GOOGLE_MAP_PLACE_DETAIL: {\r\n        POSTAL_CODE: 'postal_code',\r\n        STATE: 'administrative_area_level_1',\r\n        CITY: 'locality'\r\n    },\r\n    NETWORK_TIMEOUT: 30000,\r\n    LOADER_MESSAGE: {\r\n        DURATION: 10000\r\n    },\r\n    RESPONSE_STATUS: {\r\n        SUCCESS: 'SUCCESS',\r\n        ERROR: 'ERROR'\r\n    },\r\n    TOASTER: {\r\n        DURATION: '2000',\r\n        POSITION_BOTTOM: 'bottom',\r\n        POSITION_CENTER: 'center'\r\n    },\r\n    PLACEHOLDER_IMAGES: {\r\n        PROFILE_PIC: \"./assets/img/image-placeholder.jpg\"\r\n    },\r\n\r\n    CHANGE_PASSWORD_MESSAGES: {\r\n        MEDIUM_REGX: '^(((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]))((?=.*[a-z]))((?=.*[A-Z]))(?=.*[0-9]))(?=.{8,100})',\r\n    },\r\n    NOTIFICATION_ICON: 'ic_noti',\r\n    NOTIFICATION_COLOR: 'black',\r\n    PRIVACY_NOTICE_URL: \"https://rezility.com/privacy-notice/\",\r\n    TERM_OF_USE_URL: \"https://rezility.com/terms-of-use/\",\r\n    FAQ_URL: \"https://rezility.com/about-us/faq/\",\r\n    CRYPTO_SALT: \"#R@z!L!tY\",\r\n    USER_TYPE: {\r\n        RESIDENT: 'resident',\r\n        SERVICE_PROVIDER: 'service_provider',\r\n        HOUSING_PROVIDER: 'housing_provider',\r\n        ADMIN: 'rezility_admin',\r\n        ORG_ADMIN: 'org_admin',\r\n        ADVERTISEMENT_MANAGER: 'advertisement_manager',\r\n    },\r\n    UPLOAD_IMAGE_SOURCE: {\r\n        PROFILE: 'profile',\r\n        CHATS: 'chats',\r\n        FEEDS: 'feeds',\r\n        PROPERTIES: 'properties',\r\n        INCIDENTS: 'incidents'\r\n    },\r\n    VERIFICATION_STATUS: {\r\n        VERIFIED: 'verified',\r\n        UNVERIFIED: 'unverified'\r\n    },\r\n    FEED_ACTIONS: {\r\n        POLL: 'poll',\r\n        FB_SHARE: 'fb_share',\r\n        TWITTER_SHARE: 'twitter_share',\r\n        CHAT: 'chat',\r\n        MORE_INFO: 'more_info',\r\n        PROFILE: 'profile',\r\n        PROVIDER: 'provider'\r\n    },\r\n\r\n    FACEBOOk_PROFILE_URL: {\r\n        PREFIX: 'https://graph.facebook.com/',\r\n        POSTFIX: '/picture'\r\n    },\r\n    GOOGLE_TRANSLATION_BASE_URL: \"https://translation.googleapis.com/language/translate/v2?format=text&key=AIzaSyDrij8RehiEZdbYRarCB9JHEjSye8J_5p4&&model=base\",\r\n    MESSAGES: {\r\n        SERVICE_REQUEST_CREATED: \"Service request has been created.\",\r\n        ADVOCATE_VERIFICATION_PREFIX: \"Resident Advocate Requested: \",\r\n        VERIFICATION_PREFIX: \"Verification Requested: \",\r\n        ACCEPTED_POSTFIX: \"has been verified. You are connected. \",\r\n        DENY_PREFIX: \"Verification Denied: \",\r\n        SENT_INVITE_NOT_POSTFIX: \"has invited you to connect.\"\r\n    },\r\n    TEMPLATE: {\r\n        POLL: 'Poll',\r\n        PROFILE: 'Profile',\r\n        PLACEMENT: 'Placement'\r\n    },\r\n    FEED_IMAGE_TYPES:{\r\n        BG_IMAGES: 'images',\r\n        LOGO: 'logos' \r\n    },\r\n    DELIVERY_TYPE: {\r\n        NOW: \"now\",\r\n        SCHEDULE: \"schedule\"\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/config.ts","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '../../providers/http-service';\r\nimport { ENVIRONMENT } from '../../shared/environment';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class AroundMeService {\r\n    public mapOverlays: IGetMapOverlaysOptions;\r\n    constructor(public http: HttpService) {\r\n        this.mapOverlays = { google_places: null, service_interest: null, provider_overlay: null };\r\n    }\r\n\r\n    getUserAroundmeSettings(params: { user_id: string }): Observable<IGetMapOverlaysResponse> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/getuseraroundmesettings';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    updateUserAroundmeSettings(params: IUpdateUserAroundmeSettingsRequest): Observable<IGetMapOverlaysResponse> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/updateuseraroundmesettings';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    placeDetailById(params: { place_id: string }): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/getplacedetails';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n\r\n    getNearByPlaces(params: IGoogleNearByPlacesRequest): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/getnearbyplaces';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    getPlacePredictions(params): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/googleplacesautocomplete';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    getPinedLocations(params: { user_id: string }): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/getpinlocations';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    addDropPinLocation(params: IPinLocation): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/savepinlocation';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    deletePinLocation(params: IPinLocation): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/deletepinlocations';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }    \r\n\r\n}\r\n\r\n\r\n\r\nexport interface OverlayOption {\r\n    _id: string;\r\n    name: string,\r\n    flag?: boolean;\r\n    type?: string;\r\n}\r\nexport interface IUpdateUserAroundmeSettingsRequest {\r\n    user_id: string;\r\n    service_interest: Array<string>;\r\n    google_places: Array<string>;\r\n    provider_overlay: Array<string>;\r\n}\r\nexport interface IGetMapOverlaysOptions {\r\n    service_interest: Array<OverlayOption>;\r\n    google_places: Array<OverlayOption>;\r\n    provider_overlay: Array<OverlayOption>;\r\n}\r\n\r\nexport interface IGetMapOverlaysResponse extends IGetMapOverlaysOptions {\r\n    status?: string;\r\n}\r\n\r\nexport interface IPinLocation {\r\n    place_id?: string;\r\n    user_id?: string;\r\n    name?: string,\r\n    address?: string,\r\n    address_type?: string,\r\n    position?: { lat: number, lng: number },\r\n    url?: string,\r\n    street_address1?: string;\r\n    street_address2?: string;\r\n    city?: string;\r\n    state?: string;\r\n    zipcode?: string\r\n}\r\n\r\n\r\n\r\nexport interface IGenericResponse {\r\n    status: string;\r\n    message: string;\r\n}\r\n\r\nexport interface IGoogleNearByPlacesRequest {\r\n    lat: number;\r\n    long: number;\r\n    radius: number;\r\n    types: string[];\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/aroundme/aroundme-service.ts","\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { ENVIRONMENT } from \"../../shared/environment\";\r\nimport { HttpService } from \"../../providers/http-service\";\r\nimport { IConversation, IMessage } from \"../conversations/chat-service\";\r\nimport { PubNubService } from \"../../providers/pubnub-service\";\r\nimport { CONSTANTS } from '../../shared/config';\r\nimport { LoaderService } from \"../../providers/loader-service\";\r\n\r\n@Injectable()\r\nexport class ProviderService {\r\n\r\n    constructor(public http: HttpService, public pubNubService: PubNubService,\r\n        private loaderService: LoaderService, private translateService: TranslateService, ) {\r\n        // console.log('[ In UserService ]');\r\n    }\r\n\r\n    connectToPropertyManager(params: IConnectPMRequest): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/servicelocations/connecttopropertymanager';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n    getNearByProperties(params: IGetNearByPropertiesRequest): Observable<IGetNearByPropertiesResponse> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/getnearbyproperties';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    getBuildingsByPropertyId(params: { property_id: string }): Observable<IBuildingResponse> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/servicelocations/getbuildingslist';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n    getUnitDetailsByBuildingId(params: { buildingId: string }): Observable<IGetNearByPropertiesResponse> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/getnearbyproperties';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    findPropertyById(params: { _id: string, user_id: string, building_id: string }): Observable<IFindPropertyByIdResponse> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/serviceLocations/findbypropertyid';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    toggleFollowStatus(params: IFollowProviderRequest): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/servicelocations/followproviders';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    toggleFavoriteStatus(params: IFavProviderRequest): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/servicelocations/favproviders';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    updatePeopleLiveInProperty(params: IDisconnectPropertyRequest): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/servicelocations/updatepeopleliveinproperty';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n    sendInvitationMessageToAdmin(groupObject, messagePrefixStr: string, addressStr: string) {\r\n        this.pubNubService.getSupportedLanguageMsg(messagePrefixStr).subscribe((msgContent) => {\r\n\r\n            // Concat original address and translated message for all supported languages (REZ-2392)\r\n            for (const langKey in msgContent) {\r\n                if (msgContent.hasOwnProperty(langKey)) {\r\n                    msgContent[langKey] += addressStr;\r\n                }\r\n            }\r\n\r\n            let coreMessageObj: IMessage = {\r\n                content: msgContent,\r\n                sender_uuid: groupObject.user_id,\r\n                image: '',\r\n                receiver_uuid: groupObject.shared_channel,\r\n                shared_channel: groupObject.shared_channel,\r\n                timetoken: groupObject.joining_time_token,\r\n                tags_array: [],\r\n                video: '',\r\n                is_group: true,\r\n                content_type_id: CONSTANTS.MESSAGE_CONTENT_TYPE_ID.SYSTEM_MESSAGE_TO_ADMIN\r\n            };\r\n            this.pubNubService.publish(coreMessageObj.shared_channel, coreMessageObj).subscribe((event) => {\r\n            });\r\n        }, error => {\r\n            this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n        });\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport interface IBaseProviderRequest {\r\n    user_id: string;\r\n    provider_location_id: string;\r\n}\r\n\r\nexport interface IFollowProviderRequest extends IBaseProviderRequest {\r\n    is_following: boolean;\r\n    provider_name: string;\r\n}\r\n\r\nexport interface IFavProviderRequest extends IBaseProviderRequest {\r\n    is_favorite: boolean;\r\n    provider_name: string;\r\n}\r\n\r\nexport interface IBasePropertyRequest extends IBaseProviderRequest {\r\n    building_id: string;\r\n    building_address: string;\r\n}\r\n\r\nexport interface IDisconnectPropertyRequest extends IBasePropertyRequest {\r\n    is_disconnect: boolean;\r\n    is_address_verified: boolean;\r\n    is_advocate: boolean;\r\n    unit: string;\r\n}\r\n\r\nexport interface IConnectPMRequest extends IBasePropertyRequest {\r\n    unit: string;\r\n    first_name: string;\r\n    last_name: string;\r\n    is_advocate: boolean;\r\n\r\n}\r\n\r\nexport interface IGetNearByPropertiesRequest {\r\n    user_id: string;\r\n    longitude: number;\r\n    latitude: number;\r\n    is_housing_property_needed: boolean,\r\n    service_interests?: Array<string>;\r\n}\r\n\r\nexport interface IBaseResponse {\r\n    status: string;\r\n    message: string;\r\n}\r\n\r\nexport interface IBuildingResponse extends IBaseResponse {\r\n    buildings: Array<IBuilding>;\r\n}\r\n\r\nexport interface IBuilding {\r\n    _id: string;\r\n    status: string;\r\n    public_name: string;\r\n    property_code: string;\r\n    street_address1: string;\r\n    units: Array<string>;\r\n\r\n}\r\n\r\nexport interface IBaseProvider {\r\n    _id: string;\r\n    about: string;\r\n    public_name: string;\r\n    profile_pic: string;\r\n    location_type: string;\r\n    street_address1?: string;\r\n    building_id?: string;\r\n    location: {\r\n        longitude: number;\r\n        latitude: number;\r\n        street_address1?: string;\r\n        street_address2?: string;\r\n        city?: string;\r\n        state?: string;\r\n        country?: string;\r\n        zipcode?: string;\r\n    };\r\n    icon_type?: string;\r\n}\r\n\r\nexport interface IBaseProperty extends IBaseProvider {\r\n    contacts?: {\r\n        phone_number: string;\r\n        phone_number_label: string;\r\n        fax: string\r\n    };\r\n    buildings?: Array<IBuilding>;\r\n    is_favorite: boolean;\r\n    is_following: boolean;\r\n    is_single_house_owner?: boolean;\r\n    units?: Array<string>;\r\n    verification_status?: string;\r\n    conversation?: IConversation;\r\n}\r\n\r\nexport interface IProviderDetails extends IBaseProperty {\r\n    email?: string;\r\n    website?: string;\r\n    banners: Array<string>,\r\n    hours_of_operation: {\r\n        monday: {\r\n            start_time: string;\r\n            end_time: string;\r\n        },\r\n        tuesday: {\r\n            start_time: string;\r\n            end_time: string;\r\n        },\r\n        wednesday: {\r\n            start_time: string;\r\n            end_time: string;\r\n        },\r\n        thursday: {\r\n            start_time: string;\r\n            end_time: string;\r\n        },\r\n        friday: {\r\n            start_time: string;\r\n            end_time: string;\r\n        },\r\n        saturday: {\r\n            start_time: string;\r\n            end_time: string;\r\n        }\r\n        sunday: {\r\n            start_time: string;\r\n            end_time: string;\r\n        }\r\n    };\r\n    social_media_pages?: {\r\n        twitter: string;\r\n        facebook: string;\r\n    }\r\n    service_interests: Array<string>;\r\n    provider_details?: Array<{\r\n        _id?: string;\r\n        user_name: string;\r\n        profile_pic: string;\r\n        user_id: string;\r\n    }>;\r\n    is_advocate: boolean;\r\n    resident_unit: string;\r\n}\r\n\r\n\r\nexport interface ISelectedProperty extends IBaseProperty {\r\n    selected: boolean;\r\n}\r\n\r\n\r\n\r\nexport interface IGetNearByPropertiesResponse extends IBaseResponse {\r\n    service_providers: Array<IBaseProvider>;\r\n    housing_providers: Array<IBaseProvider>;\r\n}\r\n\r\nexport interface IFindPropertyByIdResponse {\r\n    status: string;\r\n    property: Array<IProviderDetails>;\r\n}\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/aroundme/provider-service.ts","import { ChatService, IConversation, IGetUserConversationRequest, ISearchConversationRequest, IGetUserConversationResponse } from './chat-service';\r\nimport { PubNubService } from '../../providers/pubnub-service';\r\nimport { LoaderService } from '../../providers/loader-service';\r\nimport { CONSTANTS } from '../../shared/config';\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\nexport class ConnectionList {\r\n\r\n    constructor(public chatService: ChatService, public pubNubService: PubNubService,\r\n        private translateService: TranslateService, public loaderService: LoaderService) {\r\n\r\n    }\r\n\r\n    getUserList(params: IGetUserConversationRequest, callback: (error: Error, params: IGetUserConversationResponse) => void): void {\r\n        this.chatService.getUserConversation(params).subscribe((result: any) => {\r\n            if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n                this.processConversationResult(result, callback);\r\n            } else {\r\n                this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n            }\r\n        }, error => {\r\n            this.loaderService.showToaster(error);\r\n        });\r\n    }\r\n\r\n    searchConversation(params: ISearchConversationRequest, callback: (error: Error, params: IGetUserConversationResponse) => void): void {\r\n        this.chatService.searchConversation(params).subscribe((result: any) => {\r\n            if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n                this.processConversationResult(result, callback);\r\n            } else {\r\n                this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n            }\r\n        }, error => {\r\n            this.loaderService.showToaster(error);\r\n        });\r\n    }\r\n\r\n    processConversationResult(result, callback) {\r\n        let connected: Array<IConversation>, invitation_sent: Array<IConversation>, invitation_received: Array<IConversation>;\r\n        let otherUsersList: Array<IConversation>, not_connected: Array<IConversation>;\r\n\r\n        connected = updateDisplayName(result.connected || []);\r\n        invitation_sent = updateDisplayName(result.invitation_sent || []);\r\n        invitation_received = updateDisplayName(result.invitation_received || []);\r\n        not_connected = updateDisplayName(result.not_connected || []);\r\n\r\n        otherUsersList = result.invitation_sent || [];\r\n        otherUsersList = otherUsersList.concat(invitation_received);\r\n        otherUsersList = otherUsersList.concat(not_connected);\r\n\r\n        if (callback) {\r\n            callback(null, { otherUsersList: otherUsersList, connected: connected, invitation_sent: invitation_sent, invitation_received: invitation_received, not_connected: not_connected });\r\n        }\r\n\r\n        function updateDisplayName(users) {\r\n            users.map((item) => {\r\n                if (item.type !== CONSTANTS.CONVERSATION_TYPE.GROUP) {\r\n                    item['user_id'] = item.receiver_id;\r\n                } else {\r\n                    item['user_name'] = item.name;\r\n                    item['user_id'] = item.shared_channel;\r\n                    item['receiver_id'] = item.shared_channel;\r\n                }\r\n                return item;\r\n            });\r\n            return users;\r\n        }\r\n    }\r\n\r\n    updatePresenceStatus(connectedUsersList, callback?): void {\r\n        let channels: Array<string> = [];\r\n        connectedUsersList.forEach((user) => {\r\n            if (user.type === CONSTANTS.CONVERSATION_TYPE.SINGLE) {\r\n                channels.push(user.user_id);\r\n            }\r\n        });\r\n        if (channels && channels.length > 0) {\r\n            this.pubNubService.getUsersState(channels).then((data: any) => {\r\n                if (data && data.channels) {\r\n                    connectedUsersList.map((user, index) => {\r\n                        user['presence'] = data.channels[user.user_id] ? \"online\" : \"\";\r\n                    });\r\n                }\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            });\r\n        } else {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversations/connection-list.ts","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { UserService } from '../../providers/user-service';\r\nimport { NavController, NavParams, AlertController, Events, Platform } from 'ionic-angular';\r\nimport { RequestLoginLink } from './request-login-link/request-login-link';\r\nimport { GetStarted } from '../get-started/get-started';\r\nimport { ValidationService } from '../../shared/validationService';\r\n//import { CONSTANTS } from '../../shared/config';\r\nimport { LoaderService } from '../../providers/loader-service'\r\nimport { BaseLoginClass } from './base-login';\r\nimport { AnalyticsService } from \"../../providers/analytics-service\";\r\nimport { CONSTANTS } from \"../../shared/config\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: 'login.html'\r\n})\r\nexport class LoginPage extends BaseLoginClass {\r\n  user: {\r\n    password: string,\r\n    email: string\r\n  };\r\n  submitted: boolean;\r\n  showPasswordIsChecked: boolean;\r\n  isLoggedUser: boolean;\r\n  loginForm: FormGroup;\r\n  isEmailExist: boolean;\r\n  invalidLoginError: string;\r\n\r\n  constructor(public userService: UserService, public navCtrl: NavController, public alertCtrl: AlertController, public navParams: NavParams,\r\n    private analyticsService: AnalyticsService, public events: Events, public platform: Platform, public loaderService: LoaderService,\r\n    public translateService: TranslateService, public formBuilder: FormBuilder) {\r\n    super(userService, alertCtrl, events,translateService, loaderService);\r\n    this.showPasswordIsChecked = false;\r\n    this.isEmailExist = false;\r\n    this.navCtrl = navCtrl;\r\n    this.userService = userService;\r\n    this.user = {\r\n      password: '',\r\n      email: ''\r\n      //password: 'Rezility123',\r\n      //email: 'babu@yopmail.com'\r\n    };\r\n    this.events = events;\r\n    this.submitted = false;\r\n    this.loginForm = formBuilder.group({\r\n      'username': ['', Validators.compose([Validators.maxLength(150), ValidationService.emailValidator, Validators.required])],\r\n      'password': ['', Validators.compose([Validators.required])]\r\n      // 'password': ['', Validators.compose([Validators.maxLength(50), ValidationService.strongPasswordValidator, Validators.required])]\r\n    });\r\n\r\n    if (navParams.get('email')) {\r\n      this.user.email = navParams.get('email');\r\n      this.isEmailExist = true;\r\n    } else if (navParams.get('loginLinkSentEmail')) {\r\n      this.user.email = navParams.get('loginLinkSentEmail');\r\n    }\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.LOGIN);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.LOGIN);\r\n    this.userService.userObj[\"show_coach_marks\"] = { all: true, feed: true, conversation: true, around_me: true, profile: true }\r\n  }\r\n\r\n  onLogin(user) {\r\n    this.submitted = true;\r\n    if (this.loginForm.valid) {\r\n      this.proceedLogin(user, (errorMsg) => {\r\n        //console.log(errorMsg);\r\n        this.invalidLoginError = errorMsg;\r\n      })\r\n    } else {\r\n      this.invalidLoginError = this.translateService.instant('ERROR_MESSAGES.INVALID_USERNAME_PASSWORD');    \r\n    }\r\n  }\r\n\r\n  navigateToSignupLandingPage() {\r\n    // if (this.navCtrl.length() > 1) {\r\n    //   console.log('navigateToSignupLandingPage1');\r\n    //   this.navCtrl.pop();\r\n    // } else {\r\n    //   console.log('navigateToSignupLandingPage2');\r\n    //   this.navCtrl.setRoot(GetStarted);\r\n    // }\r\n    this.navCtrl.setRoot(GetStarted);\r\n  }\r\n  onRequestLoginLink() {\r\n    this.navCtrl.push(RequestLoginLink);\r\n  }\r\n\r\n  showPassword() {\r\n    // console.log('hiii showPassword');\r\n    this.showPasswordIsChecked = !this.showPasswordIsChecked\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core'\r\n@NgModule({\r\n    imports: [FormsModule, ReactiveFormsModule, IonicModule, TranslateModule],\r\n    exports: [FormsModule, ReactiveFormsModule, IonicModule, TranslateModule],\r\n    declarations: [],\r\n    providers: [],\r\n})\r\nexport class CoreModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/core.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LazyLoadDirective } from \"../directives/lazy-load.directive\";\r\nimport { LazyImgComponent } from \"../components/lazy-img/lazy-img.component\";\r\nimport { ImageCacheService } from \"../providers/image-cache-service\";\r\nimport { KeyboardAttachDirective } from \"../directives/keyboard-attach.directive\";\r\nimport { Autoresize } from \"../directives/auto-resize.directive\";\r\nimport { LocalizedDatePipe } from '../directives/localized-date-pipe.directive';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        LazyLoadDirective,\r\n        LazyImgComponent,\r\n        KeyboardAttachDirective,\r\n        LocalizedDatePipe,\r\n        Autoresize\r\n        \r\n    ],\r\n    providers: [ImageCacheService],\r\n    exports: [\r\n        LazyImgComponent,\r\n        KeyboardAttachDirective,\r\n        LocalizedDatePipe,\r\n        Autoresize\r\n    ]\r\n})\r\n\r\nexport class ImageCacheModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/shared/image-cache.module.ts","var map = {\n\t\"./af\": 339,\n\t\"./af.js\": 339,\n\t\"./ar\": 340,\n\t\"./ar-dz\": 341,\n\t\"./ar-dz.js\": 341,\n\t\"./ar-kw\": 342,\n\t\"./ar-kw.js\": 342,\n\t\"./ar-ly\": 343,\n\t\"./ar-ly.js\": 343,\n\t\"./ar-ma\": 344,\n\t\"./ar-ma.js\": 344,\n\t\"./ar-sa\": 345,\n\t\"./ar-sa.js\": 345,\n\t\"./ar-tn\": 346,\n\t\"./ar-tn.js\": 346,\n\t\"./ar.js\": 340,\n\t\"./az\": 347,\n\t\"./az.js\": 347,\n\t\"./be\": 348,\n\t\"./be.js\": 348,\n\t\"./bg\": 349,\n\t\"./bg.js\": 349,\n\t\"./bm\": 350,\n\t\"./bm.js\": 350,\n\t\"./bn\": 351,\n\t\"./bn.js\": 351,\n\t\"./bo\": 352,\n\t\"./bo.js\": 352,\n\t\"./br\": 353,\n\t\"./br.js\": 353,\n\t\"./bs\": 354,\n\t\"./bs.js\": 354,\n\t\"./ca\": 355,\n\t\"./ca.js\": 355,\n\t\"./cs\": 356,\n\t\"./cs.js\": 356,\n\t\"./cv\": 357,\n\t\"./cv.js\": 357,\n\t\"./cy\": 358,\n\t\"./cy.js\": 358,\n\t\"./da\": 359,\n\t\"./da.js\": 359,\n\t\"./de\": 360,\n\t\"./de-at\": 361,\n\t\"./de-at.js\": 361,\n\t\"./de-ch\": 362,\n\t\"./de-ch.js\": 362,\n\t\"./de.js\": 360,\n\t\"./dv\": 363,\n\t\"./dv.js\": 363,\n\t\"./el\": 364,\n\t\"./el.js\": 364,\n\t\"./en-au\": 365,\n\t\"./en-au.js\": 365,\n\t\"./en-ca\": 366,\n\t\"./en-ca.js\": 366,\n\t\"./en-gb\": 367,\n\t\"./en-gb.js\": 367,\n\t\"./en-ie\": 368,\n\t\"./en-ie.js\": 368,\n\t\"./en-nz\": 369,\n\t\"./en-nz.js\": 369,\n\t\"./eo\": 370,\n\t\"./eo.js\": 370,\n\t\"./es\": 371,\n\t\"./es-do\": 372,\n\t\"./es-do.js\": 372,\n\t\"./es-us\": 373,\n\t\"./es-us.js\": 373,\n\t\"./es.js\": 371,\n\t\"./et\": 374,\n\t\"./et.js\": 374,\n\t\"./eu\": 375,\n\t\"./eu.js\": 375,\n\t\"./fa\": 376,\n\t\"./fa.js\": 376,\n\t\"./fi\": 377,\n\t\"./fi.js\": 377,\n\t\"./fo\": 378,\n\t\"./fo.js\": 378,\n\t\"./fr\": 379,\n\t\"./fr-ca\": 380,\n\t\"./fr-ca.js\": 380,\n\t\"./fr-ch\": 381,\n\t\"./fr-ch.js\": 381,\n\t\"./fr.js\": 379,\n\t\"./fy\": 382,\n\t\"./fy.js\": 382,\n\t\"./gd\": 383,\n\t\"./gd.js\": 383,\n\t\"./gl\": 384,\n\t\"./gl.js\": 384,\n\t\"./gom-latn\": 385,\n\t\"./gom-latn.js\": 385,\n\t\"./gu\": 386,\n\t\"./gu.js\": 386,\n\t\"./he\": 387,\n\t\"./he.js\": 387,\n\t\"./hi\": 388,\n\t\"./hi.js\": 388,\n\t\"./hr\": 389,\n\t\"./hr.js\": 389,\n\t\"./hu\": 390,\n\t\"./hu.js\": 390,\n\t\"./hy-am\": 391,\n\t\"./hy-am.js\": 391,\n\t\"./id\": 392,\n\t\"./id.js\": 392,\n\t\"./is\": 393,\n\t\"./is.js\": 393,\n\t\"./it\": 394,\n\t\"./it.js\": 394,\n\t\"./ja\": 395,\n\t\"./ja.js\": 395,\n\t\"./jv\": 396,\n\t\"./jv.js\": 396,\n\t\"./ka\": 397,\n\t\"./ka.js\": 397,\n\t\"./kk\": 398,\n\t\"./kk.js\": 398,\n\t\"./km\": 399,\n\t\"./km.js\": 399,\n\t\"./kn\": 400,\n\t\"./kn.js\": 400,\n\t\"./ko\": 401,\n\t\"./ko.js\": 401,\n\t\"./ky\": 402,\n\t\"./ky.js\": 402,\n\t\"./lb\": 403,\n\t\"./lb.js\": 403,\n\t\"./lo\": 404,\n\t\"./lo.js\": 404,\n\t\"./lt\": 405,\n\t\"./lt.js\": 405,\n\t\"./lv\": 406,\n\t\"./lv.js\": 406,\n\t\"./me\": 407,\n\t\"./me.js\": 407,\n\t\"./mi\": 408,\n\t\"./mi.js\": 408,\n\t\"./mk\": 409,\n\t\"./mk.js\": 409,\n\t\"./ml\": 410,\n\t\"./ml.js\": 410,\n\t\"./mr\": 411,\n\t\"./mr.js\": 411,\n\t\"./ms\": 412,\n\t\"./ms-my\": 413,\n\t\"./ms-my.js\": 413,\n\t\"./ms.js\": 412,\n\t\"./mt\": 414,\n\t\"./mt.js\": 414,\n\t\"./my\": 415,\n\t\"./my.js\": 415,\n\t\"./nb\": 416,\n\t\"./nb.js\": 416,\n\t\"./ne\": 417,\n\t\"./ne.js\": 417,\n\t\"./nl\": 418,\n\t\"./nl-be\": 419,\n\t\"./nl-be.js\": 419,\n\t\"./nl.js\": 418,\n\t\"./nn\": 420,\n\t\"./nn.js\": 420,\n\t\"./pa-in\": 421,\n\t\"./pa-in.js\": 421,\n\t\"./pl\": 422,\n\t\"./pl.js\": 422,\n\t\"./pt\": 423,\n\t\"./pt-br\": 424,\n\t\"./pt-br.js\": 424,\n\t\"./pt.js\": 423,\n\t\"./ro\": 425,\n\t\"./ro.js\": 425,\n\t\"./ru\": 426,\n\t\"./ru.js\": 426,\n\t\"./sd\": 427,\n\t\"./sd.js\": 427,\n\t\"./se\": 428,\n\t\"./se.js\": 428,\n\t\"./si\": 429,\n\t\"./si.js\": 429,\n\t\"./sk\": 430,\n\t\"./sk.js\": 430,\n\t\"./sl\": 431,\n\t\"./sl.js\": 431,\n\t\"./sq\": 432,\n\t\"./sq.js\": 432,\n\t\"./sr\": 433,\n\t\"./sr-cyrl\": 434,\n\t\"./sr-cyrl.js\": 434,\n\t\"./sr.js\": 433,\n\t\"./ss\": 435,\n\t\"./ss.js\": 435,\n\t\"./sv\": 436,\n\t\"./sv.js\": 436,\n\t\"./sw\": 437,\n\t\"./sw.js\": 437,\n\t\"./ta\": 438,\n\t\"./ta.js\": 438,\n\t\"./te\": 439,\n\t\"./te.js\": 439,\n\t\"./tet\": 440,\n\t\"./tet.js\": 440,\n\t\"./th\": 441,\n\t\"./th.js\": 441,\n\t\"./tl-ph\": 442,\n\t\"./tl-ph.js\": 442,\n\t\"./tlh\": 443,\n\t\"./tlh.js\": 443,\n\t\"./tr\": 444,\n\t\"./tr.js\": 444,\n\t\"./tzl\": 445,\n\t\"./tzl.js\": 445,\n\t\"./tzm\": 446,\n\t\"./tzm-latn\": 447,\n\t\"./tzm-latn.js\": 447,\n\t\"./tzm.js\": 446,\n\t\"./uk\": 448,\n\t\"./uk.js\": 448,\n\t\"./ur\": 449,\n\t\"./ur.js\": 449,\n\t\"./uz\": 450,\n\t\"./uz-latn\": 451,\n\t\"./uz-latn.js\": 451,\n\t\"./uz.js\": 450,\n\t\"./vi\": 452,\n\t\"./vi.js\": 452,\n\t\"./x-pseudo\": 453,\n\t\"./x-pseudo.js\": 453,\n\t\"./yo\": 454,\n\t\"./yo.js\": 454,\n\t\"./zh-cn\": 455,\n\t\"./zh-cn.js\": 455,\n\t\"./zh-hk\": 456,\n\t\"./zh-hk.js\": 456,\n\t\"./zh-tw\": 457,\n\t\"./zh-tw.js\": 457\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 827;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = 827\n// module chunks = 0","import { ConnectionList } from './connection-list';\r\nimport { UserService } from '../../providers/user-service';\r\nimport { PubNubService, PubNubEvent } from '../../providers/pubnub-service';\r\nimport { ChatService, IConversation, IGetUserConversationRequest, IUpdateConversationStatusRequestParams, IGroupRemoveRequest, IMessage } from './chat-service';\r\nimport { LoaderService } from '../../providers/loader-service'\r\nimport { CONSTANTS } from '../../shared/config';\r\nimport { formatDate } from '../../shared/util/date';\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\nexport class BaseConversations {\r\n    public sharedChannelConversationIdMap: Map<string, IConversation>;\r\n    public sharedChannelIdConversationIndexMap: Map<string, number>;\r\n    public conversations: Array<IConversation>;\r\n    public isConversationsAPICall: boolean = false;\r\n    private connectionList: ConnectionList;\r\n    public usertypeConstant = CONSTANTS.USER_TYPE;\r\n    public userType: string;\r\n    \r\n    constructor(public userService: UserService, public pubNubService: PubNubService,\r\n        public translateService: TranslateService,\r\n        public chatService: ChatService, public loaderService: LoaderService) {\r\n        this.connectionList = new ConnectionList(chatService, pubNubService, translateService, loaderService);\r\n        //this.userData = this.userService.getUser();\r\n        //// console.log(\"Conversations - constructor\",this.userData );\r\n        this.sharedChannelConversationIdMap = new Map<string, IConversation>();\r\n        this.sharedChannelIdConversationIndexMap = new Map<string, number>();\r\n        this.conversations = [];\r\n        this.userType = this.userService.userObj.user_type;\r\n\r\n    }\r\n\r\n    refreshConversationDone(): void {\r\n        //// console.log('In refreshConversationDone')\r\n        this.loaderService.dismissLoader();\r\n        setTimeout(() => {\r\n            this.isConversationsAPICall = true;\r\n        }, 500);\r\n    }\r\n\r\n    refreshConversation(refreshConversationCB?: Function, showLoader = true): void {\r\n        let params: IGetUserConversationRequest = {\r\n            user_id: this.userService.userObj.user_id,\r\n            is_group_data_needed: true\r\n        };\r\n        this.isConversationsAPICall = false;\r\n        this.conversations = [];\r\n        this.sharedChannelConversationIdMap = new Map<string, IConversation>();\r\n        this.sharedChannelIdConversationIndexMap = new Map<string, number>();\r\n        if (showLoader) {\r\n            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n        }\r\n        this.connectionList.getUserList(params, (error, response) => {\r\n            if (response) {\r\n                let connections = response.connected || [];\r\n                let invitation_sent = response.invitation_sent.filter((self) => {\r\n                    return (self.status === CONSTANTS.CONVERSATION_STATUS.OPEN) ? true : false;\r\n                });\r\n                connections = connections.concat(response.invitation_received);\r\n                connections = connections.concat(invitation_sent);\r\n                this.getLastConversationFromPubNub(connections, (sharedChannelConversationIdMap) => {\r\n                    this.updateLastConversation(connections, sharedChannelConversationIdMap, (conversations1) => {\r\n                        this.sortConversation(conversations1, (conversations2) => {\r\n                            this.conversations = conversations2;\r\n                            this.updatePresenceStatus();\r\n                            if (refreshConversationCB) {\r\n                                refreshConversationCB.call(this);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n            } else {\r\n                if (refreshConversationCB) {\r\n                    refreshConversationCB.call(this);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    updateSubscribeChannels() {\r\n        let newChnnelsForSubscibe = [];\r\n        this.pubNubService.getSubscribedChannelsByUUID(this.userService.userObj.user_id).then((response: any) => {\r\n            //// console.log('In getSubscribedChannels response', response);\r\n            if (response && response.channels) {\r\n                this.conversations.forEach((conversation) => {\r\n                    if (conversation.type === CONSTANTS.CONVERSATION_TYPE.GROUP && !conversation.leaving_time_token && response.channels.indexOf(conversation.shared_channel) === -1) {\r\n                        newChnnelsForSubscibe.push(conversation.shared_channel);\r\n                    }\r\n                });\r\n                // console.log('In updateSubscribeChannels newChnnelsForSubscibe', newChnnelsForSubscibe);\r\n                if (newChnnelsForSubscibe && newChnnelsForSubscibe.length > 0) {\r\n                    //this.pubNubService.subscribe(newChnnelsForSubscibe, true);\r\n                    this.pubNubService.addChanneltoMyGroup(newChnnelsForSubscibe, this.userService.userObj.user_id + '_group');\r\n                    this.pubNubService.setPushNotificationChannels(newChnnelsForSubscibe);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    sortConversation(conversations: Array<IConversation>, sortConversationCallback): void {\r\n        let _conversations = JSON.parse(JSON.stringify(conversations));\r\n        _conversations.sort(function (a: IConversation, b: IConversation) {\r\n            if (a.timetoken == undefined) {\r\n                return 1;\r\n            } else if (b.timetoken == undefined) {\r\n                return -1;\r\n            } else {\r\n                return b.timetoken - a.timetoken;\r\n            }\r\n        });\r\n\r\n        // Update sharedChannelIdConversationIndexMap as per index value\r\n        _conversations.forEach((self, index) => {\r\n            this.sharedChannelIdConversationIndexMap[self.shared_channel] = index;\r\n        });\r\n        if (sortConversationCallback) {\r\n            sortConversationCallback(_conversations);\r\n        }\r\n    }\r\n\r\n    getLastConversationFromPubNub(conversations, callback?): void {\r\n        let that = this, lastObject = null, conversationIndex: number = 0, endTimeToken = null, startTimeToken = null, historyLimit;\r\n        if (conversations && conversations.length > 0) {\r\n            conversations.forEach((conversation: IConversation) => {\r\n                endTimeToken = null;\r\n                startTimeToken = null;\r\n                endTimeToken = this.pubNubService.getConversationLastReadTimetoken(conversation.shared_channel);\r\n                //// console.log('[Before Calling history api]', conversation.shared_channel, endTimeToken);\r\n\r\n                // TODO \r\n                // In case of edit group if user added some oneone\r\n                // They shouldn't be see the last conversation message which was there before adding to them            \r\n                if (conversation.joining_time_token && endTimeToken && conversation.joining_time_token > endTimeToken) {\r\n                    endTimeToken = conversation.joining_time_token;\r\n                    //// console.log('Case#1');\r\n                    //// console.log('In case of edit group if user added some oneone They should not be see the last conversation message which was there before adding to them');\r\n                }\r\n                if (conversation.leaving_time_token !== undefined && conversation.leaving_time_token > 0) {\r\n                    startTimeToken = endTimeToken;\r\n                    endTimeToken = conversation.leaving_time_token\r\n                    //// console.log('Case#2');\r\n                }\r\n                // If last read timestamp is null then  get only single record otherwise get as per timestamp             \r\n                historyLimit = (endTimeToken) ? CONSTANTS.CONVERSATION_MAX_UNREAD_COUNT : 1;\r\n\r\n                //// console.log('[Calling history api joining_time_token, historyLimit,endTimeToken]', historyLimit, conversation.shared_channel, conversation.joining_time_token, conversation.leaving_time_token, startTimeToken, endTimeToken);\r\n                that.pubNubService.history(conversation.shared_channel, false, historyLimit, startTimeToken, endTimeToken).subscribe((event: PubNubEvent) => {\r\n                    ++conversationIndex;\r\n\r\n                    if (event.value && event.value.messages && event.value.messages.length > 0) {\r\n                        let lastMsgIndex = event.value.messages.length - 1, shared_channel = null;\r\n\r\n                        lastObject = event.value.messages[lastMsgIndex].entry;\r\n                        lastObject.content = this.chatService.getMessageContent(lastObject.content);\r\n                        lastObject['timetoken'] = event.value.messages[lastMsgIndex].timetoken;\r\n                        shared_channel = lastObject.shared_channel || lastObject.shared_channel_id;\r\n                        that.sharedChannelConversationIdMap[shared_channel] = lastObject;\r\n                        // Increase lastMsgIndex by 1 only when user received message on new conversation or group\r\n                        if (lastMsgIndex === 0 && that.pubNubService.getConversationLastReadTimetoken(shared_channel) < lastObject.timetoken\r\n                            && this.userService.userObj.user_id != lastObject.sender_uuid) {\r\n                            lastMsgIndex += 1;\r\n                        }\r\n                        // Reset badgecount as per conversation metadata\r\n                        that.pubNubService.setConversationLastState(conversation.shared_channel, lastMsgIndex);\r\n                    }\r\n                    if ((conversations.length === conversationIndex) && callback) {\r\n                        callback(that.sharedChannelConversationIdMap);\r\n                    }\r\n                }, (error) => {\r\n                    // console.log(JSON.stringify(error));\r\n                    callback(that.sharedChannelConversationIdMap);\r\n                });\r\n            });\r\n        } else {\r\n            callback([]);\r\n        }\r\n    }\r\n\r\n    updateLastConversation(conversations, sharedChannelConversationIdMap?, callback?): void {\r\n        let lastObject = null;\r\n        conversations.map((conversation: IConversation, index: number) => {\r\n            // set user_name on outer object from receiver_data            \r\n            lastObject = {};\r\n            if (sharedChannelConversationIdMap[conversation.shared_channel] !== undefined) {\r\n                lastObject = sharedChannelConversationIdMap[conversation.shared_channel];\r\n                conversation['latestMessage'] = lastObject.content;\r\n                conversation['timetoken'] = lastObject.timetoken;\r\n                conversation['latestMessageTimestamp'] = formatDate(this.pubNubService.getDateTime(lastObject.timetoken), this.translateService);\r\n                //conversation['channel_id'] = conversation.shared_channel;\r\n                // get existing badgeCount count\r\n                conversation['badgeCount'] = this.pubNubService.getConversationBadgeCount(conversation.shared_channel);\r\n            }\r\n            // This block is to handle group addition and removal of user             \r\n            if (conversation['leaving_time_token']) {\r\n                conversation['latestMessage'] = this.translateService.instant('ERROR_MESSAGES.GRP_REMOVED');\r\n                conversation['timetoken'] = conversation['leaving_time_token'];\r\n                conversation['latestMessageTimestamp'] = formatDate(this.pubNubService.getDateTime(conversation['leaving_time_token']), this.translateService);\r\n            } else if (!conversation['latestMessage'] && !conversation['leaving_time_token'] && conversation['joining_time_token']) {\r\n                let latestMessage = '';\r\n                if (conversation.type === CONSTANTS.CONVERSATION_TYPE.SINGLE && (conversation.connection_status === CONSTANTS.CONNECTION_STATUS.CONNECTED || conversation.connection_status === CONSTANTS.CONNECTION_STATUS.CONNECTED_BLOCKED)) {\r\n                    latestMessage = this.translateService.instant('ERROR_MESSAGES.INVITATION_ACCEPTED_PREFIX') + conversation.user_name + \".\"\r\n                } else if (conversation.type === CONSTANTS.CONVERSATION_TYPE.GROUP) {\r\n                    if (conversation.group_type === CONSTANTS.GROUP_TYPE.NORMAL) {\r\n                        latestMessage = this.translateService.instant('ERROR_MESSAGES.GRP_JOINED');\r\n                    } else if (conversation.group_type === CONSTANTS.GROUP_TYPE.SERVICE_PROVIDER) {\r\n                        latestMessage = this.translateService.instant('ERROR_MESSAGES.INVITATION_ACCEPTED_PREFIX') + conversation.user_name + \".\"\r\n                    } else if (conversation.group_type === CONSTANTS.GROUP_TYPE.HOUSING_PROVIDER) {\r\n                        latestMessage = this.translateService.instant('ERROR_MESSAGES.INVITATION_ACCEPTED_PREFIX') + conversation.user_name + \".\"\r\n                    }\r\n                }\r\n                conversation['latestMessage'] = latestMessage;\r\n                conversation['timetoken'] = conversation['joining_time_token'];\r\n                conversation['latestMessageTimestamp'] = formatDate(this.pubNubService.getDateTime(conversation['joining_time_token']), this.translateService);\r\n\r\n                // Added conversation object in sharedChannelConversationIdMap of those conversation which doesn't has message\r\n                if (!this.sharedChannelConversationIdMap[conversation.shared_channel]) {\r\n                    this.sharedChannelConversationIdMap[conversation.shared_channel] = conversation;\r\n                }\r\n            }\r\n            // // console.log('updateLastConversation', conversation);\r\n            if (conversation.status === CONSTANTS.CONVERSATION_STATUS.ARCHIVE && conversation.badgeCount > 0) {\r\n                conversation.status = CONSTANTS.CONVERSATION_STATUS.OPEN;\r\n                this.updateConversationStatus(conversation);\r\n            }\r\n            return conversation;\r\n        });\r\n        if (callback) {\r\n            callback(conversations);\r\n        }\r\n    }\r\n\r\n    updateConversations(message: IMessage, timetoken: number): void {\r\n        let shared_channel = message.shared_channel || message.shared_channel_id;\r\n        let conversation: IConversation = null, conversationIndex;\r\n\r\n        if (this.sharedChannelIdConversationIndexMap[shared_channel] !== undefined) {\r\n            conversationIndex = this.sharedChannelIdConversationIndexMap[shared_channel];\r\n            conversation = this.conversations[conversationIndex];\r\n\r\n            // Resident sent second subsequent request for address verification then don't increment/show count, refresh page so that \r\n            if (message.content_type_id) {\r\n                this.refreshConversation(this.refreshConversationDone, false);\r\n            }\r\n            //Do not update badge count if we are in chatbox screen and chatting with same user as the message \r\n            else if (shared_channel !== this.userService.getCurrentPage().userid) {\r\n                conversation.badgeCount = (conversation.badgeCount === undefined) ? 1 : conversation.badgeCount + 1;\r\n\r\n                // Update badgeCount into localstorage\r\n                this.pubNubService.setConversationLastState(shared_channel, conversation.badgeCount);\r\n            } else {\r\n                //// console.log('Updated timetoken for shared_channel,', shared_channel, message.timetoken);\r\n                this.pubNubService.setConversationLastState(shared_channel, 0, timetoken);\r\n            }\r\n            conversation.latestMessage = this.chatService.getMessageContent(message.content);\r\n            conversation.timetoken = timetoken;\r\n            conversation.latestMessageTimestamp = formatDate(this.pubNubService.getDateTime(timetoken), this.translateService);\r\n            if (conversation.status === CONSTANTS.CONVERSATION_STATUS.ARCHIVE) {\r\n                conversation.status = CONSTANTS.CONVERSATION_STATUS.OPEN;\r\n                this.updateConversationStatus(conversation);\r\n            }\r\n            this.sortConversation(this.conversations, (conversations) => {\r\n                this.conversations = conversations;\r\n            });\r\n        } else {\r\n            //console.log('In updateConversations, refreshConversation for new chat.', message);\r\n            // Resident sent first request for address verification then don't increment/show count \r\n            if (!message.content_type_id) {\r\n                timetoken -= 10;\r\n                this.pubNubService.setConversationLastState(shared_channel, 1, timetoken);\r\n                this.refreshConversation(this.refreshConversationDone, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    updatePresenceStatus(): void {\r\n        let channels: Array<string> = [];\r\n        this.conversations.forEach((conversation) => {\r\n            if (conversation.type === CONSTANTS.CONVERSATION_TYPE.SINGLE) {\r\n                channels.push(conversation.user_id);\r\n            }\r\n        });\r\n        this.pubNubService.getUsersState(channels).then((data: any) => {\r\n            if (data.channels) {\r\n                this.conversations.map((conversation, index) => {\r\n                    conversation.presence = data.channels[conversation.user_id] ? \"online\" : \"\";\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    updateSentConversations(message: any): void {\r\n        let conversation = null, conversationIndex;\r\n        let shared_channel = message.shared_channel || message.shared_channel_id;\r\n        if (this.sharedChannelConversationIdMap[shared_channel] && this.sharedChannelIdConversationIndexMap[shared_channel] !== undefined) {\r\n            conversationIndex = this.sharedChannelIdConversationIndexMap[shared_channel];\r\n            conversation = this.conversations[conversationIndex];\r\n            //// console.log(conversation.user_id, \"-\", message.receiver_uuid, \"-\", message)\r\n            if (conversation.user_id == message.receiver_uuid) {\r\n                conversation.latestMessage = this.chatService.getMessageContent(message.content);\r\n                //conversation.channel_id = conversation.shared_channel;\r\n                conversation.timetoken = message.timetoken;\r\n                conversation.latestMessageTimestamp = formatDate(this.pubNubService.getDateTime(message.timetoken), this.translateService);\r\n            }\r\n\r\n            this.sortConversation(this.conversations, (conversations) => {\r\n                this.conversations = conversations;\r\n            });\r\n        } else {\r\n            // console.log('refreshConversation for sent  chat.');\r\n            this.refreshConversation(this.refreshConversationDone, false);\r\n        }\r\n    }\r\n\r\n\r\n    exitGroup(conversation: IConversation) {\r\n        this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n        let that = this;\r\n        this.pubNubService.getTimeToken((pubnubtimetoken) => {\r\n            let userid = this.userService.userObj.user_id;\r\n            let removeRequest: IGroupRemoveRequest = {\r\n                user_id: userid,\r\n                shared_channel: conversation.shared_channel,\r\n                name: conversation.name,\r\n                member_id: userid,\r\n                leaving_time_token: pubnubtimetoken\r\n            };\r\n            that.chatService.removeMemberFromGroup(removeRequest).subscribe((result) => {\r\n                if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n                    that.pubNubService.removeChannelFromGroup([userid], conversation.shared_channel, conversation.name, pubnubtimetoken);\r\n                } else {\r\n                    this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n                    this.loaderService.dismissLoader();\r\n                }\r\n            }, error => {\r\n                this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n                this.loaderService.dismissLoader();\r\n            });\r\n        });\r\n    }\r\n\r\n    updateConversationStatus(conversation: IConversation) {\r\n        let params: IUpdateConversationStatusRequestParams = {\r\n            user_id: this.userService.userObj.user_id,\r\n            shared_channel: conversation.shared_channel,\r\n            status: conversation.status\r\n        };\r\n        this.chatService.updateConversationStatus(params).subscribe((result) => {\r\n            //console.log('Inside updateConversationStatus', result);\r\n            this.loaderService.dismissLoader();\r\n            if (result.status !== CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n                this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n            }\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversations/base-conversations.ts","import { UserService, IUser } from '../../../providers/user-service';\r\nimport { PubNubService, PubNubEvent, IGetPushNotificationMessageRequest } from '../../../providers/pubnub-service';\r\nimport { ChatService, IConversation, IArchive, IMessage, IUpdateConversationStatusRequestParams } from '../chat-service';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { ElementRef } from '@angular/core';\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n\r\nexport class BaseChatBox {\r\n    public userData: IUser;\r\n    public selectedUser: IConversation;\r\n    public messageModel: string;\r\n    public pictureModel: string;\r\n    public videoPath: string;\r\n    public messages: Array<IMessage> = [];\r\n    public contactIdDetailMap: Map<string, any>;\r\n    public usertype = CONSTANTS.USER_TYPE;\r\n    public pageState: {\r\n        messages: Array<any>,\r\n        startTimeToken: number,\r\n        endTimeToken: number\r\n    };\r\n    public chatBoxInfiniteScrollEnabled: boolean = false;\r\n    public chatBoxInfiniteScrollShow: boolean = true;\r\n\r\n    constructor(public pubNubService: PubNubService,\r\n        public userService: UserService, public chatService: ChatService, public loaderService: LoaderService,\r\n        public translateService: TranslateService, public events, public element: ElementRef) {\r\n        this.userData = this.userService.getUser();\r\n        this.messageModel = '';\r\n        this.contactIdDetailMap = new Map<string, any>();\r\n        this.contactIdDetailMap[this.userData.user_id] = { user_name: this.userData.user_name, profile_pic: this.userData.profile.profile_pic };\r\n    }\r\n\r\n    setContactIdDetailMap(userList: Array<any>) {\r\n        userList.forEach(element => {\r\n            this.contactIdDetailMap[element.user_id] = { profile_pic: element.profile_pic, user_name: element.user_name };\r\n        });\r\n    }\r\n    loadMoreMessage(infiniteScroll) {\r\n        this.loadSelectedUserHistory(this.selectedUser.shared_channel, (error, isAllMessageLoaded = true) => {\r\n            infiniteScroll.complete();\r\n            this.chatBoxInfiniteScrollEnabled = !isAllMessageLoaded;\r\n            if (!this.chatBoxInfiniteScrollEnabled) {\r\n                this.chatBoxInfiniteScrollShow = false;\r\n            }\r\n            //s console.log('chatBoxInfiniteScrollEnabled', this.chatBoxInfiniteScrollEnabled);\r\n        });\r\n    }\r\n    loadSelectedUserHistory(shared_channel: string, callback?) {\r\n        let that = this;\r\n        let startTimeToken = null, endTimeToken = that.selectedUser.joining_time_token;\r\n\r\n        if (!this.pageState) {\r\n            startTimeToken = new Date().getTime() * 10000;\r\n            if (that.selectedUser.leaving_time_token !== undefined && that.selectedUser.leaving_time_token > 0) {\r\n                startTimeToken = that.selectedUser.leaving_time_token;\r\n            }\r\n            this.pageState = {\r\n                messages: [],\r\n                startTimeToken: startTimeToken,\r\n                endTimeToken: endTimeToken\r\n            }\r\n        }\r\n\r\n        that.pubNubService.loadChathistory(shared_channel, true, CONSTANTS.CONVERSATION_MAX_UNREAD_COUNT, this.pageState.startTimeToken, endTimeToken, true, (error, response) => {\r\n            if (!error) {\r\n                that.pageState['messages'] = that.formatMessages(response.messages).concat(that.pageState.messages);\r\n                that.pageState['endTimeToken'] = response.endTimeToken;\r\n                that.pageState['startTimeToken'] = response.startTimeToken;\r\n                that.messages = that.pageState.messages || [];\r\n                if (response.messages.length < CONSTANTS.CONVERSATION_MAX_UNREAD_COUNT) {\r\n                    console.log('End of the messages!');\r\n                    if (callback) {\r\n                        callback(null, true);\r\n                    }\r\n                } else {\r\n                    if (callback) {\r\n                        callback(null, false);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    formatMessages(messages) {\r\n        let tempmessages = [];\r\n        messages = messages || [];\r\n        messages.forEach(element => {\r\n            if (element.entry) {\r\n                tempmessages.push(this.createMessage(element.entry));\r\n            }\r\n        });\r\n        return tempmessages;\r\n    }\r\n\r\n    createMessage(message: IMessage): any {\r\n        let messageObj, contactObj = {}, senderObj = this.contactIdDetailMap[message.sender_uuid];\r\n        if (senderObj) {\r\n            contactObj = { user_name: senderObj.user_name, profile_pic: senderObj.profile_pic };\r\n        }\r\n        //console.log(contactObj);\r\n        messageObj = {\r\n            content: this.chatService.getMessageContent(message.content),\r\n            shared_channel: message.shared_channel,\r\n            image: message.image,\r\n            sender_uuid: message.sender_uuid,\r\n            receiver_uuid: message.receiver_uuid,\r\n            video: message.video,\r\n            timetoken: message.timetoken / 10000\r\n        };\r\n        if (message.content_type_id) {\r\n            messageObj['content_type_id'] = message.content_type_id;\r\n        }\r\n\r\n        Object.assign(messageObj, contactObj);\r\n        return messageObj;\r\n\r\n    }\r\n\r\n    sendMessage(messageStr) {\r\n        this.messageModel = '';\r\n        if (this.selectedUser.leaving_time_token !== undefined && this.selectedUser.leaving_time_token > 0) {\r\n            this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.GRP_SEND_ERROR_MSG'), 'center');\r\n            // console.log(this.translateService.instant('ERROR_MESSAGES.GRP_SEND_ERROR_MSG'));\r\n        } else {\r\n            this.pubNubService.getTimeToken((pubnubtimestoken) => {\r\n                if (this.selectedUser.shared_channel) {\r\n                    this.pubNubService.getSupportedLanguageMsg(messageStr, this.selectedUser.languages, false).subscribe((msgContent) => {\r\n                        let coreMessageObj: IMessage = {\r\n                            content: msgContent,\r\n                            sender_uuid: this.userData.user_id,\r\n                            image: this.pictureModel,\r\n                            receiver_uuid: this.selectedUser.receiver_id,\r\n                            shared_channel: this.selectedUser.shared_channel,\r\n                            timetoken: pubnubtimestoken,\r\n                            tags_array: [],\r\n                            video: this.videoPath,\r\n                            is_group: false\r\n                        };\r\n                        this.sendMessageToPubnub(coreMessageObj);\r\n                    }, error => {\r\n                        this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        this.resetFocus();\r\n    }\r\n\r\n    getPushNotificationTitle(): string {\r\n        let title = '';\r\n        if (this.userService.userName != '') {\r\n            title = this.userService.userName;\r\n        } else {\r\n            title = this.userData.profile.first_name + ' ' + this.userData.profile.last_name;\r\n        }\r\n        //Update title to include group name \r\n        if (this.selectedUser.type && this.selectedUser.type === CONSTANTS.CONVERSATION_TYPE.GROUP) {\r\n            title = title + '@' + this.selectedUser.user_name;\r\n        }\r\n        return title;\r\n    }\r\n\r\n    getMessageTagsArray(message: string): Array<string> {\r\n        let tagslistArray = [], tags_array: Array<string> = [];\r\n        tagslistArray = message.split(' ');\r\n        for (let i = 0; i < tagslistArray.length; i++) {\r\n            if (tagslistArray[i].indexOf('#') == 0) {\r\n                tags_array.push(tagslistArray[i]);\r\n            }\r\n        }\r\n        return tags_array;\r\n    }\r\n\r\n    sendMessageToPubnub(messageObj: IMessage) {\r\n        let that = this, coreMessageObj: IMessage, sharedChannelObj, receiverObj;\r\n        let pushNotificationMsg: IGetPushNotificationMessageRequest, pushNotificationObj, isMessagePublishOnPubnub = false;\r\n\r\n        this.resizeWriteMsgTextArea();\r\n        coreMessageObj = messageObj;\r\n\r\n        coreMessageObj.tags_array = this.getMessageTagsArray(this.chatService.getMessageContent(coreMessageObj.content));\r\n        coreMessageObj['is_group'] = (this.selectedUser.type && this.selectedUser.type === CONSTANTS.CONVERSATION_TYPE.GROUP) ? true : false;\r\n\r\n        //message object for shared channel\r\n        sharedChannelObj = coreMessageObj;\r\n        pushNotificationMsg = {\r\n            title: this.getPushNotificationTitle(),\r\n            message: this.chatService.getMessageContent(coreMessageObj.content, this.chatService.getNotificationLang(this.selectedUser.languages)),\r\n            sender: this.userData.user_name\r\n        };\r\n        pushNotificationObj = this.pubNubService.getPushNotificationMessage(pushNotificationMsg);\r\n        if (this.selectedUser.type && this.selectedUser.type == CONSTANTS.CONVERSATION_TYPE.GROUP) {\r\n            sharedChannelObj = Object.assign(sharedChannelObj, pushNotificationObj);\r\n        }\r\n        //message object for receiver channel         \r\n        receiverObj = Object.assign({}, pushNotificationObj, coreMessageObj);\r\n\r\n        //Change status to open for archived \r\n        if (this.selectedUser.status === CONSTANTS.CONVERSATION_STATUS.ARCHIVE) {\r\n            this.selectedUser.status = CONSTANTS.CONVERSATION_STATUS.OPEN;\r\n            this.events.publish(CONSTANTS.APP_EVENTS.REFRESH_CONVERSATION);\r\n            this.updateConversationStatus(this.selectedUser);\r\n        }\r\n        this.pubNubService.publish(coreMessageObj.shared_channel, sharedChannelObj).subscribe((event: PubNubEvent) => {\r\n            //console.log('Publish message to on channel', coreMessageObj.shared_channel, sharedChannelObj, event);\r\n            if (!isMessagePublishOnPubnub) {\r\n                isMessagePublishOnPubnub = true;\r\n                let timetoken = event.value.timetoken;\r\n                // update last read timestamp\r\n                receiverObj['timetoken'] = timetoken;\r\n                coreMessageObj['timetoken'] = timetoken;\r\n                if (this.selectedUser.type === CONSTANTS.CONVERSATION_TYPE.GROUP) {\r\n                    this.userService.setCurrentPage(CONSTANTS.PAGES.GROUP_CHAT, that.selectedUser.receiver_id);\r\n                } else if (this.selectedUser.connection_status && this.selectedUser.connection_status !== CONSTANTS.CONNECTION_STATUS.CONNECTED_BLOCKED) {\r\n                    sendToSelectedUser.call(this, receiverObj);\r\n                } else {\r\n                    // Do not send 1:1 message to received if they have blocked you. Just update the chat window\r\n                    this.messages.push(this.createMessage(coreMessageObj));\r\n                    this.events.publish(CONSTANTS.APP_EVENTS.KEYBOARD);\r\n                }\r\n                this.pubNubService.setConversationLastState(coreMessageObj.shared_channel, 0, timetoken);\r\n                this.events.publish(CONSTANTS.APP_EVENTS.SENT_MESSAGE, coreMessageObj);\r\n                this.archiveChat(coreMessageObj);\r\n                // Reset the messageStr input\r\n                this.resetMessageModel();\r\n            }\r\n        }, (error) => {\r\n            this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n        });\r\n\r\n        function sendToSelectedUser(receiverObj) {\r\n            that.pubNubService.publish(coreMessageObj.receiver_uuid, receiverObj).subscribe((event: PubNubEvent) => {\r\n                // console.log('Publish message to reciever. ', coreMessageObj.receiver_uuid, event, coreMessageObj, receiverObj);\r\n            }, (error) => {\r\n                that.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n            });\r\n\r\n            that.messages.push(that.createMessage(coreMessageObj));\r\n            that.events.publish(CONSTANTS.APP_EVENTS.KEYBOARD);\r\n        }\r\n    }\r\n\r\n\r\n    resizeWriteMsgTextArea() {\r\n        //let textareaEle = this.element.nativeElement.querySelector(\"textarea\");\r\n        this.element.nativeElement.querySelector(\"textarea\").style.height = '15px';\r\n    }\r\n\r\n    archiveChat(coreMessageObj) {\r\n        let archiveObj: IArchive = {\r\n            user_id: this.userData.user_id,\r\n            content: coreMessageObj.content,\r\n            sender_uuid: coreMessageObj.sender_uuid,\r\n            shared_channel: coreMessageObj.shared_channel,\r\n            date: coreMessageObj.date,\r\n            image: this.pictureModel,\r\n            video: this.videoPath,\r\n            tags: coreMessageObj.tagsArray\r\n        };\r\n\r\n        if (this.selectedUser.type !== CONSTANTS.CONVERSATION_TYPE.GROUP) {\r\n            archiveObj.receiver_uuid = coreMessageObj.receiver_uuid;\r\n        }\r\n\r\n        this.chatService.chatArchives(archiveObj).subscribe((res) => {\r\n            //// console.log('In chatArchives response', res);\r\n        }, error => {\r\n            this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n        })\r\n    }\r\n\r\n    resetMessageModel(): void {\r\n        this.messageModel = '';\r\n        this.pictureModel = '';\r\n        this.videoPath = '';\r\n    }\r\n\r\n    resetFocus() {\r\n        let textareaEle = this.element.nativeElement.querySelector(\"textarea\");\r\n        textareaEle.focus();\r\n    }\r\n\r\n    updateConversationStatus(conversation: IConversation) {\r\n        let params: IUpdateConversationStatusRequestParams = {\r\n            user_id: this.userService.userObj.user_id,\r\n            shared_channel: conversation.shared_channel,\r\n            status: conversation.status\r\n        };\r\n        this.chatService.updateConversationStatus(params).subscribe((result) => {\r\n            //console.log('Inside updateConversationStatus', result);\r\n            this.loaderService.dismissLoader();\r\n            if (result.status !== CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n                this.loaderService.showToaster(this.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversations/chat-box/base-chat-box.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CoreModule } from '../../shared/core.module'\r\nimport { ActivityPage } from './activity-feed';\r\nimport { ActivityService } from './activity-service';\r\nimport { ImageCacheModule } from \"../../shared/image-cache.module\";\r\nimport { ContactListPage } from \"./contact-list/contact-list\";\r\nimport { CreateFeedPage } from './create-feed/create-feed';\r\nimport { CreatePlacementFeedPage } from './create-placement-feed/create-placement-feed';\r\nimport { CropImageModal } from '../../shared/modals/crop-image/crop-image';\r\nimport { DescriptionFeedPage } from './create-placement-feed/description-feed/description-feed';\r\nimport { SelectImage } from './create-placement-feed/selectImage/select-image';\r\nimport { CreatePollFeedPage } from './create-poll-feed/create-poll-feed';\r\nimport { PollDescriptionPage } from './create-poll-feed/poll-description/poll-description';\r\nimport { SetDeliveryFeedModal } from \"../../shared/modals/set-delivery-feed/set-delivery-feed\";\r\n\r\n\r\n@NgModule({\r\n    imports: [CoreModule,ImageCacheModule],\r\n    exports: [],\r\n    entryComponents: [ActivityPage,ContactListPage,CreateFeedPage,CreatePlacementFeedPage, DescriptionFeedPage,CropImageModal,SelectImage, CreatePollFeedPage, PollDescriptionPage, SetDeliveryFeedModal],\r\n    declarations: [ActivityPage,ContactListPage,CreateFeedPage,CreatePlacementFeedPage, DescriptionFeedPage,CropImageModal,SelectImage, CreatePollFeedPage, PollDescriptionPage, SetDeliveryFeedModal],\r\n    providers: [ActivityService],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class ActivityFeedModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/pages/activity/activity-feed.module.ts","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  OnInit, OnDestroy, Renderer2\r\n} from '@angular/core';\r\nimport { ImageCacheService } from \"../providers/image-cache-service\";\r\nimport { CONSTANTS } from \"../shared/config\";\r\n\r\n\r\n/**\r\n * This directive is charge of cache the images and emit a loaded event\r\n */\r\n@Directive({\r\n  selector: '[lazy-load]'\r\n})\r\nexport class LazyLoadDirective implements OnInit, OnDestroy {\r\n\r\n  @Input('inputSrc') src = '';\r\n  @Input('lowData') lowData: boolean;\r\n  @Output() loaded = new EventEmitter();\r\n\r\n  public loadEvent: any;\r\n  public errorEvent: any;\r\n\r\n  constructor(public el: ElementRef,\r\n    public imgCacheService: ImageCacheService,\r\n    public renderer: Renderer2) { }\r\n\r\n  ngOnInit() {\r\n    // get img element\r\n    const nativeElement = this.el.nativeElement;\r\n    const render = this.renderer;\r\n\r\n    // add load listener\r\n    this.loadEvent = render.listen(nativeElement, 'load', () => {\r\n      render.addClass(nativeElement, 'loaded');\r\n      this.loaded.emit();\r\n    });\r\n\r\n    this.errorEvent = render.listen(nativeElement, 'error', () => {\r\n      nativeElement.remove();\r\n    });\r\n\r\n    if (this.src === CONSTANTS.PLACEHOLDER_IMAGES.PROFILE_PIC) {\r\n      render.setAttribute(nativeElement, 'src', this.src);\r\n    } else {\r\n      this.imgCacheService.isCached(this.src).then((value) => {\r\n        if (value) {\r\n          console.log(\"===Load cached image\");\r\n          this.imgCacheService.cacheImage(this.src).then((value) => {\r\n            render.setAttribute(nativeElement, 'src', value);\r\n          });\r\n        }else if (this.lowData){\r\n          console.log(\"===Low Data Image\");\r\n        } else{\r\n          console.log(\"===Low Normal Image\");\r\n          this.imgCacheService.cacheImage(this.src).then((value) => {\r\n            render.setAttribute(nativeElement, 'src', value);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // remove listeners\r\n    this.loadEvent();\r\n    this.errorEvent();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/lazy-load.directive.ts","import { Component, Input } from '@angular/core';\r\n\r\n/**\r\n * Component in charge of lazy load images and cache them\r\n */\r\n@Component({\r\n  selector: 'lazy-img',\r\n  templateUrl:'lazy-img.html'\r\n})\r\nexport class LazyImgComponent {\r\n\r\n  @Input() inputSrc: string;\r\n  @Input() lowData: boolean = false;\r\n\r\n  public placeholderActive: boolean = true;\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/lazy-img/lazy-img.component.ts","import { Directive, ElementRef, Input } from '@angular/core';\r\nimport { Content, Platform, Events } from 'ionic-angular';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\nimport { Subscription } from 'rxjs/Rx';\r\n\r\n/**\r\n * @name KeyboardAttachDirective\r\n * @description\r\n * The `keyboardAttach` directive will cause an element to float above the\r\n * keyboard when the keyboard shows. Currently only supports the `ion-footer` element.\r\n * \r\n * ### Notes\r\n * - This directive requires [Ionic Native](https://github.com/driftyco/ionic-native)\r\n * and the [Ionic Keyboard Plugin](https://github.com/driftyco/ionic-plugin-keyboard).\r\n * - Currently only tested to work on iOS.\r\n * - If there is an input in your footer, you will need to set\r\n *   `Keyboard.disableScroll(true)`.\r\n *\r\n * @usage\r\n *\r\n * ```html\r\n * <ion-content #content>\r\n * </ion-content>\r\n * \r\n * <ion-footer [keyboardAttach]=\"content\">\r\n *   <ion-toolbar>\r\n *     <ion-item>\r\n *       <ion-input></ion-input>\r\n *     </ion-item>\r\n *   </ion-toolbar>\r\n * </ion-footer>\r\n * ```\r\n */\r\n\r\n@Directive({\r\n  selector: '[keyboardAttach]'\r\n})\r\nexport class KeyboardAttachDirective {\r\n  @Input('keyboardAttach') content: Content;\r\n\r\n  private onShowSubscription: Subscription;\r\n  private onHideSubscription: Subscription;\r\n  // private tabHeight: number;\r\n\r\n  constructor(private elementRef: ElementRef, private platform: Platform, private events: Events, private keyboard: Keyboard) {\r\n    if (this.platform.is('cordova')) {\r\n      this.onShowSubscription = this.keyboard.onKeyboardShow().subscribe(e => this.onShow(e));\r\n      this.onHideSubscription = this.keyboard.onKeyboardHide().subscribe(() => this.onHide());\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.onShowSubscription) {\r\n      this.onShowSubscription.unsubscribe();\r\n    }\r\n    if (this.onHideSubscription) {\r\n      this.onHideSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private onShow(e) {\r\n    if (this.platform.is('cordova') && this.platform.is('ios')) {\r\n      let keyboardHeight: number = e.keyboardHeight || (e.detail && e.detail.keyboardHeight);\r\n      this.setElementPosition(keyboardHeight);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      window.scrollTo(0, 0);\r\n      this.content.scrollToBottom(0);\r\n      this.keyboard.disableScroll(true);\r\n    },100);\r\n    //this.events.publish(CONSTANTS.APP_EVENTS.KEYBOARD);\r\n  };\r\n\r\n  private onHide() {\r\n    this.setElementPosition(0);\r\n\r\n  };\r\n\r\n  private setElementPosition(pixels: number) {\r\n    if(this.elementRef.nativeElement){\r\n      this.elementRef.nativeElement.style.paddingBottom = pixels + 'px';\r\n    }\r\n    if(this.content){\r\n      this.content.resize();\r\n    }\r\n  }\r\n\r\n  // private onShow(e) {\r\n  //   let keyboardHeight: number = e.keyboardHeight || (e.detail && e.detail.keyboardHeight);\r\n  //   this.setElementPosition(keyboardHeight,true);\r\n  // };\r\n\r\n  // private onHide() {\r\n  //   this.setElementPosition(0,false);\r\n  // };\r\n\r\n  // private setElementPosition(pixels: number,onShow: boolean) {\r\n  //   if(onShow){\r\n  //       let tabElement = <HTMLElement>document.querySelector(\"#chat-box-footer\"), tabElementStyle = tabElement.style;;\r\n  //       // console.log(tabElementStyle.bottom);   \r\n  //       this.tabHeight = parseInt(tabElementStyle.bottom.substring(0,tabElementStyle.bottom.length -2));\r\n  //       pixels = pixels - this.tabHeight;\r\n  //       this.elementRef.nativeElement.style.paddingBottom = pixels + 'px';\r\n  //   }else{\r\n  //       this.elementRef.nativeElement.style.paddingBottom = pixels + 'px';\r\n  //   }\r\n  //   // console.log(\"setElementPosition - \" + pixels);\r\n  //   this.content.resize();\r\n  //}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/directives/keyboard-attach.directive.ts","// An autoresize directive that works with ion-textarea in Ionic 2\r\n// Usage example: <ion-textarea autoresize [(ngModel)]=\"body\"></ion-textarea>\r\n\r\nimport { Directive, HostListener, ElementRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n\tselector: \"ion-textarea[autoresize]\" // Attribute selector\r\n})\r\nexport class Autoresize {\r\n\r\n\t@HostListener(\"input\", [\"$event.target\"])\r\n\tonInput(textArea: HTMLTextAreaElement): void {\r\n\t\t//if (this.platform.is('cordova')) {\r\n\t\tthis.adjust();\r\n\t\t//}\r\n\t}\r\n\tconstructor(public element: ElementRef) {\r\n\t}\r\n\tngOnInit(): void {\r\n\t\t// if (this.platform.is('cordova')) {\r\n\t\t// \tthis.adjust();\r\n\t\t// }\r\n\t}\r\n\tadjust(): void {\r\n\t\t//let textareaEle = this.element.nativeElement.querySelector(\"textarea\");\r\n\t\tthis.element.nativeElement.querySelector('textarea').style.height = '0';\r\n\t\tif (this.element) {\r\n\t\t\tthis.element.nativeElement.querySelector('textarea').style.height = this.element.nativeElement.querySelector('textarea').scrollHeight + \"px\";\r\n\t\t\t// document.getElementById(\"chat-text\").style.height = (textareaEle.scrollHeight + 16 + \"px\");\r\n\t\t}\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/auto-resize.directive.ts","import { DatePipe } from '@angular/common';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Pipe({\r\n  name: 'localizedDate',\r\n  pure: true\r\n})\r\nexport class LocalizedDatePipe implements PipeTransform {\r\n\r\n  constructor(private translateService: TranslateService) {\r\n  }\r\n\r\n  transform(value: any, pattern: string = 'yMdhm'): any {\r\n    const datePipe: DatePipe = new DatePipe(this.translateService.currentLang);\r\n    if (this.translateService.currentLang.split('-')[0] === 'zh'){\r\n      pattern = 'MM/dd/yy hh:mm';\r\n    }\r\n    return datePipe.transform(value, pattern);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/localized-date-pipe.directive.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { GoogleMaps, Geocoder } from '@ionic-native/google-maps';\r\nimport { MapOverlays } from './map-overlays/map-overlays';\r\nimport { PinnedLocation } from './pinned-location/pinned-location';\r\nimport { SetPinnedLocation } from './set-pinned-location/set-pinned-location';\r\nimport { CoreModule } from '../../shared/core.module'\r\nimport { AroundmePage } from './aroundme';\r\nimport { ProviderDetails } from './provider-details/provider-details';\r\nimport { ProviderOptions } from './provider-options/provider-options';\r\nimport { HousingTypes } from './housing-types/housing-types';\r\nimport { HousingUnit } from './housing-unit/housing-unit';\r\nimport { AroundMeService } from './aroundme-service';\r\nimport { PendingConfirmation } from './pending-confirmation/pending-confirmation';\r\nimport { EditLocation } from \"./edit-location/edit-location\";\r\nimport { VerifyAddress } from \"./verify-address/verify-address\";\r\nimport { DiscontinuedProperty } from \"./discontinued-property/discontinued-property\";\r\nimport { ProviderService } from \"./provider-service\";\r\n//import { VerifyAddressDirective } from \"../../directives/verify-address.directive\";\r\nimport { ImageCacheModule } from \"../../shared/image-cache.module\";\r\n\r\n\r\n@NgModule({\r\n    imports: [CoreModule, ImageCacheModule],\r\n    exports: [],\r\n    entryComponents: [AroundmePage, MapOverlays, PinnedLocation, SetPinnedLocation, ProviderDetails, HousingTypes, HousingUnit, ProviderOptions, PendingConfirmation,EditLocation, VerifyAddress,DiscontinuedProperty],\r\n    declarations: [AroundmePage, MapOverlays, PinnedLocation, SetPinnedLocation, ProviderDetails, HousingTypes, HousingUnit, ProviderOptions, PendingConfirmation,EditLocation, VerifyAddress,DiscontinuedProperty],\r\n    providers: [GoogleMaps, AroundMeService,ProviderService,Geocoder],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AroundMeModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/pages/aroundme/aroundme.module.ts","import { Component, Input } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\r\nimport { CallNumber } from '@ionic-native/call-number';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { ChatBox } from '../../conversations/chat-box/chat-box';\r\nimport { UserService, IUser } from '../../../providers/user-service';\r\nimport { ChatService, IConversation, IGroup } from '../../conversations/chat-service';\r\nimport { PubNubService } from '../../../providers/pubnub-service';\r\nimport { IProviderDetails } from \"../provider-service\";\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: 'provider-options',\r\n  templateUrl: 'provider-options.html'\r\n})\r\nexport class ProviderOptions {\r\n  public userData: IUser;\r\n  @Input() providerDetails: IProviderDetails; NavParams\r\n  constructor(private inAppBrowser: InAppBrowser, private callNumber: CallNumber, private analyticsService: AnalyticsService,\r\n    private loaderService: LoaderService, private navCtrl: NavController, private userService: UserService,\r\n    private translateService: TranslateService, public chatService: ChatService, public pubNubService: PubNubService) {\r\n    this.userData = this.userService.getUser();\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.PROVIDER_OPTIONS);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.PROVIDER_OPTIONS);\r\n  }\r\n\r\n  sendMessageToProvider(providerDetails: IProviderDetails) {\r\n    if (providerDetails.conversation !== undefined) {\r\n      providerDetails.conversation.user_name = providerDetails.conversation.name;\r\n      this.navCtrl.push(ChatBox, { user: providerDetails.conversation })\r\n    } else {\r\n      this.openGroupChatBox(providerDetails);\r\n    }\r\n  }\r\n\r\n  openGroupChatBox(providerDetails: IProviderDetails) {\r\n    let that = this, groupObject: IGroup, conversationObj: IConversation, memberIds: Array<string> = [];\r\n    that.loaderService.createLoader(that.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    that.pubNubService.getTimeToken((timestamp) => {\r\n\r\n      if (providerDetails.provider_details) {\r\n        providerDetails.provider_details.map(self => {\r\n          memberIds.push(self._id);\r\n          self['user_id'] = self._id;\r\n          return self;\r\n        });\r\n      }\r\n\r\n      groupObject = {\r\n        user_id: that.userData.user_id,\r\n        name: providerDetails.public_name,\r\n        shared_channel: that.userData.user_id + '_' + providerDetails._id,\r\n        members: memberIds,\r\n        type: CONSTANTS.CONVERSATION_TYPE.GROUP,\r\n        joining_time_token: timestamp,\r\n        leaving_time_token: null,\r\n        group_type: CONSTANTS.USER_TYPE.SERVICE_PROVIDER,\r\n        user_name: that.userData.user_name,\r\n        created_by: that.userData.user_id,\r\n        profile_pic: providerDetails.profile_pic,\r\n        resident_profile_pic: that.userData.profile.profile_pic,\r\n        location_id : providerDetails._id\r\n      };\r\n\r\n      that.chatService.createOrEditConversation(groupObject, false).subscribe((result) => {\r\n        if (result.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n          conversationObj = {\r\n            name: groupObject.name,\r\n            user_name: groupObject.name,\r\n            user_id: groupObject.shared_channel,\r\n            shared_channel: groupObject.shared_channel,\r\n            receiver_id: groupObject.shared_channel,\r\n            members: providerDetails.provider_details,\r\n            type: groupObject.type,\r\n            timetoken: timestamp,\r\n            group_type: groupObject.group_type,\r\n            connection_status: CONSTANTS.CONNECTION_STATUS.CONNECTED\r\n          };\r\n\r\n          if (that.pubNubService.pushNotificationChannels.indexOf(groupObject.shared_channel) === -1) {\r\n            if (groupObject.members && groupObject.members.length > 0) {\r\n              that.pubNubService.addChanneltoGroup(groupObject.members, groupObject.shared_channel, groupObject.name, that.userService.userObj.user_id,that.userService.deviceToken, that.userService.pushPlatform);\r\n            }\r\n            that.pubNubService.setPushNotificationChannels([groupObject.shared_channel]);\r\n            if (!!that.userService.userObj.notification_enabled) {\r\n              that.pubNubService.registerDevice([groupObject.shared_channel], that.userService.deviceToken, that.userService.pushPlatform);\r\n            }\r\n          }\r\n          conversationObj['joining_time_token'] = result.chat[0].joining_time_token;\r\n\r\n          that.navCtrl.push(ChatBox, { user: conversationObj }).then(() => {\r\n            that.loaderService.dismissLoader();\r\n          });\r\n        } else {\r\n          that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n          that.loaderService.dismissLoader();\r\n        }\r\n      }, error => {\r\n        that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n        that.loaderService.dismissLoader();\r\n      });\r\n    });\r\n  }\r\n\r\n  makeCall(providerDetails: IProviderDetails) {\r\n    if (providerDetails.contacts && providerDetails.contacts.phone_number !== '') {\r\n      this.callNumber.callNumber(providerDetails.contacts.phone_number, true).then(() => {\r\n      }).catch((error) => {\r\n        //console.log('Error launching dialer', error);\r\n      })\r\n    }\r\n  }\r\n\r\n  openWebsite(providerDetails: IProviderDetails) {\r\n    //console.log('3 providerDetails=>', providerDetails);\r\n    if (providerDetails.website) {\r\n      this.inAppBrowser.create(providerDetails.website, \"_blank\", { location: 'no' });\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/aroundme/provider-options/provider-options.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\nimport { HousingUnit } from '../housing-unit/housing-unit';\r\nimport { LoaderService } from '../../../providers/loader-service';\r\nimport { CONSTANTS } from '../../../shared/config';\r\nimport { ProviderService, IProviderDetails, IBuilding } from \"../provider-service\";\r\nimport { UserService } from \"../../../providers/user-service\";\r\nimport { AnalyticsService } from \"../../../providers/analytics-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: 'page-housing-types',\r\n  templateUrl: 'housing-types.html'\r\n})\r\nexport class HousingTypes {\r\n  providerDetails: IProviderDetails;\r\n  buildings: Array<IBuilding>\r\n  constructor(private loaderService: LoaderService, private providerService: ProviderService, private translateService: TranslateService,\r\n    private navCtrl: NavController, private navParams: NavParams, private analyticsService: AnalyticsService, private userService: UserService) {\r\n    this.providerDetails = this.navParams.get('providerDetails');\r\n    this.getBuildingList(this.providerDetails._id);\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.userService.setCurrentPage(CONSTANTS.PAGES.HOUSING_TYPES);\r\n    this.analyticsService.trackScreenView(CONSTANTS.PAGES.HOUSING_TYPES);\r\n  }\r\n\r\n\r\n  getBuildingList(property_id: string) {\r\n    this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.PLEASE_WAIT'));\r\n    this.providerService.getBuildingsByPropertyId({ property_id: this.providerDetails._id }).subscribe((response) => {\r\n      if (response.status === CONSTANTS.RESPONSE_STATUS.SUCCESS) {\r\n        //console.log(\"---\", response);\r\n        this.buildings = response.buildings;\r\n      }\r\n      this.loaderService.dismissLoader();\r\n    }, error => {\r\n      this.loaderService.dismissLoader();\r\n      this.loaderService.showToaster(error);\r\n    });\r\n  }\r\n  selectUnit(selectedBuilding) {\r\n    this.navCtrl.push(HousingUnit, { buildingName: selectedBuilding.public_name, units: selectedBuilding.units, providerDetails: this.providerDetails });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/aroundme/housing-types/housing-types.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CoreModule } from '../../shared/core.module'\r\nimport { MyStuff } from './my-stuff';\r\nimport { Settings } from './settings/settings';\r\nimport { Profile } from './profile/profile';\r\nimport { EditProfile } from './profile/edit-profile/edit-profile';\r\nimport { TellFeedback } from './tell-feedback/tell-feedback';\r\nimport { Verifications } from './profile/edit-profile/verifications/verifications';\r\nimport { Address } from './profile/edit-profile/address/address';\r\nimport { ChangePassword } from './settings/change-password/change-password';\r\nimport { BlockedUsers } from './settings/blocked-users/blocked-users';\r\nimport { ImageCacheModule } from '../../shared/image-cache.module';\r\n//import { LocalizedDatePipe } from \"../../directives/localized-date-pipe.directive\";\r\n\r\n@NgModule({\r\n    imports: [CoreModule,ImageCacheModule],\r\n    exports: [],\r\n    entryComponents: [MyStuff, Settings, Profile, Address, EditProfile, TellFeedback,\r\n        Verifications, ChangePassword, BlockedUsers],\r\n    declarations: [MyStuff, Settings, Profile, Address, EditProfile, TellFeedback,\r\n        Verifications, ChangePassword, BlockedUsers],\r\n    providers: [],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class MyStuffModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/pages/my-stuff/my-stuff.module.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CoreModule } from '../../shared/core.module'\r\nimport { Conversations } from './conversations';\r\nimport { NewMessage } from './new-message/new-message';\r\nimport { ChatBox } from './chat-box/chat-box';\r\nimport { GroupChat } from './group-chat/group-chat';\r\nimport { ConversationSetting } from './conversation-setting/conversation-setting';\r\nimport { ShowImage } from './show-image/show-image';\r\nimport { PublicProfile } from './public-profile/public-profile';\r\n//import { Autoresize } from '../../directives/auto-resize.directive';\r\n//import { KeyboardAttachDirective } from '../../directives/keyboard-attach.directive';\r\nimport { ChatService } from './chat-service';\r\nimport { ImageCacheModule } from \"../../shared/image-cache.module\";\r\nimport { HousingProviderOptions } from \"./housing-provider-options/housing-provider-options\";\r\n\r\n@NgModule({\r\n    imports: [CoreModule,ImageCacheModule],\r\n    exports: [],\r\n    entryComponents: [Conversations, NewMessage, ChatBox, GroupChat, ConversationSetting, ShowImage, PublicProfile, HousingProviderOptions],\r\n    declarations: [Conversations, NewMessage, ChatBox, GroupChat, ConversationSetting, ShowImage, PublicProfile, HousingProviderOptions],\r\n    providers: [ChatService],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class ConversationModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversations/conversations.module.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CoreModule } from '../../shared/core.module'\r\nimport { LoginPage } from './login';\r\nimport { RequestLoginLink } from './request-login-link/request-login-link';\r\nimport { LoginLinkSent } from './login-link-sent/login-link-sent';\r\nimport { RequestLoginError } from './request-login-error/request-login-error';\r\n\r\n\r\n@NgModule({\r\n    imports: [CoreModule],\r\n    exports: [],\r\n    entryComponents: [LoginPage, RequestLoginLink, LoginLinkSent, RequestLoginError],\r\n    declarations: [LoginPage, RequestLoginLink, LoginLinkSent, RequestLoginError],\r\n    providers: [],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class LoginModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CoreModule } from '../../shared/core.module'\r\nimport { GetStarted } from './get-started';\r\nimport { AppInfo } from './app-info/app-info';\r\nimport { ChoosePassword } from './select-password/choose-password/choose-password';\r\nimport { SelectPassword } from './select-password/select-password';\r\nimport { SignUp } from './sign-up/sign-up';\r\n//import { SelectPasswordDirective } from \"../../directives/select-password.directive\";\r\n//import { KeyboardGetstartedDirective } from '../../directives/keyboard-getstarted.directive';\r\nimport { ImageCacheModule } from \"../../shared/image-cache.module\";\r\n\r\n\r\n@NgModule({\r\n    imports: [CoreModule, ImageCacheModule],\r\n    exports: [],\r\n    entryComponents: [GetStarted, AppInfo, ChoosePassword, SelectPassword, SignUp],\r\n    declarations: [GetStarted, AppInfo, ChoosePassword, SelectPassword, SignUp],\r\n    providers: [],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class GetStartedModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/pages/get-started/get-started.module.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CoreModule } from '../../shared/core.module'\r\nimport { ImageCacheModule } from \"../../shared/image-cache.module\";\r\nimport { ServiceRequest } from './service-request';\r\nimport { ServiceRequestReported } from './create-request/request-reported/request-reported';\r\nimport { CreateRequest } from './create-request/create-request';\r\nimport { ServiceRequestService } from './service-request-service'\r\nimport { UploadService } from '../../providers/upload-service';\r\nimport { ServiceRequestDetails } from './service-request-details/service-request-details';\r\n@NgModule({\r\n    imports: [CoreModule, ImageCacheModule],\r\n    exports: [],\r\n    entryComponents: [ServiceRequest, ServiceRequestReported, CreateRequest, ServiceRequestDetails],\r\n    declarations: [ServiceRequest, ServiceRequestReported, CreateRequest, ServiceRequestDetails],\r\n    providers: [ServiceRequestService, UploadService],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class ServiceRequestModule { }\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/service-request/service-request.module.ts","//import { SecureStorage } from 'ionic-native';\r\nimport { Platform } from 'ionic-angular';\r\nimport { Injectable } from '@angular/core';\r\n//import { Storage } from '@ionic/storage'\r\nimport 'rxjs/add/operator/map';\r\n@Injectable()\r\n// TODO - not in use\r\nexport class StorageService {\r\n    storage: any;\r\n    constructor(platform: Platform) {\r\n        // console.log('In StorageService constructor created  SecureStorage instance.',platform.is('ios'), platform.is('android'))\r\n        if (platform.is('ios') || platform.is('android')) {\r\n            //   this.storage = new SecureStorage();\r\n            // console.log('In StorageService constructor created  SecureStorage instance.')\r\n        } else {\r\n            //   this.storage = new Storage();\r\n            // console.log('In StorageService constructor created  Storage instance.')\r\n        }\r\n    }\r\n\r\n    create(key: string) {\r\n        this.storage.create(key).then(() => {\r\n            // console.log('Storage is ready!')\r\n        }, this.error);\r\n    }\r\n\r\n    set(key: string, value: string) {\r\n        this.storage.set(key, value).then((data) => {\r\n            // console.log('StorageService, In set', key, data);\r\n        }, this.error);\r\n    }\r\n    get(key: string) {\r\n        this.storage.get(key).then((data) => {\r\n            // console.log('StorageService, In get', key, data);\r\n        }, this.error);\r\n    }\r\n\r\n    remove(key: string) {\r\n        this.storage.remove(key).then(() => {\r\n            // console.log('StorageService, In remove', key);\r\n        }, this.error);\r\n    }\r\n    error(error) {\r\n        // console.log('Error in StorageService');\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/storage-service.ts","import { Directive, Input } from '@angular/core';\r\nimport { Content, Platform } from 'ionic-angular';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\nimport { Subscription } from 'rxjs/Rx';\r\n\r\n\r\n@Directive({\r\n  selector: '[keyboard-tab-handler]'\r\n})\r\nexport class KeyboardTabHandler {\r\n  @Input('keyboard-tab-handler') content: Content;\r\n\r\n  private onShowSubscription: Subscription;\r\n  private onHideSubscription: Subscription;\r\n  // private tabHeight: number;\r\n\r\n  constructor(private platform: Platform, private keyboard: Keyboard) {\r\n    if (this.platform.is('cordova')) {\r\n      this.onShowSubscription = this.keyboard.onKeyboardShow().subscribe(e => this.onShow(e));\r\n      this.onHideSubscription = this.keyboard.onKeyboardHide().subscribe(() => this.onHide());\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.onShowSubscription) {\r\n      this.onShowSubscription.unsubscribe();\r\n    }\r\n    if (this.onHideSubscription) {\r\n      this.onHideSubscription.unsubscribe();\r\n    }\r\n    // console.log(\"keyboard-open' ngOnDestroy\")\r\n  }\r\n\r\n  private onShow(e) {\r\n    // let keyboardHeight: number = e.keyboardHeight || (e.detail && e.detail.keyboardHeight);\r\n    // this.setElementPosition(keyboardHeight);\r\n    // console.log(\"Keyboard Show\");\r\n    document.body.classList.add('keyboard-open');\r\n  };\r\n\r\n  private onHide() {\r\n    // this.setElementPosition(0);\r\n    // console.log(\"Keyboard Hide\");\r\n    if (document.body.classList.contains('keyboard-open')) {\r\n      document.body.classList.remove('keyboard-open');\r\n    } else {\r\n      // console.log(\"keyboard-open' does not exist\")\r\n    }\r\n  };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/directives/keyboard-tab-handler-directive.ts","import { Transfer, TransferObject, FileUploadOptions } from '@ionic-native/transfer';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera';\r\nimport { Crop } from '@ionic-native/crop'; import { Injectable } from '@angular/core';\r\n\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport 'rxjs/add/operator/map';\r\nimport { UserService, IUser } from './user-service';\r\nimport { LoaderService } from './loader-service';\r\nimport { ENVIRONMENT } from '../shared/environment';\r\nimport { ModalController } from 'ionic-angular';\r\nimport { CropImageModal } from '../shared/modals/crop-image/crop-image';\r\n\r\n@Injectable()\r\nexport class UploadService {\r\n    userData: IUser;\r\n    constructor(private userService: UserService, private loaderService: LoaderService, private transfer: Transfer, private camera: Camera,\r\n        private crop: Crop, private translateService: TranslateService, public modalCtrl: ModalController) {\r\n        this.userData = this.userService.getUser();\r\n    }\r\n\r\n    uploadFileOnserver(fileURI: string, uploadOptions: IUploadOptions, callback): void {\r\n        const fileTransfer: TransferObject = this.transfer.create();\r\n        let fileUploadOptions: FileUploadOptions = {\r\n            fileKey: 'file',\r\n            fileName: this.getFileName(fileURI),\r\n            httpMethod: 'POST'\r\n        };\r\n\r\n        if (!fileUploadOptions.headers) {\r\n            fileUploadOptions.headers = {\r\n                'Authorization': 'Bearer ' + this.userService.http.token,\r\n                source: uploadOptions.bucketSource, user_id: this.userData.user_id,\r\n                image_category: uploadOptions.imageCategory,\r\n                organization_id: uploadOptions.organizationId,\r\n                branch_id: uploadOptions.branchId\r\n            };\r\n        }\r\n        let uploadEndpoint: string = ENVIRONMENT.APP_BASE_URL + '/listing/uploadImage';\r\n        // // console.log('In uploadFileOnserver fileUrl', fileURI, uploadEndpoint, fileUploadOptions);\r\n        if (!this.userService.isOnline()) {\r\n            callback(this.translateService.instant('ERROR_MESSAGES.NO_NETWORK'));\r\n        } else {\r\n            fileTransfer.upload(fileURI, uploadEndpoint, fileUploadOptions).then((data: any) => {\r\n                // // console.log('In uploadFileOnserver success', data)\r\n                if (callback) {\r\n                    let response = JSON.parse(data.response);\r\n                    // // console.log(\"Image respinse\", response);\r\n                    callback(null, response.image_url);\r\n                }\r\n            }, (err) => {\r\n                if (callback) {\r\n                    callback(err);\r\n                }\r\n            })\r\n            // fileTransfer.onProgress((state: ProgressEvent) => {\r\n            //     // console.log(state);\r\n            // });\r\n        }\r\n    }\r\n\r\n    getFileName(fileURI): string {\r\n        let fileNameTemp, fileExt = 'jpg', fileName;\r\n        if (fileURI.indexOf('.') !== -1 && fileURI.indexOf('?') !== -1) {\r\n            fileNameTemp = fileURI.split('.').pop();\r\n            fileExt = fileNameTemp.split('?')[0];\r\n        }\r\n        fileName = this.userData.user_id + new Date().getTime() + '.' + fileExt;\r\n        return fileName;\r\n    }\r\n\r\n\r\n    takeFromCamera(uploadOptions: IUploadOptions, callback): void {\r\n        const options: CameraOptions = {\r\n            quality: 100,\r\n            destinationType: this.camera.DestinationType.FILE_URI,\r\n            sourceType: uploadOptions.sourceType,\r\n            allowEdit: false,\r\n            encodingType: this.camera.EncodingType.JPEG,\r\n            mediaType: this.camera.MediaType.PICTURE,\r\n            correctOrientation: true\r\n        }\r\n\r\n        if (uploadOptions.sourceType === this.camera.PictureSourceType.PHOTOLIBRARY) {\r\n            options['saveToPhotoAlbum'] = false;\r\n        } else {\r\n            options['saveToPhotoAlbum'] = true;\r\n        }\r\n\r\n        this.camera.getPicture(options).then(imageData => {\r\n            if (uploadOptions.cropImage) {\r\n                let cropModal = this.modalCtrl.create(CropImageModal, { \"imageBase64\": imageData, \"width\": uploadOptions.targetWidth, \"height\": uploadOptions.targetHeight });\r\n                cropModal.onDidDismiss((croppedImage: any) => {\r\n                    if (croppedImage) {\r\n                        proceedUpload.call(this, croppedImage);\r\n                    }\r\n                });\r\n                cropModal.present();\r\n            } else {\r\n                proceedUpload.call(this, imageData);\r\n            }\r\n        });\r\n\r\n        function proceedUpload(imageData) {\r\n            this.loaderService.createLoader(this.translateService.instant('ERROR_MESSAGES.UPLOADING'));\r\n            this.uploadFileOnserver(imageData, uploadOptions, (error, image_url) => {\r\n                if (callback) {\r\n                    callback(error, image_url);\r\n                }\r\n                this.loaderService.dismissLoader();\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport interface IUploadOptions {\r\n    sourceType: number;\r\n    bucketSource: string;\r\n    cropImage: boolean;\r\n    targetWidth: number,\r\n    targetHeight: number,\r\n    imageCategory?: string;\r\n    organizationId?: string;\r\n    branchId?: string;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/upload-service.ts","import { Injectable } from '@angular/core';\r\nimport { Events, Platform } from 'ionic-angular';\r\nimport { Storage } from '@ionic/storage'\r\nimport { Facebook } from '@ionic-native/facebook';\r\nimport 'rxjs/add/operator/map';\r\nimport { CONSTANTS } from '../shared/config';\r\nimport { ENVIRONMENT } from '../shared/environment';\r\nimport { HttpService } from './http-service';\r\nimport { PubNubService } from '../providers/pubnub-service';\r\nimport CryptoJS from \"crypto-js\";\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport { LoaderService } from './loader-service';\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n@Injectable()\r\nexport class UserService {\r\n    public http: HttpService;\r\n    public events: Events;\r\n    public platform: Platform;\r\n    public userObj: IUser;\r\n    public pageDetails: IPageDetails;\r\n    public deviceToken: string;\r\n    public pushPlatform: string;\r\n    public channelGroups: Array<string>\r\n    public tempUserProfileObj: IUser;\r\n    public userProfile: IUser;\r\n    public userName: string;\r\n    public isProfileUpdate: boolean = true;\r\n    public isCoachSettingsUpdated: boolean = false;\r\n    public currentLang: string;\r\n    constructor(events: Events, http: HttpService, platform: Platform, public storage: Storage, private pubNubService: PubNubService,\r\n        private translateService: TranslateService,\r\n        private loaderService: LoaderService, private facebook: Facebook) {\r\n        let that = this;\r\n        that.events = events;\r\n        that.http = http;\r\n        that.storage = new Storage({});\r\n        that.pageDetails = { currentPage: \"\", userid: \"\" };\r\n        that.platform = platform;\r\n        that.http.token = null;\r\n        that.http.defaultRequestParams.sys_user_id = null;\r\n        that.http.defaultRequestParams.sys_user_type = null;\r\n        that.resetUserObj();\r\n        that.hasLoggedIn().then(function (hasLoggedIn) {\r\n            if (hasLoggedIn) {\r\n                that.loadUser()\r\n            }\r\n        });\r\n\r\n        // console.log('[ In UserService ]');\r\n    }\r\n\r\n    isOnline() {\r\n        return this.http.isOnline();\r\n    }\r\n\r\n    setCurrentLang(lang) {\r\n        this.currentLang = lang;\r\n        if (this.userObj) {\r\n            this.userObj.device_lang = lang;\r\n        }\r\n        if (this.userProfile) {\r\n            this.userProfile.device_lang = lang;\r\n        }\r\n        // set current language so that it will share with each request at backend.\r\n        this.http.userLangHeader = lang;\r\n    }\r\n    getCurrentLang() {\r\n        return this.currentLang;\r\n    }\r\n\r\n    login(user: IUser): Observable<any> {\r\n        let that = this;\r\n        //// console.log('In AuthService, login ');\r\n        //This is used to identify source of login to block non admin users on mobile. \r\n        user.source = \"mobile\";\r\n        if (!user.authType) {\r\n            user = JSON.parse(JSON.stringify(user));\r\n            user.password = CryptoJS.PBKDF2(user.password, CONSTANTS.CRYPTO_SALT, { keySize: 256 / 32 }).toString();\r\n        }\r\n        Object.assign(user, { user_type: CONSTANTS.USER_TYPE.RESIDENT });\r\n        //console.log('user', user);\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/user/signin';\r\n        //// console.log(url);\r\n\r\n        return that.http.post(url, user).map(res => res.json());\r\n\r\n    }\r\n\r\n    signup(user: ISignUpRequest, isSignupwithsocial?): Observable<any> {\r\n        let url = ENVIRONMENT.APP_BASE_URL + '/api/residentsignup';\r\n        user = JSON.parse(JSON.stringify(user));\r\n        if (user.password) {\r\n            user.password = CryptoJS.PBKDF2(user.password, CONSTANTS.CRYPTO_SALT, { keySize: 256 / 32 }).toString();\r\n        }\r\n        Object.assign(user, { user_type: CONSTANTS.USER_TYPE.RESIDENT });\r\n        return this.http.post(url, user).map(res => res.json());\r\n\r\n    }\r\n\r\n    forgotpassword(emailId: string): Observable<any> {\r\n        // // console.log('In user, forgotpassword ', emailId);\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/user/forgotpassword';\r\n        let params = { emailId: emailId }\r\n        Object.assign(params);\r\n        return this.http.post(url, params).map(res => res.json());\r\n    }\r\n\r\n    verifyEmailId(email: string): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/user/verifyemail';\r\n        let params = { email: email };\r\n        return this.http.post(url, params).map(res => res.json());\r\n    }\r\n\r\n    verifyAuthorizationToken(params: { auth_code: string }): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/user/verifyauthorizationtoken';\r\n        Object.assign(params);\r\n        return this.http.post(url, params).map(res => res.json());\r\n    }\r\n\r\n    loadUser(loadUserCB?): void {\r\n        let that = this, token = null;\r\n        if (localStorage.getItem(CONSTANTS.HAS_LOGGED_IN)) {\r\n            token = localStorage.getItem(CONSTANTS.LOCAL_TOKEN_KEY);\r\n\r\n            // Set the token value into http service, It's passed for each request\r\n            that.http.token = token;\r\n            that.getUserInfoByToken(token, function (userInfoFromToken: IUser) {\r\n                //// console.log('[ In UserService, user :' + JSON.stringify(user) + ']');\r\n\r\n                // Set the defaultRequestParams.user_id into http service, It's passed for each request\r\n                that.http.defaultRequestParams.sys_user_id = userInfoFromToken.user_id;\r\n                that.getUserById(userInfoFromToken.user_id).subscribe((userObj: any) => {\r\n                    if (userObj.status !== 'ERROR') {\r\n                        Object.assign(that.userObj, userInfoFromToken, userObj.user);\r\n                        that.http.defaultRequestParams.sys_user_type = that.userObj.user_type;\r\n                        that.userName = that.userObj.profile.first_name + ' ' + that.userObj.profile.last_name\r\n                        // console.log('[ In UserService, userObj :', that.userObj);\r\n                        if (loadUserCB) {\r\n                            loadUserCB(true);\r\n                        }\r\n                    } else {\r\n                        if (loadUserCB) {\r\n                            loadUserCB(false);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    isAppStarted(): boolean {\r\n        let hasAppStarted: string = localStorage.getItem(CONSTANTS.HAS_APP_STARTED);\r\n        if (hasAppStarted !== null && hasAppStarted === 'true') {\r\n            return true;\r\n        } {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setAppStarted(): void {\r\n        //// console.log('In setAppStarted');\r\n        //// console.log(\"Init pubNubService\");\r\n        let userlogin: IUser = this.getUser();\r\n        this.pubNubService.initializePubnub(userlogin.user_id);\r\n        localStorage.setItem(CONSTANTS.HAS_APP_STARTED, '' + true);\r\n    }\r\n    getUser(): IUser {\r\n        return this.userObj;\r\n    }\r\n\r\n    storeUserCredentials(data, storeUserCredentialsCB): void {\r\n        let that = this;\r\n        let token = data.token;\r\n\r\n        if (data.user && data.user.groups) {\r\n            that.channelGroups = data.user.groups;\r\n        }\r\n        if (token) {\r\n            localStorage.setItem(CONSTANTS.LOCAL_TOKEN_KEY, token);\r\n            localStorage.setItem(CONSTANTS.HAS_LOGGED_IN, '' + true);\r\n            that.storage.set(CONSTANTS.LOCAL_TOKEN_KEY, token).then(function () {\r\n                that.storage.set(CONSTANTS.HAS_LOGGED_IN, true).then(function () {\r\n                    that.loadUser(() => {\r\n                        if (storeUserCredentialsCB) storeUserCredentialsCB(token);\r\n                    });\r\n                });\r\n            });\r\n        } else {\r\n            // console.log('In storeUserCredentials no token found');\r\n        }\r\n    }\r\n\r\n    storeDeviceToken(token): void {\r\n        let that = this;\r\n        this.storage.set(CONSTANTS.DEVICE_TOKEN_KEY, token).then(function () {\r\n            that.deviceToken = token;\r\n            // console.log('In storeDeviceToken, DeviceId is stored into LocalStorage');\r\n        });\r\n    }\r\n\r\n    getUserInfoByToken(this: UserService, token, getUserInfoByTokenCB): void {\r\n        let user: IUser = {};\r\n        if (typeof token !== 'undefined') {\r\n            let encoded = token.split('.')[1];\r\n            let tmp_user = JSON.parse(this.urlBase64Decode(encoded));\r\n            //// console.log(tmp_user, \"------userToken Info------\");\r\n            user = {\r\n                user_id: tmp_user.user_id,\r\n                user_email: tmp_user.user_email\r\n            };\r\n        }\r\n        if (getUserInfoByTokenCB) getUserInfoByTokenCB(user);\r\n    };\r\n\r\n    registerDeviceOnServer(): void {\r\n        let that = this;\r\n        let platform: string = '', params: Object = {};\r\n        if (!this.platform.is('cordova')) {\r\n            return;\r\n        }\r\n        if (this.platform.is('android')) {\r\n            platform = \"google\";\r\n            this.pushPlatform = \"gcm\";\r\n        } else if (this.platform.is('ios')) {\r\n            platform = \"apple\";\r\n            this.pushPlatform = \"apns\";\r\n        }\r\n\r\n        that.storage.get(CONSTANTS.DEVICE_TOKEN_KEY).then(function (deviceId) {\r\n            params = {\r\n                'register_token': deviceId,\r\n                'emailId': that.userObj.user_email,\r\n                'platform': platform || 'google'\r\n            };\r\n\r\n            // // console.log('In registerDeviceOnServer request obj ');\r\n            // // console.log(params);\r\n            let url: string = ENVIRONMENT.APP_BASE_URL + '/api/user/registertoken';\r\n            that.http.post(url, JSON.stringify(params)).map(res => res.json())\r\n                .subscribe(data => {\r\n                    // console.log(data);\r\n                }, error => {\r\n                    that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.NETWORK'));\r\n                });\r\n            //Commented push notification registration for user id to add channel wise enable disable push \r\n            // that.pubNubService.unRegisterDevice(that.userObj.user_id, deviceId, this.pushPlatform);\r\n\r\n        });\r\n    }\r\n\r\n    urlBase64Decode(str: string): string {\r\n        let output: string = str.replace('-', '+').replace('_', '/');\r\n        switch (output.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                output += '==';\r\n                break;\r\n            case 3:\r\n                output += '=';\r\n                break;\r\n            default:\r\n                throw 'Illegal base64url string!';\r\n        }\r\n        return window.atob(output);\r\n    }\r\n\r\n    logout(): void {\r\n        let that = this\r\n        let platform: string = '', params: Object = {}, pushPlatform: string = '';\r\n        that.clearPubnub();\r\n        //that.pubNubService.removeChannelFromGroup([this.userObj.user_id]);\r\n\r\n        if (this.platform.is('android')) {\r\n            platform = \"google\";\r\n            pushPlatform = 'gcm';\r\n        } else if (this.platform.is('ios')) {\r\n            pushPlatform = 'apns';\r\n            platform = \"apple\";\r\n        } else {\r\n            platform = \"web\";\r\n        }\r\n\r\n        if (platform != \"web\") {\r\n            that.storage.get(CONSTANTS.DEVICE_TOKEN_KEY).then(function (device_Id) {\r\n                //// console.log(\"params\", device_Id, \"---\", JSON.stringify(that.userObj), '----', platform, '----', that.userObj.email);\r\n                params = {\r\n                    'register_token': device_Id,\r\n                    'emailId': that.userObj.email,\r\n                    'user_id': that.userObj.user_id,\r\n                    'platform': platform || 'google'\r\n                };\r\n                // // console.log(params, \"parasm on logout\");\r\n                let url = ENVIRONMENT.APP_BASE_URL + '/api/user/signout';\r\n                that.http.post(url, params).map(res => res.json())\r\n                    .subscribe(data => {\r\n                        // console.log(data, \"user signedOut\");\r\n                        if (data.status === 'SUCCESS') {\r\n                            if (that.userObj.facebook) {\r\n                                that.fbLogout();\r\n                            }\r\n                            that.clearUserState();\r\n                        } else {\r\n                            //TODO - Need to add callback for error\r\n                            that.loaderService.showToaster(that.translateService.instant('ERROR_MESSAGES.SOMETHING_WENT_WRONG'));\r\n                            that.loaderService.dismissLoader();\r\n                        }\r\n                    });\r\n                that.pubNubService.unRegisterAllChannels(device_Id, pushPlatform);\r\n            });\r\n            //Logout from facebook \r\n        } else {\r\n            that.clearUserState();\r\n        }\r\n        //localStorage.removeItem(APP_CONFIG.LOCAL_CONVERSATION_COUNT_MAP + '-' + this.userObj.user_id);\r\n    }\r\n\r\n    resetUserObj() {\r\n        this.userObj = {};\r\n        this.userObj[\"show_coach_marks\"] = { all: false, feed: false, conversation: false, around_me: false, profile: false }\r\n    }\r\n\r\n    clearPubnub() {\r\n        let that = this;\r\n        that.pubNubService.unsubscribe();\r\n        that.pubNubService.deleteGroup(that.userObj.user_id + '_friends');\r\n        that.pubNubService.deleteGroup(that.userObj.user_id + '_group');\r\n    }\r\n\r\n    clearUserState() {\r\n        let that = this;\r\n        that.setCurrentPage(CONSTANTS.PAGES.LOGIN);\r\n        that.storage.remove(CONSTANTS.LOCAL_TOKEN_KEY);\r\n        that.storage.remove(CONSTANTS.HAS_LOGGED_IN);\r\n        that.events.publish('user:logout');\r\n        localStorage.removeItem(CONSTANTS.LOCAL_TOKEN_KEY);\r\n        localStorage.removeItem(CONSTANTS.HAS_LOGGED_IN);\r\n        //that.resetUserObj();\r\n        that.userProfile = null;\r\n        that.isProfileUpdate = false;\r\n        that.isCoachSettingsUpdated = false;\r\n        that.tempUserProfileObj = null;\r\n        that.channelGroups = [];\r\n        that.userName = '';\r\n        that.http.token = null;\r\n        that.http.defaultRequestParams.sys_user_id = null;\r\n        that.http.defaultRequestParams.sys_user_type = null;\r\n\r\n    }\r\n\r\n    fbLogout(): void {\r\n        if (this.facebook) {\r\n            this.facebook.logout().then(() => {\r\n                // console.log('Facebook logout called.');\r\n            })\r\n        }\r\n    }\r\n\r\n    hasLoggedIn(): Promise<any> {\r\n        if (localStorage.getItem(CONSTANTS.HAS_LOGGED_IN)) {\r\n\r\n            return this.storage.get(CONSTANTS.HAS_LOGGED_IN).then((value) => {\r\n                //  // console.log(value, 'storage value');\r\n                return value;\r\n            });\r\n        } else {\r\n            return this.storage.get(CONSTANTS.HAS_LOGGED_IN).then((value) => {\r\n                //   // console.log(value, 'storage value');\r\n                return false;\r\n            });\r\n        }\r\n    }\r\n\r\n    fbLogin(): Promise<any> {\r\n        try {\r\n            if (this.platform.is('cordova')) {\r\n                if (this.http.online) {\r\n                    return this.facebook.login(['email']).then(\r\n                        (success) => {\r\n                            return success;\r\n                        },\r\n                        (error) => {\r\n                            this.loaderService.showToaster(error.errorMessage);\r\n                            return error.errorMessage;\r\n                        }\r\n                    )\r\n                }\r\n                else {\r\n                    return Promise.reject(this.translateService.instant('ERROR_MESSAGES.NO_NETWORK'));;\r\n                }\r\n            } else {\r\n                return Promise.reject('Please run me on a device');\r\n            }\r\n        } catch (error) {\r\n            // // console.log(error);\r\n            return Promise.reject(error.errorMessage);\r\n        }\r\n    }\r\n\r\n    getUserFacebookProfile(): Promise<any> {\r\n        try {\r\n            return this.facebook.api('me?fields=email,name,picture.width(600).height(600)', []).then(\r\n                (profileData) => {\r\n                    // // console.log(JSON.stringify(profileData));\r\n                    return profileData;\r\n                }, (error) => {\r\n                    // // console.log(JSON.stringify(error));\r\n                    return error;\r\n                });\r\n        } catch (error) {\r\n            // console.log(JSON.stringify(error));\r\n        }\r\n    }\r\n\r\n    getAllUsers(): Observable<any> {\r\n        let userObj: IUser = this.getUser()\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/user/all';\r\n        return this.http.post(url, { \"email\": userObj.user_email }).map((res: any) => res.json());\r\n    }\r\n\r\n    getCurrentPage(): IPageDetails {\r\n        //// console.log(\"Current Page is - \", this.pageDetails);\r\n        return this.pageDetails;\r\n    }\r\n\r\n    setCurrentPage(newPage: string, userid?: string) {\r\n        // // console.log(\"Current Page to\", this.pageDetails.currentPage, \"=>\", newPage, \"=>\", userid);\r\n        this.pageDetails.currentPage = newPage;\r\n        this.pageDetails.userid = userid;\r\n    }\r\n\r\n    updateUserInfo(userData: IUser): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/updateUserProfile'\r\n        return this.http.post(url, userData).map((res: any) => res.json());\r\n    }\r\n\r\n    changePassword(userData: IUser): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/user/changepassword';\r\n        if (userData && userData.password) {\r\n            userData.password = CryptoJS.PBKDF2(userData.password, CONSTANTS.CRYPTO_SALT, { keySize: 256 / 32 }).toString();\r\n        }\r\n        return this.http.post(url, userData).map((res: any) => res.json());\r\n    }\r\n    getUserById(userId: string): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/user/findbyid';\r\n        return this.http.post(url, { \"_id\": userId }).map((res: any) => res.json());\r\n    }\r\n\r\n    verifyPhoneNumber(code): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/verifymobilenumber';\r\n        let userObj: IUser = this.getUser();\r\n        return this.http.post(url, { \"_id\": userObj.user_id, \"verification_code\": code }).map((res: any) => res.json());\r\n    }\r\n\r\n    sendVerificationCode(mob_number): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/sendverificationcode';\r\n        let userObj: IUser = this.getUser()\r\n        return this.http.post(url, { \"_id\": userObj.user_id, \"mobile_number\": mob_number }).map((res: any) => res.json());\r\n    }\r\n\r\n    getDataFromUserMaster(): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/usermaster/all';\r\n        return this.http.post(url, {}).map((res: any) => res.json());\r\n    }\r\n\r\n    saveFeedBack(feedbackObj: IFeedback): Observable<any> {\r\n        feedbackObj.user_id = this.userObj.user_id;\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/feedback';\r\n        return this.http.post(url, feedbackObj).map((res: any) => res.json());\r\n    }\r\n\r\n    setTempUserProfileObj(params) {\r\n        this.tempUserProfileObj = params;\r\n    }\r\n\r\n    getTempUserProfileObj() {\r\n        return this.tempUserProfileObj;\r\n    }\r\n    getUserProfile(): IUser {\r\n        return this.userProfile;\r\n    }\r\n    setUserProfile(user: IUser) {\r\n        this.userProfile = user;\r\n        this.userName = user.profile.first_name + ' ' + user.profile.last_name;\r\n        this.isProfileUpdate = false;\r\n        this.userObj.profile.profile_pic = user.profile.profile_pic;\r\n    }\r\n\r\n    verifyForceUpdate(appVersion: string, deviceType: string): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/verifyversion';\r\n        return this.http.post(url, { app_version: appVersion, device_type: deviceType }).map((res: any) => res.json());\r\n    }\r\n\r\n    updateUserDeviceLang(params: { user_id: string }): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/user/updateuserdevicelang';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    acceptPolicy(params: IUser): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/user/settermsandprivacy';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    getBlockedUsers(userId: string): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/user/getblockuserslist';\r\n        return this.http.post(url, { \"user_id\": userId }).map((res: any) => res.json());\r\n    }\r\n\r\n    setCoachMarkSettings(params: ICoachMarksSettingsRequest): Observable<any> {\r\n        let url: string = ENVIRONMENT.APP_BASE_URL + '/api/user/setcoachmarksettings';\r\n        return this.http.post(url, params).map((res: any) => res.json());\r\n    }\r\n\r\n    shareOnFacebook(url: string, caption: string, imageUrl: string, callback: any) {\r\n        let options;\r\n        options = {\r\n            method: \"share\",\r\n            quote: caption,\r\n            hashtag: '#Rezility',\r\n            href: url,\r\n            picture: imageUrl\r\n        }\r\n        this.facebook.showDialog(options).then(\r\n            (success) => {\r\n                if (callback) {\r\n                    callback(true);\r\n                }\r\n                //console.log(JSON.stringify(success));\r\n            }, (error) => {\r\n                if (callback) {\r\n                    callback(false);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport interface IPageDetails {\r\n    currentPage: string,\r\n    userid?: string\r\n}\r\n\r\nexport interface IUser {\r\n    _id?: string;\r\n    user_id?: string;\r\n    user_name?: string;\r\n    email?: string;\r\n    user_email?: string;\r\n    password?: any;\r\n    profile?: {\r\n        first_name?: string,\r\n        last_name?: string,\r\n        nick_name?: string,\r\n        description?: string,\r\n        profile_pic?: string,\r\n        home_address?: IHomeAddress,\r\n        gender?: string,\r\n        phone_number?: string,\r\n        name?: string,\r\n        middle_name?: string,\r\n        age?: number,\r\n        education_level?: string,\r\n        language?: string,\r\n        date_of_birth?: any\r\n    };\r\n    notification_enabled?: boolean;\r\n    show_coach_marks?: ICoachMarksSettings;\r\n    is_mobile_number_verified?: boolean;\r\n    verification_code?: string;\r\n    financial_info?: any;\r\n    service_interests?: string;\r\n    facebook?: string;\r\n    authType?: string;\r\n    is_email_verified?: boolean;\r\n    source?: string;\r\n    is_terms_checked?: boolean;\r\n    is_privacy_checked?: boolean;\r\n    is_terms_privacy_accepted?: boolean;\r\n    user_type?: string;\r\n    low_data?: boolean;\r\n    device_lang?: string;\r\n    branches?: Array<IBranch>;\r\n    feed_templates?:Array<string>\r\n}\r\n\r\nexport interface IBranch {\r\n    organization_id: string;\r\n    organization_img: string;\r\n    organization_name: string;\r\n    public_name?: string;\r\n    profile_pic?: string;\r\n    _id: string;\r\n}\r\n\r\nexport interface IUserMaster {\r\n    _id?: string;\r\n    deeplink_base_url?: string;\r\n    age?: Array<IUserMasterObjectParams>;\r\n    annual_income?: Array<IUserMasterObjectParams>;\r\n    education_level?: Array<IUserMasterObjectParams>;\r\n    gender?: Array<IUserMasterObjectParams>;\r\n    language?: Array<IUserMasterObjectParams>;\r\n    service_interest?: Array<IUserMasterObjectParams>;\r\n}\r\n\r\nexport interface IUserMasterObjectParams {\r\n    _id?: string;\r\n    max?: string;\r\n    min?: string;\r\n    name?: string;\r\n    code?: string;\r\n}\r\n\r\nexport interface IFeedback {\r\n    user_id?: string;\r\n    message?: string;\r\n    first_name?: string;\r\n    last_name?: string;\r\n    user_email?: string;\r\n}\r\n\r\nexport interface IAppMetaData {\r\n    app_id: string;\r\n    app_version: string;\r\n    device_id: string;\r\n    device_type: string;\r\n}\r\n\r\nexport interface IHomeAddress {\r\n    street_address1?: string,\r\n    street_address2?: string,\r\n    city?: string,\r\n    state?: string,\r\n    zipcode?: string,\r\n    place_id?: string,\r\n    verification_status?: string,\r\n    lat?: string,\r\n    long?: string\r\n}\r\n\r\nexport interface ISignUpRequest {\r\n    first_name: string;\r\n    last_name: string;\r\n    email: string;\r\n    zipcode: number;\r\n    facebook?: string;\r\n    password?: string;\r\n    profile_pic?: string;\r\n    is_terms_checked: boolean;\r\n    is_privacy_checked: boolean;\r\n    is_terms_privacy_accepted: boolean;\r\n}\r\n\r\nexport interface IBlockedUser {\r\n    user_id: string;\r\n    user_name: string;\r\n    email: string;\r\n    connection_status: number;\r\n    profile_pic: string;\r\n    first_name: string,\r\n    last_name: string,\r\n    shared_channel?: string,\r\n    receiver_id: string,\r\n    timetoken: number\r\n}\r\n\r\nexport interface ICoachMarksSettings {\r\n    all: boolean;\r\n    feed: boolean;\r\n    conversation: boolean;\r\n    around_me: boolean;\r\n    profile: boolean;\r\n}\r\nexport interface ICoachMarksSettingsRequest {\r\n    user_id: string;\r\n    show_coach_marks: ICoachMarksSettings;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user-service.ts"],"sourceRoot":""}